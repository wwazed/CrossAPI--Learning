Method Name,Description
java.io.BufferedInputStream.available,Returns an estimate of the number of bytes that can be read (or  skipped over) from this input stream without blocking by the next  invocation of a method for this input stream.
java.io.BufferedInputStream.close,Closes this input stream and releases any system resources  associated with the stream.
java.io.BufferedInputStream.mark,See the general contract of themarkmethod ofInputStream.
java.io.BufferedInputStream.markSupported,Tests if this input stream supports themarkandresetmethods.
java.io.BufferedInputStream.read,See  the general contract of thereadmethod ofInputStream.
java.io.BufferedInputStream.read,"Reads bytes from this byte-input stream into the specified byte array,  starting at the given offset."
java.io.BufferedInputStream.reset,See the general contract of theresetmethod ofInputStream.
java.io.BufferedInputStream.skip,See the general contract of theskipmethod ofInputStream.
java.io.BufferedOutputStream.flush,Flushes this buffered output stream.
java.io.BufferedOutputStream.write,Writeslenbytes from the specified byte array  starting at offsetoffto this buffered output stream.
java.io.BufferedOutputStream.write,Writes the specified byte to this buffered output stream.
java.io.BufferedReader.close,Closes the stream and releases any system resources associated with  it.
java.io.BufferedReader.lines,"Returns aStream, the elements of which are lines read from  thisBufferedReader."
java.io.BufferedReader.mark,Marks the present position in the stream.
java.io.BufferedReader.markSupported,"Tells whether this stream supports the mark() operation, which it does."
java.io.BufferedReader.read,Reads a single character.
java.io.BufferedReader.read,Reads characters into a portion of an array.
java.io.BufferedReader.readLine,Reads a line of text.
java.io.BufferedReader.ready,Tells whether this stream is ready to be read.
java.io.BufferedReader.reset,Resets the stream to the most recent mark.
java.io.BufferedWriter.close,"Closes the stream, flushing it first."
java.io.BufferedWriter.flush,Flushes the stream.
java.io.BufferedWriter.newLine,Writes a line separator.
java.io.BufferedWriter.write,Writes a portion of an array of characters.
java.io.BufferedWriter.write,Writes a single character.
java.io.BufferedWriter.write,Writes a portion of a String.
java.io.ByteArrayInputStream.available,Returns the number of remaining bytes that can be read (or skipped over)  from this input stream.
java.io.ByteArrayInputStream.close,Closing aByteArrayInputStreamhas no effect.
java.io.ByteArrayInputStream.mark,Set the current marked position in the stream.
java.io.ByteArrayInputStream.markSupported,Tests if thisInputStreamsupports mark/reset.
java.io.ByteArrayInputStream.read,Reads the next byte of data from this input stream.
java.io.ByteArrayInputStream.read,Reads up tolenbytes of data into an array of bytes from this  input stream.
java.io.ByteArrayInputStream.readAllBytes,Reads all remaining bytes from the input stream.
java.io.ByteArrayInputStream.readNBytes,Reads the requested number of bytes from the input stream into the given  byte array.
java.io.ByteArrayInputStream.reset,Resets the buffer to the marked position.
java.io.ByteArrayInputStream.skip,Skipsnbytes of input from this input stream.
java.io.ByteArrayOutputStream.close,Closing aByteArrayOutputStreamhas no effect.
java.io.ByteArrayOutputStream.reset,"Resets thecountfield of thisByteArrayOutputStreamto zero, so that all currently accumulated output in the  output stream is discarded."
java.io.ByteArrayOutputStream.size,Returns the current size of the buffer.
java.io.ByteArrayOutputStream.toByteArray,Creates a newly allocated byte array.
java.io.ByteArrayOutputStream.toString,Converts the buffer's contents into a string decoding bytes using the  platform's default character set.
java.io.ByteArrayOutputStream.toString,Deprecated.This method does not properly convert bytes into characters.
java.io.ByteArrayOutputStream.toString,Converts the buffer's contents into a string by decoding the bytes using  the namedcharset.
java.io.ByteArrayOutputStream.toString,Converts the buffer's contents into a string by decoding the bytes using  the specifiedcharset.
java.io.ByteArrayOutputStream.write,Writeslenbytes from the specified byte array  starting at offsetoffto thisByteArrayOutputStream.
java.io.ByteArrayOutputStream.write,Writes the specified byte to thisByteArrayOutputStream.
java.io.ByteArrayOutputStream.writeBytes,Writes the complete contents of the specified byte array  to thisByteArrayOutputStream.
java.io.ByteArrayOutputStream.writeTo,"Writes the complete contents of thisByteArrayOutputStreamto  the specified output stream argument, as if by calling the output  stream's write method usingout.write(buf, 0, count)."
java.io.CharArrayReader.reset,"Resets the stream to the most recent mark, or to the beginning if it has  never been marked."
java.io.CharArrayReader.skip,Skips characters.
java.io.CharArrayWriter.append,Appends the specified character to this writer.
java.io.CharArrayWriter.append,Appends the specified character sequence to this writer.
java.io.CharArrayWriter.append,Appends a subsequence of the specified character sequence to this writer.
java.io.CharArrayWriter.close,Close the stream.
java.io.CharArrayWriter.flush,Flush the stream.
java.io.CharArrayWriter.reset,Resets the buffer so that you can use it again without  throwing away the already allocated buffer.
java.io.CharArrayWriter.toCharArray,Returns a copy of the input data.
java.io.CharArrayWriter.toString,Converts input data to a string.
java.io.CharArrayWriter.write,Writes characters to the buffer.
java.io.CharArrayWriter.write,Writes a character to the buffer.
java.io.CharArrayWriter.write,Write a portion of a string to the buffer.
java.io.CharArrayWriter.writeTo,Writes the contents of the buffer to another character stream.
java.io.Console.charset,Returns theCharsetobject used for  theConsole.
java.io.Console.flush,Flushes the console and forces any buffered output to be written  immediately .
java.io.Console.format,Writes a formatted string to this console's output stream using  the specified format string and arguments.
java.io.Console.printf,A convenience method to write a formatted string to this console's  output stream using the specified format string and arguments.
java.io.Console.reader,Retrieves the uniqueReaderobject associated  with this console.
java.io.Console.readLine,Reads a single line of text from the console.
java.io.Console.readLine,"Provides a formatted prompt, then reads a single line of text from the  console."
java.io.Console.readPassword,Reads a password or passphrase from the console with echoing disabled
java.io.Console.readPassword,"Provides a formatted prompt, then reads a password or passphrase from  the console with echoing disabled."
java.io.Console.writer,Retrieves the uniquePrintWriterobject  associated with this console.
java.io.DataInputStream.read,Reads some number of bytes from the contained input stream and  stores them into the buffer arrayb.
java.io.DataInputStream.read,Reads up tolenbytes of data from the contained  input stream into an array of bytes.
java.io.DataInputStream.readBoolean,See the general contract of thereadBooleanmethod ofDataInput.
java.io.DataInputStream.readByte,See the general contract of thereadBytemethod ofDataInput.
java.io.DataInputStream.readChar,See the general contract of thereadCharmethod ofDataInput.
java.io.DataInputStream.readDouble,See the general contract of thereadDoublemethod ofDataInput.
java.io.DataInputStream.readFloat,See the general contract of thereadFloatmethod ofDataInput.
java.io.DataInputStream.readFully,See the general contract of thereadFullymethod ofDataInput.
java.io.DataInputStream.readInt,See the general contract of thereadIntmethod ofDataInput.
java.io.DataInputStream.readLine,Deprecated.This method does not properly convert bytes to characters.
java.io.DataInputStream.readLong,See the general contract of thereadLongmethod ofDataInput.
java.io.DataInputStream.readShort,See the general contract of thereadShortmethod ofDataInput.
java.io.DataInputStream.readUnsignedByte,See the general contract of thereadUnsignedBytemethod ofDataInput.
java.io.DataInputStream.readUnsignedShort,See the general contract of thereadUnsignedShortmethod ofDataInput.
java.io.DataInputStream.readUTF,See the general contract of thereadUTFmethod ofDataInput.
java.io.DataInputStream.readUTF,Reads from the  streamina representation  of a Unicode  character string encoded inmodified UTF-8format;  this string of characters is then returned as aString.
java.io.DataInputStream.skipBytes,See the general contract of theskipBytesmethod ofDataInput.
java.io.DataOutputStream.flush,Flushes this data output stream.
java.io.DataOutputStream.size,"Returns the current value of the counterwritten,  the number of bytes written to this data output stream so far."
java.io.DataOutputStream.write,Writeslenbytes from the specified byte array  starting at offsetoffto the underlying output stream.
java.io.DataOutputStream.write,Writes the specified byte (the low eight bits of the argumentb) to the underlying output stream.
java.io.DataOutputStream.writeBoolean,Writes abooleanto the underlying output stream as  a 1-byte value.
java.io.DataOutputStream.writeByte,Writes out abyteto the underlying output stream as  a 1-byte value.
java.io.DataOutputStream.writeBytes,Writes out the string to the underlying output stream as a  sequence of bytes.
java.io.DataOutputStream.writeChar,"Writes acharto the underlying output stream as a  2-byte value, high byte first."
java.io.DataOutputStream.writeChars,Writes a string to the underlying output stream as a sequence of  characters.
java.io.DataOutputStream.writeDouble,"Converts the double argument to alongusing thedoubleToLongBitsmethod in classDouble,  and then writes thatlongvalue to the underlying  output stream as an 8-byte quantity, high byte first."
java.io.DataOutputStream.writeFloat,"Converts the float argument to anintusing thefloatToIntBitsmethod in classFloat,  and then writes thatintvalue to the underlying  output stream as a 4-byte quantity, high byte first."
java.io.DataOutputStream.writeInt,"Writes anintto the underlying output stream as four  bytes, high byte first."
java.io.DataOutputStream.writeLong,"Writes alongto the underlying output stream as eight  bytes, high byte first."
java.io.DataOutputStream.writeShort,"Writes ashortto the underlying output stream as two  bytes, high byte first."
java.io.DataOutputStream.writeUTF,Writes a string to the underlying output stream usingmodified UTF-8encoding in a machine-independent manner.
java.io.File.canExecute,Tests whether the application can execute the file denoted by this  abstract pathname.
java.io.File.canRead,Tests whether the application can read the file denoted by this  abstract pathname.
java.io.File.canWrite,Tests whether the application can modify the file denoted by this  abstract pathname.
java.io.File.compareTo,Compares two abstract pathnames lexicographically.
java.io.File.createNewFile,"Atomically creates a new, empty file named by this abstract pathname if  and only if a file with this name does not yet exist."
java.io.File.createTempFile,"Creates an empty file in the default temporary-file directory, using  the given prefix and suffix to generate its name."
java.io.File.createTempFile,"Creates a new empty file in the specified directory, using the  given prefix and suffix strings to generate its name."
java.io.File.delete,Deletes the file or directory denoted by this abstract pathname.
java.io.File.deleteOnExit,Requests that the file or directory denoted by this abstract  pathname be deleted when the virtual machine terminates.
java.io.File.equals,Tests this abstract pathname for equality with the given object.
java.io.File.exists,Tests whether the file or directory denoted by this abstract pathname  exists.
java.io.File.getAbsoluteFile,Returns the absolute form of this abstract pathname.
java.io.File.getAbsolutePath,Returns the absolute pathname string of this abstract pathname.
java.io.File.getCanonicalFile,Returns the canonical form of this abstract pathname.
java.io.File.getCanonicalPath,Returns the canonical pathname string of this abstract pathname.
java.io.File.getFreeSpace,Returns the number of unallocated bytes in the partitionnamedby this abstract path name.
java.io.File.getName,Returns the name of the file or directory denoted by this abstract  pathname.
java.io.File.getParent,"Returns the pathname string of this abstract pathname's parent, ornullif this pathname does not name a parent directory."
java.io.File.getParentFile,"Returns the abstract pathname of this abstract pathname's parent,  ornullif this pathname does not name a parent  directory."
java.io.File.getPath,Converts this abstract pathname into a pathname string.
java.io.File.getTotalSpace,Returns the size of the partitionnamedby this  abstract pathname.
java.io.File.getUsableSpace,Returns the number of bytes available to this virtual machine on the  partitionnamedby this abstract pathname.
java.io.File.hashCode,Computes a hash code for this abstract pathname.
java.io.File.isAbsolute,Tests whether this abstract pathname is absolute.
java.io.File.isDirectory,Tests whether the file denoted by this abstract pathname is a  directory.
java.io.File.isFile,Tests whether the file denoted by this abstract pathname is a normal  file.
java.io.File.isHidden,Tests whether the file named by this abstract pathname is a hidden  file.
java.io.File.lastModified,Returns the time that the file denoted by this abstract pathname was  last modified.
java.io.File.length,Returns the length of the file denoted by this abstract pathname.
java.io.File.list,Returns an array of strings naming the files and directories in the  directory denoted by this abstract pathname.
java.io.File.list,Returns an array of strings naming the files and directories in the  directory denoted by this abstract pathname that satisfy the specified  filter.
java.io.File.listFiles,Returns an array of abstract pathnames denoting the files in the  directory denoted by this abstract pathname.
java.io.File.listFiles,Returns an array of abstract pathnames denoting the files and  directories in the directory denoted by this abstract pathname that  satisfy the specified filter.
java.io.File.listRoots,List the available filesystem roots.
java.io.File.mkdir,Creates the directory named by this abstract pathname.
java.io.File.mkdirs,"Creates the directory named by this abstract pathname, including any  necessary but nonexistent parent directories."
java.io.File.renameTo,Renames the file denoted by this abstract pathname.
java.io.File.setExecutable,A convenience method to set the owner's execute permission for this  abstract pathname.
java.io.File.setExecutable,Sets the owner's or everybody's execute permission for this abstract  pathname.
java.io.File.setLastModified,Sets the last-modified time of the file or directory named by this  abstract pathname.
java.io.File.setReadable,A convenience method to set the owner's read permission for this abstract  pathname.
java.io.File.setReadable,Sets the owner's or everybody's read permission for this abstract  pathname.
java.io.File.setReadOnly,Marks the file or directory named by this abstract pathname so that  only read operations are allowed.
java.io.File.setWritable,A convenience method to set the owner's write permission for this abstract  pathname.
java.io.File.setWritable,Sets the owner's or everybody's write permission for this abstract  pathname.
java.io.File.toPath,Returns ajava.nio.file.Pathobject constructed from  this abstract path.
java.io.File.toString,Returns the pathname string of this abstract pathname.
java.io.File.toURI,Constructs afile:URI that represents this abstract pathname.
java.io.File.toURL,Deprecated.This method does not automatically escape characters that  are illegal in URLs.
java.io.FileDescriptor.sync,Force all system buffers to synchronize with the underlying  device.
java.io.FileDescriptor.valid,Tests if this file descriptor object is valid.
java.io.FileInputStream.available,Returns an estimate of the number of remaining bytes that can be read (or  skipped over) from this input stream without blocking by the next  invocation of a method for this input stream.
java.io.FileInputStream.close,Closes this file input stream and releases any system resources  associated with the stream.
java.io.FileInputStream.getChannel,Returns the uniqueFileChannelobject associated with this file input stream.
java.io.FileInputStream.getFD,Returns theFileDescriptorobject  that represents the connection to  the actual file in the file system being  used by thisFileInputStream.
java.io.FileInputStream.read,Reads a byte of data from this input stream.
java.io.FileInputStream.read,Reads up tob.lengthbytes of data from this input  stream into an array of bytes.
java.io.FileInputStream.read,Reads up tolenbytes of data from this input stream  into an array of bytes.
java.io.FileInputStream.skip,Skips over and discardsnbytes of data from the  input stream.
java.io.FileOutputStream.close,Closes this file output stream and releases any system resources  associated with this stream.
java.io.FileOutputStream.getChannel,Returns the uniqueFileChannelobject associated with this file output stream.
java.io.FileOutputStream.getFD,Returns the file descriptor associated with this stream.
java.io.FileOutputStream.write,Writesb.lengthbytes from the specified byte array  to this file output stream.
java.io.FileOutputStream.write,Writeslenbytes from the specified byte array  starting at offsetoffto this file output stream.
java.io.FileOutputStream.write,Writes the specified byte to this file output stream.
java.io.FilePermission.equals,Checks two FilePermission objects for equality.
java.io.FilePermission.getActions,"Returns the ""canonical string representation"" of the actions."
java.io.FilePermission.hashCode,Returns the hash code value for this object.
java.io.FilePermission.implies,"Checks if this FilePermission object ""implies"" the specified permission."
java.io.FilePermission.newPermissionCollection,Returns a new PermissionCollection object for storing FilePermission  objects.
java.io.FilterInputStream.available,Returns an estimate of the number of bytes that can be read (or  skipped over) from this input stream without blocking by the next  caller of a method for this input stream.
java.io.FilterInputStream.mark,Marks the current position in this input stream.
java.io.FilterInputStream.read,Reads up tob.lengthbytes of data from this  input stream into an array of bytes.
java.io.FilterInputStream.reset,Repositions this stream to the position at the time themarkmethod was last called on this input stream.
java.io.FilterOutputStream.close,Closes this output stream and releases any system resources  associated with the stream.
java.io.FilterOutputStream.flush,Flushes this output stream and forces any buffered output bytes  to be written out to the stream.
java.io.FilterOutputStream.write,Writesb.lengthbytes to this output stream.
java.io.FilterOutputStream.write,Writeslenbytes from the specifiedbytearray starting at offsetoffto  this output stream.
java.io.FilterOutputStream.write,Writes the specifiedbyteto this output stream.
java.io.FilterReader.markSupported,Tells whether this stream supports the mark() operation.
java.io.FilterReader.reset,Resets the stream.
java.io.FilterWriter.write,Writes a portion of a string.
java.io.InputStream.available,"Returns an estimate of the number of bytes that can be read (or skipped  over) from this input stream without blocking, which may be 0, or 0 when  end of stream is detected."
java.io.InputStream.close,Closes this input stream and releases any system resources associated  with the stream.
java.io.InputStream.nullInputStream,Returns a newInputStreamthat reads no bytes.
java.io.InputStream.read,Reads the next byte of data from the input stream.
java.io.InputStream.read,Reads some number of bytes from the input stream and stores them into  the buffer arrayb.
java.io.InputStream.read,Reads up tolenbytes of data from the input stream into  an array of bytes.
java.io.InputStream.readNBytes,Reads up to a specified number of bytes from the input stream.
java.io.InputStream.skip,Skips over and discardsnbytes of data from this input  stream.
java.io.InputStream.skipNBytes,Skips over and discards exactlynbytes of data from this input  stream.
java.io.InputStream.transferTo,Reads all bytes from this input stream and writes the bytes to the  given output stream in the order that they are read.
java.io.InputStreamReader.getEncoding,Returns the name of the character encoding being used by this stream.
java.io.InvalidClassException.getMessage,"Produce the message and include the classname, if present."
java.io.LineNumberReader.getLineNumber,Get the current line number.
java.io.LineNumberReader.mark,Mark the present position in the stream.
java.io.LineNumberReader.read,Read a single character.
java.io.LineNumberReader.readLine,Read a line of text.
java.io.LineNumberReader.reset,Reset the stream to the most recent mark.
java.io.LineNumberReader.setLineNumber,Set the current line number.
java.io.ObjectInputStream.defaulted,Return true if the named field is defaulted and has no value in this  stream.
java.io.ObjectInputStream.get,Get the value of the named boolean field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named byte field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named char field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named double field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named float field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named int field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named long field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named short field from the persistent field.
java.io.ObjectInputStream.get,Get the value of the named Object field from the persistent field.
java.io.ObjectInputStream.getObjectStreamClass,Get the ObjectStreamClass that describes the fields in the stream.
java.io.ObjectInputStream.available,Returns the number of bytes that can be read without blocking.
java.io.ObjectInputStream.close,Closes the input stream.
java.io.ObjectInputStream.defaultReadObject,Read the non-static and non-transient fields of the current class from  this stream.
java.io.ObjectInputStream.enableResolveObject,Enables the stream to do replacement of objects read from the stream.
java.io.ObjectInputStream.getObjectInputFilter,Returns the deserialization filter for this stream.
java.io.ObjectInputStream.read,Reads a byte of data.
java.io.ObjectInputStream.read,Reads into an array of bytes.
java.io.ObjectInputStream.readBoolean,Reads in a boolean.
java.io.ObjectInputStream.readByte,Reads an 8 bit byte.
java.io.ObjectInputStream.readChar,Reads a 16 bit char.
java.io.ObjectInputStream.readClassDescriptor,Read a class descriptor from the serialization stream.
java.io.ObjectInputStream.readDouble,Reads a 64 bit double.
java.io.ObjectInputStream.readFields,Reads the persistent fields from the stream and makes them available by  name.
java.io.ObjectInputStream.readFloat,Reads a 32 bit float.
java.io.ObjectInputStream.readFully,"Reads bytes, blocking until all bytes are read."
java.io.ObjectInputStream.readInt,Reads a 32 bit int.
java.io.ObjectInputStream.readLong,Reads a 64 bit long.
java.io.ObjectInputStream.readObject,Read an object from the ObjectInputStream.
java.io.ObjectInputStream.readObjectOverride,This method is called by trusted subclasses of ObjectInputStream that  constructed ObjectInputStream using the protected no-arg constructor.
java.io.ObjectInputStream.readShort,Reads a 16 bit short.
java.io.ObjectInputStream.readStreamHeader,The readStreamHeader method is provided to allow subclasses to read and  verify their own stream headers.
java.io.ObjectInputStream.readUnshared,"Reads an ""unshared"" object from the ObjectInputStream."
java.io.ObjectInputStream.readUnsignedByte,Reads an unsigned 8 bit byte.
java.io.ObjectInputStream.readUnsignedShort,Reads an unsigned 16 bit short.
java.io.ObjectInputStream.readUTF,Reads a String inmodified UTF-8format.
java.io.ObjectInputStream.registerValidation,Register an object to be validated before the graph is returned.
java.io.ObjectInputStream.resolveClass,Load the local class equivalent of the specified stream class  description.
java.io.ObjectInputStream.resolveObject,This method will allow trusted subclasses of ObjectInputStream to  substitute one object for another during deserialization.
java.io.ObjectInputStream.resolveProxyClass,"Returns a proxy class that implements the interfaces named in a proxy  class descriptor; subclasses may implement this method to read custom  data from the stream along with the descriptors for dynamic proxy  classes, allowing them to use an alternate loading mechanism for the  interfaces and the proxy class."
java.io.ObjectInputStream.setObjectInputFilter,Set the deserialization filter for the stream.
java.io.ObjectInputStream.skipBytes,Skips bytes.
java.io.ObjectOutputStream.annotateClass,Subclasses may implement this method to allow class data to be stored in  the stream.
java.io.ObjectOutputStream.annotateProxyClass,Subclasses may implement this method to store custom data in the stream  along with descriptors for dynamic proxy classes.
java.io.ObjectOutputStream.close,Closes the stream.
java.io.ObjectOutputStream.defaultWriteObject,Write the non-static and non-transient fields of the current class to  this stream.
java.io.ObjectOutputStream.drain,Drain any buffered data in ObjectOutputStream.
java.io.ObjectOutputStream.enableReplaceObject,Enables the stream to do replacement of objects written to the stream.
java.io.ObjectOutputStream.putFields,Retrieve the object used to buffer persistent fields to be written to  the stream.
java.io.ObjectOutputStream.replaceObject,This method will allow trusted subclasses of ObjectOutputStream to  substitute one object for another during serialization.
java.io.ObjectOutputStream.reset,Reset will disregard the state of any objects already written to the  stream.
java.io.ObjectOutputStream.useProtocolVersion,Specify stream protocol version to use when writing the stream.
java.io.ObjectOutputStream.write,Writes an array of bytes.
java.io.ObjectOutputStream.write,Writes a sub array of bytes.
java.io.ObjectOutputStream.write,Writes a byte.
java.io.ObjectOutputStream.writeBoolean,Writes a boolean.
java.io.ObjectOutputStream.writeByte,Writes an 8 bit byte.
java.io.ObjectOutputStream.writeBytes,Writes a String as a sequence of bytes.
java.io.ObjectOutputStream.writeChar,Writes a 16 bit char.
java.io.ObjectOutputStream.writeChars,Writes a String as a sequence of chars.
java.io.ObjectOutputStream.writeClassDescriptor,Write the specified class descriptor to the ObjectOutputStream.
java.io.ObjectOutputStream.writeDouble,Writes a 64 bit double.
java.io.ObjectOutputStream.writeFields,Write the buffered fields to the stream.
java.io.ObjectOutputStream.writeFloat,Writes a 32 bit float.
java.io.ObjectOutputStream.writeInt,Writes a 32 bit int.
java.io.ObjectOutputStream.writeLong,Writes a 64 bit long.
java.io.ObjectOutputStream.writeObject,Write the specified object to the ObjectOutputStream.
java.io.ObjectOutputStream.writeObjectOverride,Method used by subclasses to override the default writeObject method.
java.io.ObjectOutputStream.writeShort,Writes a 16 bit short.
java.io.ObjectOutputStream.writeStreamHeader,The writeStreamHeader method is provided so subclasses can append or  prepend their own header to the stream.
java.io.ObjectOutputStream.writeUnshared,"Writes an ""unshared"" object to the ObjectOutputStream."
java.io.ObjectOutputStream.writeUTF,Primitive data write of this String inmodified UTF-8format.
java.io.ObjectOutputStream.put,Put the value of the named boolean field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named byte field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named char field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named double field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named float field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named int field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named long field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named short field into the persistent field.
java.io.ObjectOutputStream.put,Put the value of the named Object field into the persistent field.
java.io.ObjectOutputStream.write,"Deprecated.This method does not write the values contained by thisPutFieldobject in a proper format, and may          result in corruption of the serialization stream."
java.io.ObjectStreamClass.forClass,Return the class in the local VM that this version is mapped to.
java.io.ObjectStreamClass.getField,Get the field of this class by name.
java.io.ObjectStreamClass.getFields,Return an array of the fields of this serializable class.
java.io.ObjectStreamClass.getName,Returns the name of the class described by this descriptor.
java.io.ObjectStreamClass.getSerialVersionUID,Return the serialVersionUID for this class.
java.io.ObjectStreamClass.lookup,Find the descriptor for a class that can be serialized.
java.io.ObjectStreamClass.lookupAny,"Returns the descriptor for any class, regardless of whether it  implementsSerializable."
java.io.ObjectStreamClass.toString,Return a string describing this ObjectStreamClass.
java.io.ObjectStreamField.compareTo,Compare this field with anotherObjectStreamField.
java.io.ObjectStreamField.getName,Get the name of this field.
java.io.ObjectStreamField.getOffset,Offset of field within instance data.
java.io.ObjectStreamField.getType,Get the type of the field.
java.io.ObjectStreamField.getTypeCode,Returns character encoding of field type.
java.io.ObjectStreamField.getTypeString,Return the JVM type signature.
java.io.ObjectStreamField.isPrimitive,Return true if this field has a primitive type.
java.io.ObjectStreamField.isUnshared,Returns boolean value indicating whether or not the serializable field  represented by this ObjectStreamField instance is unshared.
java.io.ObjectStreamField.setOffset,Offset within instance data.
java.io.ObjectStreamField.toString,Return a string that describes this field.
java.io.OutputStream.close,Closes this output stream and releases any system resources  associated with this stream.
java.io.OutputStream.flush,Flushes this output stream and forces any buffered output bytes  to be written out.
java.io.OutputStream.nullOutputStream,Returns a newOutputStreamwhich discards all bytes.
java.io.OutputStream.write,Writesb.lengthbytes from the specified byte array  to this output stream.
java.io.OutputStream.write,Writeslenbytes from the specified byte array  starting at offsetoffto this output stream.
java.io.OutputStream.write,Writes the specified byte to this output stream.
java.io.PipedInputStream.available,Returns the number of bytes that can be read from this input  stream without blocking.
java.io.PipedInputStream.close,Closes this piped input stream and releases any system resources  associated with the stream.
java.io.PipedInputStream.connect,Causes this piped input stream to be connected  to the piped  output streamsrc.
java.io.PipedInputStream.read,Reads the next byte of data from this piped input stream.
java.io.PipedInputStream.read,Reads up tolenbytes of data from this piped input  stream into an array of bytes.
java.io.PipedInputStream.receive,Receives a byte of data.
java.io.PipedOutputStream.close,Closes this piped output stream and releases any system resources  associated with this stream.
java.io.PipedOutputStream.connect,Connects this piped output stream to a receiver.
java.io.PipedOutputStream.write,Writeslenbytes from the specified byte array  starting at offsetoffto this piped output stream.
java.io.PipedOutputStream.write,Writes the specifiedbyteto the piped output stream.
java.io.PipedReader.close,Closes this piped stream and releases any system resources  associated with the stream.
java.io.PipedReader.connect,Causes this piped reader to be connected  to the piped  writersrc.
java.io.PipedReader.read,Reads the next character of data from this piped stream.
java.io.PipedReader.ready,Tell whether this stream is ready to be read.
java.io.PipedWriter.connect,Connects this piped writer to a receiver.
java.io.PipedWriter.flush,Flushes this output stream and forces any buffered output characters  to be written out.
java.io.PipedWriter.write,Writeslencharacters from the specified character array  starting at offsetoffto this piped output stream.
java.io.PipedWriter.write,Writes the specifiedcharto the piped output stream.
java.io.PrintStream.append,Appends the specified character to this output stream.
java.io.PrintStream.append,Appends the specified character sequence to this output stream.
java.io.PrintStream.append,Appends a subsequence of the specified character sequence to this output  stream.
java.io.PrintStream.checkError,Flushes the stream and checks its error state.
java.io.PrintStream.clearError,Clears the internal error state of this stream.
java.io.PrintStream.format,Writes a formatted string to this output stream using the specified  format string and arguments.
java.io.PrintStream.print,Prints a boolean value.
java.io.PrintStream.print,Prints a character.
java.io.PrintStream.print,Prints an array of characters.
java.io.PrintStream.print,Prints a double-precision floating-point number.
java.io.PrintStream.print,Prints a floating-point number.
java.io.PrintStream.print,Prints an integer.
java.io.PrintStream.print,Prints a long integer.
java.io.PrintStream.print,Prints an object.
java.io.PrintStream.print,Prints a string.
java.io.PrintStream.printf,A convenience method to write a formatted string to this output stream  using the specified format string and arguments.
java.io.PrintStream.println,Terminates the current line by writing the line separator string.
java.io.PrintStream.println,Prints a boolean and then terminate the line.
java.io.PrintStream.println,Prints a character and then terminate the line.
java.io.PrintStream.println,Prints an array of characters and then terminate the line.
java.io.PrintStream.println,Prints a double and then terminate the line.
java.io.PrintStream.println,Prints a float and then terminate the line.
java.io.PrintStream.println,Prints an integer and then terminate the line.
java.io.PrintStream.println,Prints a long and then terminate the line.
java.io.PrintStream.println,Prints an Object and then terminate the line.
java.io.PrintStream.println,Prints a String and then terminate the line.
java.io.PrintStream.setError,Sets the error state of the stream totrue.
java.io.PrintStream.write,Writes all bytes from the specified byte array to this stream.
java.io.PrintStream.write,Writeslenbytes from the specified byte array starting at  offsetoffto this stream.
java.io.PrintStream.write,Writes the specified byte to this stream.
java.io.PrintWriter.checkError,Flushes the stream if it's not closed and checks its error state.
java.io.PrintWriter.clearError,Clears the error state of this stream.
java.io.PrintWriter.close,Closes the stream and releases any system resources associated  with it.
java.io.PrintWriter.format,Writes a formatted string to this writer using the specified format  string and arguments.
java.io.PrintWriter.printf,A convenience method to write a formatted string to this writer using  the specified format string and arguments.
java.io.PrintWriter.println,Prints a boolean value and then terminates the line.
java.io.PrintWriter.println,Prints a character and then terminates the line.
java.io.PrintWriter.println,Prints an array of characters and then terminates the line.
java.io.PrintWriter.println,Prints a double-precision floating-point number and then terminates the  line.
java.io.PrintWriter.println,Prints a floating-point number and then terminates the line.
java.io.PrintWriter.println,Prints an integer and then terminates the line.
java.io.PrintWriter.println,Prints a long integer and then terminates the line.
java.io.PrintWriter.println,Prints an Object and then terminates the line.
java.io.PrintWriter.println,Prints a String and then terminates the line.
java.io.PrintWriter.setError,Indicates that an error has occurred.
java.io.PrintWriter.write,Writes an array of characters.
java.io.PrintWriter.write,Writes A Portion of an array of characters.
java.io.PrintWriter.write,Writes a string.
java.io.PushbackInputStream.markSupported,"Tests if this input stream supports themarkandresetmethods, which it does not."
java.io.PushbackInputStream.read,Reads up tolenbytes of data from this input stream into  an array of bytes.
java.io.PushbackInputStream.skip,Skips over and discardsnbytes of data from this  input stream.
java.io.PushbackInputStream.unread,Pushes back an array of bytes by copying it to the front of the  pushback buffer.
java.io.PushbackInputStream.unread,Pushes back a portion of an array of bytes by copying it to the front  of the pushback buffer.
java.io.PushbackInputStream.unread,Pushes back a byte by copying it to the front of the pushback buffer.
java.io.PushbackReader.markSupported,"Tells whether this stream supports the mark() operation, which it does  not."
java.io.PushbackReader.unread,Pushes back an array of characters by copying it to the front of the  pushback buffer.
java.io.PushbackReader.unread,Pushes back a portion of an array of characters by copying it to the  front of the pushback buffer.
java.io.PushbackReader.unread,Pushes back a single character by copying it to the front of the  pushback buffer.
java.io.RandomAccessFile.close,Closes this random access file stream and releases any system  resources associated with the stream.
java.io.RandomAccessFile.getChannel,Returns the uniqueFileChannelobject associated with this file.
java.io.RandomAccessFile.getFD,Returns the opaque file descriptor object associated with this  stream.
java.io.RandomAccessFile.getFilePointer,Returns the current offset in this file.
java.io.RandomAccessFile.length,Returns the length of this file.
java.io.RandomAccessFile.read,Reads a byte of data from this file.
java.io.RandomAccessFile.read,Reads up tob.lengthbytes of data from this file  into an array of bytes.
java.io.RandomAccessFile.read,Reads up tolenbytes of data from this file into an  array of bytes.
java.io.RandomAccessFile.readBoolean,Reads abooleanfrom this file.
java.io.RandomAccessFile.readByte,Reads a signed eight-bit value from this file.
java.io.RandomAccessFile.readChar,Reads a character from this file.
java.io.RandomAccessFile.readDouble,Reads adoublefrom this file.
java.io.RandomAccessFile.readFloat,Reads afloatfrom this file.
java.io.RandomAccessFile.readFully,"Readsb.lengthbytes from this file into the byte  array, starting at the current file pointer."
java.io.RandomAccessFile.readFully,"Reads exactlylenbytes from this file into the byte  array, starting at the current file pointer."
java.io.RandomAccessFile.readInt,Reads a signed 32-bit integer from this file.
java.io.RandomAccessFile.readLine,Reads the next line of text from this file.
java.io.RandomAccessFile.readLong,Reads a signed 64-bit integer from this file.
java.io.RandomAccessFile.readShort,Reads a signed 16-bit number from this file.
java.io.RandomAccessFile.readUnsignedByte,Reads an unsigned eight-bit number from this file.
java.io.RandomAccessFile.readUnsignedShort,Reads an unsigned 16-bit number from this file.
java.io.RandomAccessFile.readUTF,Reads in a string from this file.
java.io.RandomAccessFile.seek,"Sets the file-pointer offset, measured from the beginning of this  file, at which the next read or write occurs."
java.io.RandomAccessFile.setLength,Sets the length of this file.
java.io.RandomAccessFile.skipBytes,Attempts to skip overnbytes of input discarding the  skipped bytes.
java.io.RandomAccessFile.write,"Writesb.lengthbytes from the specified byte array  to this file, starting at the current file pointer."
java.io.RandomAccessFile.write,Writeslenbytes from the specified byte array  starting at offsetoffto this file.
java.io.RandomAccessFile.write,Writes the specified byte to this file.
java.io.RandomAccessFile.writeBoolean,Writes abooleanto the file as a one-byte value.
java.io.RandomAccessFile.writeByte,Writes abyteto the file as a one-byte value.
java.io.RandomAccessFile.writeBytes,Writes the string to the file as a sequence of bytes.
java.io.RandomAccessFile.writeChar,"Writes acharto the file as a two-byte value, high  byte first."
java.io.RandomAccessFile.writeChars,Writes a string to the file as a sequence of characters.
java.io.RandomAccessFile.writeDouble,"Converts the double argument to alongusing thedoubleToLongBitsmethod in classDouble,  and then writes thatlongvalue to the file as an  eight-byte quantity, high byte first."
java.io.RandomAccessFile.writeFloat,"Converts the float argument to anintusing thefloatToIntBitsmethod in classFloat,  and then writes thatintvalue to the file as a  four-byte quantity, high byte first."
java.io.RandomAccessFile.writeInt,"Writes anintto the file as four bytes, high byte first."
java.io.RandomAccessFile.writeLong,"Writes alongto the file as eight bytes, high byte first."
java.io.RandomAccessFile.writeShort,"Writes ashortto the file as two bytes, high byte first."
java.io.RandomAccessFile.writeUTF,Writes a string to the file usingmodified UTF-8encoding in a machine-independent manner.
java.io.Reader.nullReader,Returns a newReaderthat reads no characters.
java.io.Reader.read,Reads characters into an array.
java.io.Reader.read,Attempts to read characters into the specified character buffer.
java.io.Reader.transferTo,Reads all characters from this reader and writes the characters to the  given writer in the order that they are read.
java.io.SequenceInputStream.available,Returns an estimate of the number of bytes that can be read (or  skipped over) from the current underlying input stream without  blocking by the next invocation of a method for the current  underlying input stream.
java.io.StreamTokenizer.commentChar,Specified that the character argument starts a single-line  comment.
java.io.StreamTokenizer.eolIsSignificant,Determines whether or not ends of line are treated as tokens.
java.io.StreamTokenizer.lineno,Return the current line number.
java.io.StreamTokenizer.lowerCaseMode,Determines whether or not word token are automatically lowercased.
java.io.StreamTokenizer.nextToken,Parses the next token from the input stream of this tokenizer.
java.io.StreamTokenizer.ordinaryChar,"Specifies that the character argument is ""ordinary""  in this tokenizer."
java.io.StreamTokenizer.ordinaryChars,"Specifies that all characterscin the rangelow <= c <= highare ""ordinary"" in this tokenizer."
java.io.StreamTokenizer.parseNumbers,Specifies that numbers should be parsed by this tokenizer.
java.io.StreamTokenizer.pushBack,"Causes the next call to thenextTokenmethod of this  tokenizer to return the current value in thettypefield, and not to modify the value in thenvalorsvalfield."
java.io.StreamTokenizer.quoteChar,Specifies that matching pairs of this character delimit string  constants in this tokenizer.
java.io.StreamTokenizer.resetSyntax,"Resets this tokenizer's syntax table so that all characters are  ""ordinary."""
java.io.StreamTokenizer.slashSlashComments,Determines whether or not the tokenizer recognizes C++-style comments.
java.io.StreamTokenizer.slashStarComments,Determines whether or not the tokenizer recognizes C-style comments.
java.io.StreamTokenizer.toString,Returns the string representation of the current stream token and  the line number it occurs on.
java.io.StreamTokenizer.whitespaceChars,Specifies that all characterscin the rangelow <= c <= highare white space characters.
java.io.StreamTokenizer.wordChars,Specifies that all characterscin the rangelow <= c <= highare word constituents.
java.io.StringReader.reset,"Resets the stream to the most recent mark, or to the beginning of the  string if it has never been marked."
java.io.StringWriter.close,Closing aStringWriterhas no effect.
java.io.StringWriter.getBuffer,Return the string buffer itself.
java.io.StringWriter.toString,Return the buffer's current value as a string.
java.io.StringWriter.write,Write a portion of an array of characters.
java.io.StringWriter.write,Write a single character.
java.io.StringWriter.write,Write a string.
java.io.StringWriter.write,Write a portion of a string.
java.io.UncheckedIOException.getCause,Returns the cause of this exception.
java.io.WriteAbortedException.getCause,Returns the exception that terminated the operation (thecause).
java.io.WriteAbortedException.getMessage,"Produce the message and include the message from the nested  exception, if there is one."
java.io.Writer.nullWriter,Returns a newWriterwhich discards all characters.
java.lang.Boolean.booleanValue,Returns the value of thisBooleanobject as a boolean  primitive.
java.lang.Boolean.compare,Compares twobooleanvalues.
java.lang.Boolean.compareTo,Compares thisBooleaninstance with another.
java.lang.Boolean.describeConstable,Returns anOptionalcontaining the nominal descriptor for this  instance.
java.lang.Boolean.equals,Returnstrueif and only if the argument is notnulland is aBooleanobject that  represents the samebooleanvalue as this object.
java.lang.Boolean.getBoolean,"Returnstrueif and only if the system property named  by the argument exists and is equal to, ignoring case, the  string""true""."
java.lang.Boolean.hashCode,Returns a hash code for thisBooleanobject.
java.lang.Boolean.hashCode,Returns a hash code for abooleanvalue; compatible withBoolean.hashCode().
java.lang.Boolean.logicalAnd,Returns the result of applying the logical AND operator to the  specifiedbooleanoperands.
java.lang.Boolean.logicalOr,Returns the result of applying the logical OR operator to the  specifiedbooleanoperands.
java.lang.Boolean.logicalXor,Returns the result of applying the logical XOR operator to the  specifiedbooleanoperands.
java.lang.Boolean.parseBoolean,Parses the string argument as a boolean.
java.lang.Boolean.toString,Returns aStringobject representing this Boolean's  value.
java.lang.Boolean.toString,Returns aStringobject representing the specified  boolean.
java.lang.Boolean.valueOf,Returns aBooleaninstance representing the specifiedbooleanvalue.
java.lang.Boolean.valueOf,Returns aBooleanwith a value represented by the  specified string.
java.lang.Byte.byteValue,Returns the value of thisByteas abyte.
java.lang.Byte.compare,Compares twobytevalues numerically.
java.lang.Byte.compareTo,Compares twoByteobjects numerically.
java.lang.Byte.compareUnsigned,Compares twobytevalues numerically treating the values  as unsigned.
java.lang.Byte.decode,Decodes aStringinto aByte.
java.lang.Byte.doubleValue,Returns the value of thisByteas adoubleafter a widening primitive conversion.
java.lang.Byte.equals,Compares this object to the specified object.
java.lang.Byte.floatValue,Returns the value of thisByteas afloatafter  a widening primitive conversion.
java.lang.Byte.hashCode,Returns a hash code for thisByte; equal to the result  of invokingintValue().
java.lang.Byte.hashCode,Returns a hash code for abytevalue; compatible withByte.hashCode().
java.lang.Byte.intValue,Returns the value of thisByteas anintafter  a widening primitive conversion.
java.lang.Byte.longValue,Returns the value of thisByteas alongafter  a widening primitive conversion.
java.lang.Byte.parseByte,Parses the string argument as a signed decimalbyte.
java.lang.Byte.parseByte,Parses the string argument as a signedbytein the  radix specified by the second argument.
java.lang.Byte.shortValue,Returns the value of thisByteas ashortafter  a widening primitive conversion.
java.lang.Byte.toString,Returns aStringobject representing thisByte's value.
java.lang.Byte.toString,Returns a newStringobject representing the  specifiedbyte.
java.lang.Byte.toUnsignedInt,Converts the argument to anintby an unsigned  conversion.
java.lang.Byte.toUnsignedLong,Converts the argument to alongby an unsigned  conversion.
java.lang.Byte.valueOf,Returns aByteinstance representing the specifiedbytevalue.
java.lang.Byte.valueOf,Returns aByteobject holding the value  given by the specifiedString.
java.lang.Byte.valueOf,Returns aByteobject holding the value  extracted from the specifiedStringwhen parsed  with the radix given by the second argument.
java.lang.Character.charCount,Determines the number ofcharvalues needed to  represent the specified character (Unicode code point).
java.lang.Character.charValue,Returns the value of thisCharacterobject.
java.lang.Character.codePointAt,Returns the code point at the given index of the char array.
java.lang.Character.codePointAt,"Returns the code point at the given index of the char array, where only array elements withindexless thanlimitcan be used."
java.lang.Character.codePointAt,Returns the code point at the given index of the Char Sequence.
java.lang.Character.codePointBefore,Returns the code point preceding the given index of the char array.
java.lang.Character.codePointBefore,"Returns the code point preceding the given index of the char array, where only array elements with index greater than or equal to start can be used."
java.lang.Character.codePointBefore,Returns the code point preceding the given index of theCharSequence.
java.lang.Character.codePointCount,Returns the number of Unicode code points in a subarray of the char array argument.
java.lang.Character.codePointCount,Returns the number of Unicode code points in the text range of  the specified char sequence.
java.lang.Character.codePointOf,Returns the code point value of the Unicode character specified by  the given Unicode character name.
java.lang.Character.compare,Compares twocharvalues numerically.
java.lang.Character.compareTo,Compares twoCharacterobjects numerically.
java.lang.Character.digit,Returns the numeric value of the characterchin the  specified radix.
java.lang.Character.digit,Returns the numeric value of the specified character (Unicode  code point) in the specified radix.
java.lang.Character.equals,Compares this object against the specified object.
java.lang.Character.forDigit,Determines the character representation for a specific digit in  the specified radix.
java.lang.Character.getDirectionality,Returns the Unicode directionality property for the given  character.
java.lang.Character.getDirectionality,Returns the Unicode directionality property for the given  character (Unicode code point).
java.lang.Character.getName,"Returns the Unicode name of the specified charactercodePoint, or null if the code point isunassigned."
java.lang.Character.getNumericValue,Returns theintvalue that the specified Unicode  character represents.
java.lang.Character.getNumericValue,Returns theintvalue that the specified  character (Unicode code point) represents.
java.lang.Character.getType,Returns a value indicating a character's general category.
java.lang.Character.hashCode,Returns a hash code for thisCharacter; equal to the result  of invokingcharValue().
java.lang.Character.hashCode,Returns a hash code for acharvalue; compatible withCharacter.hashCode().
java.lang.Character.highSurrogate,Returns the leading surrogate (ahigh surrogate code unit) of thesurrogate pairrepresenting the specified supplementary character (Unicode  code point) in the UTF-16 encoding.
java.lang.Character.isAlphabetic,Determines if the specified character (Unicode code point) is alphabetic.
java.lang.Character.isBmpCodePoint,Determines whether the specified character (Unicode code point)  is in theBasic Multilingual Plane (BMP).
java.lang.Character.isDefined,Determines if a character is defined in Unicode.
java.lang.Character.isDefined,Determines if a character (Unicode code point) is defined in Unicode.
java.lang.Character.isDigit,Determines if the specified character is a digit.
java.lang.Character.isDigit,Determines if the specified character (Unicode code point) is a digit.
java.lang.Character.isHighSurrogate,Determines if the givencharvalue is aUnicode high-surrogate code unit(also known asleading-surrogate code unit).
java.lang.Character.isIdentifierIgnorable,Determines if the specified character should be regarded as  an ignorable character in a Java identifier or a Unicode identifier.
java.lang.Character.isIdentifierIgnorable,Determines if the specified character (Unicode code point) should be regarded as  an ignorable character in a Java identifier or a Unicode identifier.
java.lang.Character.isIdeographic,"Determines if the specified character (Unicode code point) is a CJKV  (Chinese, Japanese, Korean and Vietnamese) ideograph, as defined by  the Unicode Standard."
java.lang.Character.isISOControl,Determines if the specified character is an ISO control  character.
java.lang.Character.isISOControl,Determines if the referenced character (Unicode code point) is an ISO control  character.
java.lang.Character.isJavaIdentifierPart,Determines if the specified character may be part of a Java  identifier as other than the first character.
java.lang.Character.isJavaIdentifierPart,Determines if the character (Unicode code point) may be part of a Java  identifier as other than the first character.
java.lang.Character.isJavaIdentifierStart,Determines if the specified character is  permissible as the first character in a Java identifier.
java.lang.Character.isJavaIdentifierStart,Determines if the character (Unicode code point) is  permissible as the first character in a Java identifier.
java.lang.Character.isJavaLetter,Deprecated.Replaced by isJavaIdentifierStart(char).
java.lang.Character.isJavaLetterOrDigit,Deprecated.Replaced by isJavaIdentifierPart(char).
java.lang.Character.isLetter,Determines if the specified character is a letter.
java.lang.Character.isLetter,Determines if the specified character (Unicode code point) is a letter.
java.lang.Character.isLetterOrDigit,Determines if the specified character is a letter or digit.
java.lang.Character.isLetterOrDigit,Determines if the specified character (Unicode code point) is a letter or digit.
java.lang.Character.isLowerCase,Determines if the specified character is a lowercase character.
java.lang.Character.isLowerCase,Determines if the specified character (Unicode code point) is a  lowercase character.
java.lang.Character.isLowSurrogate,Determines if the givencharvalue is aUnicode low-surrogate code unit(also known astrailing-surrogate code unit).
java.lang.Character.isMirrored,Determines whether the character is mirrored according to the  Unicode specification.
java.lang.Character.isMirrored,Determines whether the specified character (Unicode code point)  is mirrored according to the Unicode specification.
java.lang.Character.isSpace,Deprecated.Replaced by isWhitespace(char).
java.lang.Character.isSpaceChar,Determines if the specified character is a Unicode space character.
java.lang.Character.isSpaceChar,Determines if the specified character (Unicode code point) is a  Unicode space character.
java.lang.Character.isSupplementaryCodePoint,Determines whether the specified character (Unicode code point)  is in thesupplementary characterrange.
java.lang.Character.isSurrogate,Determines if the givencharvalue is a Unicodesurrogate code unit.
java.lang.Character.isSurrogatePair,Determines whether the specified pair ofcharvalues is a validUnicode surrogate pair.
java.lang.Character.isTitleCase,Determines if the specified character is a titlecase character.
java.lang.Character.isTitleCase,Determines if the specified character (Unicode code point) is a titlecase character.
java.lang.Character.isUnicodeIdentifierPart,Determines if the specified character may be part of a Unicode  identifier as other than the first character.
java.lang.Character.isUnicodeIdentifierPart,Determines if the specified character (Unicode code point) may be part of a Unicode  identifier as other than the first character.
java.lang.Character.isUnicodeIdentifierStart,Determines if the specified character is permissible as the  first character in a Unicode identifier.
java.lang.Character.isUnicodeIdentifierStart,Determines if the specified character (Unicode code point) is permissible as the  first character in a Unicode identifier.
java.lang.Character.isUpperCase,Determines if the specified character is an uppercase character.
java.lang.Character.isUpperCase,Determines if the specified character (Unicode code point) is an uppercase character.
java.lang.Character.isValidCodePoint,Determines whether the specified code point is a validUnicode code point value.
java.lang.Character.isWhitespace,Determines if the specified character is white space according to Java.
java.lang.Character.isWhitespace,Determines if the specified character (Unicode code point) is  white space according to Java.
java.lang.Character.lowSurrogate,Returns the trailing surrogate (alow surrogate code unit) of thesurrogate pairrepresenting the specified supplementary character (Unicode  code point) in the UTF-16 encoding.
java.lang.Character.offsetByCodePoints,Returns the index within the givencharsubarray  that is offset from the givenindexbycodePointOffsetcode points.
java.lang.Character.offsetByCodePoints,Returns the index within the given char sequence that is offset  from the givenindexbycodePointOffsetcode points.
java.lang.Character.reverseBytes,Returns the value obtained by reversing the order of the bytes in the  specifiedcharvalue.
java.lang.Character.toChars,Converts the specified character (Unicode code point) to its  UTF-16 representation stored in achararray.
java.lang.Character.toChars,Converts the specified character (Unicode code point) to its  UTF-16 representation.
java.lang.Character.toCodePoint,Converts the specified surrogate pair to its supplementary code  point value.
java.lang.Character.toLowerCase,Converts the character argument to lowercase using case  mapping information from the UnicodeData file.
java.lang.Character.toLowerCase,Converts the character (Unicode code point) argument to  lowercase using case mapping information from the UnicodeData  file.
java.lang.Character.toString,Returns aStringobject representing thisCharacter's value.
java.lang.Character.toString,Returns aStringobject representing the  specifiedchar.
java.lang.Character.toString,Returns aStringobject representing the  specified character (Unicode code point).
java.lang.Character.toTitleCase,Converts the character argument to titlecase using case mapping  information from the UnicodeData file.
java.lang.Character.toTitleCase,Converts the character (Unicode code point) argument to titlecase using case mapping  information from the UnicodeData file.
java.lang.Character.toUpperCase,Converts the character argument to uppercase using case mapping  information from the UnicodeData file.
java.lang.Character.toUpperCase,Converts the character (Unicode code point) argument to  uppercase using case mapping information from the UnicodeData  file.
java.lang.Character.valueOf,Returns aCharacterinstance representing the specifiedcharvalue.
java.lang.Character.equals,Compares twoSubsetobjects for equality.
java.lang.Character.hashCode,Returns the standard hash code as defined by theObject.hashCode()method.
java.lang.Character.toString,Returns the name of this subset.
java.lang.Character.forName,Returns the UnicodeBlock with the given name.
java.lang.Character.of,"Returns the object representing the Unicode block containing the  given character, ornullif the character is not a  member of a defined block."
java.lang.Character.of,"Returns the object representing the Unicode block  containing the given character (Unicode code point), ornullif the character is not a member of a  defined block."
java.lang.Character.forName,Returns the UnicodeScript constant with the given Unicode script  name or the script name alias.
java.lang.Character.of,Returns the enum constant representing the Unicode script of which  the given character (Unicode code point) is assigned to.
java.lang.Character.valueOf,Returns the enum constant of this class with the specified name.
java.lang.Character.values,"Returns an array containing the constants of this enum class, in the order they are declared."
java.lang.Class.arrayType,Returns aClassfor an array type whose component type  is described by thisClass.
java.lang.Class.asSubclass,Casts thisClassobject to represent a subclass of the class  represented by the specified class object.
java.lang.Class.cast,Casts an object to the class or interface represented  by thisClassobject.
java.lang.Class.componentType,"Returns the component type of thisClass, if it describes  an array type, ornullotherwise."
java.lang.Class.describeConstable,"Returns a nominal descriptor for this instance, if one can be  constructed, or an emptyOptionalif one cannot be."
java.lang.Class.descriptorString,"Returns the descriptor string of the entity (class, interface, array class,  primitive type, orvoid) represented by thisClassobject."
java.lang.Class.desiredAssertionStatus,Returns the assertion status that would be assigned to this  class if it were to be initialized at the time this method is invoked.
java.lang.Class.forName,Returns theClasswith the givenbinary namein the given module.
java.lang.Class.forName,Returns theClassobject associated with the class or  interface with the given string name.
java.lang.Class.forName,"Returns theClassobject associated with the class or  interface with the given string name, using the given class loader."
java.lang.Class.getAnnotatedInterfaces,Returns an array ofAnnotatedTypeobjects that represent the use  of types to specify superinterfaces of the entity represented by thisClassobject.
java.lang.Class.getAnnotatedSuperclass,Returns anAnnotatedTypeobject that represents the use of a  type to specify the superclass of the entity represented by thisClassobject.
java.lang.Class.getAnnotation,"Returns this element's annotation for the specified type if  such an annotation ispresent, else null."
java.lang.Class.getAnnotations,Returns annotations that arepresenton this element.
java.lang.Class.getAnnotationsByType,Returns annotations that areassociatedwith this element.
java.lang.Class.getCanonicalName,Returns the canonical name of the underlying class as  defined byThe Java Language Specification.
java.lang.Class.getClasses,Returns an array containingClassobjects representing all  the public classes and interfaces that are members of the class  represented by thisClassobject.
java.lang.Class.getClassLoader,Returns the class loader for the class.
java.lang.Class.getComponentType,Returns theClassrepresenting the component type of an  array.
java.lang.Class.getConstructor,Returns aConstructorobject that reflects the specified  public constructor of the class represented by thisClassobject.
java.lang.Class.getConstructors,Returns an array containingConstructorobjects reflecting  all the public constructors of the class represented by thisClassobject.
java.lang.Class.getDeclaredAnnotation,"Returns this element's annotation for the specified type if  such an annotation isdirectly present, else null."
java.lang.Class.getDeclaredAnnotations,Returns annotations that aredirectly presenton this element.
java.lang.Class.getDeclaredAnnotationsByType,Returns this element's annotation(s) for the specified type if  such annotations are eitherdirectly presentorindirectly present.
java.lang.Class.getDeclaredClasses,Returns an array ofClassobjects reflecting all the  classes and interfaces declared as members of the class represented by  thisClassobject.
java.lang.Class.getDeclaredConstructor,Returns aConstructorobject that reflects the specified  constructor of the class or interface represented by thisClassobject.
java.lang.Class.getDeclaredConstructors,Returns an array ofConstructorobjects reflecting all the  constructors declared by the class represented by thisClassobject.
java.lang.Class.getDeclaredField,Returns aFieldobject that reflects the specified declared  field of the class or interface represented by thisClassobject.
java.lang.Class.getDeclaredFields,Returns an array ofFieldobjects reflecting all the fields  declared by the class or interface represented by thisClassobject.
java.lang.Class.getDeclaredMethod,Returns aMethodobject that reflects the specified  declared method of the class or interface represented by thisClassobject.
java.lang.Class.getDeclaredMethods,"Returns an array containingMethodobjects reflecting all the  declared methods of the class or interface represented by thisClassobject, including public, protected, default (package)  access, and private methods, but excluding inherited methods."
java.lang.Class.getDeclaringClass,"If the class or interface represented by thisClassobject  is a member of another class, returns theClassobject  representing the class in which it was declared."
java.lang.Class.getEnclosingClass,Returns the immediately enclosing class of the underlying  class.
java.lang.Class.getEnclosingConstructor,"If thisClassobject represents a local or anonymous  class within a constructor, returns aConstructorobject representing  the immediately enclosing constructor of the underlying  class."
java.lang.Class.getEnclosingMethod,"If thisClassobject represents a local or anonymous  class within a method, returns aMethodobject representing the  immediately enclosing method of the underlying class."
java.lang.Class.getEnumConstants,Returns the elements of this enum class or null if this  Class object does not represent an enum class.
java.lang.Class.getField,Returns aFieldobject that reflects the specified public member  field of the class or interface represented by thisClassobject.
java.lang.Class.getFields,Returns an array containingFieldobjects reflecting all  the accessible public fields of the class or interface represented by  thisClassobject.
java.lang.Class.getGenericInterfaces,Returns theTypes representing the interfaces  directly implemented by the class or interface represented by  thisClassobject.
java.lang.Class.getGenericSuperclass,"Returns theTyperepresenting the direct superclass of  the entity (class, interface, primitive type or void) represented by  thisClassobject."
java.lang.Class.getInterfaces,Returns the interfaces directly implemented by the class or interface  represented by thisClassobject.
java.lang.Class.getMethod,Returns aMethodobject that reflects the specified public  member method of the class or interface represented by thisClassobject.
java.lang.Class.getMethods,"Returns an array containingMethodobjects reflecting all the  public methods of the class or interface represented by thisClassobject, including those declared by the class or interface and  those inherited from superclasses and superinterfaces."
java.lang.Class.getModifiers,"Returns the Java language modifiers for this class or interface, encoded  in an integer."
java.lang.Class.getModule,Returns the module that this class or interface is a member of.
java.lang.Class.getName,"Returns the  name of the entity (class, interface, array class,  primitive type, or void) represented by thisClassobject."
java.lang.Class.getNestHost,Returns the nest host of thenestto which the class  or interface represented by thisClassobject belongs.
java.lang.Class.getNestMembers,Returns an array containingClassobjects representing all the  classes and interfaces that are members of the nest to which the class  or interface represented by thisClassobject belongs.
java.lang.Class.getPackage,Gets the package of this class.
java.lang.Class.getPackageName,Returns the fully qualified package name.
java.lang.Class.getPermittedSubclasses,Returns an array containingClassobjects representing the  direct subinterfaces or subclasses permitted to extend or  implement this class or interface if it is sealed.
java.lang.Class.getProtectionDomain,Returns theProtectionDomainof this class.
java.lang.Class.getRecordComponents,"Returns an array ofRecordComponentobjects representing all the  record components of this record class, ornullif this class is  not a record class."
java.lang.Class.getResource,Finds a resource with a given name.
java.lang.Class.getSigners,Gets the signers of this class.
java.lang.Class.getSimpleName,Returns the simple name of the underlying class as given in the  source code.
java.lang.Class.getSuperclass,"Returns theClassrepresenting the direct superclass of the  entity (class, interface, primitive type or void) represented by  thisClass."
java.lang.Class.getTypeName,Return an informative string for the name of this class or interface.
java.lang.Class.getTypeParameters,"Returns an array ofTypeVariableobjects that represent the  type variables declared by the generic declaration represented by thisGenericDeclarationobject, in declaration order."
java.lang.Class.isAnnotation,Returns true if thisClassobject represents an annotation  interface.
java.lang.Class.isAnnotationPresent,"Returns true if an annotation for the specified type  ispresenton this element, else false."
java.lang.Class.isAnonymousClass,Returnstrueif and only if the underlying class  is an anonymous class.
java.lang.Class.isArray,Determines if thisClassobject represents an array class.
java.lang.Class.isAssignableFrom,"Determines if the class or interface represented by thisClassobject is either the same as, or is a superclass or  superinterface of, the class or interface represented by the specifiedClassparameter."
java.lang.Class.isEnum,Returns true if and only if this class was declared as an enum in the  source code.
java.lang.Class.isHidden,Returnstrueif and only if the underlying class is a hidden class.
java.lang.Class.isInstance,Determines if the specifiedObjectis assignment-compatible  with the object represented by thisClass.
java.lang.Class.isInterface,Determines if thisClassobject represents an  interface type.
java.lang.Class.isLocalClass,Returnstrueif and only if the underlying class  is a local class.
java.lang.Class.isMemberClass,Returnstrueif and only if the underlying class  is a member class.
java.lang.Class.isNestmateOf,Determines if the givenClassis a nestmate of the  class or interface represented by thisClassobject.
java.lang.Class.isPrimitive,Determines if the specifiedClassobject represents a  primitive type.
java.lang.Class.isRecord,Returnstrueif and only if this class is a record class.
java.lang.Class.isSealed,Returnstrueif and only if thisClassobject represents  a sealed class or interface.
java.lang.Class.isSynthetic,Returnstrueif and only if this class has the synthetic modifier  bit set.
java.lang.Class.newInstance,"Deprecated.This method propagates any exception thrown by the  nullary constructor, including a checked exception."
java.lang.Class.toGenericString,"Returns a string describing thisClass, including  information about modifiers and type parameters."
java.lang.Class.toString,Converts the object to a string.
java.lang.ClassLoader.clearAssertionStatus,Sets the default assertion status for this class loader tofalseand discards any package defaults or class assertion  status settings associated with the class loader.
java.lang.ClassLoader.defineClass,"Deprecated.Replaced bydefineClass(String, byte[], int, int)"
java.lang.ClassLoader.defineClass,Converts an array of bytes into an instance of classClass.
java.lang.ClassLoader.defineClass,"Converts an array of bytes into an instance of classClass,  with a givenProtectionDomain."
java.lang.ClassLoader.defineClass,"Converts aByteBufferinto an instance  of classClass, with the givenProtectionDomain."
java.lang.ClassLoader.definePackage,Defines a package bynamein thisClassLoader.
java.lang.ClassLoader.findClass,Finds the class with the specifiedbinary name.
java.lang.ClassLoader.findClass,Finds the class with the givenbinary namein a module defined to this class loader.
java.lang.ClassLoader.findLibrary,Returns the absolute path name of a native library.
java.lang.ClassLoader.findLoadedClass,Returns the class with the givenbinary nameif this  loader has been recorded by the Java virtual machine as an initiating  loader of a class with thatbinary name.
java.lang.ClassLoader.findResource,Finds the resource with the given name.
java.lang.ClassLoader.findResource,Returns a URL to a resource in a module defined to this class loader.
java.lang.ClassLoader.findResources,Returns an enumeration ofURLobjects  representing all the resources with the given name.
java.lang.ClassLoader.findSystemClass,"Finds a class with the specifiedbinary name,  loading it if necessary."
java.lang.ClassLoader.getClassLoadingLock,Returns the lock object for class loading operations.
java.lang.ClassLoader.getDefinedPackage,Returns aPackageof the givennamethat  has been defined by this class loader.
java.lang.ClassLoader.getDefinedPackages,Returns all of thePackages that have been defined by  this class loader.
java.lang.ClassLoader.getName,Returns the name of this class loader ornullif  this class loader is not named.
java.lang.ClassLoader.getPackage,"Deprecated.If multiple class loaders delegate to each other and define classes  with the same package name, and one such loader relies on the lookup  behavior ofgetPackageto return aPackagefrom  a parent loader, then the properties exposed by thePackagemay not be as expected in the rest of the program."
java.lang.ClassLoader.getPackages,Returns all of thePackages that have been defined by  this class loader and its ancestors.
java.lang.ClassLoader.getParent,Returns the parent class loader for delegation.
java.lang.ClassLoader.getPlatformClassLoader,Returns the platform class loader.
java.lang.ClassLoader.getResourceAsStream,Returns an input stream for reading the specified resource.
java.lang.ClassLoader.getResources,Finds all the resources with the given name.
java.lang.ClassLoader.getSystemClassLoader,Returns the system class loader.
java.lang.ClassLoader.getSystemResource,Find a resource of the specified name from the search path used to load  classes.
java.lang.ClassLoader.getSystemResourceAsStream,"Open for reading, a resource of the specified name from the search path  used to load classes."
java.lang.ClassLoader.getSystemResources,Finds all resources of the specified name from the search path used to  load classes.
java.lang.ClassLoader.getUnnamedModule,Returns the unnamedModulefor this class loader.
java.lang.ClassLoader.isRegisteredAsParallelCapable,"Returnstrueif this class loader is registered asparallel capable, otherwisefalse."
java.lang.ClassLoader.loadClass,Loads the class with the specifiedbinary name.
java.lang.ClassLoader.registerAsParallelCapable,Registers the caller asparallel capable.
java.lang.ClassLoader.resolveClass,Links the specified class.
java.lang.ClassLoader.resources,Returns a stream whose elements are the URLs of all the resources with  the given name.
java.lang.ClassLoader.setClassAssertionStatus,Sets the desired assertion status for the named top-level class in this  class loader and any nested classes contained therein.
java.lang.ClassLoader.setDefaultAssertionStatus,Sets the default assertion status for this class loader.
java.lang.ClassLoader.setPackageAssertionStatus,Sets the package default assertion status for the named package.
java.lang.ClassLoader.setSigners,Sets the signers of a class.
java.lang.ClassNotFoundException.getException,Returns the exception that was raised if an error occurred while  attempting to load the class.
java.lang.ClassValue.computeValue,Computes the given class's derived value for thisClassValue.
java.lang.ClassValue.get,Returns the value for the given class.
java.lang.ClassValue.remove,Removes the associated value for the given class.
java.lang.Double.byteValue,Returns the value of thisDoubleas abyteafter a narrowing primitive conversion.
java.lang.Double.compare,Compares the two specifieddoublevalues.
java.lang.Double.compareTo,Compares twoDoubleobjects numerically.
java.lang.Double.describeConstable,"Returns anOptionalcontaining the nominal descriptor for this  instance, which is the instance itself."
java.lang.Double.doubleToLongBits,"Returns a representation of the specified floating-point value  according to the IEEE 754 floating-point ""double  format"" bit layout."
java.lang.Double.doubleToRawLongBits,"Returns a representation of the specified floating-point value  according to the IEEE 754 floating-point ""double  format"" bit layout, preserving Not-a-Number (NaN) values."
java.lang.Double.doubleValue,Returns thedoublevalue of thisDoubleobject.
java.lang.Double.floatValue,Returns the value of thisDoubleas afloatafter a narrowing primitive conversion.
java.lang.Double.hashCode,Returns a hash code for thisDoubleobject.
java.lang.Double.hashCode,Returns a hash code for adoublevalue; compatible withDouble.hashCode().
java.lang.Double.intValue,Returns the value of thisDoubleas anintafter a narrowing primitive conversion.
java.lang.Double.isFinite,Returnstrueif the argument is a finite floating-point  value; returnsfalseotherwise (for NaN and infinity  arguments).
java.lang.Double.isInfinite,"Returnstrueif thisDoublevalue is  infinitely large in magnitude,falseotherwise."
java.lang.Double.isInfinite,"Returnstrueif the specified number is infinitely  large in magnitude,falseotherwise."
java.lang.Double.isNaN,"Returnstrueif thisDoublevalue is  a Not-a-Number (NaN),falseotherwise."
java.lang.Double.isNaN,"Returnstrueif the specified number is a  Not-a-Number (NaN) value,falseotherwise."
java.lang.Double.longBitsToDouble,Returns thedoublevalue corresponding to a given  bit representation.
java.lang.Double.longValue,Returns the value of thisDoubleas alongafter a narrowing primitive conversion.
java.lang.Double.max,Returns the greater of twodoublevalues  as if by callingMath.max.
java.lang.Double.min,Returns the smaller of twodoublevalues  as if by callingMath.min.
java.lang.Double.parseDouble,"Returns a newdoubleinitialized to the value  represented by the specifiedString, as performed  by thevalueOfmethod of classDouble."
java.lang.Double.resolveConstantDesc,"Resolves this instance as aConstantDesc, the result of which is  the instance itself."
java.lang.Double.shortValue,Returns the value of thisDoubleas ashortafter a narrowing primitive conversion.
java.lang.Double.sum,Adds twodoublevalues together as per the + operator.
java.lang.Double.toHexString,Returns a hexadecimal string representation of thedoubleargument.
java.lang.Double.toString,Returns a string representation of thisDoubleobject.
java.lang.Double.toString,Returns a string representation of thedoubleargument.
java.lang.Double.valueOf,Returns aDoubleinstance representing the specifieddoublevalue.
java.lang.Double.valueOf,Returns aDoubleobject holding thedoublevalue represented by the argument strings.
java.lang.Enum.of,Returns a nominal descriptor for the specifiedenumclass and name
java.lang.Enum.clone,Throws CloneNotSupportedException.
java.lang.Enum.compareTo,Compares this enum with the specified object for order.
java.lang.Enum.describeConstable,"Returns an enum descriptorEnumDescfor this instance, if one can be  constructed, or an emptyOptionalif one cannot be."
java.lang.Enum.equals,Returns true if the specified object is equal to this  enum constant.
java.lang.Enum.finalize,enum classes cannot have finalize methods.
java.lang.Enum.getDeclaringClass,Returns the Class object corresponding to this enum constant's  enum type.
java.lang.Enum.hashCode,Returns a hash code for this enum constant.
java.lang.Enum.name,"Returns the name of this enum constant, exactly as declared in its  enum declaration."
java.lang.Enum.ordinal,"Returns the ordinal of this enumeration constant (its position  in its enum declaration, where the initial constant is assigned  an ordinal of zero)."
java.lang.Enum.toString,"Returns the name of this enum constant, as contained in the  declaration."
java.lang.Enum.valueOf,Returns the enum constant of the specified enum class with the  specified name.
java.lang.EnumConstantNotPresentException.constantName,Returns the name of the missing enum constant.
java.lang.EnumConstantNotPresentException.enumType,Returns the type of the missing enum constant.
java.lang.ExceptionInInitializerError.getException,Returns the exception that occurred during a static initialization that  caused this error to be created.
java.lang.Float.byteValue,Returns the value of thisFloatas abyteafter  a narrowing primitive conversion.
java.lang.Float.compare,Compares the two specifiedfloatvalues.
java.lang.Float.compareTo,Compares twoFloatobjects numerically.
java.lang.Float.doubleValue,Returns the value of thisFloatas adoubleafter a widening primitive conversion.
java.lang.Float.floatToIntBits,"Returns a representation of the specified floating-point value  according to the IEEE 754 floating-point ""single format"" bit  layout."
java.lang.Float.floatToRawIntBits,"Returns a representation of the specified floating-point value  according to the IEEE 754 floating-point ""single format"" bit  layout, preserving Not-a-Number (NaN) values."
java.lang.Float.floatValue,Returns thefloatvalue of thisFloatobject.
java.lang.Float.hashCode,Returns a hash code for thisFloatobject.
java.lang.Float.hashCode,Returns a hash code for afloatvalue; compatible withFloat.hashCode().
java.lang.Float.intBitsToFloat,Returns thefloatvalue corresponding to a given  bit representation.
java.lang.Float.intValue,Returns the value of thisFloatas anintafter  a narrowing primitive conversion.
java.lang.Float.isInfinite,"Returnstrueif thisFloatvalue is  infinitely large in magnitude,falseotherwise."
java.lang.Float.isNaN,"Returnstrueif thisFloatvalue is a  Not-a-Number (NaN),falseotherwise."
java.lang.Float.longValue,Returns value of thisFloatas alongafter a  narrowing primitive conversion.
java.lang.Float.max,Returns the greater of twofloatvalues  as if by callingMath.max.
java.lang.Float.min,Returns the smaller of twofloatvalues  as if by callingMath.min.
java.lang.Float.parseFloat,"Returns a newfloatinitialized to the value  represented by the specifiedString, as performed  by thevalueOfmethod of classFloat."
java.lang.Float.shortValue,Returns the value of thisFloatas ashortafter a narrowing primitive conversion.
java.lang.Float.sum,Adds twofloatvalues together as per the + operator.
java.lang.Float.toHexString,Returns a hexadecimal string representation of thefloatargument.
java.lang.Float.toString,Returns a string representation of thisFloatobject.
java.lang.Float.toString,Returns a string representation of thefloatargument.
java.lang.Float.valueOf,Returns aFloatinstance representing the specifiedfloatvalue.
java.lang.Float.valueOf,Returns aFloatobject holding thefloatvalue represented by the argument strings.
java.lang.InheritableThreadLocal.childValue,Computes the child's initial value for this inheritable thread-local  variable as a function of the parent's value at the time the child  thread is created.
java.lang.Integer.bitCount,Returns the number of one-bits in the two's complement binary  representation of the specifiedintvalue.
java.lang.Integer.byteValue,Returns the value of thisIntegeras abyteafter a narrowing primitive conversion.
java.lang.Integer.compare,Compares twointvalues numerically.
java.lang.Integer.compareTo,Compares twoIntegerobjects numerically.
java.lang.Integer.compareUnsigned,Compares twointvalues numerically treating the values  as unsigned.
java.lang.Integer.decode,Decodes aStringinto anInteger.
java.lang.Integer.divideUnsigned,Returns the unsigned quotient of dividing the first argument by  the second where each argument and the result is interpreted as  an unsigned value.
java.lang.Integer.doubleValue,Returns the value of thisIntegeras adoubleafter a widening primitive conversion.
java.lang.Integer.floatValue,Returns the value of thisIntegeras afloatafter a widening primitive conversion.
java.lang.Integer.getInteger,Determines the integer value of the system property with the  specified name.
java.lang.Integer.getInteger,Returns the integer value of the system property with the  specified name.
java.lang.Integer.hashCode,Returns a hash code for thisInteger.
java.lang.Integer.hashCode,Returns a hash code for anintvalue; compatible withInteger.hashCode().
java.lang.Integer.highestOneBit,"Returns anintvalue with at most a single one-bit, in the  position of the highest-order (""leftmost"") one-bit in the specifiedintvalue."
java.lang.Integer.intValue,Returns the value of thisIntegeras anint.
java.lang.Integer.longValue,Returns the value of thisIntegeras alongafter a widening primitive conversion.
java.lang.Integer.lowestOneBit,"Returns anintvalue with at most a single one-bit, in the  position of the lowest-order (""rightmost"") one-bit in the specifiedintvalue."
java.lang.Integer.max,Returns the greater of twointvalues  as if by callingMath.max.
java.lang.Integer.min,Returns the smaller of twointvalues  as if by callingMath.min.
java.lang.Integer.numberOfLeadingZeros,"Returns the number of zero bits preceding the highest-order  (""leftmost"") one-bit in the two's complement binary representation  of the specifiedintvalue."
java.lang.Integer.numberOfTrailingZeros,"Returns the number of zero bits following the lowest-order (""rightmost"")  one-bit in the two's complement binary representation of the specifiedintvalue."
java.lang.Integer.parseInt,"Parses theCharSequenceargument as a signedintin the  specifiedradix, beginning at the specifiedbeginIndexand extending toendIndex - 1."
java.lang.Integer.parseInt,Parses the string argument as a signed decimal integer.
java.lang.Integer.parseInt,Parses the string argument as a signed integer in the radix  specified by the second argument.
java.lang.Integer.parseUnsignedInt,"Parses theCharSequenceargument as an unsignedintin  the specifiedradix, beginning at the specifiedbeginIndexand extending toendIndex - 1."
java.lang.Integer.parseUnsignedInt,Parses the string argument as an unsigned decimal integer.
java.lang.Integer.parseUnsignedInt,Parses the string argument as an unsigned integer in the radix  specified by the second argument.
java.lang.Integer.remainderUnsigned,Returns the unsigned remainder from dividing the first argument  by the second where each argument and the result is interpreted  as an unsigned value.
java.lang.Integer.reverse,Returns the value obtained by reversing the order of the bits in the  two's complement binary representation of the specifiedintvalue.
java.lang.Integer.reverseBytes,Returns the value obtained by reversing the order of the bytes in the  two's complement representation of the specifiedintvalue.
java.lang.Integer.rotateLeft,Returns the value obtained by rotating the two's complement binary  representation of the specifiedintvalue left by the  specified number of bits.
java.lang.Integer.rotateRight,Returns the value obtained by rotating the two's complement binary  representation of the specifiedintvalue right by the  specified number of bits.
java.lang.Integer.shortValue,Returns the value of thisIntegeras ashortafter a narrowing primitive conversion.
java.lang.Integer.signum,Returns the signum function of the specifiedintvalue.
java.lang.Integer.sum,Adds two integers together as per the + operator.
java.lang.Integer.toBinaryString,Returns a string representation of the integer argument as an  unsigned integer in base 2.
java.lang.Integer.toHexString,Returns a string representation of the integer argument as an  unsigned integer in base 16.
java.lang.Integer.toOctalString,Returns a string representation of the integer argument as an  unsigned integer in base 8.
java.lang.Integer.toString,Returns aStringobject representing thisInteger's value.
java.lang.Integer.toString,Returns aStringobject representing the  specified integer.
java.lang.Integer.toString,Returns a string representation of the first argument in the  radix specified by the second argument.
java.lang.Integer.toUnsignedString,Returns a string representation of the argument as an unsigned  decimal value.
java.lang.Integer.toUnsignedString,Returns a string representation of the first argument as an  unsigned integer value in the radix specified by the second  argument.
java.lang.Integer.valueOf,Returns anIntegerinstance representing the specifiedintvalue.
java.lang.Integer.valueOf,Returns anIntegerobject holding the  value of the specifiedString.
java.lang.Integer.valueOf,Returns anIntegerobject holding the value  extracted from the specifiedStringwhen parsed  with the radix given by the second argument.
java.lang.Long.bitCount,Returns the number of one-bits in the two's complement binary  representation of the specifiedlongvalue.
java.lang.Long.byteValue,Returns the value of thisLongas abyteafter  a narrowing primitive conversion.
java.lang.Long.compare,Compares twolongvalues numerically.
java.lang.Long.compareTo,Compares twoLongobjects numerically.
java.lang.Long.compareUnsigned,Compares twolongvalues numerically treating the values  as unsigned.
java.lang.Long.decode,Decodes aStringinto aLong.
java.lang.Long.doubleValue,Returns the value of thisLongas adoubleafter a widening primitive conversion.
java.lang.Long.floatValue,Returns the value of thisLongas afloatafter  a widening primitive conversion.
java.lang.Long.getLong,Determines thelongvalue of the system property  with the specified name.
java.lang.Long.getLong,Returns thelongvalue of the system property with  the specified name.
java.lang.Long.hashCode,Returns a hash code for thisLong.
java.lang.Long.hashCode,Returns a hash code for alongvalue; compatible withLong.hashCode().
java.lang.Long.highestOneBit,"Returns alongvalue with at most a single one-bit, in the  position of the highest-order (""leftmost"") one-bit in the specifiedlongvalue."
java.lang.Long.intValue,Returns the value of thisLongas anintafter  a narrowing primitive conversion.
java.lang.Long.longValue,Returns the value of thisLongas alongvalue.
java.lang.Long.lowestOneBit,"Returns alongvalue with at most a single one-bit, in the  position of the lowest-order (""rightmost"") one-bit in the specifiedlongvalue."
java.lang.Long.max,Returns the greater of twolongvalues  as if by callingMath.max.
java.lang.Long.min,Returns the smaller of twolongvalues  as if by callingMath.min.
java.lang.Long.numberOfLeadingZeros,"Returns the number of zero bits preceding the highest-order  (""leftmost"") one-bit in the two's complement binary representation  of the specifiedlongvalue."
java.lang.Long.numberOfTrailingZeros,"Returns the number of zero bits following the lowest-order (""rightmost"")  one-bit in the two's complement binary representation of the specifiedlongvalue."
java.lang.Long.parseLong,"Parses theCharSequenceargument as a signedlongin  the specifiedradix, beginning at the specifiedbeginIndexand extending toendIndex - 1."
java.lang.Long.parseLong,Parses the string argument as a signed decimallong.
java.lang.Long.parseLong,Parses the string argument as a signedlongin the  radix specified by the second argument.
java.lang.Long.parseUnsignedLong,"Parses theCharSequenceargument as an unsignedlongin  the specifiedradix, beginning at the specifiedbeginIndexand extending toendIndex - 1."
java.lang.Long.parseUnsignedLong,Parses the string argument as an unsigned decimallong.
java.lang.Long.parseUnsignedLong,Parses the string argument as an unsignedlongin the  radix specified by the second argument.
java.lang.Long.reverse,Returns the value obtained by reversing the order of the bits in the  two's complement binary representation of the specifiedlongvalue.
java.lang.Long.reverseBytes,Returns the value obtained by reversing the order of the bytes in the  two's complement representation of the specifiedlongvalue.
java.lang.Long.rotateLeft,Returns the value obtained by rotating the two's complement binary  representation of the specifiedlongvalue left by the  specified number of bits.
java.lang.Long.rotateRight,Returns the value obtained by rotating the two's complement binary  representation of the specifiedlongvalue right by the  specified number of bits.
java.lang.Long.shortValue,Returns the value of thisLongas ashortafter  a narrowing primitive conversion.
java.lang.Long.signum,Returns the signum function of the specifiedlongvalue.
java.lang.Long.sum,Adds twolongvalues together as per the + operator.
java.lang.Long.toBinaryString,Returns a string representation of thelongargument as an unsigned integer in base 2.
java.lang.Long.toHexString,Returns a string representation of thelongargument as an unsigned integer in base 16.
java.lang.Long.toOctalString,Returns a string representation of thelongargument as an unsigned integer in base 8.
java.lang.Long.toString,Returns aStringobject representing thisLong's value.
java.lang.Long.toString,Returns aStringobject representing the specifiedlong.
java.lang.Long.valueOf,Returns aLonginstance representing the specifiedlongvalue.
java.lang.Long.valueOf,Returns aLongobject holding the value  of the specifiedString.
java.lang.Long.valueOf,Returns aLongobject holding the value  extracted from the specifiedStringwhen parsed  with the radix given by the second argument.
java.lang.Math.abs,Returns the absolute value of adoublevalue.
java.lang.Math.abs,Returns the absolute value of afloatvalue.
java.lang.Math.abs,Returns the absolute value of anintvalue.
java.lang.Math.abs,Returns the absolute value of alongvalue.
java.lang.Math.absExact,"Returns the mathematical absolute value of anintvalue  if it is exactly representable as anint, throwingArithmeticExceptionif the result overflows the  positiveintrange."
java.lang.Math.absExact,"Returns the mathematical absolute value of anlongvalue  if it is exactly representable as anlong, throwingArithmeticExceptionif the result overflows the  positivelongrange."
java.lang.Math.acos,Returns the arc cosine of a value; the returned angle is in the  range 0.0 throughpi.
java.lang.Math.addExact,"Returns the sum of its arguments,  throwing an exception if the result overflows anint."
java.lang.Math.addExact,"Returns the sum of its arguments,  throwing an exception if the result overflows along."
java.lang.Math.asin,Returns the arc sine of a value; the returned angle is in the  range -pi/2 throughpi/2.
java.lang.Math.atan,Returns the arc tangent of a value; the returned angle is in the  range -pi/2 throughpi/2.
java.lang.Math.atan2,"Returns the anglethetafrom the conversion of rectangular  coordinates (x,y) to polar  coordinates (r,theta)."
java.lang.Math.cbrt,Returns the cube root of adoublevalue.
java.lang.Math.ceil,Returns the smallest (closest to negative infinity)doublevalue that is greater than or equal to the  argument and is equal to a mathematical integer.
java.lang.Math.copySign,Returns the first floating-point argument with the sign of the  second floating-point argument.
java.lang.Math.cos,Returns the trigonometric cosine of an angle.
java.lang.Math.cosh,Returns the hyperbolic cosine of adoublevalue.
java.lang.Math.decrementExact,"Returns the argument decremented by one, throwing an exception if the  result overflows anint."
java.lang.Math.decrementExact,"Returns the argument decremented by one, throwing an exception if the  result overflows along."
java.lang.Math.exp,Returns Euler's numbereraised to the power of adoublevalue.
java.lang.Math.expm1,Returnsex-1.
java.lang.Math.floor,Returns the largest (closest to positive infinity)doublevalue that is less than or equal to the  argument and is equal to a mathematical integer.
java.lang.Math.floorDiv,Returns the largest (closest to positive infinity)intvalue that is less than or equal to the algebraic quotient.
java.lang.Math.floorDiv,Returns the largest (closest to positive infinity)longvalue that is less than or equal to the algebraic quotient.
java.lang.Math.floorMod,Returns the floor modulus of theintarguments.
java.lang.Math.floorMod,Returns the floor modulus of thelongandintarguments.
java.lang.Math.floorMod,Returns the floor modulus of thelongarguments.
java.lang.Math.fma,"Returns the fused multiply add of the three arguments; that is,  returns the exact product of the first two arguments summed  with the third argument and then rounded once to the nearestdouble."
java.lang.Math.fma,"Returns the fused multiply add of the three arguments; that is,  returns the exact product of the first two arguments summed  with the third argument and then rounded once to the nearestfloat."
java.lang.Math.getExponent,Returns the unbiased exponent used in the representation of adouble.
java.lang.Math.getExponent,Returns the unbiased exponent used in the representation of afloat.
java.lang.Math.hypot,Returns sqrt(x2+y2)  without intermediate overflow or underflow.
java.lang.Math.IEEEremainder,Computes the remainder operation on two arguments as prescribed  by the IEEE 754 standard.
java.lang.Math.incrementExact,"Returns the argument incremented by one, throwing an exception if the  result overflows anint."
java.lang.Math.incrementExact,"Returns the argument incremented by one, throwing an exception if the  result overflows along."
java.lang.Math.log,Returns the natural logarithm (basee) of adoublevalue.
java.lang.Math.log10,Returns the base 10 logarithm of adoublevalue.
java.lang.Math.log1p,Returns the natural logarithm of the sum of the argument and 1.
java.lang.Math.max,Returns the greater of twodoublevalues.
java.lang.Math.max,Returns the greater of twofloatvalues.
java.lang.Math.max,Returns the greater of twointvalues.
java.lang.Math.max,Returns the greater of twolongvalues.
java.lang.Math.min,Returns the smaller of twodoublevalues.
java.lang.Math.min,Returns the smaller of twofloatvalues.
java.lang.Math.min,Returns the smaller of twointvalues.
java.lang.Math.min,Returns the smaller of twolongvalues.
java.lang.Math.multiplyExact,"Returns the product of the arguments,  throwing an exception if the result overflows anint."
java.lang.Math.multiplyExact,"Returns the product of the arguments, throwing an exception if the result  overflows along."
java.lang.Math.multiplyExact,"Returns the product of the arguments,  throwing an exception if the result overflows along."
java.lang.Math.multiplyFull,Returns the exact mathematical product of the arguments.
java.lang.Math.multiplyHigh,Returns as alongthe most significant 64 bits of the 128-bit  product of two 64-bit factors.
java.lang.Math.negateExact,"Returns the negation of the argument, throwing an exception if the  result overflows anint."
java.lang.Math.negateExact,"Returns the negation of the argument, throwing an exception if the  result overflows along."
java.lang.Math.nextAfter,Returns the floating-point number adjacent to the first  argument in the direction of the second argument.
java.lang.Math.nextDown,Returns the floating-point value adjacent todin  the direction of negative infinity.
java.lang.Math.nextDown,Returns the floating-point value adjacent tofin  the direction of negative infinity.
java.lang.Math.nextUp,Returns the floating-point value adjacent todin  the direction of positive infinity.
java.lang.Math.nextUp,Returns the floating-point value adjacent tofin  the direction of positive infinity.
java.lang.Math.pow,Returns the value of the first argument raised to the power of the  second argument.
java.lang.Math.random,"Returns adoublevalue with a positive sign, greater  than or equal to0.0and less than1.0."
java.lang.Math.rint,Returns thedoublevalue that is closest in value  to the argument and is equal to a mathematical integer.
java.lang.Math.round,"Returns the closestlongto the argument, with ties  rounding to positive infinity."
java.lang.Math.round,"Returns the closestintto the argument, with ties  rounding to positive infinity."
java.lang.Math.scalb,Returnsd× 2scaleFactorrounded as if performed by a single correctly rounded  floating-point multiply.
java.lang.Math.scalb,Returnsf× 2scaleFactorrounded as if performed by a single correctly rounded  floating-point multiply.
java.lang.Math.signum,"Returns the signum function of the argument; zero if the argument  is zero, 1.0 if the argument is greater than zero, -1.0 if the  argument is less than zero."
java.lang.Math.signum,"Returns the signum function of the argument; zero if the argument  is zero, 1.0f if the argument is greater than zero, -1.0f if the  argument is less than zero."
java.lang.Math.sin,Returns the trigonometric sine of an angle.
java.lang.Math.sinh,Returns the hyperbolic sine of adoublevalue.
java.lang.Math.sqrt,Returns the correctly rounded positive square root of adoublevalue.
java.lang.Math.subtractExact,"Returns the difference of the arguments,  throwing an exception if the result overflows anint."
java.lang.Math.subtractExact,"Returns the difference of the arguments,  throwing an exception if the result overflows along."
java.lang.Math.tan,Returns the trigonometric tangent of an angle.
java.lang.Math.tanh,Returns the hyperbolic tangent of adoublevalue.
java.lang.Math.toDegrees,Converts an angle measured in radians to an approximately  equivalent angle measured in degrees.
java.lang.Math.toIntExact,"Returns the value of thelongargument,  throwing an exception if the value overflows anint."
java.lang.Math.toRadians,Converts an angle measured in degrees to an approximately  equivalent angle measured in radians.
java.lang.Math.ulp,Returns the size of an ulp of the argument.
java.lang.Module.addExports,If the caller's module is this module then update this module to export  the given package to the given module.
java.lang.Module.addOpens,If this module hasopeneda package to at least the caller  module then update this module to open the package to the given module.
java.lang.Module.addReads,If the caller's module is this module then update this module to read  the given module.
java.lang.Module.addUses,If the caller's module is this module then update this module to add a  service dependence on the given service type.
java.lang.Module.canRead,Indicates if this module reads the given module.
java.lang.Module.canUse,Indicates if this module has a service dependence on the given service  type.
java.lang.Module.getClassLoader,Returns theClassLoaderfor this module.
java.lang.Module.getDescriptor,Returns the module descriptor for this module ornullif this  module is an unnamed module.
java.lang.Module.getLayer,Returns the module layer that contains this module ornullif  this module is not in a module layer.
java.lang.Module.getName,Returns the module name ornullif this module is an unnamed  module.
java.lang.Module.getPackages,Returns the set of package names for the packages in this module.
java.lang.Module.getResourceAsStream,Returns an input stream for reading a resource in this module.
java.lang.Module.isExported,Returnstrueif this module exports the given package  unconditionally.
java.lang.Module.isExported,Returnstrueif this module exports the given package to at  least the given module.
java.lang.Module.isNamed,Returnstrueif this module is a named module.
java.lang.Module.isOpen,Returnstrueif this module hasopeneda package  unconditionally.
java.lang.Module.isOpen,Returnstrueif this module hasopeneda package to at  least the given module.
java.lang.Module.toString,Returns the string representation of this module.
java.lang.ModuleLayer.addExports,Updates modulesourcein the layer to export a package to  moduletarget.
java.lang.ModuleLayer.addOpens,Updates modulesourcein the layer to open a package to  moduletarget.
java.lang.ModuleLayer.addReads,Updates modulesourcein the layer to read moduletarget.
java.lang.ModuleLayer.layer,Returns the layer that this object controls.
java.lang.ModuleLayer.boot,Returns the boot layer.
java.lang.ModuleLayer.configuration,Returns the configuration for this layer.
java.lang.ModuleLayer.defineModules,"Creates a new module layer, with this layer as its parent, by defining the  modules in the givenConfigurationto the Java virtual machine."
java.lang.ModuleLayer.defineModules,Creates a new module layer by defining the modules in the givenConfigurationto the Java virtual machine.
java.lang.ModuleLayer.empty,Returns theemptylayer.
java.lang.ModuleLayer.findLoader,Returns theClassLoaderfor the module with the given name.
java.lang.ModuleLayer.findModule,"Returns the module with the given name in this layer, or if not in this  layer, theparentlayers."
java.lang.ModuleLayer.modules,Returns an unmodifiable set of the modules in this layer.
java.lang.ModuleLayer.parents,"Returns an unmodifiable list of this layer's parents, in search  order."
java.lang.ModuleLayer.toString,Returns a string describing this module layer.
java.lang.NullPointerException.getMessage,Returns the detail message string of this throwable.
java.lang.Number.byteValue,Returns the value of the specified number as abyte.
java.lang.Number.doubleValue,Returns the value of the specified number as adouble.
java.lang.Number.floatValue,Returns the value of the specified number as afloat.
java.lang.Number.intValue,Returns the value of the specified number as anint.
java.lang.Number.longValue,Returns the value of the specified number as along.
java.lang.Number.shortValue,Returns the value of the specified number as ashort.
java.lang.Object.clone,Creates and returns a copy of this object.
java.lang.Object.equals,"Indicates whether some other object is ""equal to"" this one."
java.lang.Object.finalize,Deprecated.The finalization mechanism is inherently problematic.
java.lang.Object.getClass,Returns the runtime class of thisObject.
java.lang.Object.hashCode,Returns a hash code value for the object.
java.lang.Object.notify,Wakes up a single thread that is waiting on this object's  monitor.
java.lang.Object.notifyAll,Wakes up all threads that are waiting on this object's monitor.
java.lang.Object.toString,Returns a string representation of the object.
java.lang.Object.wait,"Causes the current thread to wait until it is awakened, typically  by beingnotifiedorinterrupted."
java.lang.Object.wait,"Causes the current thread to wait until it is awakened, typically  by beingnotifiedorinterrupted, or until a  certain amount of real time has elapsed."
java.lang.Package.getImplementationTitle,Return the title of this package.
java.lang.Package.getImplementationVendor,"Returns the vendor that implemented this package,nullis returned if it is not known."
java.lang.Package.getImplementationVersion,Return the version of this implementation.
java.lang.Package.getName,Return the name of this package.
java.lang.Package.getPackages,Returns all of thePackages defined by the caller's class loader  and its ancestors.
java.lang.Package.getSpecificationTitle,Return the title of the specification that this package implements.
java.lang.Package.getSpecificationVendor,"Return the name of the organization, vendor,  or company that owns and maintains the specification  of the classes that implement this package."
java.lang.Package.getSpecificationVersion,Returns the version number of the specification  that this package implements.
java.lang.Package.hashCode,Return the hash code computed from the package name.
java.lang.Package.isCompatibleWith,Compare this package's specification version with a  desired version.
java.lang.Package.isSealed,Returns true if this package is sealed.
java.lang.Package.isSealed,Returns true if this package is sealed with respect to the specified  code sourceurl.
java.lang.Package.toString,Returns the string representation of this Package.
java.lang.Process.children,Returns a snapshot of the direct children of the process.
java.lang.Process.descendants,Returns a snapshot of the descendants of the process.
java.lang.Process.destroy,Kills the process.
java.lang.Process.destroyForcibly,Kills the process forcibly.
java.lang.Process.errorReader,Returns aBufferedReaderconnected to the standard  error of the process.
java.lang.Process.errorReader,Returns aBufferedReaderconnected to the  standard error of this process using a Charset.
java.lang.Process.exitValue,Returns the exit value for the process.
java.lang.Process.getErrorStream,Returns the input stream connected to the error output of the  process.
java.lang.Process.getInputStream,Returns the input stream connected to the normal output of the  process.
java.lang.Process.getOutputStream,Returns the output stream connected to the normal input of the  process.
java.lang.Process.info,Returns a snapshot of information about the process.
java.lang.Process.inputReader,Returns aBufferedReaderconnected to the standard  output of the process.
java.lang.Process.inputReader,Returns aBufferedReaderconnected to the  standard output of this process using a Charset.
java.lang.Process.isAlive,Tests whether the process represented by thisProcessis  alive.
java.lang.Process.onExit,Returns aCompletableFuture<Process>for the termination of the Process.
java.lang.Process.outputWriter,Returns aBufferedWriterconnected to the normal input of the process  using the native encoding.
java.lang.Process.outputWriter,Returns aBufferedWriterconnected to the normal input of the process  using a Charset.
java.lang.Process.pid,Returns the native process ID of the process.
java.lang.Process.supportsNormalTermination,"Returnstrueif the implementation ofdestroy()is to  normally terminate the process,  Returnsfalseif the implementation ofdestroyforcibly and immediately terminates the process."
java.lang.Process.toHandle,Returns a ProcessHandle for the Process.
java.lang.Process.waitFor,"Causes the current thread to wait, if necessary, until the  process represented by thisProcessobject has  terminated."
java.lang.Process.waitFor,"Causes the current thread to wait, if necessary, until the  process represented by thisProcessobject has  terminated, or the specified waiting time elapses."
java.lang.ProcessBuilder.command,Returns this process builder's operating system program and  arguments.
java.lang.ProcessBuilder.command,Sets this process builder's operating system program and  arguments.
java.lang.ProcessBuilder.directory,Returns this process builder's working directory.
java.lang.ProcessBuilder.directory,Sets this process builder's working directory.
java.lang.ProcessBuilder.environment,Returns a string map view of this process builder's environment.
java.lang.ProcessBuilder.inheritIO,Sets the source and destination for subprocess standard I/O  to be the same as those of the current Java process.
java.lang.ProcessBuilder.redirectError,Returns this process builder's standard error destination.
java.lang.ProcessBuilder.redirectError,Sets this process builder's standard error destination to a file.
java.lang.ProcessBuilder.redirectError,Sets this process builder's standard error destination.
java.lang.ProcessBuilder.redirectErrorStream,Tells whether this process builder merges standard error and  standard output.
java.lang.ProcessBuilder.redirectErrorStream,Sets this process builder'sredirectErrorStreamproperty.
java.lang.ProcessBuilder.redirectInput,Returns this process builder's standard input source.
java.lang.ProcessBuilder.redirectInput,Sets this process builder's standard input source to a file.
java.lang.ProcessBuilder.redirectInput,Sets this process builder's standard input source.
java.lang.ProcessBuilder.redirectOutput,Returns this process builder's standard output destination.
java.lang.ProcessBuilder.redirectOutput,Sets this process builder's standard output destination to a file.
java.lang.ProcessBuilder.redirectOutput,Sets this process builder's standard output destination.
java.lang.ProcessBuilder.start,Starts a new process using the attributes of this process builder.
java.lang.ProcessBuilder.startPipeline,"Starts a Process for each ProcessBuilder, creating a pipeline of  processes linked by their standard output and standard input streams."
java.lang.ProcessBuilder.appendTo,Returns a redirect to append to the specified file.
java.lang.ProcessBuilder.equals,Compares the specified object with thisRedirectfor  equality.
java.lang.ProcessBuilder.file,"Returns theFilesource or destination associated  with this redirect, ornullif there is no such file."
java.lang.ProcessBuilder.from,Returns a redirect to read from the specified file.
java.lang.ProcessBuilder.hashCode,Returns a hash code value for thisRedirect.
java.lang.ProcessBuilder.to,Returns a redirect to write to the specified file.
java.lang.ProcessBuilder.type,Returns the type of thisRedirect.
java.lang.Record.hashCode,Returns a hash code value for the record.
java.lang.Record.toString,Returns a string representation of the record.
java.lang.Runtime.addShutdownHook,Registers a new virtual-machine shutdown hook.
java.lang.Runtime.availableProcessors,Returns the number of processors available to the Java virtual machine.
java.lang.Runtime.exec,Executes the specified string command in a separate process.
java.lang.Runtime.exec,Executes the specified command and arguments in a separate process.
java.lang.Runtime.exec,Executes the specified command and arguments in a separate process  with the specified environment.
java.lang.Runtime.exec,Executes the specified command and arguments in a separate process with  the specified environment and working directory.
java.lang.Runtime.exec,Executes the specified string command in a separate process with the  specified environment.
java.lang.Runtime.exec,Executes the specified string command in a separate process with the  specified environment and working directory.
java.lang.Runtime.exit,Terminates the currently running Java virtual machine by initiating its  shutdown sequence.
java.lang.Runtime.freeMemory,Returns the amount of free memory in the Java Virtual Machine.
java.lang.Runtime.gc,Runs the garbage collector in the Java Virtual Machine.
java.lang.Runtime.getRuntime,Returns the runtime object associated with the current Java application.
java.lang.Runtime.halt,Forcibly terminates the currently running Java virtual machine.
java.lang.Runtime.load,Loads the native library specified by the filename argument.
java.lang.Runtime.loadLibrary,Loads the native library specified by thelibnameargument.
java.lang.Runtime.maxMemory,Returns the maximum amount of memory that the Java virtual machine  will attempt to use.
java.lang.Runtime.removeShutdownHook,De-registers a previously-registered virtual-machine shutdown hook.
java.lang.Runtime.runFinalization,Runs the finalization methods of any objects pending finalization.
java.lang.Runtime.totalMemory,Returns the total amount of memory in the Java virtual machine.
java.lang.Runtime.version,Returns the version of the Java Runtime Environment as aRuntime.Version.
java.lang.Runtime.build,Returns thebuild number.
java.lang.Runtime.compareTo,Compares this version to another.
java.lang.Runtime.compareToIgnoreOptional,Compares this version to another disregarding optional build  information.
java.lang.Runtime.equals,Determines whether thisVersionis equal to another object.
java.lang.Runtime.equalsIgnoreOptional,Determines whether thisVersionis equal to another  disregarding optional build information.
java.lang.Runtime.feature,Returns the value of thefeatureelement of  the version number.
java.lang.Runtime.hashCode,Returns the hash code of this version.
java.lang.Runtime.interim,"Returns the value of theinterimelement of  the version number, or zero if it is absent."
java.lang.Runtime.major,"Deprecated.As of Java SE 10, the first element of a version  number is not the major-release number but the feature-release  counter, incremented for every time-based release."
java.lang.Runtime.minor,"Deprecated.As of Java SE 10, the second element of a version  number is not the minor-release number but the interim-release  counter, incremented for every interim release."
java.lang.Runtime.optional,Returnsoptionaladditional identifying build  information.
java.lang.Runtime.parse,Parses the given string as a validversion stringcontaining aversion numberfollowed by pre-release and  build information.
java.lang.Runtime.patch,"Returns the value of thepatchelement of the  version number, or zero if it is absent."
java.lang.Runtime.pre,Returns the optionalpre-releaseinformation.
java.lang.Runtime.security,"Deprecated.As of Java SE 10, the third element of a version  number is not the security level but the update-release counter,  incremented for every update release."
java.lang.Runtime.toString,Returns a string representation of this version.
java.lang.Runtime.update,"Returns the value of theupdateelement of the  version number, or zero if it is absent."
java.lang.Runtime.version,Returns an unmodifiableListof the integers  represented in theversion number.
java.lang.Short.byteValue,Returns the value of thisShortas abyteafter  a narrowing primitive conversion.
java.lang.Short.compare,Compares twoshortvalues numerically.
java.lang.Short.compareTo,Compares twoShortobjects numerically.
java.lang.Short.compareUnsigned,Compares twoshortvalues numerically treating the values  as unsigned.
java.lang.Short.decode,Decodes aStringinto aShort.
java.lang.Short.doubleValue,Returns the value of thisShortas adoubleafter a widening primitive conversion.
java.lang.Short.floatValue,Returns the value of thisShortas afloatafter a widening primitive conversion.
java.lang.Short.hashCode,Returns a hash code for thisShort; equal to the result  of invokingintValue().
java.lang.Short.hashCode,Returns a hash code for ashortvalue; compatible withShort.hashCode().
java.lang.Short.intValue,Returns the value of thisShortas anintafter  a widening primitive conversion.
java.lang.Short.longValue,Returns the value of thisShortas alongafter  a widening primitive conversion.
java.lang.Short.parseShort,Parses the string argument as a signed decimalshort.
java.lang.Short.parseShort,Parses the string argument as a signedshortin the  radix specified by the second argument.
java.lang.Short.reverseBytes,Returns the value obtained by reversing the order of the bytes in the  two's complement representation of the specifiedshortvalue.
java.lang.Short.shortValue,Returns the value of thisShortas ashort.
java.lang.Short.toString,Returns aStringobject representing thisShort's value.
java.lang.Short.toString,Returns a newStringobject representing the  specifiedshort.
java.lang.Short.valueOf,Returns aShortinstance representing the specifiedshortvalue.
java.lang.Short.valueOf,Returns aShortobject holding the  value given by the specifiedString.
java.lang.Short.valueOf,Returns aShortobject holding the value  extracted from the specifiedStringwhen parsed  with the radix given by the second argument.
java.lang.StackTraceElement.equals,Returns true if the specified object is anotherStackTraceElementinstance representing the same execution  point as this instance.
java.lang.StackTraceElement.getClassLoaderName,Returns the name of the class loader of the class containing the  execution point represented by this stack trace element.
java.lang.StackTraceElement.getClassName,Returns the fully qualified name of the class containing the  execution point represented by this stack trace element.
java.lang.StackTraceElement.getFileName,Returns the name of the source file containing the execution point  represented by this stack trace element.
java.lang.StackTraceElement.getLineNumber,Returns the line number of the source line containing the execution  point represented by this stack trace element.
java.lang.StackTraceElement.getMethodName,Returns the name of the method containing the execution point  represented by this stack trace element.
java.lang.StackTraceElement.getModuleName,Returns the module name of the module containing the execution point  represented by this stack trace element.
java.lang.StackTraceElement.getModuleVersion,Returns the module version of the module containing the execution point  represented by this stack trace element.
java.lang.StackTraceElement.hashCode,Returns a hash code value for this stack trace element.
java.lang.StackTraceElement.isNativeMethod,Returns true if the method containing the execution point  represented by this stack trace element is a native method.
java.lang.StackTraceElement.toString,Returns a string representation of this stack trace element.
java.lang.StackWalker.forEach,"Performs the given action on each element ofStackFramestream  of the current thread, traversing from the top frame of the stack,  which is the method calling thisforEachmethod."
java.lang.StackWalker.getCallerClass,Gets theClassobject of the caller who invoked the method  that invokedgetCallerClass.
java.lang.StackWalker.getInstance,Returns aStackWalkerinstance.
java.lang.StackWalker.getInstance,Returns aStackWalkerinstance with the given option specifying  the stack frame information it can access.
java.lang.StackWalker.getInstance,Returns aStackWalkerinstance with the givenoptionsspecifying  the stack frame information it can access.
java.lang.StackWalker.walk,"Applies the given function to the stream ofStackFrames  for the current thread, traversing from the top frame of the stack,  which is the method calling thiswalkmethod."
java.lang.StackWalker.getByteCodeIndex,Returns the index to the code array of theCodeattribute  containing the execution point represented by this stack frame.
java.lang.StackWalker.getClassName,Gets thebinary nameof the declaring class of the method represented by this stack frame.
java.lang.StackWalker.getDeclaringClass,Gets the declaringClassfor the method represented by  this stack frame.
java.lang.StackWalker.getDescriptor,Returns thedescriptorof the method represented by  this stack frame as defined byThe Java Virtual Machine Specification.
java.lang.StackWalker.getFileName,Returns the name of the source file containing the execution point  represented by this stack frame.
java.lang.StackWalker.getLineNumber,Returns the line number of the source line containing the execution  point represented by this stack frame.
java.lang.StackWalker.getMethodName,Gets the name of the method represented by this stack frame.
java.lang.StackWalker.getMethodType,Returns theMethodTyperepresenting the parameter types and  the return type for the method represented by this stack frame.
java.lang.StackWalker.isNativeMethod,Returnstrueif the method containing the execution point  represented by this stack frame is a native method.
java.lang.StackWalker.toStackTraceElement,Gets aStackTraceElementfor this stack frame.
java.lang.StrictMath.decrementExact,"Returns the argument decremented by one,  throwing an exception if the result overflows anint."
java.lang.StrictMath.decrementExact,"Returns the argument decremented by one,  throwing an exception if the result overflows along."
java.lang.StrictMath.incrementExact,"Returns the argument incremented by one,  throwing an exception if the result overflows anint."
java.lang.StrictMath.incrementExact,"Returns the argument incremented by one,  throwing an exception if the result overflows along."
java.lang.StrictMath.negateExact,"Returns the negation of the argument,  throwing an exception if the result overflows anint."
java.lang.StrictMath.negateExact,"Returns the negation of the argument,  throwing an exception if the result overflows along."
java.lang.StrictMath.toIntExact,"Returns the value of thelongargument, throwing an exception  if the value overflows anint."
java.lang.String.charAt,Returns thecharvalue at the  specified index.
java.lang.String.chars,Returns a stream ofintzero-extending thecharvalues  from this sequence.
java.lang.String.codePointAt,Returns the character (Unicode code point) at the specified  index.
java.lang.String.codePointBefore,Returns the character (Unicode code point) before the specified  index.
java.lang.String.codePointCount,Returns the number of Unicode code points in the specified text  range of thisString.
java.lang.String.codePoints,Returns a stream of code point values from this sequence.
java.lang.String.compareTo,Compares two strings lexicographically.
java.lang.String.compareToIgnoreCase,"Compares two strings lexicographically, ignoring case  differences."
java.lang.String.concat,Concatenates the specified string to the end of this string.
java.lang.String.contains,Returns true if and only if this string contains the specified  sequence of char values.
java.lang.String.contentEquals,Compares this string to the specifiedCharSequence.
java.lang.String.contentEquals,Compares this string to the specifiedStringBuffer.
java.lang.String.copyValueOf,Equivalent tovalueOf(char[]).
java.lang.String.copyValueOf,"Equivalent tovalueOf(char[], int, int)."
java.lang.String.endsWith,Tests if this string ends with the specified suffix.
java.lang.String.equals,Compares this string to the specified object.
java.lang.String.equalsIgnoreCase,"Compares thisStringto anotherString, ignoring case  considerations."
java.lang.String.format,Returns a formatted string using the specified format string and  arguments.
java.lang.String.format,"Returns a formatted string using the specified locale, format string,  and arguments."
java.lang.String.formatted,"Formats using this string as the format string, and the supplied  arguments."
java.lang.String.getBytes,"Encodes thisStringinto a sequence of bytes using the  platform's default charset, storing the result into a new byte array."
java.lang.String.getBytes,Deprecated.This method does not properly convert characters into  bytes.
java.lang.String.getBytes,"Encodes thisStringinto a sequence of bytes using the named  charset, storing the result into a new byte array."
java.lang.String.getBytes,"Encodes thisStringinto a sequence of bytes using the givencharset, storing the result into a  new byte array."
java.lang.String.getChars,Copies characters from this string into the destination character  array.
java.lang.String.hashCode,Returns a hash code for this string.
java.lang.String.indent,"Adjusts the indentation of each line of this string based on the value ofn, and normalizes line termination characters."
java.lang.String.indexOf,Returns the index within this string of the first occurrence of  the specified character.
java.lang.String.indexOf,"Returns the index within this string of the first occurrence of the  specified character, starting the search at the specified index."
java.lang.String.indexOf,Returns the index within this string of the first occurrence of the  specified substring.
java.lang.String.indexOf,"Returns the index within this string of the first occurrence of the  specified substring, starting at the specified index."
java.lang.String.intern,Returns a canonical representation for the string object.
java.lang.String.isBlank,"Returnstrueif the string is empty or contains onlywhite spacecodepoints,  otherwisefalse."
java.lang.String.isEmpty,"Returnstrueif, and only if,length()is0."
java.lang.String.join,Returns a new String composed of copies of theCharSequence elementsjoined together with a copy of  the specifieddelimiter.
java.lang.String.join,Returns a newStringcomposed of copies of theCharSequence elementsjoined together with a copy of the  specifieddelimiter.
java.lang.String.lastIndexOf,Returns the index within this string of the last occurrence of  the specified character.
java.lang.String.lastIndexOf,"Returns the index within this string of the last occurrence of  the specified character, searching backward starting at the  specified index."
java.lang.String.lastIndexOf,Returns the index within this string of the last occurrence of the  specified substring.
java.lang.String.lastIndexOf,"Returns the index within this string of the last occurrence of the  specified substring, searching backward starting at the specified index."
java.lang.String.length,Returns the length of this string.
java.lang.String.lines,"Returns a stream of lines extracted from this string,  separated by line terminators."
java.lang.String.matches,Tells whether or not this string matches the givenregular expression.
java.lang.String.offsetByCodePoints,Returns the index within thisStringthat is  offset from the givenindexbycodePointOffsetcode points.
java.lang.String.regionMatches,Tests if two string regions are equal.
java.lang.String.repeat,Returns a string whose value is the concatenation of this  string repeatedcounttimes.
java.lang.String.replace,Returns a string resulting from replacing all occurrences ofoldCharin this string withnewChar.
java.lang.String.replace,Replaces each substring of this string that matches the literal target  sequence with the specified literal replacement sequence.
java.lang.String.replaceAll,Replaces each substring of this string that matches the givenregular expressionwith the  given replacement.
java.lang.String.replaceFirst,Replaces the first substring of this string that matches the givenregular expressionwith the  given replacement.
java.lang.String.split,Splits this string around matches of the givenregular expression.
java.lang.String.startsWith,Tests if this string starts with the specified prefix.
java.lang.String.startsWith,Tests if the substring of this string beginning at the  specified index starts with the specified prefix.
java.lang.String.strip,"Returns a string whose value is this string, with all leading  and trailingwhite spaceremoved."
java.lang.String.stripIndent,"Returns a string whose value is this string, with incidentalwhite spaceremoved from  the beginning and end of every line."
java.lang.String.stripLeading,"Returns a string whose value is this string, with all leadingwhite spaceremoved."
java.lang.String.stripTrailing,"Returns a string whose value is this string, with all trailingwhite spaceremoved."
java.lang.String.subSequence,Returns a character sequence that is a subsequence of this sequence.
java.lang.String.substring,Returns a string that is a substring of this string.
java.lang.String.toCharArray,Converts this string to a new character array.
java.lang.String.toLowerCase,Converts all of the characters in thisStringto lower  case using the rules of the default locale.
java.lang.String.toLowerCase,Converts all of the characters in thisStringto lower  case using the rules of the givenLocale.
java.lang.String.toString,This object (which is already a string!)
java.lang.String.toUpperCase,Converts all of the characters in thisStringto upper  case using the rules of the default locale.
java.lang.String.toUpperCase,Converts all of the characters in thisStringto upper  case using the rules of the givenLocale.
java.lang.String.transform,This method allows the application of a function tothisstring.
java.lang.String.translateEscapes,"Returns a string whose value is this string, with escape sequences  translated as if in a string literal."
java.lang.String.trim,"Returns a string whose value is this string, with all leading  and trailing space removed, where space is defined  as any character whose codepoint is less than or equal to'U+0020'(the space character)."
java.lang.String.valueOf,Returns the string representation of thebooleanargument.
java.lang.String.valueOf,Returns the string representation of thecharargument.
java.lang.String.valueOf,Returns the string representation of thechararray  argument.
java.lang.String.valueOf,Returns the string representation of a specific subarray of thechararray argument.
java.lang.String.valueOf,Returns the string representation of thedoubleargument.
java.lang.String.valueOf,Returns the string representation of thefloatargument.
java.lang.String.valueOf,Returns the string representation of theintargument.
java.lang.String.valueOf,Returns the string representation of thelongargument.
java.lang.String.valueOf,Returns the string representation of theObjectargument.
java.lang.StringBuffer.append,Appends the string representation of thebooleanargument to the sequence.
java.lang.StringBuffer.append,Appends the string representation of thecharargument to this sequence.
java.lang.StringBuffer.append,Appends the string representation of thechararray  argument to this sequence.
java.lang.StringBuffer.append,Appends the string representation of a subarray of thechararray argument to this sequence.
java.lang.StringBuffer.append,Appends the string representation of thedoubleargument to this sequence.
java.lang.StringBuffer.append,Appends the string representation of thefloatargument to this sequence.
java.lang.StringBuffer.append,Appends the string representation of theintargument to this sequence.
java.lang.StringBuffer.append,Appends the string representation of thelongargument to this sequence.
java.lang.StringBuffer.append,Appends the specifiedCharSequenceto this  sequence.
java.lang.StringBuffer.append,Appends a subsequence of the specifiedCharSequenceto this  sequence.
java.lang.StringBuffer.append,Appends the string representation of theObjectargument.
java.lang.StringBuffer.append,Appends the specified string to this character sequence.
java.lang.StringBuffer.append,Appends the specifiedStringBufferto this sequence.
java.lang.StringBuffer.appendCodePoint,Appends the string representation of thecodePointargument to this sequence.
java.lang.StringBuffer.capacity,Returns the current capacity.
java.lang.StringBuffer.charAt,Returns thecharvalue in this sequence at the specified index.
java.lang.StringBuffer.codePointCount,Returns the number of Unicode code points in the specified text  range of this sequence.
java.lang.StringBuffer.compareTo,Compares twoStringBufferinstances lexicographically.
java.lang.StringBuffer.delete,Removes the characters in a substring of this sequence.
java.lang.StringBuffer.deleteCharAt,Removes thecharat the specified position in this  sequence.
java.lang.StringBuffer.ensureCapacity,Ensures that the capacity is at least equal to the specified minimum.
java.lang.StringBuffer.getChars,Characters are copied from this sequence into the  destination character arraydst.
java.lang.StringBuffer.insert,Inserts the string representation of thebooleanargument into this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of thecharargument into this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of thechararray  argument into this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of a subarray of thestrarray argument into this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of thedoubleargument into this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of thefloatargument into this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of the secondintargument into this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of thelongargument into this sequence.
java.lang.StringBuffer.insert,Inserts the specifiedCharSequenceinto this sequence.
java.lang.StringBuffer.insert,Inserts a subsequence of the specifiedCharSequenceinto  this sequence.
java.lang.StringBuffer.insert,Inserts the string representation of theObjectargument into this character sequence.
java.lang.StringBuffer.insert,Inserts the string into this character sequence.
java.lang.StringBuffer.length,Returns the length (character count).
java.lang.StringBuffer.offsetByCodePoints,Returns the index within this sequence that is offset from the  givenindexbycodePointOffsetcode  points.
java.lang.StringBuffer.replace,Replaces the characters in a substring of this sequence  with characters in the specifiedString.
java.lang.StringBuffer.reverse,Causes this character sequence to be replaced by the reverse of  the sequence.
java.lang.StringBuffer.setCharAt,The character at the specified index is set toch.
java.lang.StringBuffer.setLength,Sets the length of the character sequence.
java.lang.StringBuffer.subSequence,Returns a new character sequence that is a subsequence of this sequence.
java.lang.StringBuffer.substring,Returns a newStringthat contains a subsequence of  characters currently contained in this character sequence.
java.lang.StringBuffer.substring,Returns a newStringthat contains a subsequence of  characters currently contained in this sequence.
java.lang.StringBuffer.toString,Returns a string representing the data in this sequence.
java.lang.StringBuffer.trimToSize,Attempts to reduce storage used for the character sequence.
java.lang.StringBuilder.append,Appends the specified character sequence to thisAppendable.
java.lang.StringBuilder.compareTo,Compares twoStringBuilderinstances lexicographically.
java.lang.System.arraycopy,"Copies an array from the specified source array, beginning at the  specified position, to the specified position of the destination array."
java.lang.System.clearProperty,Removes the system property indicated by the specified key.
java.lang.System.console,"Returns the uniqueConsoleobject associated  with the current Java virtual machine, if any."
java.lang.System.currentTimeMillis,Returns the current time in milliseconds.
java.lang.System.exit,Terminates the currently running Java Virtual Machine.
java.lang.System.getenv,Returns an unmodifiable string map view of the current system environment.
java.lang.System.getenv,Gets the value of the specified environment variable.
java.lang.System.getLogger,Returns an instance ofLoggerfor the caller's  use.
java.lang.System.getLogger,Returns a localizable instance ofLoggerfor the caller's use.
java.lang.System.getProperties,Determines the current system properties.
java.lang.System.getProperty,Gets the system property indicated by the specified key.
java.lang.System.getSecurityManager,"Deprecated, for removal: This API element is subject to removal in a future version.This method is only useful in conjunction withthe Security Manager, which is        deprecated and subject to removal in a future release."
java.lang.System.identityHashCode,"Returns the same hash code for the given object as  would be returned by the default method hashCode(),  whether or not the given object's class overrides  hashCode()."
java.lang.System.inheritedChannel,Returns the channel inherited from the entity that created this  Java virtual machine.
java.lang.System.lineSeparator,Returns the system-dependent line separator string.
java.lang.System.mapLibraryName,Maps a library name into a platform-specific string representing  a native library.
java.lang.System.nanoTime,"Returns the current value of the running Java Virtual Machine's  high-resolution time source, in nanoseconds."
java.lang.System.setErr,"Reassigns the ""standard"" error output stream."
java.lang.System.setIn,"Reassigns the ""standard"" input stream."
java.lang.System.setOut,"Reassigns the ""standard"" output stream."
java.lang.System.setProperties,Sets the system properties to thePropertiesargument.
java.lang.System.setProperty,Sets the system property indicated by the specified key.
java.lang.System.getName,Returns the name of this logger.
java.lang.System.isLoggable,Checks if a message of the given level would be logged by  this logger.
java.lang.System.log,Logs a message produced from the given object.
java.lang.System.log,Logs a message.
java.lang.System.log,Logs a message with an optional list of parameters.
java.lang.System.log,Logs a message associated with a given throwable.
java.lang.System.log,Logs a lazily supplied message.
java.lang.System.log,Logs a lazily supplied message associated with a given throwable.
java.lang.System.log,Logs a message with resource bundle and an optional list of  parameters.
java.lang.System.log,Logs a localized message associated with a given throwable.
java.lang.System.getName,Returns the name of this level.
java.lang.System.getSeverity,Returns the severity of this level.
java.lang.System.getLocalizedLogger,Returns a localizable instance ofLoggerfor the givenmodule.
java.lang.System.getLogger,Returns an instance ofLoggerfor the givenmodule.
java.lang.System.getLoggerFinder,Returns theLoggerFinderinstance.
java.lang.Thread.activeCount,Returns an estimate of the number of active threads in the current  thread'sthread groupand its  subgroups.
java.lang.Thread.clone,Throws CloneNotSupportedException as a Thread can not be meaningfully  cloned.
java.lang.Thread.countStackFrames,"Deprecated, for removal: This API element is subject to removal in a future version.This method was originally designed to count the number of              stack frames but the results were never well-defined and it              depended on thread-suspension."
java.lang.Thread.currentThread,Returns a reference to the currently executing thread object.
java.lang.Thread.dumpStack,Prints a stack trace of the current thread to the standard error stream.
java.lang.Thread.enumerate,Copies into the specified array every active thread in the current  thread's thread group and its subgroups.
java.lang.Thread.getAllStackTraces,Returns a map of stack traces for all live threads.
java.lang.Thread.getContextClassLoader,Returns the contextClassLoaderfor this thread.
java.lang.Thread.getDefaultUncaughtExceptionHandler,Returns the default handler invoked when a thread abruptly terminates  due to an uncaught exception.
java.lang.Thread.getId,Returns the identifier of this Thread.
java.lang.Thread.getName,Returns this thread's name.
java.lang.Thread.getPriority,Returns this thread's priority.
java.lang.Thread.getStackTrace,Returns an array of stack trace elements representing the stack dump  of this thread.
java.lang.Thread.getState,Returns the state of this thread.
java.lang.Thread.getThreadGroup,Returns the thread group to which this thread belongs.
java.lang.Thread.getUncaughtExceptionHandler,Returns the handler invoked when this thread abruptly terminates  due to an uncaught exception.
java.lang.Thread.holdsLock,Returnstrueif and only if the current thread holds the  monitor lock on the specified object.
java.lang.Thread.interrupt,Interrupts this thread.
java.lang.Thread.interrupted,Tests whether the current thread has been interrupted.
java.lang.Thread.isAlive,Tests if this thread is alive.
java.lang.Thread.isDaemon,Tests if this thread is a daemon thread.
java.lang.Thread.isInterrupted,Tests whether this thread has been interrupted.
java.lang.Thread.join,Waits for this thread to die.
java.lang.Thread.join,Waits at mostmillismilliseconds for this thread to  die.
java.lang.Thread.join,Waits at mostmillismilliseconds plusnanosnanoseconds for this thread to die.
java.lang.Thread.onSpinWait,"Indicates that the caller is momentarily unable to progress, until the  occurrence of one or more actions on the part of other activities."
java.lang.Thread.resume,"Deprecated, for removal: This API element is subject to removal in a future version.This method exists solely for use withsuspend(),      which has been deprecated because it is deadlock-prone."
java.lang.Thread.run,"If this thread was constructed using a separateRunnablerun object, then thatRunnableobject'srunmethod is called;  otherwise, this method does nothing and returns."
java.lang.Thread.setContextClassLoader,Sets the context ClassLoader for this Thread.
java.lang.Thread.setDaemon,Marks this thread as either adaemonthread  or a user thread.
java.lang.Thread.setDefaultUncaughtExceptionHandler,"Set the default handler invoked when a thread abruptly terminates  due to an uncaught exception, and no other handler has been defined  for that thread."
java.lang.Thread.setName,Changes the name of this thread to be equal to the argumentname.
java.lang.Thread.setPriority,Changes the priority of this thread.
java.lang.Thread.setUncaughtExceptionHandler,Set the handler invoked when this thread abruptly terminates  due to an uncaught exception.
java.lang.Thread.sleep,"Causes the currently executing thread to sleep (temporarily cease  execution) for the specified number of milliseconds, subject to  the precision and accuracy of system timers and schedulers."
java.lang.Thread.sleep,"Causes the currently executing thread to sleep (temporarily cease  execution) for the specified number of milliseconds plus the specified  number of nanoseconds, subject to the precision and accuracy of system  timers and schedulers."
java.lang.Thread.start,Causes this thread to begin execution; the Java Virtual Machine  calls therunmethod of this thread.
java.lang.Thread.stop,Deprecated.This method is inherently unsafe.
java.lang.Thread.suspend,"Deprecated, for removal: This API element is subject to removal in a future version.This method has been deprecated, as it is    inherently deadlock-prone."
java.lang.Thread.toString,"Returns a string representation of this thread, including the  thread's name, priority, and thread group."
java.lang.Thread.yield,A hint to the scheduler that the current thread is willing to yield  its current use of a processor.
java.lang.Thread.uncaughtException,Method invoked when the given thread terminates due to the  given uncaught exception.
java.lang.ThreadGroup.activeCount,Returns an estimate of the number of active threads in this thread  group and its subgroups.
java.lang.ThreadGroup.activeGroupCount,Returns an estimate of the number of active groups in this  thread group and its subgroups.
java.lang.ThreadGroup.allowThreadSuspension,"Deprecated, for removal: This API element is subject to removal in a future version.The definition of this call depends onsuspend(),              which is deprecated."
java.lang.ThreadGroup.destroy,"Deprecated, for removal: This API element is subject to removal in a future version.The API and mechanism for destroying a ThreadGroup is inherently              flawed."
java.lang.ThreadGroup.enumerate,Copies into the specified array every active thread in this  thread group and its subgroups.
java.lang.ThreadGroup.enumerate,Copies into the specified array every active thread in this  thread group.
java.lang.ThreadGroup.enumerate,Copies into the specified array references to every active  subgroup in this thread group and its subgroups.
java.lang.ThreadGroup.enumerate,Copies into the specified array references to every active  subgroup in this thread group.
java.lang.ThreadGroup.getMaxPriority,Returns the maximum priority of this thread group.
java.lang.ThreadGroup.getName,Returns the name of this thread group.
java.lang.ThreadGroup.getParent,Returns the parent of this thread group.
java.lang.ThreadGroup.interrupt,Interrupts all threads in this thread group.
java.lang.ThreadGroup.list,Prints information about this thread group to the standard  output.
java.lang.ThreadGroup.parentOf,Tests if this thread group is either the thread group  argument or one of its ancestor thread groups.
java.lang.ThreadGroup.resume,"Deprecated, for removal: This API element is subject to removal in a future version.This method is used solely in conjunction withThread.suspendandThreadGroup.suspend,        both of which have been deprecated, as they are inherently        deadlock-prone."
java.lang.ThreadGroup.setMaxPriority,Sets the maximum priority of the group.
java.lang.ThreadGroup.stop,"Deprecated, for removal: This API element is subject to removal in a future version.This method is inherently unsafe."
java.lang.ThreadGroup.suspend,"Deprecated, for removal: This API element is subject to removal in a future version.This method is inherently deadlock-prone."
java.lang.ThreadGroup.toString,Returns a string representation of this Thread group.
java.lang.ThreadGroup.uncaughtException,"Called by the Java Virtual Machine when a thread in this  thread group stops because of an uncaught exception, and the thread  does not have a specificThread.UncaughtExceptionHandlerinstalled."
java.lang.ThreadLocal.get,Returns the value in the current thread's copy of this  thread-local variable.
java.lang.ThreadLocal.initialValue,"Returns the current thread's ""initial value"" for this  thread-local variable."
java.lang.ThreadLocal.remove,Removes the current thread's value for this thread-local  variable.
java.lang.ThreadLocal.set,Sets the current thread's copy of this thread-local variable  to the specified value.
java.lang.ThreadLocal.withInitial,Creates a thread local variable.
java.lang.Throwable.addSuppressed,Appends the specified exception to the exceptions that were  suppressed in order to deliver this exception.
java.lang.Throwable.fillInStackTrace,Fills in the execution stack trace.
java.lang.Throwable.getCause,Returns the cause of this throwable ornullif the  cause is nonexistent or unknown.
java.lang.Throwable.getLocalizedMessage,Creates a localized description of this throwable.
java.lang.Throwable.getStackTrace,Provides programmatic access to the stack trace information printed byprintStackTrace().
java.lang.Throwable.getSuppressed,"Returns an array containing all of the exceptions that were  suppressed, typically by thetry-with-resources  statement, in order to deliver this exception."
java.lang.Throwable.initCause,Initializes thecauseof this throwable to the specified value.
java.lang.Throwable.printStackTrace,Prints this throwable and its backtrace to the  standard error stream.
java.lang.Throwable.printStackTrace,Prints this throwable and its backtrace to the specified print stream.
java.lang.Throwable.printStackTrace,Prints this throwable and its backtrace to the specified  print writer.
java.lang.Throwable.setStackTrace,Sets the stack trace elements that will be returned bygetStackTrace()and printed byprintStackTrace()and related methods.
java.lang.Throwable.toString,Returns a short description of this throwable.
java.lang.TypeNotPresentException.typeName,Returns the fully qualified name of the unavailable type.
java.lang.annotation.AnnotationTypeMismatchException.element,Returns theMethodobject for the incorrectly typed element.
java.lang.annotation.AnnotationTypeMismatchException.foundType,Returns the type of data found in the incorrectly typed element.
java.lang.annotation.IncompleteAnnotationException.annotationType,Returns the Class object for the annotation interface with the  missing element.
java.lang.annotation.IncompleteAnnotationException.elementName,Returns the name of the missing element.
java.lang.constant.ConstantDescs.ofCallsiteBootstrap,"Returns aMethodHandleDesccorresponding to a bootstrap method for  aninvokedynamiccallsite, which is a static method whose leading  parameter types areLookup,String, andMethodType."
java.lang.constant.ConstantDescs.ofConstantBootstrap,"Returns aMethodHandleDesccorresponding to a bootstrap method for a  dynamic constant, which is a static method whose leading arguments areLookup,String, andClass."
java.lang.constant.DynamicCallSiteDesc.bootstrapArgs,ReturnsConstantDescs describing the bootstrap arguments for theinvokedynamic.
java.lang.constant.DynamicCallSiteDesc.bootstrapMethod,Returns aMethodHandleDescdescribing the bootstrap method for  theinvokedynamic.
java.lang.constant.DynamicCallSiteDesc.equals,Compares the specified object with this descriptor for equality.
java.lang.constant.DynamicCallSiteDesc.invocationName,Returns the invocation name that would appear in theNameAndTypeoperand of theinvokedynamic.
java.lang.constant.DynamicCallSiteDesc.invocationType,Returns aMethodTypeDescdescribing the invocation type that  would appear in theNameAndTypeoperand of theinvokedynamic.
java.lang.constant.DynamicCallSiteDesc.of,Creates a nominal descriptor for aninvokedynamiccall site whose  bootstrap method has no static arguments and for which the name parameter  isConstantDescs.DEFAULT_NAME.
java.lang.constant.DynamicCallSiteDesc.of,Creates a nominal descriptor for aninvokedynamiccall site whose  bootstrap method has no static arguments.
java.lang.constant.DynamicCallSiteDesc.of,Creates a nominal descriptor for aninvokedynamiccall site.
java.lang.constant.DynamicCallSiteDesc.resolveCallSiteDesc,"Reflectively invokes the bootstrap method with the specified arguments,  and return the resultingCallSite"
java.lang.constant.DynamicCallSiteDesc.toString,"Returns a compact textual description of this call site description,  including the bootstrap method, the invocation name and type, and  the static bootstrap arguments."
java.lang.constant.DynamicCallSiteDesc.withArgs,"Returns a nominal descriptor for aninvokedynamiccall site whose  bootstrap method, name, and invocation type are the same as this one, but  with the specified bootstrap arguments."
java.lang.constant.DynamicCallSiteDesc.withNameAndType,"Returns a nominal descriptor for aninvokedynamiccall site whose  bootstrap and bootstrap arguments are the same as this one, but with the  specified invocationName and invocation invocationType"
java.lang.constant.DynamicConstantDesc.bootstrapArgs,Returns the bootstrap arguments for this constant.
java.lang.constant.DynamicConstantDesc.bootstrapArgsList,Returns the bootstrap arguments for this constant as an immutableList.
java.lang.constant.DynamicConstantDesc.bootstrapMethod,Returns aMethodHandleDescdescribing the bootstrap method for  this constant.
java.lang.constant.DynamicConstantDesc.constantName,Returns the name that would appear in theNameAndTypeoperand  of theLDCfor this constant.
java.lang.constant.DynamicConstantDesc.constantType,Returns aClassDescdescribing the type that would appear in theNameAndTypeoperand of theLDCfor this constant.
java.lang.constant.DynamicConstantDesc.of,"Returns a nominal descriptor for a dynamic constant whose bootstrap has  no static arguments, whose name parameter isConstantDescs.DEFAULT_NAME,  and whose type parameter is always the same as the bootstrap method return type."
java.lang.constant.DynamicConstantDesc.of,"Returns a nominal descriptor for a dynamic constant whose name parameter  isConstantDescs.DEFAULT_NAME, and whose type parameter is always  the same as the bootstrap method return type."
java.lang.constant.DynamicConstantDesc.ofCanonical,"Returns a nominal descriptor for a dynamic constant, transforming it into  a more specific type if the constant bootstrap is a well-known one and a  more specific nominal descriptor type (e.g., ClassDesc) is available."
java.lang.constant.DynamicConstantDesc.ofNamed,Returns a nominal descriptor for a dynamic constant.
java.lang.constant.DynamicConstantDesc.resolveConstantDesc,"Resolves this descriptor reflectively, emulating the resolution behavior  of JVMS 5.4.3 and the access control behavior of JVMS 5.4.4."
java.lang.constant.DynamicConstantDesc.toString,"Returns a compact textual description of this constant description,  including the bootstrap method, the constant name and type, and  the static bootstrap arguments."
java.lang.invoke.CallSite.dynamicInvoker,Produces a method handle equivalent to an invokedynamic instruction  which has been linked to this call site.
java.lang.invoke.CallSite.getTarget,"Returns the target method of the call site, according to the  behavior defined by this call site's specific class."
java.lang.invoke.CallSite.setTarget,"Updates the target method of this call site, according to the  behavior defined by this call site's specific class."
java.lang.invoke.CallSite.type,Returns the type of this call site's target.
java.lang.invoke.ConstantBootstraps.arrayVarHandle,Finds aVarHandlefor an array type.
java.lang.invoke.ConstantBootstraps.enumConstant,Returns anenumconstant of the type specified bytypewith the name specified byname.
java.lang.invoke.ConstantBootstraps.explicitCast,Applies a conversion from a source type to a destination type.
java.lang.invoke.ConstantBootstraps.fieldVarHandle,Finds aVarHandlefor an instance field.
java.lang.invoke.ConstantBootstraps.getStaticFinal,"Returns the value of a static final field declared in the class which  is the same as the field's type (or, for primitive-valued fields,  declared in the wrapper class.)"
java.lang.invoke.ConstantBootstraps.getStaticFinal,Returns the value of a static final field.
java.lang.invoke.ConstantBootstraps.invoke,Returns the result of invoking a method handle with the provided  arguments.
java.lang.invoke.ConstantBootstraps.nullConstant,Returns anullobject reference for the reference type specified  bytype.
java.lang.invoke.ConstantBootstraps.primitiveClass,Returns aClassmirror for the primitive type whose type  descriptor is specified byname.
java.lang.invoke.ConstantBootstraps.staticFieldVarHandle,Finds aVarHandlefor a static field.
java.lang.invoke.ConstantCallSite.dynamicInvoker,Returns this call site's permanent target.
java.lang.invoke.ConstantCallSite.getTarget,"Returns the target method of the call site, which behaves  like afinalfield of theConstantCallSite."
java.lang.invoke.ConstantCallSite.setTarget,Always throws anUnsupportedOperationException.
java.lang.invoke.LambdaMetafactory.altMetafactory,"Facilitates the creation of simple ""function objects"" that implement one  or more interfaces by delegation to a providedMethodHandle,  after appropriate type adaptation and partial evaluation of arguments."
java.lang.invoke.MethodHandle.asCollector,"Makes anarray-collectingmethod handle, which accepts a given number of positional arguments starting  at a given position, and collects them into an array argument."
java.lang.invoke.MethodHandle.asCollector,"Makes anarray-collectingmethod handle, which accepts a given number of trailing  positional arguments and collects them into an array argument."
java.lang.invoke.MethodHandle.asFixedArity,Makes afixed aritymethod handle which is otherwise  equivalent to the current method handle.
java.lang.invoke.MethodHandle.asSpreader,"Makes anarray-spreadingmethod handle, which accepts an array argument at a given position and spreads  its elements as positional arguments in place of the array."
java.lang.invoke.MethodHandle.asSpreader,"Makes anarray-spreadingmethod handle, which accepts a trailing array argument  and spreads its elements as positional arguments."
java.lang.invoke.MethodHandle.asType,Produces an adapter method handle which adapts the type of the  current method handle to a new type.
java.lang.invoke.MethodHandle.asVarargsCollector,Makes avariable arityadapter which is able to accept  any number of trailing positional arguments and collect them  into an array argument.
java.lang.invoke.MethodHandle.bindTo,"Binds a valuexto the first argument of a method handle, without invoking it."
java.lang.invoke.MethodHandle.describeConstable,"Return a nominal descriptor for this instance, if one can be  constructed, or an emptyOptionalif one cannot be."
java.lang.invoke.MethodHandle.invoke,"Invokes the method handle, allowing any caller type descriptor,  and optionally performing conversions on arguments and return values."
java.lang.invoke.MethodHandle.invokeExact,"Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match."
java.lang.invoke.MethodHandle.invokeWithArguments,"Performs a variable arity invocation, passing the arguments in the given array  to the method handle, as if via an inexactinvokefrom a call site  which mentions only the typeObject, and whose actual argument count is the length  of the argument array."
java.lang.invoke.MethodHandle.invokeWithArguments,"Performs a variable arity invocation, passing the arguments in the given list  to the method handle, as if via an inexactinvokefrom a call site  which mentions only the typeObject, and whose actual argument count is the length  of the argument list."
java.lang.invoke.MethodHandle.isVarargsCollector,Determines if this method handle  supportsvariable aritycalls.
java.lang.invoke.MethodHandle.toString,"Returns a string representation of the method handle,  starting with the string""MethodHandle""and  ending with the string representation of the method handle's type."
java.lang.invoke.MethodHandle.type,Reports the type of this method handle.
java.lang.invoke.MethodHandle.withVarargs,"Adapts this method handle to bevariable arityif the boolean flag is true, elsefixed arity."
java.lang.invoke.MethodHandleProxies.asInterfaceInstance,Produces an instance of the given single-method interface which redirects  its calls to the given method handle.
java.lang.invoke.MethodHandleProxies.isWrapperInstance,Determines if the given object was produced by a call toasInterfaceInstance.
java.lang.invoke.MethodHandleProxies.wrapperInstanceTarget,Produces or recovers a target method handle which is behaviorally  equivalent to the unique method of this wrapper instance.
java.lang.invoke.MethodHandleProxies.wrapperInstanceType,Recovers the unique single-method interface type for which this wrapper instance was created.
java.lang.invoke.MethodHandles.arrayConstructor,"Produces a method handle constructing arrays of a desired type,  as if by theanewarraybytecode."
java.lang.invoke.MethodHandles.arrayElementGetter,"Produces a method handle giving read access to elements of an array,  as if by theaaloadbytecode."
java.lang.invoke.MethodHandles.arrayElementSetter,"Produces a method handle giving write access to elements of an array,  as if by theastorebytecode."
java.lang.invoke.MethodHandles.arrayElementVarHandle,Produces a VarHandle giving access to elements of an array of typearrayClass.
java.lang.invoke.MethodHandles.arrayLength,"Produces a method handle returning the length of an array,  as if by thearraylengthbytecode."
java.lang.invoke.MethodHandles.byteArrayViewVarHandle,"Produces a VarHandle giving access to elements of abyte[]array  viewed as if it were a different primitive array type, such asint[]orlong[]."
java.lang.invoke.MethodHandles.byteBufferViewVarHandle,"Produces a VarHandle giving access to elements of aByteBufferviewed as if it were an array of elements of a different primitive  component type to that ofbyte, such asint[]orlong[]."
java.lang.invoke.MethodHandles.catchException,"Makes a method handle which adapts a target method handle,  by running it inside an exception handler."
java.lang.invoke.MethodHandles.classData,"Returns theclass dataassociated with the lookup class  of the givencallerlookup object, ornull."
java.lang.invoke.MethodHandles.classDataAt,"Returns the element at the specified index in theclass data,  if the class data associated with the lookup class  of the givencallerlookup object is aList."
java.lang.invoke.MethodHandles.collectArguments,Adapts a target method handle by pre-processing  a sub-sequence of its arguments with a filter (another method handle).
java.lang.invoke.MethodHandles.constant,Produces a method handle of the requested return type which returns the given  constant value every time it is invoked.
java.lang.invoke.MethodHandles.countedLoop,Constructs a loop that runs a given number of iterations.
java.lang.invoke.MethodHandles.countedLoop,Constructs a loop that counts over a range of numbers.
java.lang.invoke.MethodHandles.doWhileLoop,"Constructs ado-whileloop from an initializer, a body, and a predicate."
java.lang.invoke.MethodHandles.dropArguments,Produces a method handle which will discard some dummy arguments  before calling some other specifiedtargetmethod handle.
java.lang.invoke.MethodHandles.dropArgumentsToMatch,Adapts a target method handle to match the given parameter type list.
java.lang.invoke.MethodHandles.dropReturn,Drop the return value of the target handle (if any).
java.lang.invoke.MethodHandles.empty,"Produces a method handle of the requested type which ignores any arguments, does nothing,  and returns a suitable default depending on the return type."
java.lang.invoke.MethodHandles.exactInvoker,"Produces a specialinvoker method handlewhich can be used to  invoke any method handle of the given type, as if byinvokeExact."
java.lang.invoke.MethodHandles.explicitCastArguments,Produces a method handle which adapts the type of the  given method handle to a new type by pairwise argument and return type conversion.
java.lang.invoke.MethodHandles.filterArguments,"Adapts a target method handle by pre-processing  one or more of its arguments, each with its own unary filter function,  and then calling the target with each pre-processed argument  replaced by the result of its corresponding filter function."
java.lang.invoke.MethodHandles.filterReturnValue,Adapts a target method handle by post-processing  its return value (if any) with a filter (another method handle).
java.lang.invoke.MethodHandles.foldArguments,"Adapts a target method handle by pre-processing some of its arguments, starting at a given position, and then  calling the target with the result of the pre-processing, inserted into the original sequence of arguments just  before the folded arguments."
java.lang.invoke.MethodHandles.foldArguments,"Adapts a target method handle by pre-processing  some of its arguments, and then calling the target with  the result of the pre-processing, inserted into the original  sequence of arguments."
java.lang.invoke.MethodHandles.guardWithTest,"Makes a method handle which adapts a target method handle,  by guarding it with a test, a boolean-valued method handle."
java.lang.invoke.MethodHandles.identity,Produces a method handle which returns its sole argument when invoked.
java.lang.invoke.MethodHandles.insertArguments,Provides a target method handle with one or morebound argumentsin advance of the method handle's invocation.
java.lang.invoke.MethodHandles.invoker,"Produces a specialinvoker method handlewhich can be used to  invoke any method handle compatible with the given type, as if byinvoke."
java.lang.invoke.MethodHandles.iteratedLoop,Constructs a loop that ranges over the values produced by anIterator<T>.
java.lang.invoke.MethodHandles.lookup,Returns alookup objectwith  full capabilities to emulate all supported bytecode behaviors of the caller.
java.lang.invoke.MethodHandles.loop,Constructs a method handle representing a loop with several loop variables that are updated and checked upon each  iteration.
java.lang.invoke.MethodHandles.permuteArguments,"Produces a method handle which adapts the calling sequence of the  given method handle to a new type, by reordering the arguments."
java.lang.invoke.MethodHandles.privateLookupIn,"Returns alookupobject on a target class to emulate all supported  bytecode behaviors, includingprivate access."
java.lang.invoke.MethodHandles.publicLookup,Returns alookup objectwhich is trusted minimally.
java.lang.invoke.MethodHandles.reflectAs,"Performs an unchecked ""crack"" of adirect method handle."
java.lang.invoke.MethodHandles.spreadInvoker,"Produces a method handle which will invoke any method handle of the  giventype, with a given number of trailing arguments replaced by  a single trailingObject[]array."
java.lang.invoke.MethodHandles.tableSwitch,"Creates a table switch method handle, which can be used to switch over a set of target  method handles, based on a given target index, called selector."
java.lang.invoke.MethodHandles.throwException,Produces a method handle which will throw exceptions of the givenexType.
java.lang.invoke.MethodHandles.tryFinally,Makes a method handle that adapts atargetmethod handle by wrapping it in atry-finallyblock.
java.lang.invoke.MethodHandles.varHandleExactInvoker,Produces a specialinvoker method handlewhich can be used to  invoke a signature-polymorphic access mode method on any VarHandle whose  associated access mode type is compatible with the given type.
java.lang.invoke.MethodHandles.whileLoop,"Constructs awhileloop from an initializer, a body, and a predicate."
java.lang.invoke.MethodHandles.zero,Produces a constant method handle of the requested return type which  returns the default value for that type every time it is invoked.
java.lang.invoke.MethodHandles.accessClass,Determines if a class can be accessed from the lookup context defined by  thisLookupobject.
java.lang.invoke.MethodHandles.bind,Produces an early-bound method handle for a non-static method.
java.lang.invoke.MethodHandles.defineClass,Creates and links a class or interface frombyteswith the same class loader and in the same runtime package andprotection domainas this lookup'slookup classas if callingClassLoader::defineClass.
java.lang.invoke.MethodHandles.defineHiddenClass,"Creates ahiddenclass or interface frombytes,  returning aLookupon the newly created class or interface."
java.lang.invoke.MethodHandles.defineHiddenClassWithClassData,"Creates ahiddenclass or interface frombyteswith associatedclass data,  returning aLookupon the newly created class or interface."
java.lang.invoke.MethodHandles.dropLookupMode,"Creates a lookup on the same lookup class which this lookup object  finds members, but with a lookup mode that has lost the given lookup mode."
java.lang.invoke.MethodHandles.ensureInitialized,Ensures thattargetClasshas been initialized.
java.lang.invoke.MethodHandles.findClass,"Looks up a class by name from the lookup context defined by thisLookupobject,as if resolvedby anldcinstruction."
java.lang.invoke.MethodHandles.findConstructor,"Produces a method handle which creates an object and initializes it, using  the constructor of the specified type."
java.lang.invoke.MethodHandles.findGetter,Produces a method handle giving read access to a non-static field.
java.lang.invoke.MethodHandles.findSetter,Produces a method handle giving write access to a non-static field.
java.lang.invoke.MethodHandles.findSpecial,Produces an early-bound method handle for a virtual method.
java.lang.invoke.MethodHandles.findStatic,Produces a method handle for a static method.
java.lang.invoke.MethodHandles.findStaticGetter,Produces a method handle giving read access to a static field.
java.lang.invoke.MethodHandles.findStaticSetter,Produces a method handle giving write access to a static field.
java.lang.invoke.MethodHandles.findStaticVarHandle,Produces a VarHandle giving access to a static fieldnameof  typetypedeclared in a class of typedecl.
java.lang.invoke.MethodHandles.findVarHandle,Produces a VarHandle giving access to a non-static fieldnameof typetypedeclared in a class of typerecv.
java.lang.invoke.MethodHandles.findVirtual,Produces a method handle for a virtual method.
java.lang.invoke.MethodHandles.hasFullPrivilegeAccess,"Returnstrueif this lookup hasfull privilege access,  i.e."
java.lang.invoke.MethodHandles.hasPrivateAccess,Deprecated.This method was originally designed to testPRIVATEaccess  that implies full privilege access butMODULEaccess has since become  independent ofPRIVATEaccess.
java.lang.invoke.MethodHandles.in,Creates a lookup on the specified new lookup class.
java.lang.invoke.MethodHandles.lookupClass,Tells which class is performing the lookup.
java.lang.invoke.MethodHandles.lookupModes,Tells which access-protection classes of members this lookup object can produce.
java.lang.invoke.MethodHandles.previousLookupClass,"Reports a lookup class in another module that this lookup object  was previously teleported from, ornull."
java.lang.invoke.MethodHandles.revealDirect,Cracks adirect method handlecreated by this lookup object or a similar one.
java.lang.invoke.MethodHandles.toString,"Displays the name of the class from which lookups are to be made,  followed by ""/"" and the name of theprevious lookup classif present."
java.lang.invoke.MethodHandles.unreflect,"Makes adirect method handletom, if the lookup class has permission."
java.lang.invoke.MethodHandles.unreflectConstructor,Produces a method handle for a reflected constructor.
java.lang.invoke.MethodHandles.unreflectGetter,Produces a method handle giving read access to a reflected field.
java.lang.invoke.MethodHandles.unreflectSetter,Produces a method handle giving write access to a reflected field.
java.lang.invoke.MethodHandles.unreflectSpecial,Produces a method handle for a reflected method.
java.lang.invoke.MethodHandles.unreflectVarHandle,Produces a VarHandle giving access to a reflected fieldfof typeTdeclared in a class of typeR.
java.lang.invoke.MethodType.appendParameterTypes,Finds or creates a method type with additional parameter types.
java.lang.invoke.MethodType.changeParameterType,Finds or creates a method type with a single different parameter type.
java.lang.invoke.MethodType.changeReturnType,Finds or creates a method type with a different return type.
java.lang.invoke.MethodType.descriptorString,Returns a descriptor string for this method type.
java.lang.invoke.MethodType.dropParameterTypes,Finds or creates a method type with some parameter types omitted.
java.lang.invoke.MethodType.equals,Compares the specified object with this type for equality.
java.lang.invoke.MethodType.erase,Erases all reference types toObject.
java.lang.invoke.MethodType.fromMethodDescriptorString,"Finds or creates an instance of a method type, given the spelling of its bytecode descriptor."
java.lang.invoke.MethodType.generic,"Converts all types, both reference and primitive, toObject."
java.lang.invoke.MethodType.genericMethodType,Finds or creates a method type whose components are allObject.
java.lang.invoke.MethodType.genericMethodType,Finds or creates a method type whose components areObjectwith an optional trailingObject[]array.
java.lang.invoke.MethodType.hashCode,Returns the hash code value for this method type.
java.lang.invoke.MethodType.hasPrimitives,Reports if this type contains a primitive argument or return value.
java.lang.invoke.MethodType.hasWrappers,Reports if this type contains a wrapper argument or return value.
java.lang.invoke.MethodType.lastParameterType,Returns the last parameter type of this method type.
java.lang.invoke.MethodType.methodType,Finds or creates a method type with the given components.
java.lang.invoke.MethodType.methodType,Finds or creates an instance of the given method type.
java.lang.invoke.MethodType.parameterArray,Presents the parameter types as an array (a convenience method).
java.lang.invoke.MethodType.parameterCount,Returns the number of parameter types in this method type.
java.lang.invoke.MethodType.parameterList,Presents the parameter types as a list (a convenience method).
java.lang.invoke.MethodType.parameterType,"Returns the parameter type at the specified index, within this method type."
java.lang.invoke.MethodType.returnType,Returns the return type of this method type.
java.lang.invoke.MethodType.toMethodDescriptorString,Returns a descriptor string for the method type.
java.lang.invoke.MethodType.toString,"Returns a string representation of the method type,  of the form""(PT0,PT1...)RT""."
java.lang.invoke.MethodType.unwrap,Converts all wrapper types to their corresponding primitive types.
java.lang.invoke.MethodType.wrap,Converts all primitive types to their corresponding wrapper types.
java.lang.invoke.MutableCallSite.getTarget,"Returns the target method of the call site, which behaves  like a normal field of theMutableCallSite."
java.lang.invoke.MutableCallSite.setTarget,"Updates the target method of this call site, as a normal variable."
java.lang.invoke.MutableCallSite.syncAll,"Performs a synchronization operation on each call site in the given array,  forcing all other threads to throw away any cached values previously  loaded from the target of any of the call sites."
java.lang.invoke.SerializedLambda.getCapturedArg,Get a dynamic argument to the lambda capture site.
java.lang.invoke.SerializedLambda.getCapturedArgCount,Get the count of dynamic arguments to the lambda capture site.
java.lang.invoke.SerializedLambda.getCapturingClass,Get the name of the class that captured this lambda.
java.lang.invoke.SerializedLambda.getFunctionalInterfaceClass,Get the name of the invoked type to which this  lambda has been converted
java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodName,Get the name of the primary method for the functional interface  to which this lambda has been converted.
java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodSignature,Get the signature of the primary method for the functional  interface to which this lambda has been converted.
java.lang.invoke.SerializedLambda.getImplClass,Get the name of the class containing the implementation  method.
java.lang.invoke.SerializedLambda.getImplMethodKind,Get the method handle kind (seeMethodHandleInfo) of  the implementation method.
java.lang.invoke.SerializedLambda.getImplMethodName,Get the name of the implementation method.
java.lang.invoke.SerializedLambda.getImplMethodSignature,Get the signature of the implementation method.
java.lang.invoke.SerializedLambda.getInstantiatedMethodType,Get the signature of the primary functional interface method  after type variables are substituted with their instantiation  from the capture site.
java.lang.invoke.StringConcatFactory.makeConcat,"Facilitates the creation of optimized String concatenation methods, that  can be used to efficiently concatenate a known number of arguments of  known types, possibly after type adaptation and partial evaluation of  arguments."
java.lang.invoke.SwitchPoint.guardWithTest,Returns a method handle which always delegates either to the target or the fallback.
java.lang.invoke.SwitchPoint.hasBeenInvalidated,Determines if this switch point has been invalidated yet.
java.lang.invoke.SwitchPoint.invalidateAll,Sets all of the given switch points into the invalid state.
java.lang.invoke.VarHandle.methodName,Returns theVarHandlesignature-polymorphic method name  associated with thisAccessModevalue.
java.lang.invoke.VarHandle.valueFromMethodName,Returns theAccessModevalue associated with the specifiedVarHandlesignature-polymorphic method name.
java.lang.invoke.VarHandle.accessModeType,Obtains the access mode type for this VarHandle and a given access mode.
java.lang.invoke.VarHandle.acquireFence,Ensures that loads before the fence will not be reordered with loads and  stores after the fence.
java.lang.invoke.VarHandle.compareAndExchange,"Atomically sets the value of a variable to thenewValuewith the  memory semantics ofsetVolatile(java.lang.Object...)if the variable's current value,  referred to as thewitness value,==theexpectedValue, as accessed with the memory semantics ofgetVolatile(java.lang.Object...)."
java.lang.invoke.VarHandle.compareAndExchangeAcquire,"Atomically sets the value of a variable to thenewValuewith the  memory semantics ofset(java.lang.Object...)if the variable's current value,  referred to as thewitness value,==theexpectedValue, as accessed with the memory semantics ofgetAcquire(java.lang.Object...)."
java.lang.invoke.VarHandle.compareAndExchangeRelease,"Atomically sets the value of a variable to thenewValuewith the  memory semantics ofsetRelease(java.lang.Object...)if the variable's current value,  referred to as thewitness value,==theexpectedValue, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.coordinateTypes,Returns the coordinate types for this VarHandle.
java.lang.invoke.VarHandle.fullFence,Ensures that loads and stores before the fence will not be reordered  with  loads and stores after the fence.
java.lang.invoke.VarHandle.get,"Returns the value of a variable, with memory semantics of reading as  if the variable was declared non-volatile."
java.lang.invoke.VarHandle.getAcquire,"Returns the value of a variable, and ensures that subsequent loads and  stores are not reordered before this access."
java.lang.invoke.VarHandle.getAndAdd,"Atomically adds thevalueto the current value of a variable with  the memory semantics ofsetVolatile(java.lang.Object...), and returns the variable's  previous value, as accessed with the memory semantics ofgetVolatile(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndAddAcquire,"Atomically adds thevalueto the current value of a variable with  the memory semantics ofset(java.lang.Object...), and returns the variable's  previous value, as accessed with the memory semantics ofgetAcquire(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndAddRelease,"Atomically adds thevalueto the current value of a variable with  the memory semantics ofsetRelease(java.lang.Object...), and returns the variable's  previous value, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseAnd,"Atomically sets the value of a variable to the result of  bitwise AND between the variable's current value and themaskwith the memory semantics ofsetVolatile(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofgetVolatile(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseAndAcquire,"Atomically sets the value of a variable to the result of  bitwise AND between the variable's current value and themaskwith the memory semantics ofset(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofgetAcquire(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseAndRelease,"Atomically sets the value of a variable to the result of  bitwise AND between the variable's current value and themaskwith the memory semantics ofsetRelease(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseOr,"Atomically sets the value of a variable to the result of  bitwise OR between the variable's current value and themaskwith the memory semantics ofsetVolatile(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofgetVolatile(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseOrAcquire,"Atomically sets the value of a variable to the result of  bitwise OR between the variable's current value and themaskwith the memory semantics ofset(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofgetAcquire(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseOrRelease,"Atomically sets the value of a variable to the result of  bitwise OR between the variable's current value and themaskwith the memory semantics ofsetRelease(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseXor,"Atomically sets the value of a variable to the result of  bitwise XOR between the variable's current value and themaskwith the memory semantics ofsetVolatile(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofgetVolatile(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseXorAcquire,"Atomically sets the value of a variable to the result of  bitwise XOR between the variable's current value and themaskwith the memory semantics ofset(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofgetAcquire(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndBitwiseXorRelease,"Atomically sets the value of a variable to the result of  bitwise XOR between the variable's current value and themaskwith the memory semantics ofsetRelease(java.lang.Object...)and returns the  variable's previous value, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndSet,"Atomically sets the value of a variable to thenewValuewith the  memory semantics ofsetVolatile(java.lang.Object...)and returns the variable's  previous value, as accessed with the memory semantics ofgetVolatile(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndSetAcquire,"Atomically sets the value of a variable to thenewValuewith the  memory semantics ofset(java.lang.Object...)and returns the variable's  previous value, as accessed with the memory semantics ofgetAcquire(java.lang.Object...)."
java.lang.invoke.VarHandle.getAndSetRelease,"Atomically sets the value of a variable to thenewValuewith the  memory semantics ofsetRelease(java.lang.Object...)and returns the variable's  previous value, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.getOpaque,"Returns the value of a variable, accessed in program order, but with no  assurance of memory ordering effects with respect to other threads."
java.lang.invoke.VarHandle.getVolatile,"Returns the value of a variable, with memory semantics of reading as if  the variable was declaredvolatile."
java.lang.invoke.VarHandle.hasInvokeExactBehavior,Returnstrueif this VarHandle hasinvoke-exact behavior.
java.lang.invoke.VarHandle.isAccessModeSupported,"Returnstrueif the given access mode is supported, otherwisefalse."
java.lang.invoke.VarHandle.loadLoadFence,Ensures that loads before the fence will not be reordered with  loads after the fence.
java.lang.invoke.VarHandle.releaseFence,Ensures that loads and stores before the fence will not be  reordered with stores after the fence.
java.lang.invoke.VarHandle.set,"Sets the value of a variable to thenewValue, with memory  semantics of setting as if the variable was declared non-volatileand non-final."
java.lang.invoke.VarHandle.setOpaque,"Sets the value of a variable to thenewValue, in program order,  but with no assurance of memory ordering effects with respect to other  threads."
java.lang.invoke.VarHandle.setRelease,"Sets the value of a variable to thenewValue, and ensures that  prior loads and stores are not reordered after this access."
java.lang.invoke.VarHandle.setVolatile,"Sets the value of a variable to thenewValue, with memory  semantics of setting as if the variable was declaredvolatile."
java.lang.invoke.VarHandle.storeStoreFence,Ensures that stores before the fence will not be reordered with  stores after the fence.
java.lang.invoke.VarHandle.toMethodHandle,Obtains a method handle bound to this VarHandle and the given access  mode.
java.lang.invoke.VarHandle.toString,"Returns a compact textual description of thisVarHandle,  including the type of variable described, and a description of its coordinates."
java.lang.invoke.VarHandle.varType,Returns the variable type of variables referenced by this VarHandle.
java.lang.invoke.VarHandle.weakCompareAndSet,"Possibly atomically sets the value of a variable to thenewValuewith the memory semantics ofsetVolatile(java.lang.Object...)if the variable's  current value, referred to as thewitness value,==theexpectedValue, as accessed with the memory semantics ofgetVolatile(java.lang.Object...)."
java.lang.invoke.VarHandle.weakCompareAndSetAcquire,"Possibly atomically sets the value of a variable to thenewValuewith the semantics ofset(java.lang.Object...)if the variable's current value,  referred to as thewitness value,==theexpectedValue, as accessed with the memory semantics ofgetAcquire(java.lang.Object...)."
java.lang.invoke.VarHandle.weakCompareAndSetPlain,"Possibly atomically sets the value of a variable to thenewValuewith the semantics ofset(java.lang.Object...)if the variable's current value,  referred to as thewitness value,==theexpectedValue, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.weakCompareAndSetRelease,"Possibly atomically sets the value of a variable to thenewValuewith the semantics ofsetRelease(java.lang.Object...)if the variable's current  value, referred to as thewitness value,==theexpectedValue, as accessed with the memory semantics ofget(java.lang.Object...)."
java.lang.invoke.VarHandle.withInvokeBehavior,"Returns a VarHandle, with access to the same variable(s) as this VarHandle, but whose  invocation behavior of access mode methods is adjusted toinvoke behavior."
java.lang.invoke.VarHandle.withInvokeExactBehavior,"Returns a VarHandle, with access to the same variable(s) as this VarHandle, but whose  invocation behavior of access mode methods is adjusted toinvoke-exact behavior."
java.lang.invoke.VarHandle.ofArray,Returns aVarHandle.VarHandleDesccorresponding to aVarHandlefor an array type.
java.lang.invoke.VarHandle.ofField,Returns aVarHandle.VarHandleDesccorresponding to aVarHandlefor an instance field.
java.lang.invoke.VarHandle.ofStaticField,Returns aVarHandle.VarHandleDesccorresponding to aVarHandlefor a static field.
java.lang.invoke.VarHandle.toString,Returns a compact textual description of this constant description.
java.lang.invoke.VarHandle.varType,Returns aClassDescdescribing the type of the variable described  by this descriptor.
java.lang.invoke.VolatileCallSite.getTarget,"Returns the target method of the call site, which behaves  like avolatilefield of theVolatileCallSite."
java.lang.invoke.VolatileCallSite.setTarget,"Updates the target method of this call site, as a volatile variable."
java.lang.module.Configuration.empty,Returns theemptyconfiguration.
java.lang.module.Configuration.findModule,"Finds a resolved module in this configuration, or if not in this  configuration, theparentconfigurations."
java.lang.module.Configuration.modules,Returns an unmodifiable set of the resolved modules in this configuration.
java.lang.module.Configuration.parents,"Returns an unmodifiable list of this configuration's parents, in search  order."
java.lang.module.Configuration.resolve,"Resolves a collection of root modules, with this configuration as its  parent, to create a new configuration."
java.lang.module.Configuration.resolve,Resolves a collection of root modules to create a configuration.
java.lang.module.Configuration.resolveAndBind,"Resolves a collection of root modules, with service binding, and with  this configuration as its parent, to create a new configuration."
java.lang.module.Configuration.resolveAndBind,"Resolves a collection of root modules, with service binding, to create  configuration."
java.lang.module.Configuration.toString,Returns a string describing this configuration.
java.lang.module.ModuleDescriptor.build,Builds and returns aModuleDescriptorfrom its components.
java.lang.module.ModuleDescriptor.exports,Adds an exported package.
java.lang.module.ModuleDescriptor.exports,Adds an exported package with the given (and possibly empty) set of  modifiers.
java.lang.module.ModuleDescriptor.mainClass,Sets the module main class.
java.lang.module.ModuleDescriptor.opens,Adds an open package.
java.lang.module.ModuleDescriptor.opens,Adds an open package with the given (and possibly empty) set of  modifiers.
java.lang.module.ModuleDescriptor.packages,Adds packages to the module.
java.lang.module.ModuleDescriptor.provides,Provides a service with one or more implementations.
java.lang.module.ModuleDescriptor.provides,Provides implementations of a service.
java.lang.module.ModuleDescriptor.requires,Adds a dependence on a module.
java.lang.module.ModuleDescriptor.requires,Adds a dependence on a module with an empty set of modifiers.
java.lang.module.ModuleDescriptor.requires,Adds a dependence on a module with the given (and possibly empty)  set of modifiers.
java.lang.module.ModuleDescriptor.uses,Adds a service dependence.
java.lang.module.ModuleDescriptor.version,Sets the module version.
java.lang.module.ModuleDescriptor.compareTo,Compares this module export to another.
java.lang.module.ModuleDescriptor.equals,Tests this module export for equality with the given object.
java.lang.module.ModuleDescriptor.hashCode,Computes a hash code for this module export.
java.lang.module.ModuleDescriptor.isQualified,Returnstrueif this is a qualified export.
java.lang.module.ModuleDescriptor.modifiers,Returns the set of modifiers.
java.lang.module.ModuleDescriptor.source,Returns the package name.
java.lang.module.ModuleDescriptor.targets,"For a qualified export, returns the non-empty and immutable set  of the module names to which the package is exported."
java.lang.module.ModuleDescriptor.toString,Returns a string describing the exported package.
java.lang.module.ModuleDescriptor.compareTo,Compares this module descriptor to another.
java.lang.module.ModuleDescriptor.equals,Tests this module descriptor for equality with the given object.
java.lang.module.ModuleDescriptor.exports,Returns the set ofExportsobjects representing the exported  packages.
java.lang.module.ModuleDescriptor.hashCode,Computes a hash code for this module descriptor.
java.lang.module.ModuleDescriptor.isAutomatic,Returnstrueif this is an automatic module.
java.lang.module.ModuleDescriptor.isOpen,Returnstrueif this is an open module.
java.lang.module.ModuleDescriptor.mainClass,Returns the module main class.
java.lang.module.ModuleDescriptor.modifiers,Returns the set of module modifiers.
java.lang.module.ModuleDescriptor.name,Returns the module name.
java.lang.module.ModuleDescriptor.newAutomaticModule,Instantiates a builder to build a module descriptor for an automatic  module.
java.lang.module.ModuleDescriptor.newModule,Instantiates a builder to build a module descriptor for anormalmodule.
java.lang.module.ModuleDescriptor.newModule,Instantiates a builder to build a module descriptor.
java.lang.module.ModuleDescriptor.newOpenModule,Instantiates a builder to build a module descriptor for an open module.
java.lang.module.ModuleDescriptor.opens,Returns the set ofOpensobjects representing the open  packages.
java.lang.module.ModuleDescriptor.packages,Returns the set of packages in the module.
java.lang.module.ModuleDescriptor.provides,Returns the set ofProvidesobjects representing the  services that the module provides.
java.lang.module.ModuleDescriptor.rawVersion,Returns the string with the possibly-unparseable version of the  module.
java.lang.module.ModuleDescriptor.read,Reads the binary form of a module declaration from an input stream as a  module descriptor.
java.lang.module.ModuleDescriptor.read,Reads the binary form of a module declaration from an input stream  as a module descriptor.
java.lang.module.ModuleDescriptor.read,Reads the binary form of a module declaration from a byte buffer as a  module descriptor.
java.lang.module.ModuleDescriptor.read,Reads the binary form of a module declaration from a byte buffer  as a module descriptor.
java.lang.module.ModuleDescriptor.requires,Returns the set ofRequiresobjects representing the module  dependences.
java.lang.module.ModuleDescriptor.toNameAndVersion,"Returns a string containing the module name and, if present, its  version."
java.lang.module.ModuleDescriptor.toString,Returns a string describing the module.
java.lang.module.ModuleDescriptor.uses,Returns the set of service dependences.
java.lang.module.ModuleDescriptor.version,Returns the module version.
java.lang.module.ModuleDescriptor.compareTo,Compares this moduleOpensto another.
java.lang.module.ModuleDescriptor.equals,Tests this moduleOpensfor equality with the given object.
java.lang.module.ModuleDescriptor.hashCode,Computes a hash code for this moduleOpens.
java.lang.module.ModuleDescriptor.isQualified,Returnstrueif this is a qualifiedOpens.
java.lang.module.ModuleDescriptor.targets,"For a qualifiedOpens, returns the non-empty and immutable set  of the module names to which the package is open."
java.lang.module.ModuleDescriptor.toString,Returns a string describing the open package.
java.lang.module.ModuleDescriptor.compareTo,Compares thisProvidesto another.
java.lang.module.ModuleDescriptor.equals,Tests thisProvidesfor equality with the given object.
java.lang.module.ModuleDescriptor.hashCode,Computes a hash code for thisProvides.
java.lang.module.ModuleDescriptor.providers,Returns the list of the fully qualified class names of the providers  or provider factories.
java.lang.module.ModuleDescriptor.service,Returns the fully qualified class name of the service type.
java.lang.module.ModuleDescriptor.toString,Returns a string describing thisProvides.
java.lang.module.ModuleDescriptor.compareTo,Compares this module dependence to another.
java.lang.module.ModuleDescriptor.compiledVersion,Returns the version of the module if recorded at compile-time.
java.lang.module.ModuleDescriptor.equals,Tests this module dependence for equality with the given object.
java.lang.module.ModuleDescriptor.hashCode,Computes a hash code for this module dependence.
java.lang.module.ModuleDescriptor.name,Return the module name.
java.lang.module.ModuleDescriptor.rawCompiledVersion,Returns the string with the possibly-unparseable version of the module  if recorded at compile-time.
java.lang.module.ModuleDescriptor.toString,Returns a string describing this module dependence.
java.lang.module.ModuleDescriptor.compareTo,Compares this module version to another module version.
java.lang.module.ModuleDescriptor.equals,Tests this module version for equality with the given object.
java.lang.module.ModuleDescriptor.hashCode,Computes a hash code for this module version.
java.lang.module.ModuleDescriptor.parse,Parses the given string as a version string.
java.lang.module.ModuleDescriptor.toString,Returns the string from which this version was parsed.
java.lang.module.ModuleReference.descriptor,Returns the module descriptor.
java.lang.module.ModuleReference.location,"Returns the location of this module's content, if known."
java.lang.module.ModuleReference.open,Opens the module content for reading.
java.lang.module.ResolvedModule.configuration,Returns the configuration that this resolved module is in.
java.lang.module.ResolvedModule.equals,Tests this resolved module for equality with the given object.
java.lang.module.ResolvedModule.hashCode,Computes a hash code for this resolved module.
java.lang.module.ResolvedModule.reads,Returns the set of resolved modules that this resolved module reads.
java.lang.module.ResolvedModule.reference,Returns the reference to the module's content.
java.lang.module.ResolvedModule.toString,Returns a string describing this resolved module.
java.lang.ref.Cleaner.clean,Unregisters the cleanable and invokes the cleaning action.
java.lang.ref.Cleaner.create,Returns a newCleaner.
java.lang.ref.Cleaner.create,Returns a newCleanerusing aThreadfrom theThreadFactory.
java.lang.ref.Cleaner.register,Registers an object and a cleaning action to run when the object  becomes phantom reachable.
java.lang.ref.PhantomReference.get,Returns this reference object's referent.
java.lang.ref.Reference.clear,Clears this reference object.
java.lang.ref.Reference.clone,ThrowsCloneNotSupportedException.
java.lang.ref.Reference.enqueue,"Clears this reference object and adds it to the queue with which  it is registered, if any."
java.lang.ref.Reference.isEnqueued,Deprecated.This method was originally specified to test if a reference object has  been cleared and enqueued but was never implemented to do this test.
java.lang.ref.Reference.reachabilityFence,"Ensures that the object referenced by the given reference remainsstrongly reachable,  regardless of any prior actions of the program that might otherwise cause  the object to become unreachable; thus, the referenced object is not  reclaimable by garbage collection at least until after the invocation of  this method."
java.lang.ref.Reference.refersTo,Tests if the referent of this reference object isobj.
java.lang.ref.ReferenceQueue.poll,Polls this queue to see if a reference object is available.
java.lang.ref.ReferenceQueue.remove,"Removes the next reference object in this queue, blocking until one  becomes available."
java.lang.ref.ReferenceQueue.remove,"Removes the next reference object in this queue, blocking until either  one becomes available or the given timeout period expires."
java.lang.reflect.AccessibleObject.canAccess,Test if the caller can access this reflected object.
java.lang.reflect.AccessibleObject.isAccessible,Deprecated.This method is deprecated because its name hints that it checks  if the reflected object is accessible when it actually indicates  if the checks for Java language access control are suppressed.
java.lang.reflect.AccessibleObject.setAccessible,Set theaccessibleflag for this reflected object to  the indicated boolean value.
java.lang.reflect.AccessibleObject.setAccessible,Convenience method to set theaccessibleflag for an  array of reflected objects with a single security check (for efficiency).
java.lang.reflect.AccessibleObject.trySetAccessible,Set theaccessibleflag for this reflected object totrueif possible.
java.lang.reflect.Array.get,Returns the value of the indexed component in the specified  array object.
java.lang.reflect.Array.getBoolean,"Returns the value of the indexed component in the specified  array object, as aboolean."
java.lang.reflect.Array.getByte,"Returns the value of the indexed component in the specified  array object, as abyte."
java.lang.reflect.Array.getChar,"Returns the value of the indexed component in the specified  array object, as achar."
java.lang.reflect.Array.getDouble,"Returns the value of the indexed component in the specified  array object, as adouble."
java.lang.reflect.Array.getFloat,"Returns the value of the indexed component in the specified  array object, as afloat."
java.lang.reflect.Array.getInt,"Returns the value of the indexed component in the specified  array object, as anint."
java.lang.reflect.Array.getLength,"Returns the length of the specified array object, as anint."
java.lang.reflect.Array.getLong,"Returns the value of the indexed component in the specified  array object, as along."
java.lang.reflect.Array.getShort,"Returns the value of the indexed component in the specified  array object, as ashort."
java.lang.reflect.Array.newInstance,Creates a new array with the specified component type and  length.
java.lang.reflect.Array.newInstance,Creates a new array  with the specified component type and dimensions.
java.lang.reflect.Array.set,Sets the value of the indexed component of the specified array  object to the specified new value.
java.lang.reflect.Array.setBoolean,Sets the value of the indexed component of the specified array  object to the specifiedbooleanvalue.
java.lang.reflect.Array.setByte,Sets the value of the indexed component of the specified array  object to the specifiedbytevalue.
java.lang.reflect.Array.setChar,Sets the value of the indexed component of the specified array  object to the specifiedcharvalue.
java.lang.reflect.Array.setDouble,Sets the value of the indexed component of the specified array  object to the specifieddoublevalue.
java.lang.reflect.Array.setFloat,Sets the value of the indexed component of the specified array  object to the specifiedfloatvalue.
java.lang.reflect.Array.setInt,Sets the value of the indexed component of the specified array  object to the specifiedintvalue.
java.lang.reflect.Array.setLong,Sets the value of the indexed component of the specified array  object to the specifiedlongvalue.
java.lang.reflect.Array.setShort,Sets the value of the indexed component of the specified array  object to the specifiedshortvalue.
java.lang.reflect.Constructor.equals,Compares thisConstructoragainst the specified object.
java.lang.reflect.Constructor.getAnnotatedReceiverType,Returns anAnnotatedTypeobject that represents the use of a  type to specify the receiver type of the method/constructor represented  by thisExecutableobject.
java.lang.reflect.Constructor.getAnnotatedReturnType,Returns anAnnotatedTypeobject that represents the use of a type to  specify the return type of the method/constructor represented by this  Executable.
java.lang.reflect.Constructor.getDeclaringClass,Returns theClassobject representing the class that  declares the constructor represented by this object.
java.lang.reflect.Constructor.getExceptionTypes,Returns an array ofClassobjects that represent the  types of exceptions declared to be thrown by the underlying  executable represented by this object.
java.lang.reflect.Constructor.getGenericExceptionTypes,Returns an array ofTypeobjects that represent the  exceptions declared to be thrown by this executable object.
java.lang.reflect.Constructor.getGenericParameterTypes,"Returns an array ofTypeobjects that represent the  formal parameter types, in declaration order, of the executable  represented by this object."
java.lang.reflect.Constructor.getModifiers,Returns the Java languagemodifiersfor  the executable represented by this object.
java.lang.reflect.Constructor.getName,"Returns the name of this constructor, as a string."
java.lang.reflect.Constructor.getParameterAnnotations,"Returns an array of arrays ofAnnotations that  represent the annotations on the formal parameters, in  declaration order, of theExecutablerepresented by  this object."
java.lang.reflect.Constructor.getParameterCount,Returns the number of formal parameters (whether explicitly  declared or implicitly declared or neither) for the executable  represented by this object.
java.lang.reflect.Constructor.getParameterTypes,"Returns an array ofClassobjects that represent the formal  parameter types, in declaration order, of the executable  represented by this object."
java.lang.reflect.Constructor.hashCode,Returns a hashcode for thisConstructor.
java.lang.reflect.Constructor.isSynthetic,Returnstrueif this executable is a synthetic  construct; returnsfalseotherwise.
java.lang.reflect.Constructor.isVarArgs,Returnstrueif this executable was declared to take a  variable number of arguments; returnsfalseotherwise.
java.lang.reflect.Constructor.newInstance,"Uses the constructor represented by thisConstructorobject to  create and initialize a new instance of the constructor's  declaring class, with the specified initialization parameters."
java.lang.reflect.Constructor.toGenericString,"Returns a string describing thisConstructor,  including type parameters."
java.lang.reflect.Constructor.toString,Returns a string describing thisConstructor.
java.lang.reflect.Executable.getAnnotatedExceptionTypes,Returns an array ofAnnotatedTypeobjects that represent the use  of types to specify the declared exceptions of the method/constructor  represented by this Executable.
java.lang.reflect.Executable.getAnnotatedParameterTypes,Returns an array ofAnnotatedTypeobjects that represent the use  of types to specify formal parameter types of the method/constructor  represented by this Executable.
java.lang.reflect.Executable.getDeclaringClass,Returns theClassobject representing the class or interface  that declares the executable represented by this object.
java.lang.reflect.Executable.getName,Returns the name of the executable represented by this object.
java.lang.reflect.Executable.getParameters,Returns an array ofParameterobjects representing  all the parameters to the underlying executable represented by  this object.
java.lang.reflect.Executable.toGenericString,"Returns a string describing thisExecutable, including  any type parameters."
java.lang.reflect.Field.equals,Compares thisFieldagainst the specified object.
java.lang.reflect.Field.get,"Returns the value of the field represented by thisField, on  the specified object."
java.lang.reflect.Field.getAnnotatedType,Returns an AnnotatedType object that represents the use of a type to specify  the declared type of the field represented by this Field.
java.lang.reflect.Field.getBoolean,Gets the value of a static or instancebooleanfield.
java.lang.reflect.Field.getByte,Gets the value of a static or instancebytefield.
java.lang.reflect.Field.getChar,Gets the value of a static or instance field of typecharor of another primitive type convertible to  typecharvia a widening conversion.
java.lang.reflect.Field.getDeclaringClass,Returns theClassobject representing the class or interface  that declares the field represented by thisFieldobject.
java.lang.reflect.Field.getDouble,Gets the value of a static or instance field of typedoubleor of another primitive type convertible to  typedoublevia a widening conversion.
java.lang.reflect.Field.getFloat,Gets the value of a static or instance field of typefloator of another primitive type convertible to  typefloatvia a widening conversion.
java.lang.reflect.Field.getGenericType,Returns aTypeobject that represents the declared type for  the field represented by thisFieldobject.
java.lang.reflect.Field.getInt,Gets the value of a static or instance field of typeintor of another primitive type convertible to  typeintvia a widening conversion.
java.lang.reflect.Field.getLong,Gets the value of a static or instance field of typelongor of another primitive type convertible to  typelongvia a widening conversion.
java.lang.reflect.Field.getModifiers,"Returns the Java language modifiers for the field represented  by thisFieldobject, as an integer."
java.lang.reflect.Field.getName,Returns the name of the field represented by thisFieldobject.
java.lang.reflect.Field.getShort,Gets the value of a static or instance field of typeshortor of another primitive type convertible to  typeshortvia a widening conversion.
java.lang.reflect.Field.getType,Returns aClassobject that identifies the  declared type for the field represented by thisFieldobject.
java.lang.reflect.Field.hashCode,Returns a hashcode for thisField.
java.lang.reflect.Field.isEnumConstant,Returnstrueif this field represents an element of  an enumerated class; returnsfalseotherwise.
java.lang.reflect.Field.isSynthetic,Returnstrueif this field is a synthetic  field; returnsfalseotherwise.
java.lang.reflect.Field.set,Sets the field represented by thisFieldobject on the  specified object argument to the specified new value.
java.lang.reflect.Field.setBoolean,Sets the value of a field as abooleanon the specified object.
java.lang.reflect.Field.setByte,Sets the value of a field as abyteon the specified object.
java.lang.reflect.Field.setChar,Sets the value of a field as acharon the specified object.
java.lang.reflect.Field.setDouble,Sets the value of a field as adoubleon the specified object.
java.lang.reflect.Field.setFloat,Sets the value of a field as afloaton the specified object.
java.lang.reflect.Field.setInt,Sets the value of a field as aninton the specified object.
java.lang.reflect.Field.setLong,Sets the value of a field as alongon the specified object.
java.lang.reflect.Field.setShort,Sets the value of a field as ashorton the specified object.
java.lang.reflect.Field.toGenericString,"Returns a string describing thisField, including  its generic type."
java.lang.reflect.Field.toString,Returns a string describing thisField.
java.lang.reflect.InvocationTargetException.getCause,"Returns the cause of this exception (the thrown target exception,  which may benull)."
java.lang.reflect.InvocationTargetException.getTargetException,Get the thrown target exception.
java.lang.reflect.Method.equals,Compares thisMethodagainst the specified object.
java.lang.reflect.Method.getDeclaringClass,Returns theClassobject representing the class or interface  that declares the method represented by this object.
java.lang.reflect.Method.getDefaultValue,Returns the default value for the annotation member represented by  thisMethodinstance.
java.lang.reflect.Method.getGenericReturnType,Returns aTypeobject that represents the formal return  type of the method represented by thisMethodobject.
java.lang.reflect.Method.getName,"Returns the name of the method represented by thisMethodobject, as aString."
java.lang.reflect.Method.getReturnType,Returns aClassobject that represents the formal return type  of the method represented by thisMethodobject.
java.lang.reflect.Method.hashCode,Returns a hashcode for thisMethod.
java.lang.reflect.Method.invoke,"Invokes the underlying method represented by thisMethodobject, on the specified object with the specified parameters."
java.lang.reflect.Method.isBridge,Returnstrueif this method is a bridge  method; returnsfalseotherwise.
java.lang.reflect.Method.isDefault,Returnstrueif this method is a default  method; returnsfalseotherwise.
java.lang.reflect.Method.toGenericString,"Returns a string describing thisMethod, including type  parameters."
java.lang.reflect.Method.toString,Returns a string describing thisMethod.
java.lang.reflect.Modifier.classModifiers,Return anintvalue OR-ing together the source language  modifiers that can be applied to a class.
java.lang.reflect.Modifier.constructorModifiers,Return anintvalue OR-ing together the source language  modifiers that can be applied to a constructor.
java.lang.reflect.Modifier.fieldModifiers,Return anintvalue OR-ing together the source language  modifiers that can be applied to a field.
java.lang.reflect.Modifier.interfaceModifiers,Return anintvalue OR-ing together the source language  modifiers that can be applied to an interface.
java.lang.reflect.Modifier.isAbstract,"Returntrueif the integer argument includes theabstractmodifier,falseotherwise."
java.lang.reflect.Modifier.isFinal,"Returntrueif the integer argument includes thefinalmodifier,falseotherwise."
java.lang.reflect.Modifier.isInterface,"Returntrueif the integer argument includes theinterfacemodifier,falseotherwise."
java.lang.reflect.Modifier.isNative,"Returntrueif the integer argument includes thenativemodifier,falseotherwise."
java.lang.reflect.Modifier.isPrivate,"Returntrueif the integer argument includes theprivatemodifier,falseotherwise."
java.lang.reflect.Modifier.isProtected,"Returntrueif the integer argument includes theprotectedmodifier,falseotherwise."
java.lang.reflect.Modifier.isPublic,"Returntrueif the integer argument includes thepublicmodifier,falseotherwise."
java.lang.reflect.Modifier.isStatic,"Returntrueif the integer argument includes thestaticmodifier,falseotherwise."
java.lang.reflect.Modifier.isStrict,"Returntrueif the integer argument includes thestrictfpmodifier,falseotherwise."
java.lang.reflect.Modifier.isSynchronized,"Returntrueif the integer argument includes thesynchronizedmodifier,falseotherwise."
java.lang.reflect.Modifier.isTransient,"Returntrueif the integer argument includes thetransientmodifier,falseotherwise."
java.lang.reflect.Modifier.isVolatile,"Returntrueif the integer argument includes thevolatilemodifier,falseotherwise."
java.lang.reflect.Modifier.methodModifiers,Return anintvalue OR-ing together the source language  modifiers that can be applied to a method.
java.lang.reflect.Modifier.parameterModifiers,Return anintvalue OR-ing together the source language  modifiers that can be applied to a parameter.
java.lang.reflect.Modifier.toString,Return a string describing the access modifier flags in  the specified modifier.
java.lang.reflect.Parameter.equals,Compares based on the executable and the index.
java.lang.reflect.Parameter.getAnnotatedType,Returns an AnnotatedType object that represents the use of a type to  specify the type of the formal parameter represented by this Parameter.
java.lang.reflect.Parameter.getDeclaringExecutable,Returns theExecutabledeclaring this parameter.
java.lang.reflect.Parameter.getModifiers,Returns the Java languagemodifiersfor  the parameter represented by this object.
java.lang.reflect.Parameter.getName,Returns the name of the parameter.
java.lang.reflect.Parameter.getParameterizedType,Returns aTypeobject that identifies the parameterized  type for the parameter represented by thisParameterobject.
java.lang.reflect.Parameter.getType,Returns aClassobject that identifies the  declared type for the parameter represented by thisParameterobject.
java.lang.reflect.Parameter.hashCode,Returns a hash code based on the executable's hash code and the  index.
java.lang.reflect.Parameter.isImplicit,Returnstrueif this parameter is implicitly declared  in source code; returnsfalseotherwise.
java.lang.reflect.Parameter.isNamePresent,Returns true if the parameter has a name according to the class  file; returns false otherwise.
java.lang.reflect.Parameter.isSynthetic,Returnstrueif this parameter is neither implicitly  nor explicitly declared in source code; returnsfalseotherwise.
java.lang.reflect.Parameter.isVarArgs,Returnstrueif this parameter represents a variable  argument list; returnsfalseotherwise.
java.lang.reflect.Parameter.toString,Returns a string describing this parameter.
java.lang.reflect.Proxy.getInvocationHandler,Returns the invocation handler for the specified proxy instance.
java.lang.reflect.Proxy.getProxyClass,Deprecated.Proxy classes generated in a named module are encapsulated       and not accessible to code outside its module.
java.lang.reflect.Proxy.isProxyClass,Returns true if the given class is a proxy class.
java.lang.reflect.Proxy.newProxyInstance,Returns a proxy instance for the specified interfaces  that dispatches method invocations to the specified invocation  handler.
java.lang.reflect.RecordComponent.getAccessor,Returns aMethodthat represents the accessor for this record  component.
java.lang.reflect.RecordComponent.getAnnotatedType,Returns anAnnotatedTypeobject that represents the use of a type to specify  the declared type of this record component.
java.lang.reflect.RecordComponent.getDeclaringRecord,Returns the record class which declares this record component.
java.lang.reflect.RecordComponent.getGenericSignature,Returns aStringthat describes the generic type signature for  this record component.
java.lang.reflect.RecordComponent.getGenericType,Returns aTypeobject that represents the declared type for  this record component.
java.lang.reflect.RecordComponent.getName,Returns the name of this record component.
java.lang.reflect.RecordComponent.getType,Returns aClassthat identifies the declared type for this  record component.
java.lang.reflect.RecordComponent.toString,Returns a string describing this record component.
java.lang.reflect.UndeclaredThrowableException.getUndeclaredThrowable,"Returns theThrowableinstance wrapped in thisUndeclaredThrowableException, which may benull."
java.lang.runtime.ObjectMethods.bootstrap,"Bootstrap method to generate theObject.equals(Object),Object.hashCode(), andObject.toString()methods, based  on a description of the component names and accessor methods, for eitherinvokedynamiccall sites or dynamic constant pool entries."
java.lang.runtime.SwitchBootstraps.enumSwitch,Bootstrap method for linking aninvokedynamiccall site that  implements aswitchon a target of an enum type.
java.lang.runtime.SwitchBootstraps.typeSwitch,Bootstrap method for linking aninvokedynamiccall site that  implements aswitchon a target of a reference type.
java.math.BigDecimal.abs,"Returns aBigDecimalwhose value is the absolute value  of thisBigDecimal, and whose scale isthis.scale()."
java.math.BigDecimal.abs,"Returns aBigDecimalwhose value is the absolute value  of thisBigDecimal, with rounding according to the  context settings."
java.math.BigDecimal.add,"Returns aBigDecimalwhose value is(this +  augend), and whose scale ismax(this.scale(),  augend.scale())."
java.math.BigDecimal.add,"Returns aBigDecimalwhose value is(this + augend),  with rounding according to the context settings."
java.math.BigDecimal.byteValueExact,"Converts thisBigDecimalto abyte, checking  for lost information."
java.math.BigDecimal.compareTo,Compares thisBigDecimalnumerically with the specifiedBigDecimal.
java.math.BigDecimal.divide,"Returns aBigDecimalwhose value is(this /  divisor), and whose preferred scale is(this.scale() -  divisor.scale()); if the exact quotient cannot be  represented (because it has a non-terminating decimal  expansion) anArithmeticExceptionis thrown."
java.math.BigDecimal.divide,"Deprecated.The methoddivide(BigDecimal, RoundingMode)should be used in preference to this legacy method."
java.math.BigDecimal.divide,"Deprecated.The methoddivide(BigDecimal, int, RoundingMode)should be used in preference to this legacy method."
java.math.BigDecimal.divide,"Returns aBigDecimalwhose value is(this /  divisor), and whose scale is as specified."
java.math.BigDecimal.divide,"Returns aBigDecimalwhose value is(this /  divisor), with rounding according to the context settings."
java.math.BigDecimal.divide,"Returns aBigDecimalwhose value is(this /  divisor), and whose scale isthis.scale()."
java.math.BigDecimal.divideAndRemainder,Returns a two-elementBigDecimalarray containing the  result ofdivideToIntegralValuefollowed by the result ofremainderon the two operands.
java.math.BigDecimal.divideAndRemainder,Returns a two-elementBigDecimalarray containing the  result ofdivideToIntegralValuefollowed by the result ofremainderon the two operands calculated with rounding  according to the context settings.
java.math.BigDecimal.divideToIntegralValue,Returns aBigDecimalwhose value is the integer part  of the quotient(this / divisor)rounded down.
java.math.BigDecimal.divideToIntegralValue,Returns aBigDecimalwhose value is the integer part  of(this / divisor).
java.math.BigDecimal.doubleValue,Converts thisBigDecimalto adouble.
java.math.BigDecimal.equals,Compares thisBigDecimalwith the specifiedObjectfor equality.
java.math.BigDecimal.floatValue,Converts thisBigDecimalto afloat.
java.math.BigDecimal.hashCode,Returns the hash code for thisBigDecimal.
java.math.BigDecimal.intValue,Converts thisBigDecimalto anint.
java.math.BigDecimal.intValueExact,"Converts thisBigDecimalto anint, checking  for lost information."
java.math.BigDecimal.longValue,Converts thisBigDecimalto along.
java.math.BigDecimal.longValueExact,"Converts thisBigDecimalto along, checking  for lost information."
java.math.BigDecimal.max,Returns the maximum of thisBigDecimalandval.
java.math.BigDecimal.min,Returns the minimum of thisBigDecimalandval.
java.math.BigDecimal.movePointLeft,Returns aBigDecimalwhich is equivalent to this one  with the decimal point movednplaces to the left.
java.math.BigDecimal.movePointRight,Returns aBigDecimalwhich is equivalent to this one  with the decimal point movednplaces to the right.
java.math.BigDecimal.multiply,"Returns aBigDecimalwhose value is(this ×  multiplicand), and whose scale is(this.scale() +  multiplicand.scale())."
java.math.BigDecimal.multiply,"Returns aBigDecimalwhose value is(this ×  multiplicand), with rounding according to the context settings."
java.math.BigDecimal.negate,"Returns aBigDecimalwhose value is(-this),  and whose scale isthis.scale()."
java.math.BigDecimal.negate,"Returns aBigDecimalwhose value is(-this),  with rounding according to the context settings."
java.math.BigDecimal.plus,"Returns aBigDecimalwhose value is(+this), and whose  scale isthis.scale()."
java.math.BigDecimal.plus,"Returns aBigDecimalwhose value is(+this),  with rounding according to the context settings."
java.math.BigDecimal.pow,"Returns aBigDecimalwhose value is(thisn), The power is computed exactly, to  unlimited precision."
java.math.BigDecimal.pow,Returns aBigDecimalwhose value is(thisn).
java.math.BigDecimal.precision,Returns theprecisionof thisBigDecimal.
java.math.BigDecimal.remainder,Returns aBigDecimalwhose value is(this % divisor).
java.math.BigDecimal.remainder,"Returns aBigDecimalwhose value is(this %  divisor), with rounding according to the context settings."
java.math.BigDecimal.round,Returns aBigDecimalrounded according to theMathContextsettings.
java.math.BigDecimal.scale,Returns thescaleof thisBigDecimal.
java.math.BigDecimal.scaleByPowerOfTen,Returns a BigDecimal whose numerical value is equal to  (this* 10n).
java.math.BigDecimal.setScale,"Returns aBigDecimalwhose scale is the specified  value, and whose value is numerically equal to thisBigDecimal's."
java.math.BigDecimal.setScale,"Deprecated.The methodsetScale(int, RoundingMode)should  be used in preference to this legacy method."
java.math.BigDecimal.setScale,"Returns aBigDecimalwhose scale is the specified  value, and whose unscaled value is determined by multiplying or  dividing thisBigDecimal's unscaled value by the  appropriate power of ten to maintain its overall value."
java.math.BigDecimal.shortValueExact,"Converts thisBigDecimalto ashort, checking  for lost information."
java.math.BigDecimal.signum,Returns the signum function of thisBigDecimal.
java.math.BigDecimal.sqrt,Returns an approximation to the square root ofthiswith rounding according to the context settings.
java.math.BigDecimal.stripTrailingZeros,Returns aBigDecimalwhich is numerically equal to  this one but with any trailing zeros removed from the  representation.
java.math.BigDecimal.subtract,"Returns aBigDecimalwhose value is(this -  subtrahend), and whose scale ismax(this.scale(),  subtrahend.scale())."
java.math.BigDecimal.subtract,"Returns aBigDecimalwhose value is(this - subtrahend),  with rounding according to the context settings."
java.math.BigDecimal.toBigInteger,Converts thisBigDecimalto aBigInteger.
java.math.BigDecimal.toBigIntegerExact,"Converts thisBigDecimalto aBigInteger,  checking for lost information."
java.math.BigDecimal.toEngineeringString,"Returns a string representation of thisBigDecimal,  using engineering notation if an exponent is needed."
java.math.BigDecimal.toPlainString,Returns a string representation of thisBigDecimalwithout an exponent field.
java.math.BigDecimal.toString,"Returns the string representation of thisBigDecimal,  using scientific notation if an exponent is needed."
java.math.BigDecimal.ulp,"Returns the size of an ulp, a unit in the last place, of thisBigDecimal."
java.math.BigDecimal.unscaledValue,Returns aBigIntegerwhose value is theunscaled  valueof thisBigDecimal.
java.math.BigDecimal.valueOf,"Translates adoubleinto aBigDecimal, using  thedouble's canonical string representation provided  by theDouble.toString(double)method."
java.math.BigDecimal.valueOf,Translates alongvalue into aBigDecimalwith a scale of zero.
java.math.BigDecimal.valueOf,Translates alongunscaled value and anintscale into aBigDecimal.
java.math.BigInteger.abs,Returns a BigInteger whose value is the absolute value of this  BigInteger.
java.math.BigInteger.add,Returns a BigInteger whose value is(this + val).
java.math.BigInteger.and,Returns a BigInteger whose value is(this & val).
java.math.BigInteger.andNot,Returns a BigInteger whose value is(this & ~val).
java.math.BigInteger.bitCount,Returns the number of bits in the two's complement representation  of this BigInteger that differ from its sign bit.
java.math.BigInteger.bitLength,"Returns the number of bits in the minimal two's-complement  representation of this BigInteger,excludinga sign bit."
java.math.BigInteger.byteValueExact,"Converts thisBigIntegerto abyte, checking  for lost information."
java.math.BigInteger.clearBit,Returns a BigInteger whose value is equivalent to this BigInteger  with the designated bit cleared.
java.math.BigInteger.compareTo,Compares this BigInteger with the specified BigInteger.
java.math.BigInteger.divide,Returns a BigInteger whose value is(this / val).
java.math.BigInteger.divideAndRemainder,Returns an array of two BigIntegers containing(this / val)followed by(this % val).
java.math.BigInteger.doubleValue,Converts this BigInteger to adouble.
java.math.BigInteger.equals,Compares this BigInteger with the specified Object for equality.
java.math.BigInteger.flipBit,Returns a BigInteger whose value is equivalent to this BigInteger  with the designated bit flipped.
java.math.BigInteger.floatValue,Converts this BigInteger to afloat.
java.math.BigInteger.gcd,Returns a BigInteger whose value is the greatest common divisor ofabs(this)andabs(val).
java.math.BigInteger.getLowestSetBit,Returns the index of the rightmost (lowest-order) one bit in this  BigInteger (the number of zero bits to the right of the rightmost  one bit).
java.math.BigInteger.hashCode,Returns the hash code for this BigInteger.
java.math.BigInteger.intValue,Converts this BigInteger to anint.
java.math.BigInteger.intValueExact,"Converts thisBigIntegerto anint, checking  for lost information."
java.math.BigInteger.isProbablePrime,"Returnstrueif this BigInteger is probably prime,falseif it's definitely composite."
java.math.BigInteger.longValue,Converts this BigInteger to along.
java.math.BigInteger.longValueExact,"Converts thisBigIntegerto along, checking  for lost information."
java.math.BigInteger.max,Returns the maximum of this BigInteger andval.
java.math.BigInteger.min,Returns the minimum of this BigInteger andval.
java.math.BigInteger.mod,Returns a BigInteger whose value is(this mod m).
java.math.BigInteger.modInverse,Returns a BigInteger whose value is(this-1mod m).
java.math.BigInteger.modPow,Returns a BigInteger whose value is(thisexponentmod m).
java.math.BigInteger.multiply,Returns a BigInteger whose value is(this * val).
java.math.BigInteger.negate,Returns a BigInteger whose value is(-this).
java.math.BigInteger.nextProbablePrime,Returns the first integer greater than thisBigIntegerthat  is probably prime.
java.math.BigInteger.not,Returns a BigInteger whose value is(~this).
java.math.BigInteger.or,Returns a BigInteger whose value is(this | val).
java.math.BigInteger.pow,Returns a BigInteger whose value is(thisexponent).
java.math.BigInteger.probablePrime,"Returns a positive BigInteger that is probably prime, with the  specified bitLength."
java.math.BigInteger.remainder,Returns a BigInteger whose value is(this % val).
java.math.BigInteger.setBit,Returns a BigInteger whose value is equivalent to this BigInteger  with the designated bit set.
java.math.BigInteger.shiftLeft,Returns a BigInteger whose value is(this << n).
java.math.BigInteger.shiftRight,Returns a BigInteger whose value is(this >> n).
java.math.BigInteger.shortValueExact,"Converts thisBigIntegerto ashort, checking  for lost information."
java.math.BigInteger.signum,Returns the signum function of this BigInteger.
java.math.BigInteger.sqrt,Returns the integer square root of this BigInteger.
java.math.BigInteger.sqrtAndRemainder,"Returns an array of two BigIntegers containing the integer square rootsofthisand its remainderthis - s*s,  respectively."
java.math.BigInteger.subtract,Returns a BigInteger whose value is(this - val).
java.math.BigInteger.testBit,Returnstrueif and only if the designated bit is set.
java.math.BigInteger.toByteArray,Returns a byte array containing the two's-complement  representation of this BigInteger.
java.math.BigInteger.toString,Returns the decimal String representation of this BigInteger.
java.math.BigInteger.toString,Returns the String representation of this BigInteger in the  given radix.
java.math.BigInteger.valueOf,Returns a BigInteger whose value is equal to that of the  specifiedlong.
java.math.BigInteger.xor,Returns a BigInteger whose value is(this ^ val).
java.math.MathContext.equals,Compares thisMathContextwith the specifiedObjectfor equality.
java.math.MathContext.getPrecision,Returns theprecisionsetting.
java.math.MathContext.getRoundingMode,Returns the roundingMode setting.
java.math.MathContext.hashCode,Returns the hash code for thisMathContext.
java.math.MathContext.toString,Returns the string representation of thisMathContext.
java.net.Authenticator.getDefault,Gets the default authenticator.
java.net.Authenticator.getPasswordAuthentication,Called when password authorization is needed.
java.net.Authenticator.getRequestingHost,"Gets thehostnameof the  site or proxy requesting authentication, ornullif not available."
java.net.Authenticator.getRequestingPort,Gets the port number for the requested connection.
java.net.Authenticator.getRequestingPrompt,Gets the prompt string given by the requestor.
java.net.Authenticator.getRequestingProtocol,Give the protocol that's requesting the connection.
java.net.Authenticator.getRequestingScheme,"Gets the scheme of the requestor (the HTTP scheme  for an HTTP firewall, for example)."
java.net.Authenticator.getRequestingSite,"Gets theInetAddressof the  site requesting authorization, ornullif not available."
java.net.Authenticator.getRequestingURL,Returns the URL that resulted in this  request for authentication.
java.net.Authenticator.getRequestorType,Returns whether the requestor is a Proxy or a Server.
java.net.Authenticator.requestPasswordAuthentication,Ask the authenticator that has been registered with the system  for a password.
java.net.Authenticator.requestPasswordAuthentication,Ask the givenauthenticatorfor a password.
java.net.Authenticator.requestPasswordAuthenticationInstance,Ask this authenticator for a password.
java.net.Authenticator.setDefault,Sets the authenticator that will be used by the networking code  when a proxy or an HTTP server asks for authentication.
java.net.CacheRequest.abort,Aborts the attempt to cache the response.
java.net.CacheRequest.getBody,Returns an OutputStream to which the response body can be  written.
java.net.CacheResponse.getBody,Returns the response body as an InputStream.
java.net.CacheResponse.getHeaders,Returns the response headers as a Map.
java.net.ContentHandler.getContent,"Given a URL connect stream positioned at the beginning of the  representation of an object, this method reads that stream and  creates an object from it."
java.net.ContentHandler.getContent,"Given a URL connect stream positioned at the beginning of the  representation of an object, this method reads that stream and  creates an object that matches one of the types specified."
java.net.CookieHandler.get,Gets all the applicable cookies from a cookie cache for the  specified uri in the request header.
java.net.CookieHandler.getDefault,Gets the system-wide cookie handler.
java.net.CookieHandler.put,"Sets all the applicable cookies, examples are response header  fields that are named Set-Cookie2, present in the response  headers into a cookie cache."
java.net.CookieHandler.setDefault,Sets (or unsets) the system-wide cookie handler.
java.net.CookieManager.getCookieStore,To retrieve current cookie store.
java.net.CookieManager.setCookiePolicy,To set the cookie policy of this cookie manager.
java.net.DatagramPacket.getAddress,"Returns the IP address of the machine to which this datagram is being  sent or from which the datagram was received, ornullif not  set."
java.net.DatagramPacket.getData,Returns the data buffer.
java.net.DatagramPacket.getLength,Returns the length of the data to be sent or the length of the  data received.
java.net.DatagramPacket.getOffset,Returns the offset of the data to be sent or the offset of the  data received.
java.net.DatagramPacket.getPort,"Returns the port number on the remote host to which this datagram is  being sent or from which the datagram was received, or 0 if not set."
java.net.DatagramPacket.getSocketAddress,Returns theSocketAddress(usuallyIP address+port number) of the remote host that this packet  is being sent to or is coming from.
java.net.DatagramPacket.setAddress,Sets the IP address of the machine to which this datagram  is being sent.
java.net.DatagramPacket.setData,Set the data buffer for this packet.
java.net.DatagramPacket.setLength,Set the length for this packet.
java.net.DatagramPacket.setPort,Sets the port number on the remote host to which this datagram  is being sent.
java.net.DatagramPacket.setSocketAddress,Sets the SocketAddress (usually IP address + port number) of the remote  host to which this datagram is being sent.
java.net.DatagramSocket.bind,Binds this DatagramSocket to a specific address and port.
java.net.DatagramSocket.close,Closes this datagram socket.
java.net.DatagramSocket.connect,Connects the socket to a remote address for this socket.
java.net.DatagramSocket.connect,Connects this socket to a remote socket address (IP address + port number).
java.net.DatagramSocket.disconnect,Disconnects the socket.
java.net.DatagramSocket.getBroadcast,Tests if SO_BROADCAST is enabled.
java.net.DatagramSocket.getChannel,"Returns the uniqueDatagramChannelobject  associated with this datagram socket, if any."
java.net.DatagramSocket.getInetAddress,Returns the address to which this socket is connected.
java.net.DatagramSocket.getLocalAddress,Gets the local address to which the socket is bound.
java.net.DatagramSocket.getLocalPort,Returns the port number on the local host to which this socket  is bound.
java.net.DatagramSocket.getLocalSocketAddress,Returns the address of the endpoint this socket is bound to.
java.net.DatagramSocket.getOption,Returns the value of a socket option.
java.net.DatagramSocket.getPort,Returns the port number to which this socket is connected.
java.net.DatagramSocket.getReceiveBufferSize,"Get value of the SO_RCVBUF option for thisDatagramSocket, that is the  buffer size, in bytes, used by the platform for input on thisDatagramSocket."
java.net.DatagramSocket.getRemoteSocketAddress,"Returns the address of the endpoint this socket is connected to, ornullif it is unconnected."
java.net.DatagramSocket.getReuseAddress,Tests if SO_REUSEADDR is enabled.
java.net.DatagramSocket.getSendBufferSize,"Get value of the SO_SNDBUF option for thisDatagramSocket, that is the  buffer size, in bytes, used by the platform for output on thisDatagramSocket."
java.net.DatagramSocket.getSoTimeout,"Retrieve setting for SO_TIMEOUT.  0 returns implies that the  option is disabled (i.e., timeout of infinity)."
java.net.DatagramSocket.getTrafficClass,Gets traffic class or type-of-service in the IP datagram  header for packets sent from this DatagramSocket.
java.net.DatagramSocket.isBound,Returns the binding state of the socket.
java.net.DatagramSocket.isClosed,Returns whether the socket is closed or not.
java.net.DatagramSocket.isConnected,Returns the connection state of the socket.
java.net.DatagramSocket.joinGroup,Joins a multicast group.
java.net.DatagramSocket.leaveGroup,Leave a multicast group on a specified local interface.
java.net.DatagramSocket.receive,Receives a datagram packet from this socket.
java.net.DatagramSocket.send,Sends a datagram packet from this socket.
java.net.DatagramSocket.setBroadcast,Enable/disable SO_BROADCAST.
java.net.DatagramSocket.setDatagramSocketImplFactory,"Deprecated.UseDatagramChannel, or subclassDatagramSocketdirectly."
java.net.DatagramSocket.setOption,Sets the value of a socket option.
java.net.DatagramSocket.setReceiveBufferSize,Sets the SO_RCVBUF option to the specified value for thisDatagramSocket.
java.net.DatagramSocket.setReuseAddress,Enable/disable the SO_REUSEADDR socket option.
java.net.DatagramSocket.setSendBufferSize,Sets the SO_SNDBUF option to the specified value for thisDatagramSocket.
java.net.DatagramSocket.setSoTimeout,"Enable/disable SO_TIMEOUT with the specified timeout, in  milliseconds."
java.net.DatagramSocket.setTrafficClass,Sets traffic class or type-of-service octet in the IP  datagram header for datagrams sent from this DatagramSocket.
java.net.DatagramSocket.supportedOptions,Returns a set of the socket options supported by this socket.
java.net.DatagramSocketImpl.bind,Binds a datagram socket to a local port and address.
java.net.DatagramSocketImpl.close,Close the socket.
java.net.DatagramSocketImpl.connect,Connects a datagram socket to a remote destination.
java.net.DatagramSocketImpl.create,Creates a datagram socket.
java.net.DatagramSocketImpl.disconnect,Disconnects a datagram socket from its remote destination.
java.net.DatagramSocketImpl.getFileDescriptor,Gets the datagram socket file descriptor.
java.net.DatagramSocketImpl.getLocalPort,Gets the local port.
java.net.DatagramSocketImpl.getOption,Called to get a socket option.
java.net.DatagramSocketImpl.getTimeToLive,Retrieve the TTL (time-to-live) option.
java.net.DatagramSocketImpl.getTTL,Deprecated.use getTimeToLive instead.
java.net.DatagramSocketImpl.join,Join the multicast group.
java.net.DatagramSocketImpl.leave,Leave the multicast group.
java.net.DatagramSocketImpl.peek,Peek at the packet to see who it is from.
java.net.DatagramSocketImpl.receive,Receive the datagram packet.
java.net.DatagramSocketImpl.send,Sends a datagram packet.
java.net.DatagramSocketImpl.setOption,Called to set a socket option.
java.net.DatagramSocketImpl.setTimeToLive,Set the TTL (time-to-live) option.
java.net.DatagramSocketImpl.setTTL,Deprecated.use setTimeToLive instead.
java.net.DatagramSocketImpl.supportedOptions,Returns a set of SocketOptions supported by this impl  and by this impl's socket (DatagramSocket or MulticastSocket)
java.net.HttpCookie.clone,Create and return a copy of this object.
java.net.HttpCookie.domainMatches,The utility method to check whether a host name is in a domain or not.
java.net.HttpCookie.equals,Test the equality of two HTTP cookies.
java.net.HttpCookie.getComment,"Returns the comment describing the purpose of this cookie, ornullif the cookie has no comment."
java.net.HttpCookie.getCommentURL,"Returns the comment URL describing the purpose of this cookie, ornullif the cookie has no comment URL."
java.net.HttpCookie.getDiscard,Returns the discard attribute of the cookie
java.net.HttpCookie.getDomain,Returns the domain name set for this cookie.
java.net.HttpCookie.getMaxAge,"Returns the maximum age of the cookie, specified in seconds."
java.net.HttpCookie.getName,Returns the name of the cookie.
java.net.HttpCookie.getPath,Returns the path on the server to which the browser returns this cookie.
java.net.HttpCookie.getPortlist,Returns the port list attribute of the cookie
java.net.HttpCookie.getSecure,"Returnstrueif sending this cookie should be restricted to a  secure protocol, orfalseif the it can be sent using any  protocol."
java.net.HttpCookie.getValue,Returns the value of the cookie.
java.net.HttpCookie.getVersion,Returns the version of the protocol this cookie complies with.
java.net.HttpCookie.hasExpired,Reports whether this HTTP cookie has expired or not.
java.net.HttpCookie.hashCode,Returns the hash code of this HTTP cookie.
java.net.HttpCookie.isHttpOnly,Returnstrueif this cookie contains theHttpOnlyattribute.
java.net.HttpCookie.parse,Constructs cookies from set-cookie or set-cookie2 header string.
java.net.HttpCookie.setComment,Specifies a comment that describes a cookie's purpose.
java.net.HttpCookie.setCommentURL,Specifies a comment URL that describes a cookie's purpose.
java.net.HttpCookie.setDiscard,Specify whether user agent should discard the cookie unconditionally.
java.net.HttpCookie.setDomain,Specifies the domain within which this cookie should be presented.
java.net.HttpCookie.setHttpOnly,Indicates whether the cookie should be considered HTTP Only.
java.net.HttpCookie.setMaxAge,Sets the maximum age of the cookie in seconds.
java.net.HttpCookie.setPath,Specifies a path for the cookie to which the client should return  the cookie.
java.net.HttpCookie.setPortlist,"Specify the portlist of the cookie, which restricts the port(s)  to which a cookie may be sent back in a Cookie header."
java.net.HttpCookie.setSecure,"Indicates whether the cookie should only be sent using a secure protocol,  such as HTTPS or SSL."
java.net.HttpCookie.setValue,Assigns a new value to a cookie after the cookie is created.
java.net.HttpCookie.setVersion,Sets the version of the cookie protocol this cookie complies  with.
java.net.HttpCookie.toString,"Constructs a cookie header string representation of this cookie,  which is in the format defined by corresponding cookie specification,  but without the leading ""Cookie:"" token."
java.net.HttpRetryException.getLocation,Returns the value of the Location header field if the  error resulted from redirection.
java.net.HttpRetryException.getReason,Returns a string explaining why the http request could  not be retried.
java.net.HttpRetryException.responseCode,Returns the http response code
java.net.HttpURLConnection.disconnect,Indicates that other requests to the server  are unlikely in the near future.
java.net.HttpURLConnection.getErrorStream,Returns the error stream if the connection failed  but the server sent useful data nonetheless.
java.net.HttpURLConnection.getFollowRedirects,Returns abooleanindicating  whether or not HTTP redirects (3xx) should  be automatically followed.
java.net.HttpURLConnection.getHeaderField,Returns the value for thenthheader field.
java.net.HttpURLConnection.getHeaderFieldKey,Returns the key for thenthheader field.
java.net.HttpURLConnection.getInstanceFollowRedirects,Returns the value of thisHttpURLConnection'sinstanceFollowRedirectsfield.
java.net.HttpURLConnection.getPermission,Returns aSocketPermissionobject representing the  permission necessary to connect to the destination host and port.
java.net.HttpURLConnection.getRequestMethod,Get the request method.
java.net.HttpURLConnection.getResponseCode,Gets the status code from an HTTP response message.
java.net.HttpURLConnection.getResponseMessage,"Gets the HTTP response message, if any, returned along with the  response code from a server."
java.net.HttpURLConnection.setAuthenticator,Supplies anAuthenticatorto be used  when authentication is requested through the HTTP protocol for  thisHttpURLConnection.
java.net.HttpURLConnection.setChunkedStreamingMode,"This method is used to enable streaming of a HTTP request body  without internal buffering, when the content length isnotknown in advance."
java.net.HttpURLConnection.setFixedLengthStreamingMode,"This method is used to enable streaming of a HTTP request body  without internal buffering, when the content length is known in  advance."
java.net.HttpURLConnection.setFollowRedirects,Sets whether HTTP redirects  (requests with response code 3xx) should  be automatically followed by this class.
java.net.HttpURLConnection.setInstanceFollowRedirects,Sets whether HTTP redirects (requests with response code 3xx) should  be automatically followed by thisHttpURLConnectioninstance.
java.net.HttpURLConnection.setRequestMethod,"Set the method for the URL request, one of:     GET   POST   HEAD   OPTIONS   PUT   DELETE   TRACE   are legal, subject to protocol restrictions."
java.net.HttpURLConnection.usingProxy,Indicates if the connection is going through a proxy.
java.net.IDN.toASCII,"Translates a string from Unicode to ASCII Compatible Encoding (ACE),  as defined by the ToASCII operation ofRFC 3490."
java.net.IDN.toUnicode,"Translates a string from ASCII Compatible Encoding (ACE) to Unicode,  as defined by the ToUnicode operation ofRFC 3490."
java.net.Inet4Address.getAddress,Returns the raw IP address of thisInetAddressobject.
java.net.Inet4Address.getHostAddress,Returns the IP address string in textual presentation form.
java.net.Inet4Address.hashCode,Returns a hashcode for this IP address.
java.net.Inet4Address.isAnyLocalAddress,Utility routine to check if the InetAddress is a wildcard address.
java.net.Inet4Address.isLinkLocalAddress,Utility routine to check if the InetAddress is an link local address.
java.net.Inet4Address.isLoopbackAddress,Utility routine to check if the InetAddress is a loopback address.
java.net.Inet4Address.isMCGlobal,Utility routine to check if the multicast address has global scope.
java.net.Inet4Address.isMCLinkLocal,Utility routine to check if the multicast address has link scope.
java.net.Inet4Address.isMCNodeLocal,Utility routine to check if the multicast address has node scope.
java.net.Inet4Address.isMCOrgLocal,Utility routine to check if the multicast address has organization scope.
java.net.Inet4Address.isMCSiteLocal,Utility routine to check if the multicast address has site scope.
java.net.Inet4Address.isMulticastAddress,Utility routine to check if the InetAddress is an  IP multicast address.
java.net.Inet4Address.isSiteLocalAddress,Utility routine to check if the InetAddress is a site local address.
java.net.Inet6Address.getByAddress,"Create an Inet6Address in the exact manner ofInetAddress.getByAddress(String,byte[])except that the IPv6 scope_id is  set to the given numeric value."
java.net.Inet6Address.getByAddress,"Create an Inet6Address in the exact manner ofInetAddress.getByAddress(String,byte[])except that the IPv6 scope_id is  set to the value corresponding to the given interface for the address  type specified inaddr."
java.net.Inet6Address.getHostAddress,Returns the IP address string in textual presentation.
java.net.Inet6Address.getScopedInterface,"Returns the scoped interface, if this instance was created with  a scoped interface."
java.net.Inet6Address.getScopeId,"Returns the numeric scopeId, if this instance is associated with  an interface."
java.net.Inet6Address.isIPv4CompatibleAddress,Utility routine to check if the InetAddress is an  IPv4 compatible IPv6 address.
java.net.Inet6Address.isMulticastAddress,Utility routine to check if the InetAddress is an IP multicast  address. 11111111 at the start of the address identifies the  address as being a multicast address.
java.net.InetAddress.getAllByName,"Given the name of a host, returns an array of its IP addresses,  based on the configured name service on the system."
java.net.InetAddress.getByAddress,Returns anInetAddressobject given the raw IP address .
java.net.InetAddress.getByAddress,Creates an InetAddress based on the provided host name and IP address.
java.net.InetAddress.getByName,"Determines the IP address of a host, given the host's name."
java.net.InetAddress.getCanonicalHostName,Gets the fully qualified domain name for this IP address.
java.net.InetAddress.getHostName,Gets the host name for this IP address.
java.net.InetAddress.getLocalHost,Returns the address of the local host.
java.net.InetAddress.getLoopbackAddress,Returns the loopback address.
java.net.InetAddress.isReachable,Test whether that address is reachable.
java.net.InetAddress.toString,Converts this IP address to aString.
java.net.InetSocketAddress.createUnresolved,Creates an unresolved socket address from a hostname and a port number.
java.net.InetSocketAddress.getAddress,Gets theInetAddress.
java.net.InetSocketAddress.getHostName,Gets thehostname.
java.net.InetSocketAddress.getHostString,"Returns the hostname, or the String form of the address if it  doesn't have a hostname (it was created using a literal)."
java.net.InetSocketAddress.getPort,Gets the port number.
java.net.InetSocketAddress.hashCode,Returns a hashcode for this socket address.
java.net.InetSocketAddress.isUnresolved,Checks whether the address has been resolved or not.
java.net.InetSocketAddress.toString,Constructs a string representation of this InetSocketAddress.
java.net.InterfaceAddress.getAddress,Returns anInetAddressfor this address.
java.net.InterfaceAddress.getBroadcast,Returns anInetAddressfor the broadcast address  for this InterfaceAddress.
java.net.InterfaceAddress.getNetworkPrefixLength,Returns the network prefix length for this address.
java.net.InterfaceAddress.hashCode,Returns a hashcode for this Interface address.
java.net.InterfaceAddress.toString,Converts this Interface address to aString.
java.net.JarURLConnection.getAttributes,"Return the Attributes object for this connection if the URL  for it points to a JAR file entry, null otherwise."
java.net.JarURLConnection.getCertificates,"Returns the Certificate objects for this connection if the URL  for it points to a JAR file entry, null otherwise."
java.net.JarURLConnection.getEntryName,Return the entry name for this connection.
java.net.JarURLConnection.getJarEntry,"Return the JAR entry object for this connection, if any."
java.net.JarURLConnection.getJarFile,Return the JAR file for this connection.
java.net.JarURLConnection.getJarFileURL,Returns the URL for the Jar file for this connection.
java.net.JarURLConnection.getMainAttributes,Returns the main Attributes for the JAR file for this  connection.
java.net.JarURLConnection.getManifest,"Returns the Manifest for this connection, or null if none."
java.net.MulticastSocket.getInterface,Deprecated.The network interface may not be uniquely identified by              the InetAddress returned.
java.net.MulticastSocket.getLoopbackMode,Deprecated.UseDatagramSocket.getOption(SocketOption)withStandardSocketOptions.IP_MULTICAST_LOOPinstead.
java.net.MulticastSocket.getNetworkInterface,Get the multicast network interface set for outgoing multicast  datagrams sent from this socket.
java.net.MulticastSocket.getTimeToLive,Get the default time-to-live for multicast packets sent out on  the socket.
java.net.MulticastSocket.getTTL,"Deprecated.use thegetTimeToLive()method instead,  which returns anintinstead of abyte."
java.net.MulticastSocket.joinGroup,Deprecated.This method does not accept the network interface on              which to join the multicast group.
java.net.MulticastSocket.leaveGroup,Deprecated.This method does not accept the network interface on which              to leave the multicast group.
java.net.MulticastSocket.send,Deprecated.Use the following code or its equivalent instead:
java.net.MulticastSocket.setInterface,Deprecated.The InetAddress may not uniquely identify              the network interface.
java.net.MulticastSocket.setLoopbackMode,"Deprecated.UseDatagramSocket.setOption(SocketOption, Object)withStandardSocketOptions.IP_MULTICAST_LOOPinstead."
java.net.MulticastSocket.setNetworkInterface,Specify the network interface for outgoing multicast datagrams  sent on this socket.
java.net.MulticastSocket.setTimeToLive,Set the default time-to-live for multicast packets sent out  on thisMulticastSocketin order to control the  scope of the multicasts.
java.net.MulticastSocket.setTTL,"Deprecated.use thesetTimeToLive(int)method instead, which usesintinstead ofbyteas the type for ttl."
java.net.NetworkInterface.getByIndex,Get a network interface given its index.
java.net.NetworkInterface.getByInetAddress,Convenience method to search for a network interface that  has the specified Internet Protocol (IP) address bound to  it.
java.net.NetworkInterface.getByName,Searches for the network interface with the specified name.
java.net.NetworkInterface.getDisplayName,Get the display name of this network interface.
java.net.NetworkInterface.getHardwareAddress,Returns the hardware address (usually MAC) of the interface if it  has one and if it can be accessed given the current privileges.
java.net.NetworkInterface.getIndex,Returns the index of this network interface.
java.net.NetworkInterface.getInetAddresses,Get an Enumeration with all or a subset of the InetAddresses bound to  this network interface.
java.net.NetworkInterface.getInterfaceAddresses,Get a List of all or a subset of theInterfaceAddressesof this network interface.
java.net.NetworkInterface.getMTU,Returns the Maximum Transmission Unit (MTU) of this interface.
java.net.NetworkInterface.getName,Get the name of this network interface.
java.net.NetworkInterface.getNetworkInterfaces,Returns anEnumerationof all the interfaces on this machine.
java.net.NetworkInterface.getParent,"Returns the parent NetworkInterface of this interface if this is  a subinterface, ornullif it is a physical  (non virtual) interface or has no parent."
java.net.NetworkInterface.getSubInterfaces,Get an Enumeration with all the subinterfaces (also known as virtual  interfaces) attached to this network interface.
java.net.NetworkInterface.inetAddresses,Get a Stream of all or a subset of the InetAddresses bound to this  network interface.
java.net.NetworkInterface.isLoopback,Returns whether a network interface is a loopback interface.
java.net.NetworkInterface.isPointToPoint,Returns whether a network interface is a point to point interface.
java.net.NetworkInterface.isUp,Returns whether a network interface is up and running.
java.net.NetworkInterface.isVirtual,Returns whether this interface is a virtual interface (also called  subinterface).
java.net.NetworkInterface.networkInterfaces,Returns aStreamof all the interfaces on this machine.
java.net.NetworkInterface.subInterfaces,Get a Stream of all subinterfaces (also known as virtual  interfaces) attached to this network interface.
java.net.NetworkInterface.supportsMulticast,Returns whether a network interface supports multicasting or not.
java.net.PasswordAuthentication.getPassword,Returns the user password.
java.net.PasswordAuthentication.getUserName,Returns the user name.
java.net.Proxy.address,"Returns the socket address of the proxy, ornullif its a direct connection."
java.net.Proxy.hashCode,Returns a hashcode for this Proxy.
java.net.Proxy.toString,Constructs a string representation of this Proxy.
java.net.Proxy.type,Returns the proxy type.
java.net.ProxySelector.connectFailed,Called to indicate that a connection could not be established  to a proxy/socks server.
java.net.ProxySelector.getDefault,Gets the system-wide proxy selector.
java.net.ProxySelector.of,Returns a ProxySelector which uses the given proxy address for all HTTP  and HTTPS requests.
java.net.ProxySelector.select,Selects all the applicable proxies based on the protocol to  access the resource with and a destination address to access  the resource at.
java.net.ProxySelector.setDefault,Sets (or unsets) the system-wide proxy selector.
java.net.ResponseCache.get,"Retrieve the cached response based on the requesting uri,  request method and request headers."
java.net.ResponseCache.getDefault,Gets the system-wide response cache.
java.net.ResponseCache.put,"The protocol handler calls this method after a resource has  been retrieved, and the ResponseCache must decide whether or  not to store the resource in its cache."
java.net.ResponseCache.setDefault,Sets (or unsets) the system-wide cache.
java.net.SecureCacheResponse.getCipherSuite,Returns the cipher suite in use on the original connection that  retrieved the network resource.
java.net.SecureCacheResponse.getLocalCertificateChain,Returns the certificate chain that were sent to the server during  handshaking of the original connection that retrieved the  network resource.
java.net.SecureCacheResponse.getLocalPrincipal,Returns the principal that was sent to the server during  handshaking in the original connection that retrieved the  network resource.
java.net.SecureCacheResponse.getPeerPrincipal,Returns the server's principal which was established as part of  defining the session during the original connection that  retrieved the network resource.
java.net.SecureCacheResponse.getServerCertificateChain,"Returns the server's certificate chain, which was established as  part of defining the session in the original connection that  retrieved the network resource, from cache."
java.net.SecureCacheResponse.getSSLSession,Returns anOptionalcontaining theSSLSessionin  use on the original connection that retrieved the network resource.
java.net.ServerSocket.accept,Listens for a connection to be made to this socket and accepts  it.
java.net.ServerSocket.bind,Binds theServerSocketto a specific address  (IP address and port number).
java.net.ServerSocket.close,Closes this socket.
java.net.ServerSocket.getChannel,"Returns the uniqueServerSocketChannelobject  associated with this socket, if any."
java.net.ServerSocket.getInetAddress,Returns the local address of this server socket.
java.net.ServerSocket.getLocalPort,Returns the port number on which this socket is listening.
java.net.ServerSocket.getReceiveBufferSize,"Gets the value of theSO_RCVBUFoption  for thisServerSocket, that is the proposed buffer size that  will be used for Sockets accepted from thisServerSocket."
java.net.ServerSocket.getReuseAddress,Tests ifSO_REUSEADDRis enabled.
java.net.ServerSocket.getSoTimeout,"Retrieve setting forSO_TIMEOUT.  0 returns implies that the option is disabled (i.e., timeout of infinity)."
java.net.ServerSocket.implAccept,Subclasses of ServerSocket use this method to override accept()  to return their own subclass of socket.
java.net.ServerSocket.isBound,Returns the binding state of the ServerSocket.
java.net.ServerSocket.isClosed,Returns the closed state of the ServerSocket.
java.net.ServerSocket.setPerformancePreferences,Sets performance preferences for this ServerSocket.
java.net.ServerSocket.setReceiveBufferSize,Sets a default proposed value for theSO_RCVBUFoption for sockets  accepted from thisServerSocket.
java.net.ServerSocket.setReuseAddress,Enable/disable theSO_REUSEADDRsocket option.
java.net.ServerSocket.setSocketFactory,Deprecated.Use aServerSocketFactoryand subclassServerSocketdirectly.
java.net.ServerSocket.setSoTimeout,"Enable/disableSO_TIMEOUTwith the  specified timeout, in milliseconds."
java.net.ServerSocket.supportedOptions,Returns a set of the socket options supported by this server socket.
java.net.ServerSocket.toString,Returns the implementation address and implementation port of  this socket as aString.
java.net.Socket.bind,Binds the socket to a local address.
java.net.Socket.connect,Connects this socket to the server.
java.net.Socket.connect,Connects this socket to the server with a specified timeout value.
java.net.Socket.getChannel,"Returns the uniqueSocketChannelobject associated with this socket, if any."
java.net.Socket.getInetAddress,Returns the address to which the socket is connected.
java.net.Socket.getInputStream,Returns an input stream for this socket.
java.net.Socket.getKeepAlive,Tests ifSO_KEEPALIVEis enabled.
java.net.Socket.getLocalPort,Returns the local port number to which this socket is bound.
java.net.Socket.getOOBInline,Tests ifSO_OOBINLINEis enabled.
java.net.Socket.getOutputStream,Returns an output stream for this socket.
java.net.Socket.getPort,Returns the remote port number to which this socket is connected.
java.net.Socket.getReceiveBufferSize,"Gets the value of theSO_RCVBUFoption  for thisSocket, that is the buffer size used by the platform  for input on thisSocket."
java.net.Socket.getSendBufferSize,"Get value of theSO_SNDBUFoption  for thisSocket, that is the buffer size used by the platform  for output on thisSocket."
java.net.Socket.getSoLinger,Returns setting forSO_LINGER.
java.net.Socket.getSoTimeout,"Returns setting forSO_TIMEOUT.  0 returns implies that the option is disabled (i.e., timeout of infinity)."
java.net.Socket.getTcpNoDelay,Tests ifTCP_NODELAYis enabled.
java.net.Socket.getTrafficClass,Gets traffic class or type-of-service in the IP header  for packets sent from this Socket
java.net.Socket.isClosed,Returns the closed state of the socket.
java.net.Socket.isInputShutdown,Returns whether the read-half of the socket connection is closed.
java.net.Socket.isOutputShutdown,Returns whether the write-half of the socket connection is closed.
java.net.Socket.sendUrgentData,Send one byte of urgent data on the socket.
java.net.Socket.setKeepAlive,Enable/disableSO_KEEPALIVE.
java.net.Socket.setOOBInline,"Enable/disableSO_OOBINLINE(receipt of TCP urgent data)   By default, this option is disabled and TCP urgent data received on a  socket is silently discarded."
java.net.Socket.setPerformancePreferences,Sets performance preferences for this socket.
java.net.Socket.setReceiveBufferSize,Sets theSO_RCVBUFoption to the  specified value for thisSocket.
java.net.Socket.setSendBufferSize,Sets theSO_SNDBUFoption to the  specified value for thisSocket.
java.net.Socket.setSocketImplFactory,Deprecated.Use aSocketFactoryand subclassSocketdirectly.
java.net.Socket.setSoLinger,Enable/disableSO_LINGERwith the  specified linger time in seconds.
java.net.Socket.setSoTimeout,"Enable/disableSO_TIMEOUTwith the specified timeout, in milliseconds."
java.net.Socket.setTcpNoDelay,Enable/disableTCP_NODELAY(disable/enable Nagle's algorithm).
java.net.Socket.setTrafficClass,Sets traffic class or type-of-service octet in the IP  header for packets sent from this Socket.
java.net.Socket.shutdownInput,"Places the input stream for this socket at ""end of stream""."
java.net.Socket.shutdownOutput,Disables the output stream for this socket.
java.net.Socket.toString,Converts this socket to aString.
java.net.SocketImpl.accept,Accepts a connection.
java.net.SocketImpl.available,Returns the number of bytes that can be read from this socket  without blocking.
java.net.SocketImpl.bind,Binds this socket to the specified local IP address and port number.
java.net.SocketImpl.connect,Connects this socket to the specified port on the named host.
java.net.SocketImpl.connect,Connects this socket to the specified port number on the specified host.
java.net.SocketImpl.create,Creates either a stream or a datagram socket.
java.net.SocketImpl.getFileDescriptor,Returns the value of this socket'sfdfield.
java.net.SocketImpl.getInetAddress,Returns the value of this socket'saddressfield.
java.net.SocketImpl.getLocalPort,Returns the value of this socket'slocalportfield.
java.net.SocketImpl.getPort,Returns the value of this socket'sportfield.
java.net.SocketImpl.listen,Sets the maximum queue length for incoming connection indications  (a request to connect) to thecountargument.
java.net.SocketImpl.supportedOptions,Returns a set of SocketOptions supported by this impl  and by this impl's socket (Socket or ServerSocket)
java.net.SocketImpl.supportsUrgentData,Returns whether or not this SocketImpl supports sending  urgent data.
java.net.SocketImpl.toString,Returns the address and port of this socket as aString.
java.net.SocketPermission.equals,Checks two SocketPermission objects for equality.
java.net.SocketPermission.getActions,Returns the canonical string representation of the actions.
java.net.SocketPermission.implies,"Checks if this socket permission object ""implies"" the  specified permission."
java.net.SocketPermission.newPermissionCollection,Returns a new PermissionCollection object for storing SocketPermission  objects.
java.net.UnixDomainSocketAddress.equals,Compares this address with another object.
java.net.UnixDomainSocketAddress.getPath,Returns this address's path.
java.net.UnixDomainSocketAddress.hashCode,Returns the hash code of thisUnixDomainSocketAddress
java.net.UnixDomainSocketAddress.of,Creates a UnixDomainSocketAddress from the given path string.
java.net.UnixDomainSocketAddress.of,Creates a UnixDomainSocketAddress for the given path.
java.net.UnixDomainSocketAddress.toString,Returns a string representation of thisUnixDomainSocketAddress.
java.net.URI.compareTo,"Compares this URI to another object, which must be a URI."
java.net.URI.create,Creates a URI by parsing the given string.
java.net.URI.equals,Tests this URI for equality with another object.
java.net.URI.getAuthority,Returns the decoded authority component of this URI.
java.net.URI.getFragment,Returns the decoded fragment component of this URI.
java.net.URI.getHost,Returns the host component of this URI.
java.net.URI.getPath,Returns the decoded path component of this URI.
java.net.URI.getPort,Returns the port number of this URI.
java.net.URI.getQuery,Returns the decoded query component of this URI.
java.net.URI.getRawAuthority,Returns the raw authority component of this URI.
java.net.URI.getRawFragment,Returns the raw fragment component of this URI.
java.net.URI.getRawPath,Returns the raw path component of this URI.
java.net.URI.getRawQuery,Returns the raw query component of this URI.
java.net.URI.getRawSchemeSpecificPart,Returns the raw scheme-specific part of this URI.
java.net.URI.getRawUserInfo,Returns the raw user-information component of this URI.
java.net.URI.getScheme,Returns the scheme component of this URI.
java.net.URI.getSchemeSpecificPart,Returns the decoded scheme-specific part of this URI.
java.net.URI.getUserInfo,Returns the decoded user-information component of this URI.
java.net.URI.hashCode,Returns a hash-code value for this URI.
java.net.URI.isAbsolute,Tells whether or not this URI is absolute.
java.net.URI.isOpaque,Tells whether or not this URI is opaque.
java.net.URI.normalize,Normalizes this URI's path.
java.net.URI.parseServerAuthority,"Attempts to parse this URI's authority component, if defined, into  user-information, host, and port components."
java.net.URI.relativize,Relativizes the given URI against this URI.
java.net.URI.resolve,Constructs a new URI by parsing the given string and then resolving it  against this URI.
java.net.URI.resolve,Resolves the given URI against this URI.
java.net.URI.toASCIIString,Returns the content of this URI as a US-ASCII string.
java.net.URI.toString,Returns the content of this URI as a string.
java.net.URI.toURL,Constructs a URL from this URI.
java.net.URISyntaxException.getIndex,"Returns an index into the input string of the position at which the  parse error occurred, or-1if this position is not known."
java.net.URISyntaxException.getInput,Returns the input string.
java.net.URISyntaxException.getMessage,Returns a string describing the parse error.
java.net.URISyntaxException.getReason,Returns a string explaining why the input string could not be parsed.
java.net.URL.equals,Compares this URL for equality with another object.
java.net.URL.getAuthority,Gets the authority part of thisURL.
java.net.URL.getContent,Gets the contents of this URL.
java.net.URL.getDefaultPort,Gets the default port number of the protocol associated  with thisURL.
java.net.URL.getFile,Gets the file name of thisURL.
java.net.URL.getHost,"Gets the host name of thisURL, if applicable."
java.net.URL.getPath,Gets the path part of thisURL.
java.net.URL.getPort,Gets the port number of thisURL.
java.net.URL.getProtocol,Gets the protocol name of thisURL.
java.net.URL.getQuery,Gets the query part of thisURL.
java.net.URL.getRef,"Gets the anchor (also known as the ""reference"") of thisURL."
java.net.URL.getUserInfo,Gets the userInfo part of thisURL.
java.net.URL.hashCode,Creates an integer suitable for hash table indexing.
java.net.URL.openConnection,Returns aURLConnectioninstance that  represents a connection to the remote object referred to by theURL.
java.net.URL.openConnection,"Same asopenConnection(), except that the connection will be  made through the specified proxy; Protocol handlers that do not  support proxying will ignore the proxy parameter and make a  normal connection."
java.net.URL.openStream,Opens a connection to thisURLand returns anInputStreamfor reading from that connection.
java.net.URL.sameFile,"Compares two URLs, excluding the fragment component."
java.net.URL.setURLStreamHandlerFactory,Sets an application'sURLStreamHandlerFactory.
java.net.URL.toExternalForm,Constructs a string representation of thisURL.
java.net.URL.toURI,Returns aURIequivalent to this URL.
java.net.URLClassLoader.addURL,Appends the specified URL to the list of URLs to search for  classes and resources.
java.net.URLClassLoader.close,"Closes this URLClassLoader, so that it can no longer be used to load  new classes or resources that are defined by this loader."
java.net.URLClassLoader.definePackage,Defines a new package by name in thisURLClassLoader.
java.net.URLClassLoader.findClass,Finds and loads the class with the specified name from the URL search  path.
java.net.URLClassLoader.findResource,Finds the resource with the specified name on the URL search path.
java.net.URLClassLoader.findResources,Returns an Enumeration of URLs representing all of the resources  on the URL search path having the specified name.
java.net.URLClassLoader.getPermissions,Returns the permissions for the given codesource object.
java.net.URLClassLoader.getURLs,Returns the search path of URLs for loading classes and resources.
java.net.URLClassLoader.newInstance,Creates a new instance of URLClassLoader for the specified  URLs and default parent class loader.
java.net.URLClassLoader.newInstance,Creates a new instance of URLClassLoader for the specified  URLs and parent class loader.
java.net.URLConnection.addRequestProperty,Adds a general request property specified by a  key-value pair.
java.net.URLConnection.connect,"Opens a communications link to the resource referenced by this  URL, if such a connection has not already been established."
java.net.URLConnection.getAllowUserInteraction,Returns the value of theallowUserInteractionfield for  this object.
java.net.URLConnection.getConnectTimeout,Returns setting for connect timeout.
java.net.URLConnection.getContent,Retrieves the contents of this URL connection.
java.net.URLConnection.getContentEncoding,Returns the value of thecontent-encodingheader field.
java.net.URLConnection.getContentLength,Returns the value of thecontent-lengthheader field.
java.net.URLConnection.getContentLengthLong,Returns the value of thecontent-lengthheader field as a  long.
java.net.URLConnection.getContentType,Returns the value of thecontent-typeheader field.
java.net.URLConnection.getDate,Returns the value of thedateheader field.
java.net.URLConnection.getDefaultAllowUserInteraction,Returns the default value of theallowUserInteractionfield.
java.net.URLConnection.getDefaultRequestProperty,Deprecated.The instance specific getRequestProperty method  should be used after an appropriate instance of URLConnection  is obtained.
java.net.URLConnection.getDefaultUseCaches,Returns the default value of aURLConnection'suseCachesflag.
java.net.URLConnection.getDefaultUseCaches,Returns the default value of theuseCachesflag for the given protocol.
java.net.URLConnection.getDoInput,Returns the value of thisURLConnection'sdoInputflag.
java.net.URLConnection.getDoOutput,Returns the value of thisURLConnection'sdoOutputflag.
java.net.URLConnection.getExpiration,Returns the value of theexpiresheader field.
java.net.URLConnection.getFileNameMap,Loads filename map (a mimetable) from a data file.
java.net.URLConnection.getHeaderField,Returns the value of the named header field.
java.net.URLConnection.getHeaderFieldDate,Returns the value of the named field parsed as date.
java.net.URLConnection.getHeaderFieldInt,Returns the value of the named field parsed as a number.
java.net.URLConnection.getHeaderFields,Returns an unmodifiable Map of the header fields.
java.net.URLConnection.getIfModifiedSince,Returns the value of this object'sifModifiedSincefield.
java.net.URLConnection.getInputStream,Returns an input stream that reads from this open connection.
java.net.URLConnection.getLastModified,Returns the value of thelast-modifiedheader field.
java.net.URLConnection.getOutputStream,Returns an output stream that writes to this connection.
java.net.URLConnection.getPermission,Returns a permission object representing the permission  necessary to make the connection represented by this  object.
java.net.URLConnection.getReadTimeout,"Returns setting for read timeout. 0 return implies that the  option is disabled (i.e., timeout of infinity)."
java.net.URLConnection.getRequestProperties,Returns an unmodifiable Map of general request  properties for this connection.
java.net.URLConnection.getRequestProperty,Returns the value of the named general request property for this  connection.
java.net.URLConnection.getURL,Returns the value of thisURLConnection'sURLfield.
java.net.URLConnection.getUseCaches,Returns the value of thisURLConnection'suseCachesfield.
java.net.URLConnection.guessContentTypeFromName,"Tries to determine the content type of an object, based  on the specified ""file"" component of a URL."
java.net.URLConnection.guessContentTypeFromStream,Tries to determine the type of an input stream based on the  characters at the beginning of the input stream.
java.net.URLConnection.setAllowUserInteraction,Set the value of theallowUserInteractionfield of  thisURLConnection.
java.net.URLConnection.setConnectTimeout,"Sets a specified timeout value, in milliseconds, to be used  when opening a communications link to the resource referenced  by this URLConnection."
java.net.URLConnection.setContentHandlerFactory,Sets theContentHandlerFactoryof an  application.
java.net.URLConnection.setDefaultAllowUserInteraction,Sets the default value of theallowUserInteractionfield for all futureURLConnectionobjects to the specified value.
java.net.URLConnection.setDefaultRequestProperty,Deprecated.The instance specific setRequestProperty method  should be used after an appropriate instance of URLConnection  is obtained.
java.net.URLConnection.setDefaultUseCaches,Sets the default value of theuseCachesfield to the  specified value.
java.net.URLConnection.setDefaultUseCaches,Sets the default value of theuseCachesfield for the named  protocol to the given value.
java.net.URLConnection.setDoInput,Sets the value of thedoInputfield for thisURLConnectionto the specified value.
java.net.URLConnection.setDoOutput,Sets the value of thedoOutputfield for thisURLConnectionto the specified value.
java.net.URLConnection.setFileNameMap,Sets the FileNameMap.
java.net.URLConnection.setIfModifiedSince,Sets the value of theifModifiedSincefield of  thisURLConnectionto the specified value.
java.net.URLConnection.setReadTimeout,"Sets the read timeout to a specified timeout, in  milliseconds."
java.net.URLConnection.setRequestProperty,Sets the general request property.
java.net.URLConnection.setUseCaches,Sets the value of theuseCachesfield of thisURLConnectionto the specified value.
java.net.URLConnection.toString,Returns aStringrepresentation of this URL connection.
java.net.URLDecoder.decode,Deprecated.The resulting string may vary depending on the platform's           default encoding.
java.net.URLDecoder.decode,Decodes anapplication/x-www-form-urlencodedstring using  a specific encoding scheme.
java.net.URLDecoder.decode,Decodes anapplication/x-www-form-urlencodedstring using  a specificCharset.
java.net.URLEncoder.encode,Deprecated.The resulting string may vary depending on the platform's              default encoding.
java.net.URLEncoder.encode,Translates a string intoapplication/x-www-form-urlencodedformat using a specific encoding scheme.
java.net.URLEncoder.encode,Translates a string intoapplication/x-www-form-urlencodedformat using a specificCharset.
java.net.URLPermission.equals,"Returns true if, this.getActions().equals(p.getActions())  and p's url equals this's url."
java.net.URLPermission.getActions,"Returns the normalized method list and request  header list, in the form:"
java.net.URLPermission.hashCode,Returns a hashcode calculated from the hashcode of the  actions String and the url string.
java.net.URLPermission.implies,Checks if this URLPermission implies the given permission.
java.net.URLStreamHandler.equals,Provides the default equals calculation.
java.net.URLStreamHandler.getDefaultPort,Returns the default port for a URL parsed by this handler.
java.net.URLStreamHandler.getHostAddress,Get the IP address of our host.
java.net.URLStreamHandler.hashCode,Provides the default hash calculation.
java.net.URLStreamHandler.hostsEqual,Compares the host components of two URLs.
java.net.URLStreamHandler.openConnection,Opens a connection to the object referenced by theURLargument.
java.net.URLStreamHandler.openConnection,"Same as openConnection(URL), except that the connection will be  made through the specified proxy; Protocol handlers that do not  support proxying will ignore the proxy parameter and make a  normal connection."
java.net.URLStreamHandler.parseURL,Parses the string representation of aURLinto aURLobject.
java.net.URLStreamHandler.sameFile,"Compare two urls to see whether they refer to the same file,  i.e., having the same protocol, host, port, and path."
java.net.URLStreamHandler.setURL,"Deprecated.Use setURL(URL, String, String, int, String, String, String,              String);"
java.net.URLStreamHandler.setURL,Sets the fields of theURLargument to the indicated values.
java.net.URLStreamHandler.toExternalForm,Converts aURLof a specific protocol to aString.
java.nio.Buffer.array,Returns the array that backs this  buffer(optional operation).
java.nio.Buffer.arrayOffset,Returns the offset within this buffer's backing array of the first  element of the buffer(optional operation).
java.nio.Buffer.capacity,Returns this buffer's capacity.
java.nio.Buffer.clear,Clears this buffer.
java.nio.Buffer.duplicate,Creates a new buffer that shares this buffer's content.
java.nio.Buffer.flip,Flips this buffer.
java.nio.Buffer.hasArray,Tells whether or not this buffer is backed by an accessible  array.
java.nio.Buffer.hasRemaining,Tells whether there are any elements between the current position and  the limit.
java.nio.Buffer.isDirect,Tells whether or not this buffer isdirect.
java.nio.Buffer.isReadOnly,Tells whether or not this buffer is read-only.
java.nio.Buffer.limit,Returns this buffer's limit.
java.nio.Buffer.limit,Sets this buffer's limit.
java.nio.Buffer.mark,Sets this buffer's mark at its position.
java.nio.Buffer.position,Returns this buffer's position.
java.nio.Buffer.position,Sets this buffer's position.
java.nio.Buffer.remaining,Returns the number of elements between the current position and the  limit.
java.nio.Buffer.reset,Resets this buffer's position to the previously-marked position.
java.nio.Buffer.rewind,Rewinds this buffer.
java.nio.Buffer.slice,Creates a new buffer whose content is a shared subsequence of  this buffer's content.
java.nio.ByteBuffer.alignedSlice,Creates a new byte buffer whose content is a shared and aligned  subsequence of this buffer's content.
java.nio.ByteBuffer.alignmentOffset,"Returns the memory address, pointing to the byte at the given index,  modulo the given unit size."
java.nio.ByteBuffer.allocate,Allocates a new byte buffer.
java.nio.ByteBuffer.allocateDirect,Allocates a new direct byte buffer.
java.nio.ByteBuffer.array,Returns the byte array that backs this  buffer(optional operation).
java.nio.ByteBuffer.asCharBuffer,Creates a view of this byte buffer as a char buffer.
java.nio.ByteBuffer.asDoubleBuffer,Creates a view of this byte buffer as a double buffer.
java.nio.ByteBuffer.asFloatBuffer,Creates a view of this byte buffer as a float buffer.
java.nio.ByteBuffer.asIntBuffer,Creates a view of this byte buffer as an int buffer.
java.nio.ByteBuffer.asLongBuffer,Creates a view of this byte buffer as a long buffer.
java.nio.ByteBuffer.asReadOnlyBuffer,"Creates a new, read-only byte buffer that shares this buffer's  content."
java.nio.ByteBuffer.asShortBuffer,Creates a view of this byte buffer as a short buffer.
java.nio.ByteBuffer.compact,Compacts this buffer(optional operation).
java.nio.ByteBuffer.compareTo,Compares this buffer to another.
java.nio.ByteBuffer.duplicate,Creates a new byte buffer that shares this buffer's content.
java.nio.ByteBuffer.equals,Tells whether or not this buffer is equal to another object.
java.nio.ByteBuffer.get,Relativegetmethod.
java.nio.ByteBuffer.get,Relative bulkgetmethod.
java.nio.ByteBuffer.get,Absolutegetmethod.
java.nio.ByteBuffer.get,Absolute bulkgetmethod.
java.nio.ByteBuffer.getChar,Relativegetmethod for reading a char value.
java.nio.ByteBuffer.getChar,Absolutegetmethod for reading a char value.
java.nio.ByteBuffer.getDouble,Relativegetmethod for reading a double value.
java.nio.ByteBuffer.getDouble,Absolutegetmethod for reading a double value.
java.nio.ByteBuffer.getFloat,Relativegetmethod for reading a float value.
java.nio.ByteBuffer.getFloat,Absolutegetmethod for reading a float value.
java.nio.ByteBuffer.getInt,Relativegetmethod for reading an int value.
java.nio.ByteBuffer.getInt,Absolutegetmethod for reading an int value.
java.nio.ByteBuffer.getLong,Relativegetmethod for reading a long value.
java.nio.ByteBuffer.getLong,Absolutegetmethod for reading a long value.
java.nio.ByteBuffer.getShort,Relativegetmethod for reading a short value.
java.nio.ByteBuffer.getShort,Absolutegetmethod for reading a short value.
java.nio.ByteBuffer.hasArray,Tells whether or not this buffer is backed by an accessible byte  array.
java.nio.ByteBuffer.hashCode,Returns the current hash code of this buffer.
java.nio.ByteBuffer.isDirect,Tells whether or not this byte buffer is direct.
java.nio.ByteBuffer.mismatch,Finds and returns the relative index of the first mismatch between this  buffer and a given buffer.
java.nio.ByteBuffer.order,Retrieves this buffer's byte order.
java.nio.ByteBuffer.order,Modifies this buffer's byte order.
java.nio.ByteBuffer.put,Relativeputmethod(optional operation).
java.nio.ByteBuffer.put,Relative bulkputmethod(optional operation).
java.nio.ByteBuffer.put,Absoluteputmethod(optional operation).
java.nio.ByteBuffer.put,Absolute bulkputmethod(optional operation).
java.nio.ByteBuffer.putChar,Relativeputmethod for writing a char  value(optional operation).
java.nio.ByteBuffer.putChar,Absoluteputmethod for writing a char  value(optional operation).
java.nio.ByteBuffer.putDouble,Relativeputmethod for writing a double  value(optional operation).
java.nio.ByteBuffer.putDouble,Absoluteputmethod for writing a double  value(optional operation).
java.nio.ByteBuffer.putFloat,Relativeputmethod for writing a float  value(optional operation).
java.nio.ByteBuffer.putFloat,Absoluteputmethod for writing a float  value(optional operation).
java.nio.ByteBuffer.putInt,Relativeputmethod for writing an int  value(optional operation).
java.nio.ByteBuffer.putInt,Absoluteputmethod for writing an int  value(optional operation).
java.nio.ByteBuffer.putLong,Absoluteputmethod for writing a long  value(optional operation).
java.nio.ByteBuffer.putLong,Relativeputmethod for writing a long  value(optional operation).
java.nio.ByteBuffer.putShort,Absoluteputmethod for writing a short  value(optional operation).
java.nio.ByteBuffer.putShort,Relativeputmethod for writing a short  value(optional operation).
java.nio.ByteBuffer.slice,Creates a new byte buffer whose content is a shared subsequence of  this buffer's content.
java.nio.ByteBuffer.toString,Returns a string summarizing the state of this buffer.
java.nio.ByteBuffer.wrap,Wraps a byte array into a buffer.
java.nio.ByteOrder.nativeOrder,Retrieves the native byte order of the underlying platform.
java.nio.ByteOrder.toString,Constructs a string describing this object.
java.nio.CharBuffer.allocate,Allocates a new char buffer.
java.nio.CharBuffer.append,Appends the specified char  to this  buffer(optional operation).
java.nio.CharBuffer.append,Appends the specified character sequence  to this  buffer(optional operation).
java.nio.CharBuffer.append,Appends a subsequence of the  specified character sequence  to this  buffer(optional operation).
java.nio.CharBuffer.array,Returns the char array that backs this  buffer(optional operation).
java.nio.CharBuffer.asReadOnlyBuffer,"Creates a new, read-only char buffer that shares this buffer's  content."
java.nio.CharBuffer.charAt,Reads the character at the given index relative to the current  position.
java.nio.CharBuffer.duplicate,Creates a new char buffer that shares this buffer's content.
java.nio.CharBuffer.hasArray,Tells whether or not this buffer is backed by an accessible char  array.
java.nio.CharBuffer.isDirect,Tells whether or not this char buffer is direct.
java.nio.CharBuffer.isEmpty,Returnstrueif this character buffer is empty.
java.nio.CharBuffer.length,Returns the length of this character buffer.
java.nio.CharBuffer.slice,Creates a new char buffer whose content is a shared subsequence of  this buffer's content.
java.nio.CharBuffer.subSequence,"Creates a new character buffer that represents the specified subsequence  of this buffer, relative to the current position."
java.nio.CharBuffer.toString,Returns a string containing the characters in this buffer.
java.nio.CharBuffer.wrap,Wraps a char array into a buffer.
java.nio.CharBuffer.wrap,Wraps a character sequence into a buffer.
java.nio.DoubleBuffer.allocate,Allocates a new double buffer.
java.nio.DoubleBuffer.array,Returns the double array that backs this  buffer(optional operation).
java.nio.DoubleBuffer.asReadOnlyBuffer,"Creates a new, read-only double buffer that shares this buffer's  content."
java.nio.DoubleBuffer.duplicate,Creates a new double buffer that shares this buffer's content.
java.nio.DoubleBuffer.hasArray,Tells whether or not this buffer is backed by an accessible double  array.
java.nio.DoubleBuffer.isDirect,Tells whether or not this double buffer is direct.
java.nio.DoubleBuffer.slice,Creates a new double buffer whose content is a shared subsequence of  this buffer's content.
java.nio.DoubleBuffer.wrap,Wraps a double array into a buffer.
java.nio.FloatBuffer.allocate,Allocates a new float buffer.
java.nio.FloatBuffer.array,Returns the float array that backs this  buffer(optional operation).
java.nio.FloatBuffer.asReadOnlyBuffer,"Creates a new, read-only float buffer that shares this buffer's  content."
java.nio.FloatBuffer.duplicate,Creates a new float buffer that shares this buffer's content.
java.nio.FloatBuffer.hasArray,Tells whether or not this buffer is backed by an accessible float  array.
java.nio.FloatBuffer.isDirect,Tells whether or not this float buffer is direct.
java.nio.FloatBuffer.slice,Creates a new float buffer whose content is a shared subsequence of  this buffer's content.
java.nio.FloatBuffer.wrap,Wraps a float array into a buffer.
java.nio.IntBuffer.allocate,Allocates a new int buffer.
java.nio.IntBuffer.array,Returns the int array that backs this  buffer(optional operation).
java.nio.IntBuffer.asReadOnlyBuffer,"Creates a new, read-only int buffer that shares this buffer's  content."
java.nio.IntBuffer.duplicate,Creates a new int buffer that shares this buffer's content.
java.nio.IntBuffer.hasArray,Tells whether or not this buffer is backed by an accessible int  array.
java.nio.IntBuffer.isDirect,Tells whether or not this int buffer is direct.
java.nio.IntBuffer.slice,Creates a new int buffer whose content is a shared subsequence of  this buffer's content.
java.nio.IntBuffer.wrap,Wraps an int array into a buffer.
java.nio.LongBuffer.allocate,Allocates a new long buffer.
java.nio.LongBuffer.array,Returns the long array that backs this  buffer(optional operation).
java.nio.LongBuffer.asReadOnlyBuffer,"Creates a new, read-only long buffer that shares this buffer's  content."
java.nio.LongBuffer.duplicate,Creates a new long buffer that shares this buffer's content.
java.nio.LongBuffer.hasArray,Tells whether or not this buffer is backed by an accessible long  array.
java.nio.LongBuffer.isDirect,Tells whether or not this long buffer is direct.
java.nio.LongBuffer.slice,Creates a new long buffer whose content is a shared subsequence of  this buffer's content.
java.nio.LongBuffer.wrap,Wraps a long array into a buffer.
java.nio.MappedByteBuffer.force,Forces any changes made to this buffer's content to be written to the  storage device containing the mapped file.
java.nio.MappedByteBuffer.force,Forces any changes made to a region of this buffer's content to  be written to the storage device containing the mapped  file.
java.nio.MappedByteBuffer.isLoaded,Tells whether or not this buffer's content is resident in physical  memory.
java.nio.MappedByteBuffer.load,Loads this buffer's content into physical memory.
java.nio.ShortBuffer.allocate,Allocates a new short buffer.
java.nio.ShortBuffer.array,Returns the short array that backs this  buffer(optional operation).
java.nio.ShortBuffer.asReadOnlyBuffer,"Creates a new, read-only short buffer that shares this buffer's  content."
java.nio.ShortBuffer.duplicate,Creates a new short buffer that shares this buffer's content.
java.nio.ShortBuffer.hasArray,Tells whether or not this buffer is backed by an accessible short  array.
java.nio.ShortBuffer.isDirect,Tells whether or not this short buffer is direct.
java.nio.ShortBuffer.slice,Creates a new short buffer whose content is a shared subsequence of  this buffer's content.
java.nio.ShortBuffer.wrap,Wraps a short array into a buffer.
java.nio.channels.AsynchronousChannelGroup.awaitTermination,Awaits termination of the group.
java.nio.channels.AsynchronousChannelGroup.isShutdown,Tells whether or not this asynchronous channel group is shutdown.
java.nio.channels.AsynchronousChannelGroup.isTerminated,Tells whether or not this group has terminated.
java.nio.channels.AsynchronousChannelGroup.provider,Returns the provider that created this channel group.
java.nio.channels.AsynchronousChannelGroup.shutdown,Initiates an orderly shutdown of the group.
java.nio.channels.AsynchronousChannelGroup.shutdownNow,Shuts down the group and closes all open channels in the group.
java.nio.channels.AsynchronousChannelGroup.withCachedThreadPool,Creates an asynchronous channel group with a given thread pool that  creates new threads as needed.
java.nio.channels.AsynchronousChannelGroup.withFixedThreadPool,Creates an asynchronous channel group with a fixed thread pool.
java.nio.channels.AsynchronousChannelGroup.withThreadPool,Creates an asynchronous channel group with a given thread pool.
java.nio.channels.AsynchronousFileChannel.force,Forces any updates to this channel's file to be written to the storage  device that contains it.
java.nio.channels.AsynchronousFileChannel.lock,Acquires an exclusive lock on this channel's file.
java.nio.channels.AsynchronousFileChannel.lock,Acquires a lock on the given region of this channel's file.
java.nio.channels.AsynchronousFileChannel.open,"Opens or creates a file for reading and/or writing, returning an  asynchronous file channel to access the file."
java.nio.channels.AsynchronousFileChannel.read,"Reads a sequence of bytes from this channel into the given buffer,  starting at the given file position."
java.nio.channels.AsynchronousFileChannel.size,Returns the current size of this channel's file.
java.nio.channels.AsynchronousFileChannel.truncate,Truncates this channel's file to the given size.
java.nio.channels.AsynchronousFileChannel.tryLock,Attempts to acquire an exclusive lock on this channel's file.
java.nio.channels.AsynchronousFileChannel.tryLock,Attempts to acquire a lock on the given region of this channel's file.
java.nio.channels.AsynchronousFileChannel.write,"Writes a sequence of bytes to this channel from the given buffer, starting  at the given file position."
java.nio.channels.AsynchronousServerSocketChannel.bind,Binds the channel's socket to a local address and configures the socket to  listen for connections.
java.nio.channels.AsynchronousServerSocketChannel.getLocalAddress,Returns the socket address that this channel's socket is bound to.
java.nio.channels.AsynchronousServerSocketChannel.open,Opens an asynchronous server-socket channel.
java.nio.channels.AsynchronousServerSocketChannel.provider,Returns the provider that created this channel.
java.nio.channels.AsynchronousSocketChannel.bind,Binds the channel's socket to a local address.
java.nio.channels.AsynchronousSocketChannel.connect,Connects this channel.
java.nio.channels.AsynchronousSocketChannel.getRemoteAddress,Returns the remote address to which this channel's socket is connected.
java.nio.channels.AsynchronousSocketChannel.open,Opens an asynchronous socket channel.
java.nio.channels.AsynchronousSocketChannel.read,Reads a sequence of bytes from this channel into the given buffer.
java.nio.channels.AsynchronousSocketChannel.read,Reads a sequence of bytes from this channel into a subsequence of the  given buffers.
java.nio.channels.AsynchronousSocketChannel.shutdownInput,Shutdown the connection for reading without closing the channel.
java.nio.channels.AsynchronousSocketChannel.shutdownOutput,Shutdown the connection for writing without closing the channel.
java.nio.channels.AsynchronousSocketChannel.write,Writes a sequence of bytes to this channel from the given buffer.
java.nio.channels.AsynchronousSocketChannel.write,Writes a sequence of bytes to this channel from a subsequence of the given  buffers.
java.nio.channels.Channels.newChannel,Constructs a channel that reads bytes from the given stream.
java.nio.channels.Channels.newChannel,Constructs a channel that writes bytes to the given stream.
java.nio.channels.Channels.newInputStream,Constructs a stream that reads bytes from the given channel.
java.nio.channels.Channels.newOutputStream,Constructs a stream that writes bytes to the given channel.
java.nio.channels.Channels.newReader,Constructs a reader that decodes bytes from the given channel according  to the named charset.
java.nio.channels.Channels.newReader,Constructs a reader that decodes bytes from the given channel according  to the given charset.
java.nio.channels.Channels.newReader,Constructs a reader that decodes bytes from the given channel using the  given decoder.
java.nio.channels.Channels.newWriter,Constructs a writer that encodes characters according to the named  charset and writes the resulting bytes to the given channel.
java.nio.channels.Channels.newWriter,Constructs a writer that encodes characters according to the given  charset and writes the resulting bytes to the given channel.
java.nio.channels.Channels.newWriter,Constructs a writer that encodes characters using the given encoder and  writes the resulting bytes to the given channel.
java.nio.channels.DatagramChannel.connect,Connects this channel's socket.
java.nio.channels.DatagramChannel.disconnect,Disconnects this channel's socket.
java.nio.channels.DatagramChannel.isConnected,Tells whether or not this channel's socket is connected.
java.nio.channels.DatagramChannel.open,Opens a datagram channel.
java.nio.channels.DatagramChannel.read,Reads a datagram from this channel.
java.nio.channels.DatagramChannel.receive,Receives a datagram via this channel.
java.nio.channels.DatagramChannel.send,Sends a datagram via this channel.
java.nio.channels.DatagramChannel.socket,Retrieves a datagram socket associated with this channel.
java.nio.channels.DatagramChannel.validOps,Returns an operation set identifying this channel's supported  operations.
java.nio.channels.DatagramChannel.write,Writes a datagram to this channel.
java.nio.channels.FileChannel.map,Maps a region of this channel's file directly into memory.
java.nio.channels.FileChannel.open,"Opens or creates a file, returning a file channel to access the file."
java.nio.channels.FileChannel.position,Returns this channel's file position.
java.nio.channels.FileChannel.position,Sets this channel's file position.
java.nio.channels.FileChannel.read,Reads a sequence of bytes from this channel into the given buffers.
java.nio.channels.FileChannel.transferFrom,Transfers bytes into this channel's file from the given readable byte  channel.
java.nio.channels.FileChannel.transferTo,Transfers bytes from this channel's file to the given writable byte  channel.
java.nio.channels.FileChannel.write,Writes a sequence of bytes to this channel from the given buffers.
java.nio.channels.FileChannel.write,Writes a sequence of bytes to this channel from a subsequence of the  given buffers.
java.nio.channels.FileChannel.write,"Writes a sequence of bytes to this channel from the given buffer,  starting at the given file position."
java.nio.channels.FileChannel.toString,Returns a string describing this file-mapping mode.
java.nio.channels.FileLock.acquiredBy,Returns the channel upon whose file this lock was acquired.
java.nio.channels.FileLock.channel,Returns the file channel upon whose file this lock was acquired.
java.nio.channels.FileLock.close,This method invokes therelease()method.
java.nio.channels.FileLock.isShared,Tells whether this lock is shared.
java.nio.channels.FileLock.isValid,Tells whether or not this lock is valid.
java.nio.channels.FileLock.overlaps,Tells whether or not this lock overlaps the given lock range.
java.nio.channels.FileLock.position,Returns the position within the file of the first byte of the locked  region.
java.nio.channels.FileLock.release,Releases this lock.
java.nio.channels.FileLock.size,Returns the size of the locked region in bytes.
java.nio.channels.FileLock.toString,"Returns a string describing the range, type, and validity of this lock."
java.nio.channels.MembershipKey.block,Block multicast datagrams from the given source address.
java.nio.channels.MembershipKey.channel,Returns the channel for which this membership key was created.
java.nio.channels.MembershipKey.drop,Drop membership.
java.nio.channels.MembershipKey.group,Returns the multicast group for which this membership key was created.
java.nio.channels.MembershipKey.isValid,Tells whether or not this membership is valid.
java.nio.channels.MembershipKey.networkInterface,Returns the network interface for which this membership key was created.
java.nio.channels.MembershipKey.sourceAddress,"Returns the source address if this membership key is source-specific,  ornullif this membership is not source-specific."
java.nio.channels.MembershipKey.unblock,Unblock multicast datagrams from the given source address that was  previously blocked using theblockmethod.
java.nio.channels.Pipe.open,Opens a pipe.
java.nio.channels.Pipe.sink,Returns this pipe's sink channel.
java.nio.channels.Pipe.source,Returns this pipe's source channel.
java.nio.channels.SelectableChannel.blockingLock,Retrieves the object upon which theconfigureBlockingandregistermethods synchronize.
java.nio.channels.SelectableChannel.configureBlocking,Adjusts this channel's blocking mode.
java.nio.channels.SelectableChannel.isBlocking,Tells whether or not every I/O operation on this channel will block  until it completes.
java.nio.channels.SelectableChannel.isRegistered,Tells whether or not this channel is currently registered with any  selectors.
java.nio.channels.SelectableChannel.keyFor,Retrieves the key representing the channel's registration with the given  selector.
java.nio.channels.SelectableChannel.register,"Registers this channel with the given selector, returning a selection  key."
java.nio.channels.SelectableChannel.validOps,Returns anoperation setidentifying this channel's supported operations.
java.nio.channels.SelectionKey.attach,Attaches the given object to this key.
java.nio.channels.SelectionKey.attachment,Retrieves the current attachment.
java.nio.channels.SelectionKey.cancel,Requests that the registration of this key's channel with its selector  be cancelled.
java.nio.channels.SelectionKey.channel,Returns the channel for which this key was created.
java.nio.channels.SelectionKey.interestOps,Retrieves this key's interest set.
java.nio.channels.SelectionKey.interestOps,Sets this key's interest set to the given value.
java.nio.channels.SelectionKey.interestOpsAnd,"Atomically sets this key's interest set to the bitwise intersection (""and"")  of the existing interest set and the given value."
java.nio.channels.SelectionKey.interestOpsOr,"Atomically sets this key's interest set to the bitwise union (""or"") of  the existing interest set and the given value."
java.nio.channels.SelectionKey.isAcceptable,Tests whether this key's channel is ready to accept a new socket  connection.
java.nio.channels.SelectionKey.isConnectable,"Tests whether this key's channel has either finished, or failed to  finish, its socket-connection operation."
java.nio.channels.SelectionKey.isReadable,Tests whether this key's channel is ready for reading.
java.nio.channels.SelectionKey.isValid,Tells whether or not this key is valid.
java.nio.channels.SelectionKey.isWritable,Tests whether this key's channel is ready for writing.
java.nio.channels.SelectionKey.readyOps,Retrieves this key's ready-operation set.
java.nio.channels.SelectionKey.selector,Returns the selector for which this key was created.
java.nio.channels.Selector.close,Closes this selector.
java.nio.channels.Selector.isOpen,Tells whether or not this selector is open.
java.nio.channels.Selector.keys,Returns this selector's key set.
java.nio.channels.Selector.open,Opens a selector.
java.nio.channels.Selector.select,Selects a set of keys whose corresponding channels are ready for I/O  operations.
java.nio.channels.Selector.select,Selects and performs an action on the keys whose corresponding channels  are ready for I/O operations.
java.nio.channels.Selector.selectedKeys,Returns this selector's selected-key set.
java.nio.channels.Selector.wakeup,Causes the first selection operation that has not yet returned to return  immediately.
java.nio.channels.ServerSocketChannel.accept,Accepts a connection made to this channel's socket.
java.nio.channels.ServerSocketChannel.bind,Binds the channel's socket to a local address and configures the socket  to listen for connections.
java.nio.channels.ServerSocketChannel.open,Opens a server-socket channel for anInternet protocolsocket.
java.nio.channels.ServerSocketChannel.open,Opens a server-socket channel.
java.nio.channels.ServerSocketChannel.socket,Retrieves a server socket associated with this channel.
java.nio.channels.SocketChannel.finishConnect,Finishes the process of connecting a socket channel.
java.nio.channels.SocketChannel.isConnected,Tells whether or not this channel's network socket is connected.
java.nio.channels.SocketChannel.isConnectionPending,Tells whether or not a connection operation is in progress on this  channel.
java.nio.channels.SocketChannel.open,Opens a socket channel for anInternet protocolsocket.
java.nio.channels.SocketChannel.open,Opens a socket channel.
java.nio.channels.SocketChannel.open,Opens a socket channel and connects it to a remote address.
java.nio.channels.SocketChannel.socket,Retrieves a socket associated with this channel.
java.nio.channels.spi.AbstractInterruptibleChannel.begin,Marks the beginning of an I/O operation that might block indefinitely.
java.nio.channels.spi.AbstractInterruptibleChannel.close,Closes this channel.
java.nio.channels.spi.AbstractInterruptibleChannel.end,Marks the end of an I/O operation that might block indefinitely.
java.nio.channels.spi.AbstractInterruptibleChannel.isOpen,Tells whether or not this channel is open.
java.nio.channels.spi.AbstractSelectableChannel.implCloseSelectableChannel,Closes this selectable channel.
java.nio.channels.spi.AbstractSelectableChannel.register,"Registers this channel with the given selector, returning a selection key."
java.nio.channels.spi.AbstractSelectionKey.cancel,Cancels this key.
java.nio.channels.spi.AbstractSelector.cancelledKeys,Retrieves this selector's cancelled-key set.
java.nio.channels.spi.AbstractSelector.deregister,Removes the given key from its channel's key set.
java.nio.channels.spi.AbstractSelector.register,Registers the given channel with this selector.
java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousChannelGroup,Constructs a new asynchronous channel group with a fixed thread pool.
java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousChannelGroup,Constructs a new asynchronous channel group with the given thread pool.
java.nio.channels.spi.AsynchronousChannelProvider.provider,Returns the system-wide default asynchronous channel provider for this  invocation of the Java virtual machine.
java.nio.channels.spi.SelectorProvider.provider,Returns the system-wide default selector provider for this invocation of  the Java virtual machine.
java.nio.charset.Charset.aliases,Returns a set containing this charset's aliases.
java.nio.charset.Charset.availableCharsets,Constructs a sorted map from canonical charset names to charset objects.
java.nio.charset.Charset.canEncode,Tells whether or not this charset supports encoding.
java.nio.charset.Charset.compareTo,Compares this charset to another.
java.nio.charset.Charset.contains,Tells whether or not this charset contains the given charset.
java.nio.charset.Charset.decode,Convenience method that decodes bytes in this charset into Unicode  characters.
java.nio.charset.Charset.defaultCharset,Returns the default charset of this Java virtual machine.
java.nio.charset.Charset.displayName,Returns this charset's human-readable name for the default locale.
java.nio.charset.Charset.displayName,Returns this charset's human-readable name for the given locale.
java.nio.charset.Charset.encode,Convenience method that encodes a string into bytes in this charset.
java.nio.charset.Charset.encode,Convenience method that encodes Unicode characters into bytes in this  charset.
java.nio.charset.Charset.equals,Tells whether or not this object is equal to another.
java.nio.charset.Charset.forName,Returns a charset object for the named charset.
java.nio.charset.Charset.hashCode,Computes a hashcode for this charset.
java.nio.charset.Charset.isRegistered,Tells whether or not this charset is registered in theIANA Charset  Registry.
java.nio.charset.Charset.isSupported,Tells whether the named charset is supported.
java.nio.charset.Charset.name,Returns this charset's canonical name.
java.nio.charset.Charset.newDecoder,Constructs a new decoder for this charset.
java.nio.charset.Charset.newEncoder,Constructs a new encoder for this charset.
java.nio.charset.Charset.toString,Returns a string describing this charset.
java.nio.charset.CharsetDecoder.averageCharsPerByte,Returns the average number of characters that will be produced for each  byte of input.
java.nio.charset.CharsetDecoder.charset,Returns the charset that created this decoder.
java.nio.charset.CharsetDecoder.decode,Convenience method that decodes the remaining content of a single input  byte buffer into a newly-allocated character buffer.
java.nio.charset.CharsetDecoder.decode,"Decodes as many bytes as possible from the given input buffer,  writing the results to the given output buffer."
java.nio.charset.CharsetDecoder.decodeLoop,Decodes one or more bytes into one or more characters.
java.nio.charset.CharsetDecoder.detectedCharset,Retrieves the charset that was detected by this  decoder(optional operation).
java.nio.charset.CharsetDecoder.flush,Flushes this decoder.
java.nio.charset.CharsetDecoder.implOnMalformedInput,Reports a change to this decoder's malformed-input action.
java.nio.charset.CharsetDecoder.implOnUnmappableCharacter,Reports a change to this decoder's unmappable-character action.
java.nio.charset.CharsetDecoder.implReplaceWith,Reports a change to this decoder's replacement value.
java.nio.charset.CharsetDecoder.implReset,"Resets this decoder, clearing any charset-specific internal state."
java.nio.charset.CharsetDecoder.isAutoDetecting,Tells whether or not this decoder implements an auto-detecting charset.
java.nio.charset.CharsetDecoder.isCharsetDetected,Tells whether or not this decoder has yet detected a  charset(optional operation).
java.nio.charset.CharsetDecoder.malformedInputAction,Returns this decoder's current action for malformed-input errors.
java.nio.charset.CharsetDecoder.maxCharsPerByte,Returns the maximum number of characters that will be produced for each  byte of input.
java.nio.charset.CharsetDecoder.onMalformedInput,Changes this decoder's action for malformed-input errors.
java.nio.charset.CharsetDecoder.onUnmappableCharacter,Changes this decoder's action for unmappable-character errors.
java.nio.charset.CharsetDecoder.replacement,Returns this decoder's replacement value.
java.nio.charset.CharsetDecoder.replaceWith,Changes this decoder's replacement value.
java.nio.charset.CharsetDecoder.reset,"Resets this decoder, clearing any internal state."
java.nio.charset.CharsetDecoder.unmappableCharacterAction,Returns this decoder's current action for unmappable-character errors.
java.nio.charset.CharsetEncoder.averageBytesPerChar,Returns the average number of bytes that will be produced for each  character of input.
java.nio.charset.CharsetEncoder.canEncode,Tells whether or not this encoder can encode the given character.
java.nio.charset.CharsetEncoder.canEncode,Tells whether or not this encoder can encode the given character  sequence.
java.nio.charset.CharsetEncoder.charset,Returns the charset that created this encoder.
java.nio.charset.CharsetEncoder.encode,Convenience method that encodes the remaining content of a single input  character buffer into a newly-allocated byte buffer.
java.nio.charset.CharsetEncoder.encode,"Encodes as many characters as possible from the given input buffer,  writing the results to the given output buffer."
java.nio.charset.CharsetEncoder.encodeLoop,Encodes one or more characters into one or more bytes.
java.nio.charset.CharsetEncoder.flush,Flushes this encoder.
java.nio.charset.CharsetEncoder.implOnMalformedInput,Reports a change to this encoder's malformed-input action.
java.nio.charset.CharsetEncoder.implOnUnmappableCharacter,Reports a change to this encoder's unmappable-character action.
java.nio.charset.CharsetEncoder.implReplaceWith,Reports a change to this encoder's replacement value.
java.nio.charset.CharsetEncoder.implReset,"Resets this encoder, clearing any charset-specific internal state."
java.nio.charset.CharsetEncoder.isLegalReplacement,Tells whether or not the given byte array is a legal replacement value  for this encoder.
java.nio.charset.CharsetEncoder.malformedInputAction,Returns this encoder's current action for malformed-input errors.
java.nio.charset.CharsetEncoder.maxBytesPerChar,Returns the maximum number of bytes that will be produced for each  character of input.
java.nio.charset.CharsetEncoder.onMalformedInput,Changes this encoder's action for malformed-input errors.
java.nio.charset.CharsetEncoder.onUnmappableCharacter,Changes this encoder's action for unmappable-character errors.
java.nio.charset.CharsetEncoder.replacement,Returns this encoder's replacement value.
java.nio.charset.CharsetEncoder.replaceWith,Changes this encoder's replacement value.
java.nio.charset.CharsetEncoder.reset,"Resets this encoder, clearing any internal state."
java.nio.charset.CharsetEncoder.unmappableCharacterAction,Returns this encoder's current action for unmappable-character errors.
java.nio.charset.CoderResult.isError,Tells whether or not this object describes an error condition.
java.nio.charset.CoderResult.isMalformed,Tells whether or not this object describes a malformed-input error.
java.nio.charset.CoderResult.isOverflow,Tells whether or not this object describes an overflow condition.
java.nio.charset.CoderResult.isUnderflow,Tells whether or not this object describes an underflow condition.
java.nio.charset.CoderResult.isUnmappable,Tells whether or not this object describes an unmappable-character  error.
java.nio.charset.CoderResult.length,Returns the length of the erroneous input described by this  object(optional operation).
java.nio.charset.CoderResult.malformedForLength,Static factory method that returns the unique object describing a  malformed-input error of the given length.
java.nio.charset.CoderResult.throwException,Throws an exception appropriate to the result described by this object.
java.nio.charset.CoderResult.toString,Returns a string describing this coder result.
java.nio.charset.CoderResult.unmappableForLength,Static factory method that returns the unique result object describing  an unmappable-character error of the given length.
java.nio.charset.CodingErrorAction.toString,Returns a string describing this action.
java.nio.charset.IllegalCharsetNameException.getCharsetName,Retrieves the illegal charset name.
java.nio.charset.MalformedInputException.getInputLength,Returns the length of the input.
java.nio.charset.MalformedInputException.getMessage,Returns the message.
java.nio.charset.UnsupportedCharsetException.getCharsetName,Retrieves the name of the unsupported charset.
java.nio.charset.spi.CharsetProvider.charsetForName,Retrieves a charset for the given charset name.
java.nio.charset.spi.CharsetProvider.charsets,Creates an iterator that iterates over the charsets supported by this  provider.
java.nio.file.Files.copy,Copies all bytes from an input stream to a file.
java.nio.file.Files.copy,Copies all bytes from a file to an output stream.
java.nio.file.Files.copy,Copy a file to a target file.
java.nio.file.Files.createDirectories,Creates a directory by creating all nonexistent parent directories first.
java.nio.file.Files.createDirectory,Creates a new directory.
java.nio.file.Files.createFile,"Creates a new and empty file, failing if the file already exists."
java.nio.file.Files.createLink,Creates a new link (directory entry) for an existing file(optional  operation).
java.nio.file.Files.createSymbolicLink,Creates a symbolic link to a target(optional operation).
java.nio.file.Files.createTempDirectory,"Creates a new directory in the default temporary-file directory, using  the given prefix to generate its name."
java.nio.file.Files.createTempDirectory,"Creates a new directory in the specified directory, using the given  prefix to generate its name."
java.nio.file.Files.createTempFile,"Creates a new empty file in the specified directory, using the given  prefix and suffix strings to generate its name."
java.nio.file.Files.delete,Deletes a file.
java.nio.file.Files.deleteIfExists,Deletes a file if it exists.
java.nio.file.Files.exists,Tests whether a file exists.
java.nio.file.Files.find,Return aStreamthat is lazily populated withPathby searching for files in a file tree rooted at a given starting  file.
java.nio.file.Files.getAttribute,Reads the value of a file attribute.
java.nio.file.Files.getFileAttributeView,Returns a file attribute view of a given type.
java.nio.file.Files.getFileStore,Returns theFileStorerepresenting the file store where a file  is located.
java.nio.file.Files.getLastModifiedTime,Returns a file's last modified time.
java.nio.file.Files.getOwner,Returns the owner of a file.
java.nio.file.Files.getPosixFilePermissions,Returns a file's POSIX file permissions.
java.nio.file.Files.isDirectory,Tests whether a file is a directory.
java.nio.file.Files.isExecutable,Tests whether a file is executable.
java.nio.file.Files.isHidden,Tells whether or not a file is consideredhidden.
java.nio.file.Files.isReadable,Tests whether a file is readable.
java.nio.file.Files.isRegularFile,Tests whether a file is a regular file with opaque content.
java.nio.file.Files.isSameFile,Tests if two paths locate the same file.
java.nio.file.Files.isSymbolicLink,Tests whether a file is a symbolic link.
java.nio.file.Files.isWritable,Tests whether a file is writable.
java.nio.file.Files.lines,Read all lines from a file as aStream.
java.nio.file.Files.list,"Return a lazily populatedStream, the elements of  which are the entries in the directory."
java.nio.file.Files.mismatch,"Finds and returns the position of the first mismatched byte in the content  of two files, or-1Lif there is no mismatch."
java.nio.file.Files.move,Move or rename a file to a target file.
java.nio.file.Files.newBufferedReader,"Opens a file for reading, returning aBufferedReaderto read text  from the file in an efficient manner."
java.nio.file.Files.newBufferedReader,"Opens a file for reading, returning aBufferedReaderthat may be  used to read text from the file in an efficient manner."
java.nio.file.Files.newBufferedWriter,"Opens or creates a file for writing, returning aBufferedWriterthat may be used to write text to the file in an efficient manner."
java.nio.file.Files.newBufferedWriter,"Opens or creates a file for writing, returning aBufferedWriterto write text to the file in an efficient manner."
java.nio.file.Files.newByteChannel,"Opens or creates a file, returning a seekable byte channel to access the  file."
java.nio.file.Files.newDirectoryStream,"Opens a directory, returning aDirectoryStreamto iterate over  all entries in the directory."
java.nio.file.Files.newDirectoryStream,"Opens a directory, returning aDirectoryStreamto iterate over  the entries in the directory."
java.nio.file.Files.newInputStream,"Opens a file, returning an input stream to read from the file."
java.nio.file.Files.newOutputStream,"Opens or creates a file, returning an output stream that may be used to  write bytes to the file."
java.nio.file.Files.notExists,Tests whether the file located by this path does not exist.
java.nio.file.Files.probeContentType,Probes the content type of a file.
java.nio.file.Files.readAllBytes,Reads all the bytes from a file.
java.nio.file.Files.readAllLines,Read all lines from a file.
java.nio.file.Files.readAttributes,Reads a file's attributes as a bulk operation.
java.nio.file.Files.readAttributes,Reads a set of file attributes as a bulk operation.
java.nio.file.Files.readString,"Reads all content from a file into a string, decoding from bytes to characters  using theUTF-8charset."
java.nio.file.Files.readString,"Reads all characters from a file into a string, decoding from bytes to characters  using the specifiedcharset."
java.nio.file.Files.readSymbolicLink,Reads the target of a symbolic link(optional operation).
java.nio.file.Files.setAttribute,Sets the value of a file attribute.
java.nio.file.Files.setLastModifiedTime,Updates a file's last modified time attribute.
java.nio.file.Files.setOwner,Updates the file owner.
java.nio.file.Files.setPosixFilePermissions,Sets a file's POSIX permissions.
java.nio.file.Files.size,Returns the size of a file (in bytes).
java.nio.file.Files.walk,Return aStreamthat is lazily populated withPathby walking the file tree rooted at a given starting file.
java.nio.file.Files.walkFileTree,Walks a file tree.
java.nio.file.Files.write,Writes bytes to a file.
java.nio.file.Files.write,Write lines of text to a file.
java.nio.file.Files.writeString,Write aCharSequenceto a file.
java.nio.file.FileStore.getAttribute,Reads the value of a file store attribute.
java.nio.file.FileStore.getBlockSize,Returns the number of bytes per block in this file store.
java.nio.file.FileStore.getFileStoreAttributeView,Returns aFileStoreAttributeViewof the given type.
java.nio.file.FileStore.getTotalSpace,"Returns the size, in bytes, of the file store."
java.nio.file.FileStore.getUnallocatedSpace,Returns the number of unallocated bytes in the file store.
java.nio.file.FileStore.getUsableSpace,Returns the number of bytes available to this Java virtual machine on the  file store.
java.nio.file.FileStore.isReadOnly,Tells whether this file store is read-only.
java.nio.file.FileStore.name,Returns the name of this file store.
java.nio.file.FileStore.supportsFileAttributeView,Tells whether or not this file store supports the file attributes  identified by the given file attribute view.
java.nio.file.FileStore.type,Returns thetypeof this file store.
java.nio.file.FileSystem.close,Closes this file system.
java.nio.file.FileSystem.getFileStores,Returns an object to iterate over the underlying file stores.
java.nio.file.FileSystem.getPath,"Converts a path string, or a sequence of strings that when joined form  a path string, to aPath."
java.nio.file.FileSystem.getPathMatcher,Returns aPathMatcherthat performs match operations on theStringrepresentation ofPathobjects by interpreting a  given pattern.
java.nio.file.FileSystem.getRootDirectories,Returns an object to iterate over the paths of the root directories.
java.nio.file.FileSystem.getSeparator,"Returns the name separator, represented as a string."
java.nio.file.FileSystem.getUserPrincipalLookupService,Returns theUserPrincipalLookupServicefor this file system(optional operation).
java.nio.file.FileSystem.isOpen,Tells whether or not this file system is open.
java.nio.file.FileSystem.isReadOnly,Tells whether or not this file system allows only read-only access to  its file stores.
java.nio.file.FileSystem.newWatchService,Constructs a newWatchService(optional operation).
java.nio.file.FileSystem.provider,Returns the provider that created this file system.
java.nio.file.FileSystem.supportedFileAttributeViews,Returns the set of thenamesof the file  attribute views supported by thisFileSystem.
java.nio.file.FileSystemException.getFile,Returns the file used to create this exception.
java.nio.file.FileSystemException.getMessage,Returns the detail message string.
java.nio.file.FileSystemException.getOtherFile,Returns the other file used to create this exception.
java.nio.file.FileSystemException.getReason,Returns the string explaining why the file system operation failed.
java.nio.file.FileSystems.getDefault,Returns the defaultFileSystem.
java.nio.file.FileSystems.getFileSystem,Returns a reference to an existingFileSystem.
java.nio.file.FileSystems.newFileSystem,Constructs a new file system that is identified by aURI
java.nio.file.FileSystems.newFileSystem,Constructs a newFileSystemto access the contents of a file as a  file system.
java.nio.file.InvalidPathException.getIndex,"Returns an index into the input string of the position at which the  error occurred, or-1if this position is not known."
java.nio.file.InvalidPathException.getMessage,Returns a string describing the error.
java.nio.file.InvalidPathException.getReason,Returns a string explaining why the input string was rejected.
java.nio.file.Paths.get,Converts the given URI to aPathobject.
java.nio.file.SimpleFileVisitor.postVisitDirectory,"Invoked for a directory after entries in the directory, and all of their  descendants, have been visited."
java.nio.file.SimpleFileVisitor.preVisitDirectory,Invoked for a directory before entries in the directory are visited.
java.nio.file.SimpleFileVisitor.visitFile,Invoked for a file in a directory.
java.nio.file.SimpleFileVisitor.visitFileFailed,Invoked for a file that could not be visited.
java.nio.file.attribute.AclEntry.build,Constructs anAclEntryfrom the components of this builder.
java.nio.file.attribute.AclEntry.setFlags,Sets the flags component of this builder.
java.nio.file.attribute.AclEntry.setPermissions,Sets the permissions component of this builder.
java.nio.file.attribute.AclEntry.setPrincipal,Sets the principal component of this builder.
java.nio.file.attribute.AclEntry.setType,Sets the type component of this builder.
java.nio.file.attribute.AclEntry.equals,Compares the specified object with this ACL entry for equality.
java.nio.file.attribute.AclEntry.flags,Returns a copy of the flags component.
java.nio.file.attribute.AclEntry.hashCode,Returns the hash-code value for this ACL entry.
java.nio.file.attribute.AclEntry.newBuilder,Constructs a new builder.
java.nio.file.attribute.AclEntry.newBuilder,Constructs a new builder with the components of an existing ACL entry.
java.nio.file.attribute.AclEntry.permissions,Returns a copy of the permissions component.
java.nio.file.attribute.AclEntry.principal,Returns the principal component.
java.nio.file.attribute.AclEntry.toString,Returns the string representation of this ACL entry.
java.nio.file.attribute.AclEntry.type,Returns the ACL entry type.
java.nio.file.attribute.FileTime.compareTo,Compares the value of twoFileTimeobjects for order.
java.nio.file.attribute.FileTime.equals,Tests thisFileTimefor equality with the given object.
java.nio.file.attribute.FileTime.from,Returns aFileTimerepresenting a value at the given unit of  granularity.
java.nio.file.attribute.FileTime.from,Returns aFileTimerepresenting the same point of time value  on the time-line as the providedInstantobject.
java.nio.file.attribute.FileTime.fromMillis,Returns aFileTimerepresenting the given value in milliseconds.
java.nio.file.attribute.FileTime.hashCode,Computes a hash code for this file time.
java.nio.file.attribute.FileTime.to,Returns the value at the given unit of granularity.
java.nio.file.attribute.FileTime.toInstant,Converts thisFileTimeobject to anInstant.
java.nio.file.attribute.FileTime.toMillis,Returns the value in milliseconds.
java.nio.file.attribute.FileTime.toString,Returns the string representation of thisFileTime.
java.nio.file.attribute.PosixFilePermissions.asFileAttribute,"Creates aFileAttribute, encapsulating a copy of the given file  permissions, suitable for passing to thecreateFileorcreateDirectorymethods."
java.nio.file.attribute.PosixFilePermissions.fromString,Returns the set of permissions corresponding to a givenStringrepresentation.
java.nio.file.attribute.PosixFilePermissions.toString,Returns theStringrepresentation of a set of permissions.
java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByGroupName,Lookup a group principal by group name.
java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByName,Lookup a user principal by name.
java.nio.file.attribute.UserPrincipalNotFoundException.getName,"Returns the user principal name if this exception was created with the  user principal name that was not found, otherwisenull."
java.nio.file.spi.FileSystemProvider.checkAccess,"Checks the existence, and optionally the accessibility, of a file."
java.nio.file.spi.FileSystemProvider.createLink,Creates a new link (directory entry) for an existing file.
java.nio.file.spi.FileSystemProvider.createSymbolicLink,Creates a symbolic link to a target.
java.nio.file.spi.FileSystemProvider.getFileSystem,Returns an existingFileSystemcreated by this provider.
java.nio.file.spi.FileSystemProvider.getPath,Return aPathobject by converting the givenURI.
java.nio.file.spi.FileSystemProvider.getScheme,Returns the URI scheme that identifies this provider.
java.nio.file.spi.FileSystemProvider.installedProviders,Returns a list of the installed file system providers.
java.nio.file.spi.FileSystemProvider.newFileChannel,"Opens or creates a file for reading and/or writing, returning a file  channel to access the file."
java.nio.file.spi.FileSystemProvider.newFileSystem,Constructs a newFileSystemobject identified by a URI.
java.nio.file.spi.FileSystemProvider.readSymbolicLink,Reads the target of a symbolic link.
java.nio.file.spi.FileTypeDetector.probeContentType,Probes the given file to guess its content type.
java.security.AlgorithmParameterGenerator.generateParameters,Generates the parameters.
java.security.AlgorithmParameterGenerator.getAlgorithm,Returns the standard name of the algorithm this parameter  generator is associated with.
java.security.AlgorithmParameterGenerator.getInstance,Returns an AlgorithmParameterGenerator object for generating  a set of parameters to be used with the specified algorithm.
java.security.AlgorithmParameterGenerator.getProvider,Returns the provider of this algorithm parameter generator object.
java.security.AlgorithmParameterGenerator.init,Initializes this parameter generator for a certain size.
java.security.AlgorithmParameterGenerator.init,Initializes this parameter generator for a certain size and source  of randomness.
java.security.AlgorithmParameterGenerator.init,Initializes this parameter generator with a set of algorithm-specific  parameter generation values.
java.security.AlgorithmParameterGeneratorSpi.engineInit,Initializes this parameter generator for a certain size  and source of randomness.
java.security.AlgorithmParameterGeneratorSpi.engineInit,Initializes this parameter generator with a set of  algorithm-specific parameter generation values.
java.security.AlgorithmParameters.getAlgorithm,Returns the name of the algorithm associated with this parameter object.
java.security.AlgorithmParameters.getEncoded,Returns the parameters in their primary encoding format.
java.security.AlgorithmParameters.getEncoded,Returns the parameters encoded in the specified scheme.
java.security.AlgorithmParameters.getInstance,Returns a parameter object for the specified algorithm.
java.security.AlgorithmParameters.getParameterSpec,Returns a (transparent) specification of this parameter object.
java.security.AlgorithmParameters.getProvider,Returns the provider of this parameter object.
java.security.AlgorithmParameters.init,Imports the specified parameters and decodes them according to the  primary decoding format for parameters.
java.security.AlgorithmParameters.init,Imports the parameters fromparamsand decodes them  according to the specified decoding scheme.
java.security.AlgorithmParameters.init,Initializes this parameter object using the parameters  specified inparamSpec.
java.security.AlgorithmParameters.toString,Returns a formatted string describing the parameters.
java.security.AlgorithmParametersSpi.engineGetEncoded,Returns the parameters encoded in the specified format.
java.security.AlgorithmParametersSpi.engineGetParameterSpec,Returns a (transparent) specification of this parameters  object.
java.security.AlgorithmParametersSpi.engineInit,Imports the specified parameters and decodes them  according to the primary decoding format for parameters.
java.security.AlgorithmParametersSpi.engineInit,Imports the parameters fromparamsand  decodes them according to the specified decoding format.
java.security.AlgorithmParametersSpi.engineInit,Initializes this parameters object using the parameters  specified inparamSpec.
java.security.AllPermission.equals,Checks two AllPermission objects for equality.
java.security.AllPermission.implies,"Checks if the specified permission is ""implied"" by  this object."
java.security.AllPermission.newPermissionCollection,Returns a new PermissionCollection object for storing AllPermission  objects.
java.security.AuthProvider.login,Log in to this provider.
java.security.AuthProvider.logout,Log out from this provider.
java.security.AuthProvider.setCallbackHandler,Set aCallbackHandler.
java.security.BasicPermission.equals,Checks two BasicPermission objects for equality.
java.security.BasicPermission.getActions,"Returns the canonical string representation of the actions,  which currently is the empty string """", since there are no actions for  a BasicPermission."
java.security.BasicPermission.newPermissionCollection,Returns a new PermissionCollection object for storing BasicPermission  objects.
java.security.CodeSigner.equals,Tests for equality between the specified object and this  code signer.
java.security.CodeSigner.getSignerCertPath,Returns the signer's certificate path.
java.security.CodeSigner.getTimestamp,Returns the signature timestamp.
java.security.CodeSigner.hashCode,Returns the hash code value for this code signer.
java.security.CodeSigner.toString,Returns a string describing this code signer.
java.security.CodeSource.equals,Tests for equality between the specified object and this  object.
java.security.CodeSource.getCertificates,Returns the certificates associated with this CodeSource.
java.security.CodeSource.getCodeSigners,Returns the code signers associated with this CodeSource.
java.security.CodeSource.getLocation,Returns the location associated with this CodeSource.
java.security.CodeSource.implies,"Returns true if this CodeSource object ""implies"" the specified CodeSource."
java.security.CodeSource.toString,"Returns a string describing this CodeSource, telling its  URL and certificates."
java.security.DigestInputStream.getMessageDigest,Returns the message digest associated with this stream.
java.security.DigestInputStream.on,Turns the digest function on or off.
java.security.DigestInputStream.read,"Reads a byte, and updates the message digest (if the digest  function is on)."
java.security.DigestInputStream.read,"Reads into a byte array, and updates the message digest (if the  digest function is on)."
java.security.DigestInputStream.setMessageDigest,Associates the specified message digest with this stream.
java.security.DigestInputStream.toString,Prints a string representation of this digest input stream and  its associated message digest object.
java.security.DigestOutputStream.toString,Prints a string representation of this digest output stream and  its associated message digest object.
java.security.DigestOutputStream.write,"Updates the message digest (if the digest function is on) using  the specified subarray, and in any case writes the subarray to  the output stream."
java.security.DigestOutputStream.write,"Updates the message digest (if the digest function is on) using  the specified byte, and in any case writes the byte  to the output stream."
java.security.DomainLoadStoreParameter.getConfiguration,Gets the identifier for the domain configuration data.
java.security.DomainLoadStoreParameter.getProtectionParameter,Gets the keystore protection parameters for this domain.
java.security.DomainLoadStoreParameter.getProtectionParams,Gets the keystore protection parameters for keystores in this  domain.
java.security.DrbgParameters.supportsPredictionResistance,Returns whether this capability supports prediction resistance.
java.security.DrbgParameters.supportsReseeding,Returns whether this capability supports reseeding.
java.security.DrbgParameters.instantiation,Generates aDrbgParameters.Instantiationobject.
java.security.DrbgParameters.nextBytes,Generates aDrbgParameters.NextBytesobject.
java.security.DrbgParameters.reseed,Generates aDrbgParameters.Reseedobject.
java.security.DrbgParameters.getCapability,Returns the capability.
java.security.DrbgParameters.getPersonalizationString,Returns the personalization string as a byte array.
java.security.DrbgParameters.getStrength,Returns the security strength in bits.
java.security.DrbgParameters.toString,Returns a Human-readable string representation of thisInstantiation.
java.security.DrbgParameters.getAdditionalInput,Returns the requested additional input.
java.security.DrbgParameters.getPredictionResistance,Returns whether prediction resistance is requested.
java.security.DrbgParameters.getStrength,Returns the security strength requested in bits.
java.security.GuardedObject.getObject,"Retrieves the guarded object, or throws an exception if access  to the guarded object is denied by the guard."
java.security.KeyFactory.generatePrivate,Generates a private key object from the provided key specification  (key material).
java.security.KeyFactory.generatePublic,Generates a public key object from the provided key specification  (key material).
java.security.KeyFactory.getAlgorithm,Gets the name of the algorithm  associated with thisKeyFactory.
java.security.KeyFactory.getInstance,Returns a KeyFactory object that converts  public/private keys of the specified algorithm.
java.security.KeyFactory.getKeySpec,Returns a specification (key material) of the given key object.
java.security.KeyFactory.getProvider,Returns the provider of this key factory object.
java.security.KeyFactory.translateKey,"Translates a key object, whose provider may be unknown or potentially  untrusted, into a corresponding key object of this key factory."
java.security.KeyFactorySpi.engineGeneratePrivate,Generates a private key object from the provided key  specification (key material).
java.security.KeyFactorySpi.engineGeneratePublic,Generates a public key object from the provided key  specification (key material).
java.security.KeyFactorySpi.engineGetKeySpec,Returns a specification (key material) of the given key  object.
java.security.KeyFactorySpi.engineTranslateKey,"Translates a key object, whose provider may be unknown or  potentially untrusted, into a corresponding key object of this key  factory."
java.security.KeyPair.getPrivate,Returns a reference to the private key component of this key pair.
java.security.KeyPair.getPublic,Returns a reference to the public key component of this key pair.
java.security.KeyPairGenerator.generateKeyPair,Generates a key pair.
java.security.KeyPairGenerator.getAlgorithm,Returns the standard name of the algorithm for this key pair generator.
java.security.KeyPairGenerator.getInstance,Returns a KeyPairGenerator object that generates public/private  key pairs for the specified algorithm.
java.security.KeyPairGenerator.getProvider,Returns the provider of this key pair generator object.
java.security.KeyPairGenerator.initialize,Initializes the key pair generator for a certain keysize using  a default parameter set and theSecureRandomimplementation of the highest-priority installed provider as the source  of randomness.
java.security.KeyPairGenerator.initialize,Initializes the key pair generator for a certain keysize with  the given source of randomness (and a default parameter set).
java.security.KeyPairGenerator.initialize,Initializes the key pair generator using the specified parameter  set and theSecureRandomimplementation of the highest-priority installed provider as the source  of randomness.
java.security.KeyPairGenerator.initialize,Initializes the key pair generator with the given parameter  set and source of randomness.
java.security.KeyPairGeneratorSpi.initialize,"Initializes the key pair generator for a certain keysize, using  the default parameter set."
java.security.KeyPairGeneratorSpi.initialize,Initializes the key pair generator using the specified parameter  set and user-provided source of randomness.
java.security.KeyRep.readResolve,Resolve the Key object.
java.security.KeyStore.getKeyStore,Returns the KeyStore described by this object.
java.security.KeyStore.getProtectionParameter,Returns the ProtectionParameters that should be used to obtain  theEntrywith the given alias.
java.security.KeyStore.newInstance,Returns a new Builder object.
java.security.KeyStore.newInstance,Returns a new Builder that encapsulates the given KeyStore.
java.security.KeyStore.getCallbackHandler,Returns the CallbackHandler.
java.security.KeyStore.getName,Returns the attribute's name.
java.security.KeyStore.getValue,Returns the attribute's value.
java.security.KeyStore.getAttributes,Retrieves the attributes associated with an entry.
java.security.KeyStore.aliases,Lists all the alias names of this keystore.
java.security.KeyStore.containsAlias,Checks if the given alias exists in this keystore.
java.security.KeyStore.deleteEntry,Deletes the entry identified by the given alias from this keystore.
java.security.KeyStore.entryInstanceOf,Determines if the keystoreEntryfor the specifiedaliasis an instance or subclass of the specifiedentryClass.
java.security.KeyStore.getCertificate,Returns the certificate associated with the given alias.
java.security.KeyStore.getCertificateAlias,Returns the (alias) name of the first keystore entry whose certificate  matches the given certificate.
java.security.KeyStore.getCertificateChain,Returns the certificate chain associated with the given alias.
java.security.KeyStore.getCreationDate,Returns the creation date of the entry identified by the given alias.
java.security.KeyStore.getDefaultType,"Returns the default keystore type as specified by thekeystore.typesecurity property, or the string  ""jks"" (acronym for ""Java keystore"")  if no such property exists."
java.security.KeyStore.getEntry,Gets a keystoreEntryfor the specified alias  with the specified protection parameter.
java.security.KeyStore.getInstance,Returns a loaded keystore object of the appropriate keystore type.
java.security.KeyStore.getInstance,Returns a keystore object of the specified type.
java.security.KeyStore.getKey,"Returns the key associated with the given alias, using the given  password to recover it."
java.security.KeyStore.getProvider,Returns the provider of this keystore.
java.security.KeyStore.getType,Returns the type of this keystore.
java.security.KeyStore.isCertificateEntry,"Returns true if the entry identified by the given alias  was created by a call tosetCertificateEntry,  or created by a call tosetEntrywith aTrustedCertificateEntry."
java.security.KeyStore.isKeyEntry,"Returns true if the entry identified by the given alias  was created by a call tosetKeyEntry,  or created by a call tosetEntrywith aPrivateKeyEntryor aSecretKeyEntry."
java.security.KeyStore.load,Loads this KeyStore from the given input stream.
java.security.KeyStore.load,Loads this keystore using the givenLoadStoreParameter.
java.security.KeyStore.setCertificateEntry,Assigns the given trusted certificate to the given alias.
java.security.KeyStore.setEntry,Saves a keystoreEntryunder the specified alias.
java.security.KeyStore.setKeyEntry,Assigns the given key (that has already been protected) to the given  alias.
java.security.KeyStore.setKeyEntry,"Assigns the given key to the given alias, protecting it with the given  password."
java.security.KeyStore.size,Retrieves the number of entries in this keystore.
java.security.KeyStore.store,"Stores this keystore to the given output stream, and protects its  integrity with the given password."
java.security.KeyStore.store,Stores this keystore using the givenLoadStoreParameter.
java.security.KeyStore.getProtectionParameter,Gets the parameter used to protect keystore data.
java.security.KeyStore.destroy,Clears the password.
java.security.KeyStore.getPassword,Gets the password.
java.security.KeyStore.getProtectionAlgorithm,Gets the name of the protection algorithm.
java.security.KeyStore.getProtectionParameters,Gets the parameters supplied for the protection algorithm.
java.security.KeyStore.isDestroyed,Determines if password has been cleared.
java.security.KeyStore.getCertificate,Gets the end entityCertificatefrom the certificate chain in this entry.
java.security.KeyStore.getCertificateChain,Gets theCertificatechain from this entry.
java.security.KeyStore.getPrivateKey,Gets thePrivateKeyfrom this entry.
java.security.KeyStore.toString,Returns a string representation of this PrivateKeyEntry.
java.security.KeyStore.getSecretKey,Gets theSecretKeyfrom this entry.
java.security.KeyStore.toString,Returns a string representation of this SecretKeyEntry.
java.security.KeyStore.getTrustedCertificate,Gets the trustedCertficatefrom this entry.
java.security.KeyStore.toString,Returns a string representation of this TrustedCertificateEntry.
java.security.KeyStoreSpi.engineGetEntry,Gets aKeyStore.Entryfor the specified alias  with the specified protection parameter.
java.security.KeyStoreSpi.engineLoad,Loads the keystore from the given input stream.
java.security.KeyStoreSpi.engineLoad,Loads the keystore using the givenKeyStore.LoadStoreParameter.
java.security.KeyStoreSpi.engineProbe,"Probes the specified input stream to determine whether it contains a  keystore that is supported by this implementation, or not."
java.security.KeyStoreSpi.engineSetCertificateEntry,Assigns the given certificate to the given alias.
java.security.KeyStoreSpi.engineSetEntry,Saves aKeyStore.Entryunder the specified alias.
java.security.KeyStoreSpi.engineStore,Stores this keystore using the givenKeyStore.LoadStoreParameter.
java.security.MessageDigest.clone,Returns a clone if the implementation is cloneable.
java.security.MessageDigest.digest,Completes the hash computation by performing final operations  such as padding.
java.security.MessageDigest.digest,"Performs a final update on the digest using the specified array  of bytes, then completes the digest computation."
java.security.MessageDigest.getAlgorithm,"Returns a string that identifies the algorithm, independent of  implementation details."
java.security.MessageDigest.getDigestLength,"Returns the length of the digest in bytes, or 0 if this operation is  not supported by the provider and the implementation is not cloneable."
java.security.MessageDigest.getInstance,Returns a MessageDigest object that implements the specified digest  algorithm.
java.security.MessageDigest.getProvider,Returns the provider of this message digest object.
java.security.MessageDigest.isEqual,Compares two digests for equality.
java.security.MessageDigest.reset,Resets the digest for further use.
java.security.MessageDigest.toString,Returns a string representation of this message digest object.
java.security.MessageDigest.update,Updates the digest using the specified byte.
java.security.MessageDigest.update,Updates the digest using the specified array of bytes.
java.security.MessageDigest.update,"Updates the digest using the specified array of bytes, starting  at the specified offset."
java.security.MessageDigest.update,Update the digest using the specified ByteBuffer.
java.security.MessageDigestSpi.engineDigest,Completes the hash computation by performing final  operations such as padding.
java.security.MessageDigestSpi.engineGetDigestLength,Returns the digest length in bytes.
java.security.MessageDigestSpi.engineUpdate,"Updates the digest using the specified array of bytes,  starting at the specified offset."
java.security.Permission.checkGuard,Implements the guard interface for a permission.
java.security.Permission.equals,Checks two Permission objects for equality.
java.security.Permission.getActions,Returns the actions as a String.
java.security.Permission.getName,Returns the name of this Permission.
java.security.Permission.hashCode,Returns the hash code value for this Permission object.
java.security.Permission.implies,"Checks if the specified permission's actions are ""implied by""  this object's actions."
java.security.Permission.newPermissionCollection,"Returns an empty PermissionCollection for a given Permission object, or null if  one is not defined."
java.security.Permission.toString,Returns a string describing this Permission.
java.security.PermissionCollection.add,Adds a permission object to the current collection of permission objects.
java.security.PermissionCollection.elements,Returns an enumeration of all the Permission objects in the collection.
java.security.PermissionCollection.elementsAsStream,Returns a stream of all the Permission objects in the collection.
java.security.PermissionCollection.implies,Checks to see if the specified permission is implied by  the collection of Permission objects held in this PermissionCollection.
java.security.PermissionCollection.isReadOnly,Returns true if this PermissionCollection object is marked as readonly.
java.security.PermissionCollection.setReadOnly,"Marks this PermissionCollection object as ""readonly""."
java.security.PermissionCollection.toString,"Returns a string describing this PermissionCollection object,  providing information about all the permissions it contains."
java.security.Permissions.add,Adds a permission object to the PermissionCollection for the class the  permission belongs to.
java.security.Permissions.elements,Returns an enumeration of all the Permission objects in all the  PermissionCollections in this Permissions object.
java.security.Permissions.implies,Checks to see if this object's PermissionCollection for permissions of  the specified permission's class implies the permissions  expressed in thepermissionobject.
java.security.PKCS12Attribute.equals,Compares thisPKCS12Attributeand a specified object for  equality.
java.security.PKCS12Attribute.getEncoded,Returns the attribute's ASN.1 DER encoding.
java.security.PKCS12Attribute.getName,Returns the attribute's ASN.1 Object Identifier represented as a  list of dot-separated integers.
java.security.PKCS12Attribute.getValue,Returns the attribute's ASN.1 DER-encoded value as a string.
java.security.PKCS12Attribute.hashCode,Returns the hashcode for thisPKCS12Attribute.
java.security.PKCS12Attribute.toString,Returns a string representation of thisPKCS12Attribute.
java.security.PrivilegedActionException.getException,Returns the exception thrown by the privileged computation that  resulted in thisPrivilegedActionException.
java.security.ProtectionDomain.getClassLoader,Returns the ClassLoader of this domain.
java.security.ProtectionDomain.getCodeSource,Returns the CodeSource of this domain.
java.security.ProtectionDomain.getPermissions,Returns the static permissions granted to this domain.
java.security.ProtectionDomain.getPrincipals,Returns an array of principals for this domain.
java.security.ProtectionDomain.implies,Check and see if this ProtectionDomain implies the permissions  expressed in the Permission object.
java.security.ProtectionDomain.staticPermissionsOnly,Returns true if this domain contains only static permissions  and does not check the currentPolicyat the time of  permission checking.
java.security.ProtectionDomain.toString,Convert a ProtectionDomain to a String.
java.security.Provider.clear,Clears this provider so that it no longer contains the properties  used to look up facilities implemented by the provider.
java.security.Provider.compute,Attempts to compute a mapping for the specified key and its  current mapped value (ornullif there is no current  mapping).
java.security.Provider.computeIfAbsent,"If the specified key is not already associated with a value (or  is mapped tonull), attempts to compute its value using  the given mapping function and enters it into this map unlessnull."
java.security.Provider.computeIfPresent,"If the value for the specified key is present and non-null, attempts to  compute a new mapping given the key and its current mapped value."
java.security.Provider.configure,Apply the supplied configuration argument to this provider instance  and return the configured provider.
java.security.Provider.entrySet,Returns an unmodifiable Set view of the property entries contained  in this Provider.
java.security.Provider.forEach,Performs the given action for each entry in this map until all entries  have been processed or the action throws an exception.
java.security.Provider.getInfo,Returns a human-readable description of the provider and its  services.
java.security.Provider.getName,Returns the name of this provider.
java.security.Provider.getOrDefault,"Returns the value to which the specified key is mapped, ordefaultValueif this map contains no mapping for the key."
java.security.Provider.getService,Get the service describing this Provider's implementation of the  specified type of this algorithm or alias.
java.security.Provider.getServices,Get an unmodifiable Set of all services supported by  this Provider.
java.security.Provider.getVersion,Deprecated.usegetVersionStr()instead.
java.security.Provider.getVersionStr,Returns the version string for this provider.
java.security.Provider.isConfigured,Check if this provider instance has been configured.
java.security.Provider.keySet,Returns an unmodifiable Set view of the property keys contained in  this provider.
java.security.Provider.load,Reads a property list (key and element pairs) from the input stream.
java.security.Provider.merge,"If the specified key is not already associated with a value or is  associated with null, associates it with the given value."
java.security.Provider.put,Sets thekeyproperty to have the specifiedvalue.
java.security.Provider.putAll,Copies all of the mappings from the specified Map to this provider.
java.security.Provider.putIfAbsent,"If the specified key is not already associated with a value (or is mapped  tonull) associates it with the given value and returnsnull, else returns the current value."
java.security.Provider.putService,Add a service.
java.security.Provider.remove,Removes thekeyproperty (and its correspondingvalue).
java.security.Provider.remove,Removes the entry for the specified key only if it is currently  mapped to the specified value.
java.security.Provider.removeService,Remove a service previously added usingputService().
java.security.Provider.replace,Replaces the entry for the specified key only if it is  currently mapped to some value.
java.security.Provider.replace,Replaces the entry for the specified key only if currently  mapped to the specified value.
java.security.Provider.replaceAll,"Replaces each entry's value with the result of invoking the given  function on that entry, in the order entries are returned by an entry  set iterator, until all entries have been processed or the function  throws an exception."
java.security.Provider.toString,Returns a string with the name and the version string  of this provider.
java.security.Provider.values,Returns an unmodifiable Collection view of the property values  contained in this provider.
java.security.Provider.getAlgorithm,Return the name of the algorithm of this service.
java.security.Provider.getAttribute,Return the value of the specified attribute or null if this  attribute is not set for this Service.
java.security.Provider.getClassName,Return the name of the class implementing this service.
java.security.Provider.getProvider,Return the Provider of this service.
java.security.Provider.getType,Get the type of this service.
java.security.Provider.newInstance,Return a new instance of the implementation described by this  service.
java.security.Provider.supportsParameter,Test whether this Service can use the specified parameter.
java.security.Provider.toString,Return a String representation of this service.
java.security.SecureClassLoader.defineClass,"Converts an array of bytes into an instance of class Class,  with an optional CodeSource."
java.security.SecureClassLoader.defineClass,"Converts aByteBufferinto an instance of classClass, with an optional CodeSource."
java.security.SecureClassLoader.getPermissions,Returns the permissions for the given CodeSource object.
java.security.SecureRandom.generateSeed,"Returns the given number of seed bytes, computed using the seed  generation algorithm that this class uses to seed itself."
java.security.SecureRandom.getAlgorithm,Returns the name of the algorithm implemented by thisSecureRandomobject.
java.security.SecureRandom.getInstance,Returns aSecureRandomobject that implements the specified  Random Number Generator (RNG) algorithm.
java.security.SecureRandom.getInstance,Returns aSecureRandomobject that implements the specified  Random Number Generator (RNG) algorithm and supports the specifiedSecureRandomParametersrequest.
java.security.SecureRandom.getInstanceStrong,Returns aSecureRandomobject that was selected by using  the algorithms/providers specified in thesecurerandom.strongAlgorithmsSecurityproperty.
java.security.SecureRandom.getParameters,Returns the effectiveSecureRandomParametersfor thisSecureRandominstance.
java.security.SecureRandom.getProvider,Returns the provider of thisSecureRandomobject.
java.security.SecureRandom.next,"Generates an integer containing the user-specified number of  pseudo-random bits (right justified, with leading zeros)."
java.security.SecureRandom.nextBytes,Generates a user-specified number of random bytes.
java.security.SecureRandom.nextBytes,Generates a user-specified number of random bytes with  additional parameters.
java.security.SecureRandom.reseed,Reseeds thisSecureRandomwith entropy input read from its  entropy source.
java.security.SecureRandom.reseed,Reseeds thisSecureRandomwith entropy input read from its  entropy source with additional parameters.
java.security.SecureRandom.setSeed,Reseeds this random object with the given seed.
java.security.SecureRandom.setSeed,"Reseeds this random object, using the eight bytes contained  in the givenlong seed."
java.security.SecureRandom.toString,Returns a Human-readable string representation of thisSecureRandom.
java.security.SecureRandomSpi.engineGenerateSeed,Returns the given number of seed bytes.
java.security.SecureRandomSpi.engineReseed,Reseeds this random object with entropy input read from its  entropy source with additional parameters.
java.security.Security.addProvider,Adds a provider to the next position available.
java.security.Security.getAlgorithmProperty,"Deprecated.This method used to return the value of a proprietary  property in the master file of the ""SUN"" Cryptographic Service  Provider in order to determine how to parse algorithm-specific  parameters."
java.security.Security.getAlgorithms,"Returns a Set of Strings containing the names of all available  algorithms or types for the specified Java cryptographic service  (e.g., Signature, MessageDigest, Cipher, Mac, KeyStore)."
java.security.Security.getProperty,Gets a security property value.
java.security.Security.getProvider,"Returns the provider installed with the specified name, if  any."
java.security.Security.getProviders,Returns an array containing all the installed providers.
java.security.Security.getProviders,"Returns an array containing all installed providers that satisfy the  specified selection criterion, or null if no such providers have been  installed."
java.security.Security.getProviders,"Returns an array containing all installed providers that satisfy the  specified selection criteria, or null if no such providers have been  installed."
java.security.Security.insertProviderAt,"Adds a new provider, at a specified position."
java.security.Security.removeProvider,Removes the provider with the specified name.
java.security.Security.setProperty,Sets a security property value.
java.security.Signature.getAlgorithm,Returns the name of the algorithm for this signature object.
java.security.Signature.getInstance,Returns a Signature object that implements the specified signature  algorithm.
java.security.Signature.getInstance,Returns a Signature object that implements the specified  signature algorithm.
java.security.Signature.getParameter,Deprecated.
java.security.Signature.getParameters,Returns the parameters used with this signature object.
java.security.Signature.getProvider,Returns the provider of this signature object.
java.security.Signature.initSign,Initialize this object for signing.
java.security.Signature.initVerify,"Initializes this object for verification, using the public key from  the given certificate."
java.security.Signature.initVerify,Initializes this object for verification.
java.security.Signature.setParameter,Deprecated.UsesetParameter.
java.security.Signature.setParameter,Initializes this signature engine with the specified parameter set.
java.security.Signature.sign,Returns the signature bytes of all the data updated.
java.security.Signature.sign,"Finishes the signature operation and stores the resulting signature  bytes in the provided bufferoutbuf, starting atoffset."
java.security.Signature.toString,"Returns a string representation of this signature object,  providing information that includes the state of the object  and the name of the algorithm used."
java.security.Signature.update,Updates the data to be signed or verified by a byte.
java.security.Signature.update,"Updates the data to be signed or verified, using the specified  array of bytes."
java.security.Signature.update,"Updates the data to be signed or verified, using the specified  array of bytes, starting at the specified offset."
java.security.Signature.update,Updates the data to be signed or verified using the specified  ByteBuffer.
java.security.Signature.verify,Verifies the passed-in signature.
java.security.Signature.verify,"Verifies the passed-in signature in the specified array  of bytes, starting at the specified offset."
java.security.SignatureSpi.engineGetParameters,This method is overridden by providers to return the parameters  used with this signature engine.
java.security.SignatureSpi.engineInitSign,Initializes this signature object with the specified  private key for signing operations.
java.security.SignatureSpi.engineInitSign,Initializes this signature object with the specified  private key and source of randomness for signing operations.
java.security.SignatureSpi.engineInitVerify,Initializes this signature object with the specified  public key for verification operations.
java.security.SignatureSpi.engineSetParameter,Deprecated.Replaced byengineSetParameter.
java.security.SignatureSpi.engineSetParameter,This method is overridden by providers to initialize  this signature engine with the specified parameter set.
java.security.SignatureSpi.engineSign,Returns the signature bytes of all the data  updated so far.
java.security.SignatureSpi.engineSign,"Finishes this signature operation and stores the resulting signature  bytes in the provided bufferoutbuf, starting atoffset."
java.security.SignatureSpi.engineUpdate,Updates the data to be signed or verified  using the specified byte.
java.security.SignatureSpi.engineUpdate,"Updates the data to be signed or verified, using the  specified array of bytes, starting at the specified offset."
java.security.SignedObject.getAlgorithm,Retrieves the name of the signature algorithm.
java.security.SignedObject.getObject,Retrieves the encapsulated object.
java.security.SignedObject.getSignature,"Retrieves the signature on the signed object, in the form of a  byte array."
java.security.SignedObject.verify,"Verifies that the signature in this SignedObject is the valid  signature for the object stored inside, with the given  verification key, using the designated verification engine."
java.security.Timestamp.equals,Tests for equality between the specified object and this  timestamp.
java.security.Timestamp.getSignerCertPath,Returns the certificate path for the Timestamping Authority.
java.security.Timestamp.getTimestamp,Returns the date and time when the timestamp was generated.
java.security.Timestamp.hashCode,Returns the hash code value for this timestamp.
java.security.Timestamp.toString,Returns a string describing this timestamp.
java.security.UnresolvedPermission.equals,Checks two UnresolvedPermission objects for equality.
java.security.UnresolvedPermission.getActions,"Returns the canonical string representation of the actions,  which currently is the empty string """", since there are no actions for  an UnresolvedPermission."
java.security.UnresolvedPermission.getUnresolvedActions,Get the actions for the underlying permission that  has not been resolved.
java.security.UnresolvedPermission.getUnresolvedCerts,Get the signer certificates (without any supporting chain)  for the underlying permission that has not been resolved.
java.security.UnresolvedPermission.getUnresolvedName,Get the target name of the underlying permission that  has not been resolved.
java.security.UnresolvedPermission.getUnresolvedType,Get the type (class name) of the underlying permission that  has not been resolved.
java.security.UnresolvedPermission.implies,This method always returns false for unresolved permissions.
java.security.UnresolvedPermission.newPermissionCollection,Returns a new PermissionCollection object for storing  UnresolvedPermission  objects.
java.security.UnresolvedPermission.toString,Returns a string describing this UnresolvedPermission.
java.security.URIParameter.getURI,Returns the URI.
java.security.cert.Certificate.readResolve,Resolve the Certificate Object.
java.security.cert.Certificate.equals,Compares this certificate for equality with the specified  object.
java.security.cert.Certificate.getEncoded,Returns the encoded form of this certificate.
java.security.cert.Certificate.getPublicKey,Gets the public key from this certificate.
java.security.cert.Certificate.getType,Returns the type of this certificate.
java.security.cert.Certificate.hashCode,Returns a hashcode value for this certificate from its  encoded form.
java.security.cert.Certificate.toString,Returns a string representation of this certificate.
java.security.cert.Certificate.verify,Verifies that this certificate was signed using the  private key that corresponds to the specified public key.
java.security.cert.Certificate.writeReplace,Replace the Certificate to be serialized.
java.security.cert.CertificateFactory.generateCertificate,Generates a certificate object and initializes it with  the data read from the input streaminStream.
java.security.cert.CertificateFactory.generateCertificates,Returns a (possibly empty) collection view of the certificates read  from the given input streaminStream.
java.security.cert.CertificateFactory.generateCertPath,Generates aCertPathobject and initializes it with  the data read from theInputStreaminStream.
java.security.cert.CertificateFactory.generateCertPath,Generates aCertPathobject and initializes it with  aListofCertificates.
java.security.cert.CertificateFactory.generateCRL,Generates a certificate revocation list (CRL) object and initializes it  with the data read from the input streaminStream.
java.security.cert.CertificateFactory.generateCRLs,Returns a (possibly empty) collection view of the CRLs read  from the given input streaminStream.
java.security.cert.CertificateFactory.getCertPathEncodings,"Returns an iteration of theCertPathencodings supported  by this certificate factory, with the default encoding first."
java.security.cert.CertificateFactory.getInstance,Returns a certificate factory object that implements the  specified certificate type.
java.security.cert.CertificateFactory.getInstance,Returns a certificate factory object for the specified  certificate type.
java.security.cert.CertificateFactory.getProvider,Returns the provider of this certificate factory.
java.security.cert.CertificateFactory.getType,Returns the name of the certificate type associated with this  certificate factory.
java.security.cert.CertificateRevokedException.getAuthorityName,Returns the name of the authority that signed the certificate's  revocation status information.
java.security.cert.CertificateRevokedException.getExtensions,"Returns a map of X.509 extensions containing additional information  about the revoked certificate, such as the Invalidity Date  Extension."
java.security.cert.CertificateRevokedException.getInvalidityDate,"Returns the invalidity date, as specified in the Invalidity Date  extension of thisCertificateRevokedException."
java.security.cert.CertificateRevokedException.getRevocationDate,Returns the date on which the certificate was revoked.
java.security.cert.CertificateRevokedException.getRevocationReason,Returns the reason the certificate was revoked.
java.security.cert.CertPath.readResolve,Returns aCertPathconstructed from the type and data.
java.security.cert.CertPath.equals,Compares this certification path for equality with the specified  object.
java.security.cert.CertPath.getCertificates,Returns the list of certificates in this certification path.
java.security.cert.CertPath.getEncoded,"Returns the encoded form of this certification path, using the default  encoding."
java.security.cert.CertPath.getEncoded,"Returns the encoded form of this certification path, using the  specified encoding."
java.security.cert.CertPath.getEncodings,"Returns an iteration of the encodings supported by this certification  path, with the default encoding first."
java.security.cert.CertPath.getType,Returns the type ofCertificates in this certification  path.
java.security.cert.CertPath.hashCode,Returns the hashcode for this certification path.
java.security.cert.CertPath.toString,Returns a string representation of this certification path.
java.security.cert.CertPath.writeReplace,Replaces theCertPathto be serialized with aCertPathRepobject.
java.security.cert.CertPathBuilder.build,Attempts to build a certification path using the specified algorithm  parameter set.
java.security.cert.CertPathBuilder.getAlgorithm,Returns the name of the algorithm of thisCertPathBuilder.
java.security.cert.CertPathBuilder.getDefaultType,"Returns the defaultCertPathBuildertype as specified by  thecertpathbuilder.typesecurity property, or the string  ""PKIX"" if no such property exists."
java.security.cert.CertPathBuilder.getInstance,Returns aCertPathBuilderobject that implements the  specified algorithm.
java.security.cert.CertPathBuilder.getProvider,Returns the provider of thisCertPathBuilder.
java.security.cert.CertPathBuilder.getRevocationChecker,Returns aCertPathCheckerthat the encapsulatedCertPathBuilderSpiimplementation uses to check the revocation  status of certificates.
java.security.cert.CertPathBuilderSpi.engineBuild,Attempts to build a certification path using the specified  algorithm parameter set.
java.security.cert.CertPathBuilderSpi.engineGetRevocationChecker,Returns aCertPathCheckerthat this implementation uses to  check the revocation status of certificates.
java.security.cert.CertPathValidator.getAlgorithm,Returns the algorithm name of thisCertPathValidator.
java.security.cert.CertPathValidator.getDefaultType,"Returns the defaultCertPathValidatortype as specified by  thecertpathvalidator.typesecurity property, or the string  ""PKIX"" if no such property exists."
java.security.cert.CertPathValidator.getInstance,Returns aCertPathValidatorobject that implements the  specified algorithm.
java.security.cert.CertPathValidator.getProvider,Returns theProviderof thisCertPathValidator.
java.security.cert.CertPathValidator.getRevocationChecker,Returns aCertPathCheckerthat the encapsulatedCertPathValidatorSpiimplementation uses to check the revocation  status of certificates.
java.security.cert.CertPathValidator.validate,Validates the specified certification path using the specified  algorithm parameter set.
java.security.cert.CertPathValidatorException.getCertPath,Returns the certification path that was being validated when  the exception was thrown.
java.security.cert.CertPathValidatorException.getIndex,Returns the index of the certificate in the certification path  that caused the exception to be thrown.
java.security.cert.CertPathValidatorException.getReason,Returns the reason that the validation failed.
java.security.cert.CertStore.getCertificates,Returns aCollectionofCertificates that  match the specified selector.
java.security.cert.CertStore.getCertStoreParameters,Returns the parameters used to initialize thisCertStore.
java.security.cert.CertStore.getCRLs,Returns aCollectionofCRLs that  match the specified selector.
java.security.cert.CertStore.getDefaultType,"Returns the defaultCertStoretype as specified by thecertstore.typesecurity property, or the string  ""LDAP"" if no such property exists."
java.security.cert.CertStore.getInstance,Returns aCertStoreobject that implements the specifiedCertStoretype and is initialized with the specified  parameters.
java.security.cert.CertStore.getInstance,Returns aCertStoreobject that implements the specifiedCertStoretype.
java.security.cert.CertStore.getProvider,Returns the provider of thisCertStore.
java.security.cert.CertStore.getType,Returns the type of thisCertStore.
java.security.cert.CollectionCertStoreParameters.clone,Returns a copy of this object.
java.security.cert.CollectionCertStoreParameters.getCollection,Returns theCollectionfrom whichCertificates  andCRLs are retrieved.
java.security.cert.CRL.getType,Returns the type of this CRL.
java.security.cert.CRL.isRevoked,Checks whether the given certificate is on this CRL.
java.security.cert.CRL.toString,Returns a string representation of this CRL.
java.security.cert.LDAPCertStoreParameters.getPort,Returns the port number of the LDAP server.
java.security.cert.LDAPCertStoreParameters.getServerName,Returns the DNS name of the LDAP server.
java.security.cert.PKIXBuilderParameters.getMaxPathLength,Returns the value of the maximum number of intermediate non-self-issued  certificates that may exist in a certification path.
java.security.cert.PKIXBuilderParameters.setMaxPathLength,Sets the value of the maximum number of non-self-issued intermediate  certificates that may exist in a certification path.
java.security.cert.PKIXCertPathBuilderResult.getCertPath,Returns the built and validated certification path.
java.security.cert.PKIXCertPathBuilderResult.toString,Return a printable representation of thisPKIXCertPathBuilderResult.
java.security.cert.PKIXCertPathChecker.check,Performs the check(s) on the specified certificate using its internal  state.
java.security.cert.PKIXCertPathChecker.check,Performs the check(s) on the specified certificate using its internal  state and removes any critical extensions that it processes from the  specified collection of OID strings that represent the unresolved  critical extensions.
java.security.cert.PKIXCertPathChecker.clone,Returns a clone of this object.
java.security.cert.PKIXCertPathChecker.getSupportedExtensions,"Returns an immutableSetof X.509 certificate extensions  that thisPKIXCertPathCheckersupports (i.e. recognizes, is  able to process), ornullif no extensions are supported."
java.security.cert.PKIXCertPathChecker.init,Initializes the internal state of thisPKIXCertPathChecker.
java.security.cert.PKIXCertPathChecker.isForwardCheckingSupported,Indicates if forward checking is supported.
java.security.cert.PKIXCertPathValidatorResult.getPolicyTree,Returns the root node of the valid policy tree resulting from the  PKIX certification path validation algorithm.
java.security.cert.PKIXCertPathValidatorResult.getPublicKey,"Returns the public key of the subject (target) of the certification  path, including any inherited public key parameters if applicable."
java.security.cert.PKIXCertPathValidatorResult.getTrustAnchor,Returns theTrustAnchordescribing the CA that served  as a trust anchor for the certification path.
java.security.cert.PKIXCertPathValidatorResult.toString,Return a printable representation of thisPKIXCertPathValidatorResult.
java.security.cert.PKIXParameters.addCertPathChecker,Adds aPKIXCertPathCheckerto the list of certification  path checkers.
java.security.cert.PKIXParameters.addCertStore,Adds aCertStoreto the end of the list ofCertStores used in finding certificates and CRLs.
java.security.cert.PKIXParameters.clone,Makes a copy of thisPKIXParametersobject.
java.security.cert.PKIXParameters.getCertPathCheckers,Returns theListof certification path checkers.
java.security.cert.PKIXParameters.getCertStores,Returns an immutableListofCertStores that  are used to find certificates and CRLs.
java.security.cert.PKIXParameters.getDate,Returns the time for which the validity of the certification path  should be determined.
java.security.cert.PKIXParameters.getInitialPolicies,"Returns an immutableSetof initial  policy identifiers (OID strings), indicating that any one of these  policies would be acceptable to the certificate user for the purposes of  certification path processing."
java.security.cert.PKIXParameters.getPolicyQualifiersRejected,Gets the PolicyQualifiersRejected flag.
java.security.cert.PKIXParameters.getSigProvider,"Returns the signature provider's name, ornullif not set."
java.security.cert.PKIXParameters.getTargetCertConstraints,Returns the required constraints on the target certificate.
java.security.cert.PKIXParameters.getTrustAnchors,Returns an immutableSetof the most-trusted  CAs.
java.security.cert.PKIXParameters.isAnyPolicyInhibited,Checks whether the any policy OID should be processed if it  is included in a certificate.
java.security.cert.PKIXParameters.isExplicitPolicyRequired,Checks if explicit policy is required.
java.security.cert.PKIXParameters.isPolicyMappingInhibited,Checks if policy mapping is inhibited.
java.security.cert.PKIXParameters.isRevocationEnabled,Checks the RevocationEnabled flag.
java.security.cert.PKIXParameters.setAnyPolicyInhibited,Sets state to determine if the any policy OID should be processed  if it is included in a certificate.
java.security.cert.PKIXParameters.setCertPathCheckers,Sets aListof additional certification path checkers.
java.security.cert.PKIXParameters.setCertStores,Sets the list ofCertStores to be used in finding  certificates and CRLs.
java.security.cert.PKIXParameters.setDate,Sets the time for which the validity of the certification path  should be determined.
java.security.cert.PKIXParameters.setExplicitPolicyRequired,Sets the ExplicitPolicyRequired flag.
java.security.cert.PKIXParameters.setInitialPolicies,"Sets theSetof initial policy identifiers  (OID strings), indicating that any one of these  policies would be acceptable to the certificate user for the purposes of  certification path processing."
java.security.cert.PKIXParameters.setPolicyMappingInhibited,Sets the PolicyMappingInhibited flag.
java.security.cert.PKIXParameters.setPolicyQualifiersRejected,Sets the PolicyQualifiersRejected flag.
java.security.cert.PKIXParameters.setRevocationEnabled,Sets the RevocationEnabled flag.
java.security.cert.PKIXParameters.setSigProvider,Sets the signature provider's name.
java.security.cert.PKIXParameters.setTargetCertConstraints,Sets the required constraints on the target certificate.
java.security.cert.PKIXParameters.setTrustAnchors,Sets theSetof most-trusted CAs.
java.security.cert.PKIXRevocationChecker.getOcspExtensions,Gets the optional OCSP request extensions.
java.security.cert.PKIXRevocationChecker.getOcspResponder,Gets the URI that identifies the location of the OCSP responder.
java.security.cert.PKIXRevocationChecker.getOcspResponderCert,Gets the OCSP responder's certificate.
java.security.cert.PKIXRevocationChecker.getOcspResponses,Gets the OCSP responses.
java.security.cert.PKIXRevocationChecker.getOptions,Gets the revocation options.
java.security.cert.PKIXRevocationChecker.getSoftFailExceptions,Returns a list containing the exceptions that are ignored by the  revocation checker when theSOFT_FAILoption  is set.
java.security.cert.PKIXRevocationChecker.setOcspExtensions,Sets the optional OCSP request extensions.
java.security.cert.PKIXRevocationChecker.setOcspResponder,Sets the URI that identifies the location of the OCSP responder.
java.security.cert.PKIXRevocationChecker.setOcspResponderCert,Sets the OCSP responder's certificate.
java.security.cert.PKIXRevocationChecker.setOcspResponses,Sets the OCSP responses.
java.security.cert.PKIXRevocationChecker.setOptions,Sets the revocation options.
java.security.cert.PolicyQualifierInfo.getEncoded,Returns the ASN.1 DER encoded form of thisPolicyQualifierInfo.
java.security.cert.PolicyQualifierInfo.getPolicyQualifier,Returns the ASN.1 DER encoded form of thequalifierfield of thisPolicyQualifierInfo.
java.security.cert.PolicyQualifierInfo.getPolicyQualifierId,Returns thepolicyQualifierIdfield of thisPolicyQualifierInfo.
java.security.cert.PolicyQualifierInfo.toString,Return a printable representation of thisPolicyQualifierInfo.
java.security.cert.TrustAnchor.getCA,Returns the name of the most-trusted CA as an X500Principal.
java.security.cert.TrustAnchor.getCAName,Returns the name of the most-trusted CA in RFC 2253Stringformat.
java.security.cert.TrustAnchor.getCAPublicKey,Returns the public key of the most-trusted CA.
java.security.cert.TrustAnchor.getNameConstraints,Returns the name constraints parameter.
java.security.cert.TrustAnchor.getTrustedCert,Returns the most-trusted CA certificate.
java.security.cert.TrustAnchor.toString,Returns a formatted string describing theTrustAnchor.
java.security.cert.URICertStoreParameters.equals,Compares the specified object with this parameters object for equality.
java.security.cert.URICertStoreParameters.getURI,Returns the URI used to construct thisURICertStoreParametersobject.
java.security.cert.URICertStoreParameters.hashCode,Returns a hash code value for this parameters object.
java.security.cert.URICertStoreParameters.toString,Returns a formatted string describing the parameters  including the URI used to construct this object.
java.security.cert.X509Certificate.checkValidity,Checks that the certificate is currently valid.
java.security.cert.X509Certificate.checkValidity,Checks that the given date is within the certificate's  validity period.
java.security.cert.X509Certificate.getBasicConstraints,"Gets the certificate constraints path length from the  criticalBasicConstraintsextension, (OID = 2.5.29.19)."
java.security.cert.X509Certificate.getExtendedKeyUsage,"Gets an unmodifiable list of Strings representing the OBJECT  IDENTIFIERs of theExtKeyUsageSyntaxfield of the  extended key usage extension, (OID = 2.5.29.37)."
java.security.cert.X509Certificate.getIssuerAlternativeNames,"Gets an immutable collection of issuer alternative names from theIssuerAltNameextension, (OID = 2.5.29.18)."
java.security.cert.X509Certificate.getIssuerDN,Deprecated.UsegetIssuerX500Principal()instead.
java.security.cert.X509Certificate.getIssuerUniqueID,Gets theissuerUniqueIDvalue from the certificate.
java.security.cert.X509Certificate.getIssuerX500Principal,Returns the issuer (issuer distinguished name) value from the  certificate as anX500Principal.
java.security.cert.X509Certificate.getKeyUsage,"Gets a boolean array representing bits of  theKeyUsageextension, (OID = 2.5.29.15)."
java.security.cert.X509Certificate.getNotAfter,Gets thenotAfterdate from the validity period of  the certificate.
java.security.cert.X509Certificate.getNotBefore,Gets thenotBeforedate from the validity period of  the certificate.
java.security.cert.X509Certificate.getSerialNumber,Gets theserialNumbervalue from the certificate.
java.security.cert.X509Certificate.getSigAlgName,Gets the signature algorithm name for the certificate  signature algorithm.
java.security.cert.X509Certificate.getSigAlgOID,Gets the signature algorithm OID string from the certificate.
java.security.cert.X509Certificate.getSigAlgParams,Gets the DER-encoded signature algorithm parameters from this  certificate's signature algorithm.
java.security.cert.X509Certificate.getSignature,Gets thesignaturevalue (the raw signature bits) from  the certificate.
java.security.cert.X509Certificate.getSubjectAlternativeNames,"Gets an immutable collection of subject alternative names from theSubjectAltNameextension, (OID = 2.5.29.17)."
java.security.cert.X509Certificate.getSubjectDN,Deprecated.UsegetSubjectX500Principal()instead.
java.security.cert.X509Certificate.getSubjectUniqueID,Gets thesubjectUniqueIDvalue from the certificate.
java.security.cert.X509Certificate.getSubjectX500Principal,Returns the subject (subject distinguished name) value from the  certificate as anX500Principal.
java.security.cert.X509Certificate.getTBSCertificate,"Gets the DER-encoded certificate information, thetbsCertificatefrom this certificate."
java.security.cert.X509Certificate.getVersion,Gets theversion(version number) value from the  certificate.
java.security.cert.X509CertSelector.addPathToName,Adds a name to the pathToNames criterion.
java.security.cert.X509CertSelector.addSubjectAlternativeName,Adds a name to the subjectAlternativeNames criterion.
java.security.cert.X509CertSelector.getAuthorityKeyIdentifier,Returns the authorityKeyIdentifier criterion.
java.security.cert.X509CertSelector.getBasicConstraints,Returns the basic constraints constraint.
java.security.cert.X509CertSelector.getCertificate,Returns the certificateEquals criterion.
java.security.cert.X509CertSelector.getCertificateValid,Returns the certificateValid criterion.
java.security.cert.X509CertSelector.getExtendedKeyUsage,Returns the extendedKeyUsage criterion.
java.security.cert.X509CertSelector.getIssuer,Returns the issuer criterion as anX500Principal.
java.security.cert.X509CertSelector.getIssuerAsBytes,Returns the issuer criterion as a byte array.
java.security.cert.X509CertSelector.getIssuerAsString,Deprecated.UsegetIssuer()orgetIssuerAsBytes()instead.
java.security.cert.X509CertSelector.getKeyUsage,Returns the keyUsage criterion.
java.security.cert.X509CertSelector.getMatchAllSubjectAltNames,Indicates if theX509Certificatemust contain all  or at least one of the subjectAlternativeNames  specified in thesetSubjectAlternativeNamesoraddSubjectAlternativeNamemethods.
java.security.cert.X509CertSelector.getNameConstraints,Returns the name constraints criterion.
java.security.cert.X509CertSelector.getPathToNames,Returns a copy of the pathToNames criterion.
java.security.cert.X509CertSelector.getPolicy,Returns the policy criterion.
java.security.cert.X509CertSelector.getPrivateKeyValid,Returns the privateKeyValid criterion.
java.security.cert.X509CertSelector.getSerialNumber,Returns the serialNumber criterion.
java.security.cert.X509CertSelector.getSubject,Returns the subject criterion as anX500Principal.
java.security.cert.X509CertSelector.getSubjectAlternativeNames,Returns a copy of the subjectAlternativeNames criterion.
java.security.cert.X509CertSelector.getSubjectAsBytes,Returns the subject criterion as a byte array.
java.security.cert.X509CertSelector.getSubjectAsString,Deprecated.UsegetSubject()orgetSubjectAsBytes()instead.
java.security.cert.X509CertSelector.getSubjectKeyIdentifier,Returns the subjectKeyIdentifier criterion.
java.security.cert.X509CertSelector.getSubjectPublicKey,Returns the subjectPublicKey criterion.
java.security.cert.X509CertSelector.getSubjectPublicKeyAlgID,Returns the subjectPublicKeyAlgID criterion.
java.security.cert.X509CertSelector.match,Decides whether aCertificateshould be selected.
java.security.cert.X509CertSelector.setAuthorityKeyIdentifier,Sets the authorityKeyIdentifier criterion.
java.security.cert.X509CertSelector.setBasicConstraints,Sets the basic constraints constraint.
java.security.cert.X509CertSelector.setCertificate,Sets the certificateEquals criterion.
java.security.cert.X509CertSelector.setCertificateValid,Sets the certificateValid criterion.
java.security.cert.X509CertSelector.setExtendedKeyUsage,Sets the extendedKeyUsage criterion.
java.security.cert.X509CertSelector.setIssuer,Sets the issuer criterion.
java.security.cert.X509CertSelector.setIssuer,Deprecated.UsesetIssuer(X500Principal)orsetIssuer(byte[])instead.
java.security.cert.X509CertSelector.setKeyUsage,Sets the keyUsage criterion.
java.security.cert.X509CertSelector.setMatchAllSubjectAltNames,Enables/disables matching all of the subjectAlternativeNames  specified in thesetSubjectAlternativeNamesoraddSubjectAlternativeNamemethods.
java.security.cert.X509CertSelector.setNameConstraints,Sets the name constraints criterion.
java.security.cert.X509CertSelector.setPathToNames,Sets the pathToNames criterion.
java.security.cert.X509CertSelector.setPolicy,Sets the policy constraint.
java.security.cert.X509CertSelector.setPrivateKeyValid,Sets the privateKeyValid criterion.
java.security.cert.X509CertSelector.setSerialNumber,Sets the serialNumber criterion.
java.security.cert.X509CertSelector.setSubject,Sets the subject criterion.
java.security.cert.X509CertSelector.setSubject,Deprecated.UsesetSubject(X500Principal)orsetSubject(byte[])instead.
java.security.cert.X509CertSelector.setSubjectAlternativeNames,Sets the subjectAlternativeNames criterion.
java.security.cert.X509CertSelector.setSubjectKeyIdentifier,Sets the subjectKeyIdentifier criterion.
java.security.cert.X509CertSelector.setSubjectPublicKey,Sets the subjectPublicKey criterion.
java.security.cert.X509CertSelector.setSubjectPublicKeyAlgID,Sets the subjectPublicKeyAlgID criterion.
java.security.cert.X509CertSelector.toString,Return a printable representation of theCertSelector.
java.security.cert.X509CRL.equals,Compares this CRL for equality with the given  object.
java.security.cert.X509CRL.getEncoded,Returns the ASN.1 DER-encoded form of this CRL.
java.security.cert.X509CRL.getIssuerX500Principal,Returns the issuer (issuer distinguished name) value from the  CRL as anX500Principal.
java.security.cert.X509CRL.getNextUpdate,Gets thenextUpdatedate from the CRL.
java.security.cert.X509CRL.getRevokedCertificate,"Gets the CRL entry, if any, with the given certificate serialNumber."
java.security.cert.X509CRL.getRevokedCertificate,"Get the CRL entry, if any, for the given certificate."
java.security.cert.X509CRL.getRevokedCertificates,Gets all the entries from this CRL.
java.security.cert.X509CRL.getSigAlgName,Gets the signature algorithm name for the CRL  signature algorithm.
java.security.cert.X509CRL.getSigAlgOID,Gets the signature algorithm OID string from the CRL.
java.security.cert.X509CRL.getSigAlgParams,Gets the DER-encoded signature algorithm parameters from this  CRL's signature algorithm.
java.security.cert.X509CRL.getSignature,Gets thesignaturevalue (the raw signature bits) from  the CRL.
java.security.cert.X509CRL.getTBSCertList,"Gets the DER-encoded CRL information, thetbsCertListfrom this CRL."
java.security.cert.X509CRL.getThisUpdate,Gets thethisUpdatedate from the CRL.
java.security.cert.X509CRL.getVersion,Gets theversion(version number) value from the CRL.
java.security.cert.X509CRL.hashCode,Returns a hashcode value for this CRL from its  encoded form.
java.security.cert.X509CRL.verify,Verifies that this CRL was signed using the  private key that corresponds to the given public key.
java.security.cert.X509CRLEntry.equals,Compares this CRL entry for equality with the given  object.
java.security.cert.X509CRLEntry.getCertificateIssuer,Get the issuer of the X509Certificate described by this entry.
java.security.cert.X509CRLEntry.getEncoded,"Returns the ASN.1 DER-encoded form of this CRL Entry,  that is the inner SEQUENCE."
java.security.cert.X509CRLEntry.getRevocationDate,"Gets the revocation date from this X509CRLEntry,  therevocationDate."
java.security.cert.X509CRLEntry.getRevocationReason,"Returns the reason the certificate has been revoked, as specified  in the Reason Code extension of this CRL entry."
java.security.cert.X509CRLEntry.getSerialNumber,"Gets the serial number from this X509CRLEntry,  theuserCertificate."
java.security.cert.X509CRLEntry.hasExtensions,Returns true if this CRL entry has extensions.
java.security.cert.X509CRLEntry.hashCode,Returns a hashcode value for this CRL entry from its  encoded form.
java.security.cert.X509CRLEntry.toString,Returns a string representation of this CRL entry.
java.security.cert.X509CRLSelector.addIssuer,Adds a name to the issuerNames criterion.
java.security.cert.X509CRLSelector.addIssuerName,Deprecated.UseaddIssuer(X500Principal)oraddIssuerName(byte[])instead.
java.security.cert.X509CRLSelector.getCertificateChecking,Returns the certificate being checked.
java.security.cert.X509CRLSelector.getDateAndTime,Returns the dateAndTime criterion.
java.security.cert.X509CRLSelector.getIssuerNames,Returns a copy of the issuerNames criterion.
java.security.cert.X509CRLSelector.getIssuers,Returns the issuerNames criterion.
java.security.cert.X509CRLSelector.getMaxCRL,Returns the maxCRLNumber criterion.
java.security.cert.X509CRLSelector.getMinCRL,Returns the minCRLNumber criterion.
java.security.cert.X509CRLSelector.match,Decides whether aCRLshould be selected.
java.security.cert.X509CRLSelector.setCertificateChecking,Sets the certificate being checked.
java.security.cert.X509CRLSelector.setDateAndTime,Sets the dateAndTime criterion.
java.security.cert.X509CRLSelector.setIssuerNames,Note:usesetIssuers(Collection)instead  or only specify the byte array form of distinguished names when using  this method.
java.security.cert.X509CRLSelector.setIssuers,Sets the issuerNames criterion.
java.security.cert.X509CRLSelector.setMaxCRLNumber,Sets the maxCRLNumber criterion.
java.security.cert.X509CRLSelector.setMinCRLNumber,Sets the minCRLNumber criterion.
java.security.cert.X509CRLSelector.toString,Returns a printable representation of theX509CRLSelector.
java.security.spec.DSAGenParameterSpec.getPrimePLength,Returns the desired length of the prime P of the  to-be-generated DSA domain parameters in bits.
java.security.spec.DSAGenParameterSpec.getSeedLength,Returns the desired length of the domain parameter seed in bits.
java.security.spec.DSAGenParameterSpec.getSubprimeQLength,Returns the desired length of the sub-prime Q of the  to-be-generated DSA domain parameters in bits.
java.security.spec.DSAParameterSpec.getG,Returns the baseg.
java.security.spec.DSAParameterSpec.getP,Returns the primep.
java.security.spec.DSAParameterSpec.getQ,Returns the sub-primeq.
java.security.spec.DSAPrivateKeySpec.getX,Returns the private keyx.
java.security.spec.DSAPublicKeySpec.getY,Returns the public keyy.
java.security.spec.ECFieldF2m.equals,Compares this finite field for equality with the  specified object.
java.security.spec.ECFieldF2m.getFieldSize,Returns the field size in bits which ismfor this characteristic 2 finite field.
java.security.spec.ECFieldF2m.getM,Returns the valuemof this characteristic  2 finite field.
java.security.spec.ECFieldF2m.getMidTermsOfReductionPolynomial,Returns an integer array which contains the order of the  middle term(s) of the reduction polynomial for polynomial  basis or null for normal basis.
java.security.spec.ECFieldF2m.getReductionPolynomial,Returns a BigInteger whose i-th bit corresponds to the  i-th coefficient of the reduction polynomial for polynomial  basis or null for normal basis.
java.security.spec.ECFieldF2m.hashCode,Returns a hash code value for this characteristic 2  finite field.
java.security.spec.ECFieldFp.equals,Compares this prime finite field for equality with the  specified object.
java.security.spec.ECFieldFp.getFieldSize,Returns the field size in bits which is size of prime p  for this prime finite field.
java.security.spec.ECFieldFp.getP,Returns the primepof this prime finite field.
java.security.spec.ECFieldFp.hashCode,Returns a hash code value for this prime finite field.
java.security.spec.ECParameterSpec.getCofactor,Returns the cofactor.
java.security.spec.ECParameterSpec.getCurve,Returns the elliptic curve that this parameter defines.
java.security.spec.ECParameterSpec.getGenerator,Returns the generator which is also known as the base point.
java.security.spec.ECParameterSpec.getOrder,Returns the order of the generator.
java.security.spec.ECPoint.equals,Compares this elliptic curve point for equality with  the specified object.
java.security.spec.ECPoint.getAffineX,Returns the affine x-coordinatex.
java.security.spec.ECPoint.getAffineY,Returns the affine y-coordinatey.
java.security.spec.ECPoint.hashCode,Returns a hash code value for this elliptic curve point.
java.security.spec.ECPrivateKeySpec.getParams,Returns the associated elliptic curve domain  parameters.
java.security.spec.ECPrivateKeySpec.getS,Returns the private value S.
java.security.spec.ECPublicKeySpec.getW,Returns the public point W.
java.security.spec.EdDSAParameterSpec.getContext,Get the context that the signature will use.
java.security.spec.EdDSAParameterSpec.isPrehash,Get whether the prehash mode is specified.
java.security.spec.EdECPoint.getY,Get the y-coordinate of the point.
java.security.spec.EdECPoint.isXOdd,Get whether the x-coordinate of the point is odd.
java.security.spec.EdECPrivateKeySpec.getBytes,Get the byte array representing the private key.
java.security.spec.EdECPrivateKeySpec.getParams,Get the algorithm parameters that define the curve and other settings.
java.security.spec.EdECPublicKeySpec.getPoint,Get the point representing the public key.
java.security.spec.EllipticCurve.equals,Compares this elliptic curve for equality with the  specified object.
java.security.spec.EllipticCurve.getA,Returns the first coefficientaof the  elliptic curve.
java.security.spec.EllipticCurve.getB,Returns the second coefficientbof the  elliptic curve.
java.security.spec.EllipticCurve.getField,Returns the finite fieldfieldthat this  elliptic curve is over.
java.security.spec.EllipticCurve.getSeed,Returns the seeding bytesseedused  during curve generation.
java.security.spec.EllipticCurve.hashCode,Returns a hash code value for this elliptic curve.
java.security.spec.EncodedKeySpec.getAlgorithm,Returns the name of the algorithm of the encoded key.
java.security.spec.EncodedKeySpec.getEncoded,Returns the encoded key.
java.security.spec.EncodedKeySpec.getFormat,Returns the name of the encoding format associated with this  key specification.
java.security.spec.MGF1ParameterSpec.getDigestAlgorithm,Returns the algorithm name of the message digest used by the mask  generation function.
java.security.spec.NamedParameterSpec.getName,Returns the standard name that determines the algorithm parameters.
java.security.spec.PKCS8EncodedKeySpec.getEncoded,"Returns the key bytes, encoded according to the PKCS #8 standard."
java.security.spec.PSSParameterSpec.getDigestAlgorithm,Returns the message digest algorithm name.
java.security.spec.PSSParameterSpec.getMGFAlgorithm,Returns the mask generation function algorithm name.
java.security.spec.PSSParameterSpec.getMGFParameters,Returns the parameters for the mask generation function.
java.security.spec.PSSParameterSpec.getSaltLength,Returns the salt length in bytes.
java.security.spec.PSSParameterSpec.getTrailerField,Returns the value for the trailer field.
java.security.spec.RSAKeyGenParameterSpec.getKeyParams,Returns the parameters to be associated with key.
java.security.spec.RSAKeyGenParameterSpec.getKeysize,Returns the keysize.
java.security.spec.RSAKeyGenParameterSpec.getPublicExponent,Returns the public-exponent value.
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getCrtCoefficient,Returns the crtCoefficient.
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getOtherPrimeInfo,Returns a copy of the otherPrimeInfo or null if there are  only two prime factors (p and q).
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentP,Returns the primeExponentP.
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentQ,Returns the primeExponentQ.
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeP,Returns the primeP.
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeQ,Returns the primeQ.
java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPublicExponent,Returns the public exponent.
java.security.spec.RSAOtherPrimeInfo.getCrtCoefficient,Returns the prime's crtCoefficient.
java.security.spec.RSAOtherPrimeInfo.getExponent,Returns the prime's exponent.
java.security.spec.RSAOtherPrimeInfo.getPrime,Returns the prime.
java.security.spec.RSAPrivateKeySpec.getModulus,Returns the modulus.
java.security.spec.RSAPrivateKeySpec.getParams,"Returns the parameters associated with this key, may be null if not  present."
java.security.spec.RSAPrivateKeySpec.getPrivateExponent,Returns the private exponent.
java.security.spec.X509EncodedKeySpec.getEncoded,"Returns the key bytes, encoded according to the X.509 standard."
java.security.spec.XECPrivateKeySpec.getScalar,Get the scalar value encoded as an unpruned byte array.
java.security.spec.XECPublicKeySpec.getU,Get the u coordinate of the point.
java.text.Annotation.getValue,"Returns the value of the attribute, which may be null."
java.text.Annotation.toString,Returns the String representation of this Annotation.
java.text.AttributedString.addAttribute,Adds an attribute to the entire string.
java.text.AttributedString.addAttribute,Adds an attribute to a subrange of the string.
java.text.AttributedString.addAttributes,Adds a set of attributes to a subrange of the string.
java.text.AttributedString.getIterator,Creates an AttributedCharacterIterator instance that provides access to the entire contents of  this string.
java.text.AttributedString.getIterator,Creates an AttributedCharacterIterator instance that provides access to  selected contents of this string.
java.text.Bidi.baseIsLeftToRight,Return true if the base direction is left-to-right.
java.text.Bidi.createLineBidi,Create a Bidi object representing the bidi information on a line of text within  the paragraph represented by the current Bidi.
java.text.Bidi.getBaseLevel,"Return the base level (0 if left-to-right, 1 if right-to-left)."
java.text.Bidi.getLength,Return the length of text in the line.
java.text.Bidi.getLevelAt,Return the resolved level of the character at offset.
java.text.Bidi.getRunCount,Return the number of level runs.
java.text.Bidi.getRunLevel,Return the level of the nth logical run in this line.
java.text.Bidi.getRunLimit,"Return the index of the character past the end of the nth logical run in this line, as  an offset from the start of the line."
java.text.Bidi.getRunStart,"Return the index of the character at the start of the nth logical run in this line, as  an offset from the start of the line."
java.text.Bidi.isLeftToRight,Return true if the line is all left-to-right text and the base direction is left-to-right.
java.text.Bidi.isMixed,Return true if the line is not left-to-right or right-to-left.
java.text.Bidi.isRightToLeft,"Return true if the line is all right-to-left text, and the base direction is right-to-left."
java.text.Bidi.reorderVisually,Reorder the objects in the array into visual order based on their levels.
java.text.Bidi.requiresBidi,Return true if the specified text requires bidi analysis.
java.text.Bidi.toString,"Display the bidi internal state, used in debugging."
java.text.BreakIterator.clone,Create a copy of this iterator
java.text.BreakIterator.current,"Returns character index of the text boundary that was most  recently returned by next(), next(int), previous(), first(), last(),  following(int) or preceding(int)."
java.text.BreakIterator.first,Returns the first boundary.
java.text.BreakIterator.following,Returns the first boundary following the specified character offset.
java.text.BreakIterator.getAvailableLocales,Returns an array of all locales for which theget*Instancemethods of this class can return  localized instances.
java.text.BreakIterator.getCharacterInstance,Returns a newBreakIteratorinstance  forcharacter breaksfor thedefault locale.
java.text.BreakIterator.getCharacterInstance,Returns a newBreakIteratorinstance  forcharacter breaksfor the given locale.
java.text.BreakIterator.getLineInstance,Returns a newBreakIteratorinstance  forline breaksfor thedefault locale.
java.text.BreakIterator.getLineInstance,Returns a newBreakIteratorinstance  forline breaksfor the given locale.
java.text.BreakIterator.getSentenceInstance,Returns a newBreakIteratorinstance  forsentence breaksfor thedefault locale.
java.text.BreakIterator.getSentenceInstance,Returns a newBreakIteratorinstance  forsentence breaksfor the given locale.
java.text.BreakIterator.getText,Get the text being scanned
java.text.BreakIterator.getWordInstance,Returns a newBreakIteratorinstance  forword breaksfor thedefault locale.
java.text.BreakIterator.getWordInstance,Returns a newBreakIteratorinstance  forword breaksfor the given locale.
java.text.BreakIterator.isBoundary,Returns true if the specified character offset is a text boundary.
java.text.BreakIterator.last,Returns the last boundary.
java.text.BreakIterator.next,Returns the boundary following the current boundary.
java.text.BreakIterator.next,Returns the nth boundary from the current boundary.
java.text.BreakIterator.preceding,Returns the last boundary preceding the specified character offset.
java.text.BreakIterator.previous,Returns the boundary preceding the current boundary.
java.text.BreakIterator.setText,Set a new text string to be scanned.
java.text.BreakIterator.setText,Set a new text for scanning.
java.text.ChoiceFormat.applyPattern,Sets the pattern.
java.text.ChoiceFormat.clone,Overrides Cloneable
java.text.ChoiceFormat.equals,Equality comparison between two
java.text.ChoiceFormat.format,Returns pattern with formatted double.
java.text.ChoiceFormat.format,Specialization of format.
java.text.ChoiceFormat.getFormats,Get the formats passed in the constructor.
java.text.ChoiceFormat.getLimits,Get the limits passed in the constructor.
java.text.ChoiceFormat.hashCode,Generates a hash code for the message format object.
java.text.ChoiceFormat.nextDouble,Finds the least double greater thand.
java.text.ChoiceFormat.nextDouble,"Finds the least double greater thand(ifpositiveistrue), or the greatest double less thand(ifpositiveisfalse)."
java.text.ChoiceFormat.parse,Parses a Number from the input text.
java.text.ChoiceFormat.previousDouble,Finds the greatest double less thand.
java.text.ChoiceFormat.setChoices,Set the choices to be used in formatting.
java.text.ChoiceFormat.toPattern,Gets the pattern.
java.text.CollationElementIterator.getMaxExpansion,Return the maximum length of any expansion sequences that end  with the specified comparison order.
java.text.CollationElementIterator.getOffset,Returns the character offset in the original text corresponding to the next  collation element.
java.text.CollationElementIterator.next,Get the next collation element in the string.
java.text.CollationElementIterator.previous,Get the previous collation element in the string.
java.text.CollationElementIterator.primaryOrder,Return the primary component of a collation element.
java.text.CollationElementIterator.reset,Resets the cursor to the beginning of the string.
java.text.CollationElementIterator.secondaryOrder,Return the secondary component of a collation element.
java.text.CollationElementIterator.setOffset,"Sets the iterator to point to the collation element corresponding to  the specified character (the parameter is a CHARACTER offset in the  original string, not an offset into its corresponding sequence of  collation elements)."
java.text.CollationElementIterator.setText,Set a new string over which to iterate.
java.text.CollationElementIterator.tertiaryOrder,Return the tertiary component of a collation element.
java.text.CollationKey.compareTo,Compare this CollationKey to the target CollationKey.
java.text.CollationKey.getSourceString,Returns the String that this CollationKey represents.
java.text.CollationKey.toByteArray,Converts the CollationKey to a sequence of bits.
java.text.Collator.compare,Compares its two arguments for order.
java.text.Collator.compare,Compares the source string to the target string according to the  collation rules for this Collator.
java.text.Collator.equals,Compares the equality of two Collators.
java.text.Collator.equals,Convenience method for comparing the equality of two strings based on  this Collator's collation rules.
java.text.Collator.getAvailableLocales,Returns an array of all locales for which thegetInstancemethods of this class can return  localized instances.
java.text.Collator.getCollationKey,Transforms the String into a series of bits that can be compared bitwise  to other CollationKeys.
java.text.Collator.getDecomposition,Get the decomposition mode of this Collator.
java.text.Collator.getInstance,Gets the Collator for the current default locale.
java.text.Collator.getInstance,Gets the Collator for the desired locale.
java.text.Collator.getStrength,Returns this Collator's strength property.
java.text.Collator.hashCode,Generates the hash code for this Collator.
java.text.Collator.setDecomposition,Set the decomposition mode of this Collator.
java.text.Collator.setStrength,Sets this Collator's strength property.
java.text.CompactNumberFormat.clone,Creates and returns a copy of thisCompactNumberFormatinstance.
java.text.CompactNumberFormat.equals,Checks if thisCompactNumberFormatis equal to the  specifiedobj.
java.text.CompactNumberFormat.format,Formats a double to produce a string representing its compact form.
java.text.CompactNumberFormat.format,Formats a long to produce a string representing its compact form.
java.text.CompactNumberFormat.format,Formats a number to produce a string representing its compact form.
java.text.CompactNumberFormat.formatToCharacterIterator,Formats an Object producing anAttributedCharacterIterator.
java.text.CompactNumberFormat.getGroupingSize,Returns the grouping size.
java.text.CompactNumberFormat.getRoundingMode,Gets theRoundingModeused in thisCompactNumberFormat.
java.text.CompactNumberFormat.hashCode,Returns the hash code for thisCompactNumberFormatinstance.
java.text.CompactNumberFormat.isGroupingUsed,Returns true if grouping is used in this format.
java.text.CompactNumberFormat.isParseBigDecimal,"Returns whether theparse(String, ParsePosition)method returnsBigDecimal."
java.text.CompactNumberFormat.isParseIntegerOnly,Returns true if this format parses only an integer from the number  component of a compact number.
java.text.CompactNumberFormat.parse,Parses a compact number from a string to produce aNumber.
java.text.CompactNumberFormat.setGroupingSize,Sets the grouping size.
java.text.CompactNumberFormat.setGroupingUsed,Sets whether or not grouping will be used in this format.
java.text.CompactNumberFormat.setMaximumFractionDigits,Sets the maximum number of digits allowed in the fraction portion of a  number.
java.text.CompactNumberFormat.setMaximumIntegerDigits,Sets the maximum number of digits allowed in the integer portion of a  number.
java.text.CompactNumberFormat.setMinimumFractionDigits,Sets the minimum number of digits allowed in the fraction portion of a  number.
java.text.CompactNumberFormat.setMinimumIntegerDigits,Sets the minimum number of digits allowed in the integer portion of a  number.
java.text.CompactNumberFormat.setParseBigDecimal,"Sets whether theparse(String, ParsePosition)method returnsBigDecimal."
java.text.CompactNumberFormat.setParseIntegerOnly,Sets whether or not this format parses only an integer from the number  component of a compact number.
java.text.CompactNumberFormat.setRoundingMode,Sets theRoundingModeused in thisCompactNumberFormat.
java.text.DateFormat.getCalendarField,Returns theCalendarfield associated with this  attribute.
java.text.DateFormat.ofCalendarField,Returns theFieldconstant that corresponds to  theCalendarconstantcalendarField.
java.text.DateFormat.readResolve,Resolves instances being deserialized to the predefined constants.
java.text.DateFormat.equals,Overrides equals
java.text.DateFormat.format,Formats the givenObjectinto a date-time string.
java.text.DateFormat.format,Formats aDateinto a date-time string.
java.text.DateFormat.getCalendar,Gets the calendar associated with this date/time formatter.
java.text.DateFormat.getDateInstance,Gets the date formatter with the default formatting style  for the defaultFORMATlocale.
java.text.DateFormat.getDateInstance,Gets the date formatter with the given formatting style  for the defaultFORMATlocale.
java.text.DateFormat.getDateInstance,Gets the date formatter with the given formatting style  for the given locale.
java.text.DateFormat.getDateTimeInstance,Gets the date/time formatter with the default formatting style  for the defaultFORMATlocale.
java.text.DateFormat.getDateTimeInstance,Gets the date/time formatter with the given date and time  formatting styles for the defaultFORMATlocale.
java.text.DateFormat.getDateTimeInstance,Gets the date/time formatter with the given formatting styles  for the given locale.
java.text.DateFormat.getInstance,Get a default date/time formatter that uses the SHORT style for both the  date and the time.
java.text.DateFormat.getNumberFormat,Gets the number formatter which this date/time formatter uses to  format and parse a time.
java.text.DateFormat.getTimeInstance,Gets the time formatter with the default formatting style  for the defaultFORMATlocale.
java.text.DateFormat.getTimeInstance,Gets the time formatter with the given formatting style  for the defaultFORMATlocale.
java.text.DateFormat.getTimeInstance,Gets the time formatter with the given formatting style  for the given locale.
java.text.DateFormat.getTimeZone,Gets the time zone.
java.text.DateFormat.hashCode,Overrides hashCode
java.text.DateFormat.isLenient,Tell whether date/time parsing is to be lenient.
java.text.DateFormat.parse,Parses text from the beginning of the given string to produce a date.
java.text.DateFormat.parse,Parse a date/time string according to the given parse position.
java.text.DateFormat.parseObject,Parses text from a string to produce aDate.
java.text.DateFormat.setCalendar,Set the calendar to be used by this date format.
java.text.DateFormat.setLenient,Specify whether or not date/time parsing is to be lenient.
java.text.DateFormat.setNumberFormat,Allows you to set the number formatter.
java.text.DateFormat.setTimeZone,Sets the time zone for the calendar of thisDateFormatobject.
java.text.DateFormatSymbols.equals,Override equals
java.text.DateFormatSymbols.getAmPmStrings,Gets ampm strings.
java.text.DateFormatSymbols.getEras,Gets era strings.
java.text.DateFormatSymbols.getInstance,Gets theDateFormatSymbolsinstance for the default  locale.
java.text.DateFormatSymbols.getInstance,Gets theDateFormatSymbolsinstance for the specified  locale.
java.text.DateFormatSymbols.getLocalPatternChars,Gets localized date-time pattern characters.
java.text.DateFormatSymbols.getMonths,Gets month strings.
java.text.DateFormatSymbols.getShortMonths,Gets short month strings.
java.text.DateFormatSymbols.getShortWeekdays,Gets short weekday strings.
java.text.DateFormatSymbols.getWeekdays,Gets weekday strings.
java.text.DateFormatSymbols.getZoneStrings,Gets time zone strings.
java.text.DateFormatSymbols.hashCode,Override hashCode.
java.text.DateFormatSymbols.setAmPmStrings,Sets ampm strings.
java.text.DateFormatSymbols.setEras,Sets era strings.
java.text.DateFormatSymbols.setLocalPatternChars,Sets localized date-time pattern characters.
java.text.DateFormatSymbols.setMonths,Sets month strings.
java.text.DateFormatSymbols.setShortMonths,Sets short month strings.
java.text.DateFormatSymbols.setShortWeekdays,Sets short weekday strings.
java.text.DateFormatSymbols.setWeekdays,Sets weekday strings.
java.text.DateFormatSymbols.setZoneStrings,Sets time zone strings.
java.text.DecimalFormat.applyLocalizedPattern,Apply the given pattern to this Format object.
java.text.DecimalFormat.clone,Standard override; no change in semantics.
java.text.DecimalFormat.format,Formats a double to produce a string.
java.text.DecimalFormat.format,Format a long to produce a string.
java.text.DecimalFormat.format,Formats a number and appends the resulting text to the given string  buffer.
java.text.DecimalFormat.getCurrency,Gets the currency used by this decimal format when formatting  currency values.
java.text.DecimalFormat.getDecimalFormatSymbols,"Returns a copy of the decimal format symbols, which is generally not  changed by the programmer or user."
java.text.DecimalFormat.getGroupingSize,Return the grouping size.
java.text.DecimalFormat.getMaximumFractionDigits,Gets the maximum number of digits allowed in the fraction portion of a  number.
java.text.DecimalFormat.getMaximumIntegerDigits,Gets the maximum number of digits allowed in the integer portion of a  number.
java.text.DecimalFormat.getMinimumFractionDigits,Gets the minimum number of digits allowed in the fraction portion of a  number.
java.text.DecimalFormat.getMinimumIntegerDigits,Gets the minimum number of digits allowed in the integer portion of a  number.
java.text.DecimalFormat.getMultiplier,"Gets the multiplier for use in percent, per mille, and similar  formats."
java.text.DecimalFormat.getNegativePrefix,Get the negative prefix.
java.text.DecimalFormat.getNegativeSuffix,Get the negative suffix.
java.text.DecimalFormat.getPositivePrefix,Get the positive prefix.
java.text.DecimalFormat.getPositiveSuffix,Get the positive suffix.
java.text.DecimalFormat.getRoundingMode,Gets theRoundingModeused in this DecimalFormat.
java.text.DecimalFormat.isDecimalSeparatorAlwaysShown,Allows you to get the behavior of the decimal separator with integers.
java.text.DecimalFormat.isParseBigDecimal,"Returns whether theparse(java.lang.String, java.text.ParsePosition)method returnsBigDecimal."
java.text.DecimalFormat.parse,Parses text from a string to produce aNumber.
java.text.DecimalFormat.setCurrency,Sets the currency used by this number format when formatting  currency values.
java.text.DecimalFormat.setDecimalFormatSymbols,"Sets the decimal format symbols, which is generally not changed  by the programmer or user."
java.text.DecimalFormat.setDecimalSeparatorAlwaysShown,Allows you to set the behavior of the decimal separator with integers.
java.text.DecimalFormat.setGroupingSize,Set the grouping size.
java.text.DecimalFormat.setMultiplier,"Sets the multiplier for use in percent, per mille, and similar  formats."
java.text.DecimalFormat.setNegativePrefix,Set the negative prefix.
java.text.DecimalFormat.setNegativeSuffix,Set the negative suffix.
java.text.DecimalFormat.setParseBigDecimal,"Sets whether theparse(java.lang.String, java.text.ParsePosition)method returnsBigDecimal."
java.text.DecimalFormat.setPositivePrefix,Set the positive prefix.
java.text.DecimalFormat.setPositiveSuffix,Set the positive suffix.
java.text.DecimalFormat.setRoundingMode,Sets theRoundingModeused in this DecimalFormat.
java.text.DecimalFormat.toLocalizedPattern,Synthesizes a localized pattern string that represents the current  state of this Format object.
java.text.DecimalFormat.toPattern,Synthesizes a pattern string that represents the current state  of this Format object.
java.text.DecimalFormatSymbols.clone,Standard override.
java.text.DecimalFormatSymbols.equals,Override equals.
java.text.DecimalFormatSymbols.getCurrency,Gets the currency of these DecimalFormatSymbols.
java.text.DecimalFormatSymbols.getCurrencySymbol,Returns the currency symbol for the currency of these  DecimalFormatSymbols in their locale.
java.text.DecimalFormatSymbols.getDecimalSeparator,Gets the character used for decimal sign.
java.text.DecimalFormatSymbols.getDigit,Gets the character used for a digit in a pattern.
java.text.DecimalFormatSymbols.getExponentSeparator,Returns the string used to separate the mantissa from the exponent.
java.text.DecimalFormatSymbols.getGroupingSeparator,Gets the character used for grouping separator.
java.text.DecimalFormatSymbols.getInfinity,Gets the string used to represent infinity.
java.text.DecimalFormatSymbols.getInstance,Gets theDecimalFormatSymbolsinstance for the default  locale.
java.text.DecimalFormatSymbols.getInstance,Gets theDecimalFormatSymbolsinstance for the specified  locale.
java.text.DecimalFormatSymbols.getInternationalCurrencySymbol,Returns the ISO 4217 currency code of the currency of these  DecimalFormatSymbols.
java.text.DecimalFormatSymbols.getMinusSign,Gets the character used to represent minus sign.
java.text.DecimalFormatSymbols.getMonetaryDecimalSeparator,Returns the monetary decimal separator.
java.text.DecimalFormatSymbols.getMonetaryGroupingSeparator,Gets the character used for grouping separator for currencies.
java.text.DecimalFormatSymbols.getNaN,"Gets the string used to represent ""not a number""."
java.text.DecimalFormatSymbols.getPatternSeparator,Gets the character used to separate positive and negative subpatterns  in a pattern.
java.text.DecimalFormatSymbols.getPercent,Gets the character used for percent sign.
java.text.DecimalFormatSymbols.getPerMill,Gets the character used for per mille sign.
java.text.DecimalFormatSymbols.getZeroDigit,Gets the character used for zero.
java.text.DecimalFormatSymbols.setCurrency,Sets the currency of these DecimalFormatSymbols.
java.text.DecimalFormatSymbols.setCurrencySymbol,Sets the currency symbol for the currency of these  DecimalFormatSymbols in their locale.
java.text.DecimalFormatSymbols.setDecimalSeparator,Sets the character used for decimal sign.
java.text.DecimalFormatSymbols.setDigit,Sets the character used for a digit in a pattern.
java.text.DecimalFormatSymbols.setExponentSeparator,Sets the string used to separate the mantissa from the exponent.
java.text.DecimalFormatSymbols.setGroupingSeparator,Sets the character used for grouping separator.
java.text.DecimalFormatSymbols.setInfinity,Sets the string used to represent infinity.
java.text.DecimalFormatSymbols.setInternationalCurrencySymbol,Sets the ISO 4217 currency code of the currency of these  DecimalFormatSymbols.
java.text.DecimalFormatSymbols.setMinusSign,Sets the character used to represent minus sign.
java.text.DecimalFormatSymbols.setMonetaryDecimalSeparator,Sets the monetary decimal separator.
java.text.DecimalFormatSymbols.setMonetaryGroupingSeparator,Sets the character used for grouping separator for currencies.
java.text.DecimalFormatSymbols.setNaN,"Sets the string used to represent ""not a number""."
java.text.DecimalFormatSymbols.setPatternSeparator,Sets the character used to separate positive and negative subpatterns  in a pattern.
java.text.DecimalFormatSymbols.setPercent,Sets the character used for percent sign.
java.text.DecimalFormatSymbols.setPerMill,Sets the character used for per mille sign.
java.text.DecimalFormatSymbols.setZeroDigit,Sets the character used for zero.
java.text.FieldPosition.getBeginIndex,Retrieves the index of the first character in the requested field.
java.text.FieldPosition.getEndIndex,Retrieves the index of the character following the last character in the  requested field.
java.text.FieldPosition.getField,Retrieves the field identifier.
java.text.FieldPosition.getFieldAttribute,Returns the field identifier as an attribute constant  from one of theFieldsubclasses.
java.text.FieldPosition.hashCode,Returns a hash code for this FieldPosition.
java.text.FieldPosition.setBeginIndex,Sets the begin index.
java.text.FieldPosition.setEndIndex,Sets the end index.
java.text.FieldPosition.toString,Return a string representation of this FieldPosition.
java.text.Format.format,Formats an object to produce a string.
java.text.Format.format,Formats an object and appends the resulting text to a given string  buffer.
java.text.Format.parseObject,Parses text from the beginning of the given string to produce an object.
java.text.Format.parseObject,Parses text from a string to produce an object.
java.text.MessageFormat.applyPattern,Sets the pattern used by this message format.
java.text.MessageFormat.equals,Equality comparison between two message format objects
java.text.MessageFormat.format,"Formats an array of objects and appends theMessageFormat's  pattern, with format elements replaced by the formatted objects, to the  providedStringBuffer."
java.text.MessageFormat.format,Creates a MessageFormat with the given pattern and uses it  to format the given arguments.
java.text.MessageFormat.formatToCharacterIterator,"Formats an array of objects and inserts them into theMessageFormat's pattern, producing anAttributedCharacterIterator."
java.text.MessageFormat.getFormats,Gets the formats used for the format elements in the  previously set pattern string.
java.text.MessageFormat.getFormatsByArgumentIndex,Gets the formats used for the values passed intoformatmethods or returned fromparsemethods.
java.text.MessageFormat.getLocale,Gets the locale that's used when creating or comparing subformats.
java.text.MessageFormat.parse,Parses text from the beginning of the given string to produce an object  array.
java.text.MessageFormat.parse,Parses the string.
java.text.MessageFormat.parseObject,Parses text from a string to produce an object array.
java.text.MessageFormat.setFormat,Sets the format to use for the format element with the given  format element index within the previously set pattern string.
java.text.MessageFormat.setFormatByArgumentIndex,Sets the format to use for the format elements within the  previously set pattern string that use the given argument  index.
java.text.MessageFormat.setFormats,Sets the formats to use for the format elements in the  previously set pattern string.
java.text.MessageFormat.setFormatsByArgumentIndex,Sets the formats to use for the values passed intoformatmethods or returned fromparsemethods.
java.text.MessageFormat.setLocale,Sets the locale to be used when creating or comparing subformats.
java.text.MessageFormat.toPattern,Returns a pattern representing the current state of the message format.
java.text.Normalizer.isNormalized,Determines if the given sequence of char values is normalized.
java.text.Normalizer.normalize,Normalize a sequence of char values.
java.text.NumberFormat.clone,Overrides Cloneable.
java.text.NumberFormat.equals,Overrides equals.
java.text.NumberFormat.getCompactNumberInstance,"Returns a compact number format for the defaultFORMATlocale with""SHORT""format style."
java.text.NumberFormat.getCompactNumberInstance,Returns a compact number format for the specifiedlocaleandformatStyle.
java.text.NumberFormat.getCurrency,Gets the currency used by this number format when formatting  currency values.
java.text.NumberFormat.getCurrencyInstance,Returns a currency format for the current defaultFORMATlocale.
java.text.NumberFormat.getCurrencyInstance,Returns a currency format for the specified locale.
java.text.NumberFormat.getInstance,Returns a general-purpose number format for the current defaultFORMATlocale.
java.text.NumberFormat.getInstance,Returns a general-purpose number format for the specified locale.
java.text.NumberFormat.getIntegerInstance,Returns an integer number format for the current defaultFORMATlocale.
java.text.NumberFormat.getIntegerInstance,Returns an integer number format for the specified locale.
java.text.NumberFormat.getMaximumFractionDigits,Returns the maximum number of digits allowed in the fraction portion of a  number.
java.text.NumberFormat.getMaximumIntegerDigits,Returns the maximum number of digits allowed in the integer portion of a  number.
java.text.NumberFormat.getMinimumFractionDigits,Returns the minimum number of digits allowed in the fraction portion of a  number.
java.text.NumberFormat.getMinimumIntegerDigits,Returns the minimum number of digits allowed in the integer portion of a  number.
java.text.NumberFormat.getPercentInstance,Returns a percentage format for the current defaultFORMATlocale.
java.text.NumberFormat.getPercentInstance,Returns a percentage format for the specified locale.
java.text.NumberFormat.getRoundingMode,Gets theRoundingModeused in this NumberFormat.
java.text.NumberFormat.hashCode,Overrides hashCode.
java.text.NumberFormat.isParseIntegerOnly,Returns true if this format will parse numbers as integers only.
java.text.NumberFormat.parse,Parses text from the beginning of the given string to produce a number.
java.text.NumberFormat.parse,"Returns a Long if possible (e.g., within the range [Long.MIN_VALUE,  Long.MAX_VALUE] and with no decimals), otherwise a Double."
java.text.NumberFormat.setGroupingUsed,Set whether or not grouping will be used in this format.
java.text.NumberFormat.setMaximumFractionDigits,Sets the maximum number of digits allowed in the fraction portion of a  number. maximumFractionDigits must be ≥ minimumFractionDigits.
java.text.NumberFormat.setMaximumIntegerDigits,Sets the maximum number of digits allowed in the integer portion of a  number. maximumIntegerDigits must be ≥ minimumIntegerDigits.
java.text.NumberFormat.setMinimumFractionDigits,Sets the minimum number of digits allowed in the fraction portion of a  number. minimumFractionDigits must be ≤ maximumFractionDigits.
java.text.NumberFormat.setMinimumIntegerDigits,Sets the minimum number of digits allowed in the integer portion of a  number. minimumIntegerDigits must be ≤ maximumIntegerDigits.
java.text.NumberFormat.setParseIntegerOnly,Sets whether or not numbers should be parsed as integers only.
java.text.NumberFormat.setRoundingMode,Sets theRoundingModeused in this NumberFormat.
java.text.ParseException.getErrorOffset,Returns the position where the error was found.
java.text.ParsePosition.getErrorIndex,"Retrieve the index at which an error occurred, or -1 if the  error index has not been set."
java.text.ParsePosition.getIndex,Retrieve the current parse position.
java.text.ParsePosition.hashCode,Returns a hash code for this ParsePosition.
java.text.ParsePosition.setErrorIndex,Set the index at which a parse error occurred.
java.text.ParsePosition.setIndex,Set the current parse position.
java.text.ParsePosition.toString,Return a string representation of this ParsePosition.
java.text.RuleBasedCollator.compare,Compares the character data stored in two different strings based on the  collation rules.
java.text.RuleBasedCollator.equals,Compares the equality of two collation objects.
java.text.RuleBasedCollator.getCollationElementIterator,Returns a CollationElementIterator for the given String.
java.text.RuleBasedCollator.getCollationElementIterator,Returns a CollationElementIterator for the given CharacterIterator.
java.text.RuleBasedCollator.getCollationKey,Transforms the string into a series of characters that can be compared  with CollationKey.compareTo.
java.text.RuleBasedCollator.getRules,Gets the table-based rules for the collation object.
java.text.RuleBasedCollator.hashCode,Generates the hash code for the table-based collation object
java.text.SimpleDateFormat.applyLocalizedPattern,Applies the given localized pattern string to this date format.
java.text.SimpleDateFormat.applyPattern,Applies the given pattern string to this date format.
java.text.SimpleDateFormat.clone,Creates a copy of thisSimpleDateFormat.
java.text.SimpleDateFormat.equals,Compares the given object with thisSimpleDateFormatfor  equality.
java.text.SimpleDateFormat.format,Formats the givenDateinto a date/time string and appends  the result to the givenStringBuffer.
java.text.SimpleDateFormat.get2DigitYearStart,Returns the beginning date of the 100-year period 2-digit years are interpreted  as being within.
java.text.SimpleDateFormat.getDateFormatSymbols,Gets a copy of the date and time format symbols of this date format.
java.text.SimpleDateFormat.hashCode,Returns the hash code value for thisSimpleDateFormatobject.
java.text.SimpleDateFormat.set2DigitYearStart,Sets the 100-year period 2-digit years will be interpreted as being in  to begin on the date the user specifies.
java.text.SimpleDateFormat.setDateFormatSymbols,Sets the date and time format symbols of this date format.
java.text.SimpleDateFormat.toLocalizedPattern,Returns a localized pattern string describing this date format.
java.text.SimpleDateFormat.toPattern,Returns a pattern string describing this date format.
java.text.StringCharacterIterator.clone,Creates a copy of this iterator.
java.text.StringCharacterIterator.current,Implements CharacterIterator.current() for String.
java.text.StringCharacterIterator.equals,Compares the equality of two StringCharacterIterator objects.
java.text.StringCharacterIterator.first,Implements CharacterIterator.first() for String.
java.text.StringCharacterIterator.getBeginIndex,Implements CharacterIterator.getBeginIndex() for String.
java.text.StringCharacterIterator.getEndIndex,Implements CharacterIterator.getEndIndex() for String.
java.text.StringCharacterIterator.getIndex,Implements CharacterIterator.getIndex() for String.
java.text.StringCharacterIterator.hashCode,Computes a hashcode for this iterator.
java.text.StringCharacterIterator.last,Implements CharacterIterator.last() for String.
java.text.StringCharacterIterator.next,Implements CharacterIterator.next() for String.
java.text.StringCharacterIterator.previous,Implements CharacterIterator.previous() for String.
java.text.StringCharacterIterator.setIndex,Implements CharacterIterator.setIndex() for String.
java.text.StringCharacterIterator.setText,Reset this iterator to point to a new string.
java.text.spi.CollatorProvider.getInstance,Returns a newCollatorinstance for the specified locale.
java.text.spi.DateFormatProvider.getDateInstance,Returns a newDateFormatinstance which formats date  with the given formatting style for the specified locale.
java.text.spi.DateFormatProvider.getDateTimeInstance,Returns a newDateFormatinstance which formats date and time  with the given formatting style for the specified locale.
java.text.spi.DateFormatProvider.getTimeInstance,Returns a newDateFormatinstance which formats time  with the given formatting style for the specified locale.
java.text.spi.DateFormatSymbolsProvider.getInstance,Returns a newDateFormatSymbolsinstance for the  specified locale.
java.text.spi.DecimalFormatSymbolsProvider.getInstance,Returns a newDecimalFormatSymbolsinstance for the  specified locale.
java.text.spi.NumberFormatProvider.getCompactNumberInstance,Returns a newNumberFormatinstance which formats  a number in its compact form for the specifiedlocaleandformatStyle.
java.text.spi.NumberFormatProvider.getCurrencyInstance,Returns a newNumberFormatinstance which formats  monetary values for the specified locale.
java.text.spi.NumberFormatProvider.getIntegerInstance,Returns a newNumberFormatinstance which formats  integer values for the specified locale.
java.text.spi.NumberFormatProvider.getNumberInstance,Returns a new general-purposeNumberFormatinstance for  the specified locale.
java.text.spi.NumberFormatProvider.getPercentInstance,Returns a newNumberFormatinstance which formats  percentage values for the specified locale.
java.time.Clock.equals,Checks if this clock is equal to another clock.
java.time.Clock.fixed,Obtains a clock that always returns the same instant.
java.time.Clock.getZone,Gets the time-zone being used to create dates and times.
java.time.Clock.hashCode,A hash code for this clock.
java.time.Clock.instant,Gets the current instant of the clock.
java.time.Clock.millis,Gets the current millisecond instant of the clock.
java.time.Clock.offset,Obtains a clock that returns instants from the specified clock with the  specified duration added.
java.time.Clock.system,Obtains a clock that returns the current instant using the best available  system clock.
java.time.Clock.systemDefaultZone,"Obtains a clock that returns the current instant using the best available  system clock, converting to date and time using the default time-zone."
java.time.Clock.systemUTC,"Obtains a clock that returns the current instant using the best available  system clock, converting to date and time using the UTC time-zone."
java.time.Clock.tick,Obtains a clock that returns instants from the specified clock truncated  to the nearest occurrence of the specified duration.
java.time.Clock.tickMillis,Obtains a clock that returns the current instant ticking in whole milliseconds  using the best available system clock.
java.time.Clock.tickMinutes,Obtains a clock that returns the current instant ticking in whole minutes  using the best available system clock.
java.time.Clock.tickSeconds,Obtains a clock that returns the current instant ticking in whole seconds  using the best available system clock.
java.time.Clock.withZone,Returns a copy of this clock with a different time-zone.
java.time.Duration.abs,Returns a copy of this duration with a positive length.
java.time.Duration.addTo,Adds this duration to the specified temporal object.
java.time.Duration.between,Obtains aDurationrepresenting the duration between two temporal objects.
java.time.Duration.compareTo,Compares this duration to the specifiedDuration.
java.time.Duration.dividedBy,Returns a copy of this duration divided by the specified value.
java.time.Duration.dividedBy,Returns number of whole times a specified Duration occurs within this Duration.
java.time.Duration.equals,Checks if this duration is equal to the specifiedDuration.
java.time.Duration.from,Obtains an instance ofDurationfrom a temporal amount.
java.time.Duration.get,Gets the value of the requested unit.
java.time.Duration.getNano,Gets the number of nanoseconds within the second in this duration.
java.time.Duration.getSeconds,Gets the number of seconds in this duration.
java.time.Duration.getUnits,Gets the set of units supported by this duration.
java.time.Duration.hashCode,A hash code for this duration.
java.time.Duration.isNegative,"Checks if this duration is negative, excluding zero."
java.time.Duration.isZero,Checks if this duration is zero length.
java.time.Duration.minus,Returns a copy of this duration with the specified duration subtracted.
java.time.Duration.minusDays,Returns a copy of this duration with the specified duration in standard 24 hour days subtracted.
java.time.Duration.minusHours,Returns a copy of this duration with the specified duration in hours subtracted.
java.time.Duration.minusMillis,Returns a copy of this duration with the specified duration in milliseconds subtracted.
java.time.Duration.minusMinutes,Returns a copy of this duration with the specified duration in minutes subtracted.
java.time.Duration.minusNanos,Returns a copy of this duration with the specified duration in nanoseconds subtracted.
java.time.Duration.minusSeconds,Returns a copy of this duration with the specified duration in seconds subtracted.
java.time.Duration.multipliedBy,Returns a copy of this duration multiplied by the scalar.
java.time.Duration.negated,Returns a copy of this duration with the length negated.
java.time.Duration.of,Obtains aDurationrepresenting an amount in the specified unit.
java.time.Duration.ofDays,Obtains aDurationrepresenting a number of standard 24 hour days.
java.time.Duration.ofHours,Obtains aDurationrepresenting a number of standard hours.
java.time.Duration.ofMillis,Obtains aDurationrepresenting a number of milliseconds.
java.time.Duration.ofMinutes,Obtains aDurationrepresenting a number of standard minutes.
java.time.Duration.ofNanos,Obtains aDurationrepresenting a number of nanoseconds.
java.time.Duration.ofSeconds,Obtains aDurationrepresenting a number of seconds.
java.time.Duration.ofSeconds,Obtains aDurationrepresenting a number of seconds and an  adjustment in nanoseconds.
java.time.Duration.parse,Obtains aDurationfrom a text string such asPnDTnHnMn.nS.
java.time.Duration.plus,Returns a copy of this duration with the specified duration added.
java.time.Duration.plusDays,Returns a copy of this duration with the specified duration in standard 24 hour days added.
java.time.Duration.plusHours,Returns a copy of this duration with the specified duration in hours added.
java.time.Duration.plusMillis,Returns a copy of this duration with the specified duration in milliseconds added.
java.time.Duration.plusMinutes,Returns a copy of this duration with the specified duration in minutes added.
java.time.Duration.plusNanos,Returns a copy of this duration with the specified duration in nanoseconds added.
java.time.Duration.plusSeconds,Returns a copy of this duration with the specified duration in seconds added.
java.time.Duration.subtractFrom,Subtracts this duration from the specified temporal object.
java.time.Duration.toDays,Gets the number of days in this duration.
java.time.Duration.toDaysPart,Extracts the number of days in the duration.
java.time.Duration.toHours,Gets the number of hours in this duration.
java.time.Duration.toHoursPart,Extracts the number of hours part in the duration.
java.time.Duration.toMillis,Converts this duration to the total length in milliseconds.
java.time.Duration.toMillisPart,Extracts the number of milliseconds part of the duration.
java.time.Duration.toMinutes,Gets the number of minutes in this duration.
java.time.Duration.toMinutesPart,Extracts the number of minutes part in the duration.
java.time.Duration.toNanos,Converts this duration to the total length in nanoseconds expressed as along.
java.time.Duration.toNanosPart,Get the nanoseconds part within seconds of the duration.
java.time.Duration.toSecondsPart,Extracts the number of seconds part in the duration.
java.time.Duration.toString,"A string representation of this duration using ISO-8601 seconds  based representation, such asPT8H6M12.345S."
java.time.Duration.truncatedTo,Returns a copy of thisDurationtruncated to the specified unit.
java.time.Duration.withNanos,Returns a copy of this duration with the specified nano-of-second.
java.time.Duration.withSeconds,Returns a copy of this duration with the specified amount of seconds.
java.time.Instant.adjustInto,Adjusts the specified temporal object to have this instant.
java.time.Instant.atOffset,Combines this instant with an offset to create anOffsetDateTime.
java.time.Instant.atZone,Combines this instant with a time-zone to create aZonedDateTime.
java.time.Instant.compareTo,Compares this instant to the specified instant.
java.time.Instant.equals,Checks if this instant is equal to the specified instant.
java.time.Instant.from,Obtains an instance ofInstantfrom a temporal object.
java.time.Instant.get,Gets the value of the specified field from this instant as anint.
java.time.Instant.getEpochSecond,Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z.
java.time.Instant.getLong,Gets the value of the specified field from this instant as along.
java.time.Instant.getNano,"Gets the number of nanoseconds, later along the time-line, from the start  of the second."
java.time.Instant.hashCode,Returns a hash code for this instant.
java.time.Instant.isAfter,Checks if this instant is after the specified instant.
java.time.Instant.isBefore,Checks if this instant is before the specified instant.
java.time.Instant.isSupported,Checks if the specified field is supported.
java.time.Instant.isSupported,Checks if the specified unit is supported.
java.time.Instant.minus,Returns a copy of this instant with the specified amount subtracted.
java.time.Instant.minusMillis,Returns a copy of this instant with the specified duration in milliseconds subtracted.
java.time.Instant.minusNanos,Returns a copy of this instant with the specified duration in nanoseconds subtracted.
java.time.Instant.minusSeconds,Returns a copy of this instant with the specified duration in seconds subtracted.
java.time.Instant.now,Obtains the current instant from the system clock.
java.time.Instant.now,Obtains the current instant from the specified clock.
java.time.Instant.ofEpochMilli,Obtains an instance ofInstantusing milliseconds from the  epoch of 1970-01-01T00:00:00Z.
java.time.Instant.ofEpochSecond,Obtains an instance ofInstantusing seconds from the  epoch of 1970-01-01T00:00:00Z.
java.time.Instant.ofEpochSecond,Obtains an instance ofInstantusing seconds from the  epoch of 1970-01-01T00:00:00Z and nanosecond fraction of second.
java.time.Instant.parse,Obtains an instance ofInstantfrom a text string such as2007-12-03T10:15:30.00Z.
java.time.Instant.plus,Returns a copy of this instant with the specified amount added.
java.time.Instant.plusMillis,Returns a copy of this instant with the specified duration in milliseconds added.
java.time.Instant.plusNanos,Returns a copy of this instant with the specified duration in nanoseconds added.
java.time.Instant.plusSeconds,Returns a copy of this instant with the specified duration in seconds added.
java.time.Instant.query,Queries this instant using the specified query.
java.time.Instant.range,Gets the range of valid values for the specified field.
java.time.Instant.toEpochMilli,Converts this instant to the number of milliseconds from the epoch  of 1970-01-01T00:00:00Z.
java.time.Instant.toString,A string representation of this instant using ISO-8601 representation.
java.time.Instant.truncatedTo,Returns a copy of thisInstanttruncated to the specified unit.
java.time.Instant.until,Calculates the amount of time until another instant in terms of the specified unit.
java.time.Instant.with,Returns an adjusted copy of this instant.
java.time.Instant.with,Returns a copy of this instant with the specified field set to a new value.
java.time.LocalDate.adjustInto,Adjusts the specified temporal object to have the same date as this object.
java.time.LocalDate.atStartOfDay,Combines this date with the time of midnight to create aLocalDateTimeat the start of this date.
java.time.LocalDate.atStartOfDay,Returns a zoned date-time from this date at the earliest valid time according  to the rules in the time-zone.
java.time.LocalDate.atTime,Combines this date with a time to create aLocalDateTime.
java.time.LocalDate.atTime,Combines this date with an offset time to create anOffsetDateTime.
java.time.LocalDate.compareTo,Compares this date to another date.
java.time.LocalDate.datesUntil,Returns a sequential ordered stream of dates.
java.time.LocalDate.datesUntil,Returns a sequential ordered stream of dates by given incremental step.
java.time.LocalDate.equals,Checks if this date is equal to another date.
java.time.LocalDate.format,Formats this date using the specified formatter.
java.time.LocalDate.from,Obtains an instance ofLocalDatefrom a temporal object.
java.time.LocalDate.get,Gets the value of the specified field from this date as anint.
java.time.LocalDate.getChronology,"Gets the chronology of this date, which is the ISO calendar system."
java.time.LocalDate.getDayOfMonth,Gets the day-of-month field.
java.time.LocalDate.getDayOfWeek,"Gets the day-of-week field, which is an enumDayOfWeek."
java.time.LocalDate.getDayOfYear,Gets the day-of-year field.
java.time.LocalDate.getEra,Gets the era applicable at this date.
java.time.LocalDate.getLong,Gets the value of the specified field from this date as along.
java.time.LocalDate.getMonth,Gets the month-of-year field using theMonthenum.
java.time.LocalDate.getMonthValue,Gets the month-of-year field from 1 to 12.
java.time.LocalDate.getYear,Gets the year field.
java.time.LocalDate.hashCode,A hash code for this date.
java.time.LocalDate.isAfter,Checks if this date is after the specified date.
java.time.LocalDate.isBefore,Checks if this date is before the specified date.
java.time.LocalDate.isEqual,Checks if this date is equal to the specified date.
java.time.LocalDate.isLeapYear,"Checks if the year is a leap year, according to the ISO proleptic  calendar system rules."
java.time.LocalDate.lengthOfMonth,Returns the length of the month represented by this date.
java.time.LocalDate.lengthOfYear,Returns the length of the year represented by this date.
java.time.LocalDate.minus,Returns a copy of this date with the specified amount subtracted.
java.time.LocalDate.minusDays,Returns a copy of thisLocalDatewith the specified number of days subtracted.
java.time.LocalDate.minusMonths,Returns a copy of thisLocalDatewith the specified number of months subtracted.
java.time.LocalDate.minusWeeks,Returns a copy of thisLocalDatewith the specified number of weeks subtracted.
java.time.LocalDate.minusYears,Returns a copy of thisLocalDatewith the specified number of years subtracted.
java.time.LocalDate.now,Obtains the current date from the system clock in the default time-zone.
java.time.LocalDate.now,Obtains the current date from the specified clock.
java.time.LocalDate.now,Obtains the current date from the system clock in the specified time-zone.
java.time.LocalDate.of,"Obtains an instance ofLocalDatefrom a year, month and day."
java.time.LocalDate.ofEpochDay,Obtains an instance ofLocalDatefrom the epoch day count.
java.time.LocalDate.ofInstant,Obtains an instance ofLocalDatefrom anInstantand zone ID.
java.time.LocalDate.ofYearDay,Obtains an instance ofLocalDatefrom a year and day-of-year.
java.time.LocalDate.parse,Obtains an instance ofLocalDatefrom a text string such as2007-12-03.
java.time.LocalDate.parse,Obtains an instance ofLocalDatefrom a text string using a specific formatter.
java.time.LocalDate.plus,Returns a copy of this date with the specified amount added.
java.time.LocalDate.plusDays,Returns a copy of thisLocalDatewith the specified number of days added.
java.time.LocalDate.plusMonths,Returns a copy of thisLocalDatewith the specified number of months added.
java.time.LocalDate.plusWeeks,Returns a copy of thisLocalDatewith the specified number of weeks added.
java.time.LocalDate.plusYears,Returns a copy of thisLocalDatewith the specified number of years added.
java.time.LocalDate.query,Queries this date using the specified query.
java.time.LocalDate.toEpochSecond,Converts thisLocalDateto the number of seconds since the epoch  of 1970-01-01T00:00:00Z.
java.time.LocalDate.toString,"Outputs this date as aString, such as2007-12-03."
java.time.LocalDate.until,Calculates the period between this date and another date as aPeriod.
java.time.LocalDate.until,Calculates the amount of time until another date in terms of the specified unit.
java.time.LocalDate.with,Returns an adjusted copy of this date.
java.time.LocalDate.with,Returns a copy of this date with the specified field set to a new value.
java.time.LocalDate.withDayOfMonth,Returns a copy of thisLocalDatewith the day-of-month altered.
java.time.LocalDate.withDayOfYear,Returns a copy of thisLocalDatewith the day-of-year altered.
java.time.LocalDate.withMonth,Returns a copy of thisLocalDatewith the month-of-year altered.
java.time.LocalDate.withYear,Returns a copy of thisLocalDatewith the year altered.
java.time.LocalDateTime.adjustInto,Adjusts the specified temporal object to have the same date and time as this object.
java.time.LocalDateTime.atOffset,Combines this date-time with an offset to create anOffsetDateTime.
java.time.LocalDateTime.atZone,Combines this date-time with a time-zone to create aZonedDateTime.
java.time.LocalDateTime.compareTo,Compares this date-time to another date-time.
java.time.LocalDateTime.equals,Checks if this date-time is equal to another date-time.
java.time.LocalDateTime.format,Formats this date-time using the specified formatter.
java.time.LocalDateTime.from,Obtains an instance ofLocalDateTimefrom a temporal object.
java.time.LocalDateTime.get,Gets the value of the specified field from this date-time as anint.
java.time.LocalDateTime.getHour,Gets the hour-of-day field.
java.time.LocalDateTime.getLong,Gets the value of the specified field from this date-time as along.
java.time.LocalDateTime.getMinute,Gets the minute-of-hour field.
java.time.LocalDateTime.getNano,Gets the nano-of-second field.
java.time.LocalDateTime.getSecond,Gets the second-of-minute field.
java.time.LocalDateTime.hashCode,A hash code for this date-time.
java.time.LocalDateTime.isAfter,Checks if this date-time is after the specified date-time.
java.time.LocalDateTime.isBefore,Checks if this date-time is before the specified date-time.
java.time.LocalDateTime.isEqual,Checks if this date-time is equal to the specified date-time.
java.time.LocalDateTime.minus,Returns a copy of this date-time with the specified amount subtracted.
java.time.LocalDateTime.minusDays,Returns a copy of thisLocalDateTimewith the specified number of days subtracted.
java.time.LocalDateTime.minusHours,Returns a copy of thisLocalDateTimewith the specified number of hours subtracted.
java.time.LocalDateTime.minusMinutes,Returns a copy of thisLocalDateTimewith the specified number of minutes subtracted.
java.time.LocalDateTime.minusMonths,Returns a copy of thisLocalDateTimewith the specified number of months subtracted.
java.time.LocalDateTime.minusNanos,Returns a copy of thisLocalDateTimewith the specified number of nanoseconds subtracted.
java.time.LocalDateTime.minusSeconds,Returns a copy of thisLocalDateTimewith the specified number of seconds subtracted.
java.time.LocalDateTime.minusWeeks,Returns a copy of thisLocalDateTimewith the specified number of weeks subtracted.
java.time.LocalDateTime.minusYears,Returns a copy of thisLocalDateTimewith the specified number of years subtracted.
java.time.LocalDateTime.now,Obtains the current date-time from the system clock in the default time-zone.
java.time.LocalDateTime.now,Obtains the current date-time from the specified clock.
java.time.LocalDateTime.now,Obtains the current date-time from the system clock in the specified time-zone.
java.time.LocalDateTime.of,"Obtains an instance ofLocalDateTimefrom year, month,  day, hour and minute, setting the second and nanosecond to zero."
java.time.LocalDateTime.of,"Obtains an instance ofLocalDateTimefrom year, month,  day, hour, minute and second, setting the nanosecond to zero."
java.time.LocalDateTime.of,"Obtains an instance ofLocalDateTimefrom year, month,  day, hour, minute, second and nanosecond."
java.time.LocalDateTime.of,Obtains an instance ofLocalDateTimefrom a date and time.
java.time.LocalDateTime.ofEpochSecond,Obtains an instance ofLocalDateTimeusing seconds from the  epoch of 1970-01-01T00:00:00Z.
java.time.LocalDateTime.ofInstant,Obtains an instance ofLocalDateTimefrom anInstantand zone ID.
java.time.LocalDateTime.parse,Obtains an instance ofLocalDateTimefrom a text string such as2007-12-03T10:15:30.
java.time.LocalDateTime.parse,Obtains an instance ofLocalDateTimefrom a text string using a specific formatter.
java.time.LocalDateTime.plus,Returns a copy of this date-time with the specified amount added.
java.time.LocalDateTime.plusDays,Returns a copy of thisLocalDateTimewith the specified number of days added.
java.time.LocalDateTime.plusHours,Returns a copy of thisLocalDateTimewith the specified number of hours added.
java.time.LocalDateTime.plusMinutes,Returns a copy of thisLocalDateTimewith the specified number of minutes added.
java.time.LocalDateTime.plusMonths,Returns a copy of thisLocalDateTimewith the specified number of months added.
java.time.LocalDateTime.plusNanos,Returns a copy of thisLocalDateTimewith the specified number of nanoseconds added.
java.time.LocalDateTime.plusSeconds,Returns a copy of thisLocalDateTimewith the specified number of seconds added.
java.time.LocalDateTime.plusWeeks,Returns a copy of thisLocalDateTimewith the specified number of weeks added.
java.time.LocalDateTime.plusYears,Returns a copy of thisLocalDateTimewith the specified number of years added.
java.time.LocalDateTime.query,Queries this date-time using the specified query.
java.time.LocalDateTime.toLocalDate,Gets theLocalDatepart of this date-time.
java.time.LocalDateTime.toLocalTime,Gets theLocalTimepart of this date-time.
java.time.LocalDateTime.toString,"Outputs this date-time as aString, such as2007-12-03T10:15:30."
java.time.LocalDateTime.truncatedTo,Returns a copy of thisLocalDateTimewith the time truncated.
java.time.LocalDateTime.until,Calculates the amount of time until another date-time in terms of the specified unit.
java.time.LocalDateTime.with,Returns an adjusted copy of this date-time.
java.time.LocalDateTime.with,Returns a copy of this date-time with the specified field set to a new value.
java.time.LocalDateTime.withDayOfMonth,Returns a copy of thisLocalDateTimewith the day-of-month altered.
java.time.LocalDateTime.withDayOfYear,Returns a copy of thisLocalDateTimewith the day-of-year altered.
java.time.LocalDateTime.withHour,Returns a copy of thisLocalDateTimewith the hour-of-day altered.
java.time.LocalDateTime.withMinute,Returns a copy of thisLocalDateTimewith the minute-of-hour altered.
java.time.LocalDateTime.withMonth,Returns a copy of thisLocalDateTimewith the month-of-year altered.
java.time.LocalDateTime.withNano,Returns a copy of thisLocalDateTimewith the nano-of-second altered.
java.time.LocalDateTime.withSecond,Returns a copy of thisLocalDateTimewith the second-of-minute altered.
java.time.LocalDateTime.withYear,Returns a copy of thisLocalDateTimewith the year altered.
java.time.LocalTime.adjustInto,Adjusts the specified temporal object to have the same time as this object.
java.time.LocalTime.atDate,Combines this time with a date to create aLocalDateTime.
java.time.LocalTime.atOffset,Combines this time with an offset to create anOffsetTime.
java.time.LocalTime.compareTo,Compares this time to another time.
java.time.LocalTime.equals,Checks if this time is equal to another time.
java.time.LocalTime.format,Formats this time using the specified formatter.
java.time.LocalTime.from,Obtains an instance ofLocalTimefrom a temporal object.
java.time.LocalTime.get,Gets the value of the specified field from this time as anint.
java.time.LocalTime.getLong,Gets the value of the specified field from this time as along.
java.time.LocalTime.hashCode,A hash code for this time.
java.time.LocalTime.isAfter,Checks if this time is after the specified time.
java.time.LocalTime.isBefore,Checks if this time is before the specified time.
java.time.LocalTime.minus,Returns a copy of this time with the specified amount subtracted.
java.time.LocalTime.minusHours,Returns a copy of thisLocalTimewith the specified number of hours subtracted.
java.time.LocalTime.minusMinutes,Returns a copy of thisLocalTimewith the specified number of minutes subtracted.
java.time.LocalTime.minusNanos,Returns a copy of thisLocalTimewith the specified number of nanoseconds subtracted.
java.time.LocalTime.minusSeconds,Returns a copy of thisLocalTimewith the specified number of seconds subtracted.
java.time.LocalTime.now,Obtains the current time from the system clock in the default time-zone.
java.time.LocalTime.now,Obtains the current time from the specified clock.
java.time.LocalTime.now,Obtains the current time from the system clock in the specified time-zone.
java.time.LocalTime.of,Obtains an instance ofLocalTimefrom an hour and minute.
java.time.LocalTime.of,"Obtains an instance ofLocalTimefrom an hour, minute and second."
java.time.LocalTime.of,"Obtains an instance ofLocalTimefrom an hour, minute, second and nanosecond."
java.time.LocalTime.ofInstant,Obtains an instance ofLocalTimefrom anInstantand zone ID.
java.time.LocalTime.ofNanoOfDay,Obtains an instance ofLocalTimefrom a nanos-of-day value.
java.time.LocalTime.ofSecondOfDay,Obtains an instance ofLocalTimefrom a second-of-day value.
java.time.LocalTime.parse,Obtains an instance ofLocalTimefrom a text string such as10:15.
java.time.LocalTime.parse,Obtains an instance ofLocalTimefrom a text string using a specific formatter.
java.time.LocalTime.plus,Returns a copy of this time with the specified amount added.
java.time.LocalTime.plusHours,Returns a copy of thisLocalTimewith the specified number of hours added.
java.time.LocalTime.plusMinutes,Returns a copy of thisLocalTimewith the specified number of minutes added.
java.time.LocalTime.plusNanos,Returns a copy of thisLocalTimewith the specified number of nanoseconds added.
java.time.LocalTime.plusSeconds,Returns a copy of thisLocalTimewith the specified number of seconds added.
java.time.LocalTime.query,Queries this time using the specified query.
java.time.LocalTime.toEpochSecond,Converts thisLocalTimeto the number of seconds since the epoch  of 1970-01-01T00:00:00Z.
java.time.LocalTime.toNanoOfDay,"Extracts the time as nanos of day,  from0to24 * 60 * 60 * 1,000,000,000 - 1."
java.time.LocalTime.toSecondOfDay,"Extracts the time as seconds of day,  from0to24 * 60 * 60 - 1."
java.time.LocalTime.toString,"Outputs this time as aString, such as10:15."
java.time.LocalTime.truncatedTo,Returns a copy of thisLocalTimewith the time truncated.
java.time.LocalTime.until,Calculates the amount of time until another time in terms of the specified unit.
java.time.LocalTime.with,Returns an adjusted copy of this time.
java.time.LocalTime.with,Returns a copy of this time with the specified field set to a new value.
java.time.LocalTime.withHour,Returns a copy of thisLocalTimewith the hour-of-day altered.
java.time.LocalTime.withMinute,Returns a copy of thisLocalTimewith the minute-of-hour altered.
java.time.LocalTime.withNano,Returns a copy of thisLocalTimewith the nano-of-second altered.
java.time.LocalTime.withSecond,Returns a copy of thisLocalTimewith the second-of-minute altered.
java.time.MonthDay.adjustInto,Adjusts the specified temporal object to have this month-day.
java.time.MonthDay.atYear,Combines this month-day with a year to create aLocalDate.
java.time.MonthDay.compareTo,Compares this month-day to another month-day.
java.time.MonthDay.equals,Checks if this month-day is equal to another month-day.
java.time.MonthDay.format,Formats this month-day using the specified formatter.
java.time.MonthDay.from,Obtains an instance ofMonthDayfrom a temporal object.
java.time.MonthDay.get,Gets the value of the specified field from this month-day as anint.
java.time.MonthDay.getLong,Gets the value of the specified field from this month-day as along.
java.time.MonthDay.hashCode,A hash code for this month-day.
java.time.MonthDay.isAfter,Checks if this month-day is after the specified month-day.
java.time.MonthDay.isBefore,Checks if this month-day is before the specified month-day.
java.time.MonthDay.isValidYear,Checks if the year is valid for this month-day.
java.time.MonthDay.now,Obtains the current month-day from the system clock in the default time-zone.
java.time.MonthDay.now,Obtains the current month-day from the specified clock.
java.time.MonthDay.now,Obtains the current month-day from the system clock in the specified time-zone.
java.time.MonthDay.of,Obtains an instance ofMonthDay.
java.time.MonthDay.parse,Obtains an instance ofMonthDayfrom a text string such as--12-03.
java.time.MonthDay.parse,Obtains an instance ofMonthDayfrom a text string using a specific formatter.
java.time.MonthDay.query,Queries this month-day using the specified query.
java.time.MonthDay.toString,"Outputs this month-day as aString, such as--12-03."
java.time.MonthDay.with,Returns a copy of thisMonthDaywith the month-of-year altered.
java.time.MonthDay.withDayOfMonth,Returns a copy of thisMonthDaywith the day-of-month altered.
java.time.OffsetDateTime.adjustInto,"Adjusts the specified temporal object to have the same offset, date  and time as this object."
java.time.OffsetDateTime.atZoneSameInstant,Combines this date-time with a time-zone to create aZonedDateTimeensuring that the result has the same instant.
java.time.OffsetDateTime.atZoneSimilarLocal,Combines this date-time with a time-zone to create aZonedDateTimetrying to keep the same local date and time.
java.time.OffsetDateTime.from,Obtains an instance ofOffsetDateTimefrom a temporal object.
java.time.OffsetDateTime.getOffset,"Gets the zone offset, such as '+01:00'."
java.time.OffsetDateTime.isAfter,Checks if the instant of this date-time is after that of the specified date-time.
java.time.OffsetDateTime.isBefore,Checks if the instant of this date-time is before that of the specified date-time.
java.time.OffsetDateTime.isEqual,Checks if the instant of this date-time is equal to that of the specified date-time.
java.time.OffsetDateTime.minusDays,Returns a copy of thisOffsetDateTimewith the specified number of days subtracted.
java.time.OffsetDateTime.minusHours,Returns a copy of thisOffsetDateTimewith the specified number of hours subtracted.
java.time.OffsetDateTime.minusMinutes,Returns a copy of thisOffsetDateTimewith the specified number of minutes subtracted.
java.time.OffsetDateTime.minusMonths,Returns a copy of thisOffsetDateTimewith the specified number of months subtracted.
java.time.OffsetDateTime.minusNanos,Returns a copy of thisOffsetDateTimewith the specified number of nanoseconds subtracted.
java.time.OffsetDateTime.minusSeconds,Returns a copy of thisOffsetDateTimewith the specified number of seconds subtracted.
java.time.OffsetDateTime.minusWeeks,Returns a copy of thisOffsetDateTimewith the specified number of weeks subtracted.
java.time.OffsetDateTime.minusYears,Returns a copy of thisOffsetDateTimewith the specified number of years subtracted.
java.time.OffsetDateTime.of,"Obtains an instance ofOffsetDateTimefrom a year, month, day,  hour, minute, second, nanosecond and offset."
java.time.OffsetDateTime.of,"Obtains an instance ofOffsetDateTimefrom a date, time and offset."
java.time.OffsetDateTime.of,Obtains an instance ofOffsetDateTimefrom a date-time and offset.
java.time.OffsetDateTime.ofInstant,Obtains an instance ofOffsetDateTimefrom anInstantand zone ID.
java.time.OffsetDateTime.parse,Obtains an instance ofOffsetDateTimefrom a text string  such as2007-12-03T10:15:30+01:00.
java.time.OffsetDateTime.parse,Obtains an instance ofOffsetDateTimefrom a text string using a specific formatter.
java.time.OffsetDateTime.plusDays,Returns a copy of this OffsetDateTime with the specified number of days added.
java.time.OffsetDateTime.plusHours,Returns a copy of thisOffsetDateTimewith the specified number of hours added.
java.time.OffsetDateTime.plusMinutes,Returns a copy of thisOffsetDateTimewith the specified number of minutes added.
java.time.OffsetDateTime.plusMonths,Returns a copy of thisOffsetDateTimewith the specified number of months added.
java.time.OffsetDateTime.plusNanos,Returns a copy of thisOffsetDateTimewith the specified number of nanoseconds added.
java.time.OffsetDateTime.plusSeconds,Returns a copy of thisOffsetDateTimewith the specified number of seconds added.
java.time.OffsetDateTime.plusWeeks,Returns a copy of this OffsetDateTime with the specified number of weeks added.
java.time.OffsetDateTime.plusYears,Returns a copy of thisOffsetDateTimewith the specified number of years added.
java.time.OffsetDateTime.timeLineOrder,Gets a comparator that compares twoOffsetDateTimeinstances  based solely on the instant.
java.time.OffsetDateTime.toEpochSecond,Converts this date-time to the number of seconds from the epoch of 1970-01-01T00:00:00Z.
java.time.OffsetDateTime.toInstant,Converts this date-time to anInstant.
java.time.OffsetDateTime.toLocalDateTime,Gets theLocalDateTimepart of this date-time.
java.time.OffsetDateTime.toOffsetTime,Converts this date-time to anOffsetTime.
java.time.OffsetDateTime.toString,"Outputs this date-time as aString, such as2007-12-03T10:15:30+01:00."
java.time.OffsetDateTime.toZonedDateTime,Converts this date-time to aZonedDateTimeusing the offset as the zone ID.
java.time.OffsetDateTime.truncatedTo,Returns a copy of thisOffsetDateTimewith the time truncated.
java.time.OffsetDateTime.withDayOfMonth,Returns a copy of thisOffsetDateTimewith the day-of-month altered.
java.time.OffsetDateTime.withDayOfYear,Returns a copy of thisOffsetDateTimewith the day-of-year altered.
java.time.OffsetDateTime.withHour,Returns a copy of thisOffsetDateTimewith the hour-of-day altered.
java.time.OffsetDateTime.withMinute,Returns a copy of thisOffsetDateTimewith the minute-of-hour altered.
java.time.OffsetDateTime.withMonth,Returns a copy of thisOffsetDateTimewith the month-of-year altered.
java.time.OffsetDateTime.withNano,Returns a copy of thisOffsetDateTimewith the nano-of-second altered.
java.time.OffsetDateTime.withOffsetSameInstant,Returns a copy of thisOffsetDateTimewith the specified offset ensuring  that the result is at the same instant.
java.time.OffsetDateTime.withOffsetSameLocal,Returns a copy of thisOffsetDateTimewith the specified offset ensuring  that the result has the same local date-time.
java.time.OffsetDateTime.withSecond,Returns a copy of thisOffsetDateTimewith the second-of-minute altered.
java.time.OffsetDateTime.withYear,Returns a copy of thisOffsetDateTimewith the year altered.
java.time.OffsetTime.adjustInto,Adjusts the specified temporal object to have the same offset and time  as this object.
java.time.OffsetTime.atDate,Combines this time with a date to create anOffsetDateTime.
java.time.OffsetTime.compareTo,Compares thisOffsetTimeto another time.
java.time.OffsetTime.from,Obtains an instance ofOffsetTimefrom a temporal object.
java.time.OffsetTime.isAfter,Checks if the instant of thisOffsetTimeis after that of the  specified time applying both times to a common date.
java.time.OffsetTime.isBefore,Checks if the instant of thisOffsetTimeis before that of the  specified time applying both times to a common date.
java.time.OffsetTime.isEqual,Checks if the instant of thisOffsetTimeis equal to that of the  specified time applying both times to a common date.
java.time.OffsetTime.minusHours,Returns a copy of thisOffsetTimewith the specified number of hours subtracted.
java.time.OffsetTime.minusMinutes,Returns a copy of thisOffsetTimewith the specified number of minutes subtracted.
java.time.OffsetTime.minusNanos,Returns a copy of thisOffsetTimewith the specified number of nanoseconds subtracted.
java.time.OffsetTime.minusSeconds,Returns a copy of thisOffsetTimewith the specified number of seconds subtracted.
java.time.OffsetTime.of,"Obtains an instance ofOffsetTimefrom an hour, minute, second and nanosecond."
java.time.OffsetTime.of,Obtains an instance ofOffsetTimefrom a local time and an offset.
java.time.OffsetTime.ofInstant,Obtains an instance ofOffsetTimefrom anInstantand zone ID.
java.time.OffsetTime.parse,Obtains an instance ofOffsetTimefrom a text string such as10:15:30+01:00.
java.time.OffsetTime.parse,Obtains an instance ofOffsetTimefrom a text string using a specific formatter.
java.time.OffsetTime.plusHours,Returns a copy of thisOffsetTimewith the specified number of hours added.
java.time.OffsetTime.plusMinutes,Returns a copy of thisOffsetTimewith the specified number of minutes added.
java.time.OffsetTime.plusNanos,Returns a copy of thisOffsetTimewith the specified number of nanoseconds added.
java.time.OffsetTime.plusSeconds,Returns a copy of thisOffsetTimewith the specified number of seconds added.
java.time.OffsetTime.toEpochSecond,Converts thisOffsetTimeto the number of seconds since the epoch  of 1970-01-01T00:00:00Z.
java.time.OffsetTime.toString,"Outputs this time as aString, such as10:15:30+01:00."
java.time.OffsetTime.truncatedTo,Returns a copy of thisOffsetTimewith the time truncated.
java.time.OffsetTime.withHour,Returns a copy of thisOffsetTimewith the hour-of-day altered.
java.time.OffsetTime.withMinute,Returns a copy of thisOffsetTimewith the minute-of-hour altered.
java.time.OffsetTime.withNano,Returns a copy of thisOffsetTimewith the nano-of-second altered.
java.time.OffsetTime.withOffsetSameInstant,Returns a copy of thisOffsetTimewith the specified offset ensuring  that the result is at the same instant on an implied day.
java.time.OffsetTime.withOffsetSameLocal,Returns a copy of thisOffsetTimewith the specified offset ensuring  that the result has the same local time.
java.time.OffsetTime.withSecond,Returns a copy of thisOffsetTimewith the second-of-minute altered.
java.time.Period.addTo,Adds this period to the specified temporal object.
java.time.Period.between,"Obtains aPeriodconsisting of the number of years, months,  and days between two dates."
java.time.Period.equals,Checks if this period is equal to another period.
java.time.Period.from,Obtains an instance ofPeriodfrom a temporal amount.
java.time.Period.getChronology,"Gets the chronology of this period, which is the ISO calendar system."
java.time.Period.getDays,Gets the amount of days of this period.
java.time.Period.getMonths,Gets the amount of months of this period.
java.time.Period.getUnits,Gets the set of units supported by this period.
java.time.Period.getYears,Gets the amount of years of this period.
java.time.Period.hashCode,A hash code for this period.
java.time.Period.isNegative,Checks if any of the three units of this period are negative.
java.time.Period.isZero,Checks if all three units of this period are zero.
java.time.Period.minus,Returns a copy of this period with the specified period subtracted.
java.time.Period.minusDays,Returns a copy of this period with the specified days subtracted.
java.time.Period.minusMonths,Returns a copy of this period with the specified months subtracted.
java.time.Period.minusYears,Returns a copy of this period with the specified years subtracted.
java.time.Period.multipliedBy,Returns a new instance with each element in this period multiplied  by the specified scalar.
java.time.Period.negated,Returns a new instance with each amount in this period negated.
java.time.Period.normalized,Returns a copy of this period with the years and months normalized.
java.time.Period.of,"Obtains aPeriodrepresenting a number of years, months and days."
java.time.Period.ofDays,Obtains aPeriodrepresenting a number of days.
java.time.Period.ofMonths,Obtains aPeriodrepresenting a number of months.
java.time.Period.ofWeeks,Obtains aPeriodrepresenting a number of weeks.
java.time.Period.ofYears,Obtains aPeriodrepresenting a number of years.
java.time.Period.parse,Obtains aPeriodfrom a text string such asPnYnMnD.
java.time.Period.plus,Returns a copy of this period with the specified period added.
java.time.Period.plusDays,Returns a copy of this period with the specified days added.
java.time.Period.plusMonths,Returns a copy of this period with the specified months added.
java.time.Period.plusYears,Returns a copy of this period with the specified years added.
java.time.Period.subtractFrom,Subtracts this period from the specified temporal object.
java.time.Period.toString,"Outputs this period as aString, such asP6Y3M1D."
java.time.Period.toTotalMonths,Gets the total number of months in this period.
java.time.Period.withDays,Returns a copy of this period with the specified amount of days.
java.time.Period.withMonths,Returns a copy of this period with the specified amount of months.
java.time.Period.withYears,Returns a copy of this period with the specified amount of years.
java.time.Year.adjustInto,Adjusts the specified temporal object to have this year.
java.time.Year.atDay,Combines this year with a day-of-year to create aLocalDate.
java.time.Year.atMonth,Combines this year with a month to create aYearMonth.
java.time.Year.atMonthDay,Combines this year with a month-day to create aLocalDate.
java.time.Year.compareTo,Compares this year to another year.
java.time.Year.equals,Checks if this year is equal to another year.
java.time.Year.format,Formats this year using the specified formatter.
java.time.Year.from,Obtains an instance ofYearfrom a temporal object.
java.time.Year.get,Gets the value of the specified field from this year as anint.
java.time.Year.getLong,Gets the value of the specified field from this year as along.
java.time.Year.getValue,Gets the year value.
java.time.Year.hashCode,A hash code for this year.
java.time.Year.isAfter,Checks if this year is after the specified year.
java.time.Year.isBefore,Checks if this year is before the specified year.
java.time.Year.isValidMonthDay,Checks if the month-day is valid for this year.
java.time.Year.length,Gets the length of this year in days.
java.time.Year.minus,Returns a copy of this year with the specified amount subtracted.
java.time.Year.minusYears,Returns a copy of thisYearwith the specified number of years subtracted.
java.time.Year.now,Obtains the current year from the system clock in the default time-zone.
java.time.Year.now,Obtains the current year from the specified clock.
java.time.Year.now,Obtains the current year from the system clock in the specified time-zone.
java.time.Year.of,Obtains an instance ofYear.
java.time.Year.parse,Obtains an instance ofYearfrom a text string such as2007.
java.time.Year.parse,Obtains an instance ofYearfrom a text string using a specific formatter.
java.time.Year.plus,Returns a copy of this year with the specified amount added.
java.time.Year.plusYears,Returns a copy of thisYearwith the specified number of years added.
java.time.Year.query,Queries this year using the specified query.
java.time.Year.toString,Outputs this year as aString.
java.time.Year.until,Calculates the amount of time until another year in terms of the specified unit.
java.time.Year.with,Returns an adjusted copy of this year.
java.time.Year.with,Returns a copy of this year with the specified field set to a new value.
java.time.YearMonth.adjustInto,Adjusts the specified temporal object to have this year-month.
java.time.YearMonth.atDay,Combines this year-month with a day-of-month to create aLocalDate.
java.time.YearMonth.atEndOfMonth,Returns aLocalDateat the end of the month.
java.time.YearMonth.compareTo,Compares this year-month to another year-month.
java.time.YearMonth.equals,Checks if this year-month is equal to another year-month.
java.time.YearMonth.format,Formats this year-month using the specified formatter.
java.time.YearMonth.from,Obtains an instance ofYearMonthfrom a temporal object.
java.time.YearMonth.get,Gets the value of the specified field from this year-month as anint.
java.time.YearMonth.getLong,Gets the value of the specified field from this year-month as along.
java.time.YearMonth.hashCode,A hash code for this year-month.
java.time.YearMonth.isAfter,Checks if this year-month is after the specified year-month.
java.time.YearMonth.isBefore,Checks if this year-month is before the specified year-month.
java.time.YearMonth.isValidDay,Checks if the day-of-month is valid for this year-month.
java.time.YearMonth.lengthOfMonth,"Returns the length of the month, taking account of the year."
java.time.YearMonth.lengthOfYear,Returns the length of the year.
java.time.YearMonth.minus,Returns a copy of this year-month with the specified amount subtracted.
java.time.YearMonth.minusMonths,Returns a copy of thisYearMonthwith the specified number of months subtracted.
java.time.YearMonth.minusYears,Returns a copy of thisYearMonthwith the specified number of years subtracted.
java.time.YearMonth.now,Obtains the current year-month from the system clock in the default time-zone.
java.time.YearMonth.now,Obtains the current year-month from the specified clock.
java.time.YearMonth.now,Obtains the current year-month from the system clock in the specified time-zone.
java.time.YearMonth.of,Obtains an instance ofYearMonthfrom a year and month.
java.time.YearMonth.parse,Obtains an instance ofYearMonthfrom a text string such as2007-12.
java.time.YearMonth.parse,Obtains an instance ofYearMonthfrom a text string using a specific formatter.
java.time.YearMonth.plus,Returns a copy of this year-month with the specified amount added.
java.time.YearMonth.plusMonths,Returns a copy of thisYearMonthwith the specified number of months added.
java.time.YearMonth.plusYears,Returns a copy of thisYearMonthwith the specified number of years added.
java.time.YearMonth.query,Queries this year-month using the specified query.
java.time.YearMonth.toString,"Outputs this year-month as aString, such as2007-12."
java.time.YearMonth.until,Calculates the amount of time until another year-month in terms of the specified unit.
java.time.YearMonth.with,Returns an adjusted copy of this year-month.
java.time.YearMonth.with,Returns a copy of this year-month with the specified field set to a new value.
java.time.YearMonth.withMonth,Returns a copy of thisYearMonthwith the month-of-year altered.
java.time.YearMonth.withYear,Returns a copy of thisYearMonthwith the year altered.
java.time.ZonedDateTime.from,Obtains an instance ofZonedDateTimefrom a temporal object.
java.time.ZonedDateTime.getZone,"Gets the time-zone, such as 'Europe/Paris'."
java.time.ZonedDateTime.minusDays,Returns a copy of thisZonedDateTimewith the specified number of days subtracted.
java.time.ZonedDateTime.minusHours,Returns a copy of thisZonedDateTimewith the specified number of hours subtracted.
java.time.ZonedDateTime.minusMinutes,Returns a copy of thisZonedDateTimewith the specified number of minutes subtracted.
java.time.ZonedDateTime.minusMonths,Returns a copy of thisZonedDateTimewith the specified number of months subtracted.
java.time.ZonedDateTime.minusNanos,Returns a copy of thisZonedDateTimewith the specified number of nanoseconds subtracted.
java.time.ZonedDateTime.minusSeconds,Returns a copy of thisZonedDateTimewith the specified number of seconds subtracted.
java.time.ZonedDateTime.minusWeeks,Returns a copy of thisZonedDateTimewith the specified number of weeks subtracted.
java.time.ZonedDateTime.minusYears,Returns a copy of thisZonedDateTimewith the specified number of years subtracted.
java.time.ZonedDateTime.of,"Obtains an instance ofZonedDateTimefrom a year, month, day,  hour, minute, second, nanosecond and time-zone."
java.time.ZonedDateTime.of,Obtains an instance ofZonedDateTimefrom a local date and time.
java.time.ZonedDateTime.of,Obtains an instance ofZonedDateTimefrom a local date-time.
java.time.ZonedDateTime.ofInstant,Obtains an instance ofZonedDateTimefrom anInstant.
java.time.ZonedDateTime.ofInstant,Obtains an instance ofZonedDateTimefrom the instant formed by combining  the local date-time and offset.
java.time.ZonedDateTime.ofLocal,Obtains an instance ofZonedDateTimefrom a local date-time  using the preferred offset if possible.
java.time.ZonedDateTime.ofStrict,"Obtains an instance ofZonedDateTimestrictly validating the  combination of local date-time, offset and zone ID."
java.time.ZonedDateTime.parse,Obtains an instance ofZonedDateTimefrom a text string such as2007-12-03T10:15:30+01:00[Europe/Paris].
java.time.ZonedDateTime.parse,Obtains an instance ofZonedDateTimefrom a text string using a specific formatter.
java.time.ZonedDateTime.plusDays,Returns a copy of thisZonedDateTimewith the specified number of days added.
java.time.ZonedDateTime.plusHours,Returns a copy of thisZonedDateTimewith the specified number of hours added.
java.time.ZonedDateTime.plusMinutes,Returns a copy of thisZonedDateTimewith the specified number of minutes added.
java.time.ZonedDateTime.plusMonths,Returns a copy of thisZonedDateTimewith the specified number of months added.
java.time.ZonedDateTime.plusNanos,Returns a copy of thisZonedDateTimewith the specified number of nanoseconds added.
java.time.ZonedDateTime.plusSeconds,Returns a copy of thisZonedDateTimewith the specified number of seconds added.
java.time.ZonedDateTime.plusWeeks,Returns a copy of thisZonedDateTimewith the specified number of weeks added.
java.time.ZonedDateTime.plusYears,Returns a copy of thisZonedDateTimewith the specified number of years added.
java.time.ZonedDateTime.toOffsetDateTime,Converts this date-time to anOffsetDateTime.
java.time.ZonedDateTime.toString,"Outputs this date-time as aString, such as2007-12-03T10:15:30+01:00[Europe/Paris]."
java.time.ZonedDateTime.truncatedTo,Returns a copy of thisZonedDateTimewith the time truncated.
java.time.ZonedDateTime.withDayOfMonth,Returns a copy of thisZonedDateTimewith the day-of-month altered.
java.time.ZonedDateTime.withDayOfYear,Returns a copy of thisZonedDateTimewith the day-of-year altered.
java.time.ZonedDateTime.withEarlierOffsetAtOverlap,Returns a copy of this date-time changing the zone offset to the  earlier of the two valid offsets at a local time-line overlap.
java.time.ZonedDateTime.withFixedOffsetZone,Returns a copy of this date-time with the zone ID set to the offset.
java.time.ZonedDateTime.withHour,Returns a copy of thisZonedDateTimewith the hour-of-day altered.
java.time.ZonedDateTime.withLaterOffsetAtOverlap,Returns a copy of this date-time changing the zone offset to the  later of the two valid offsets at a local time-line overlap.
java.time.ZonedDateTime.withMinute,Returns a copy of thisZonedDateTimewith the minute-of-hour altered.
java.time.ZonedDateTime.withMonth,Returns a copy of thisZonedDateTimewith the month-of-year altered.
java.time.ZonedDateTime.withNano,Returns a copy of thisZonedDateTimewith the nano-of-second altered.
java.time.ZonedDateTime.withSecond,Returns a copy of thisZonedDateTimewith the second-of-minute altered.
java.time.ZonedDateTime.withYear,Returns a copy of thisZonedDateTimewith the year altered.
java.time.ZonedDateTime.withZoneSameInstant,"Returns a copy of this date-time with a different time-zone,  retaining the instant."
java.time.ZonedDateTime.withZoneSameLocal,"Returns a copy of this date-time with a different time-zone,  retaining the local date-time if possible."
java.time.ZoneId.equals,Checks if this time-zone ID is equal to another time-zone ID.
java.time.ZoneId.from,Obtains an instance ofZoneIdfrom a temporal object.
java.time.ZoneId.getAvailableZoneIds,Gets the set of available zone IDs.
java.time.ZoneId.getDisplayName,"Gets the textual representation of the zone, such as 'British Time' or  '+02:00'."
java.time.ZoneId.getId,Gets the unique time-zone ID.
java.time.ZoneId.getRules,Gets the time-zone rules for this ID allowing calculations to be performed.
java.time.ZoneId.hashCode,A hash code for this time-zone ID.
java.time.ZoneId.normalized,"Normalizes the time-zone ID, returning aZoneOffsetwhere possible."
java.time.ZoneId.of,Obtains an instance ofZoneIdfrom an ID ensuring that the  ID is valid and available for use.
java.time.ZoneId.of,Obtains an instance ofZoneIdusing its ID using a map  of aliases to supplement the standard zone IDs.
java.time.ZoneId.ofOffset,Obtains an instance ofZoneIdwrapping an offset.
java.time.ZoneId.systemDefault,Gets the system default time-zone.
java.time.ZoneId.toString,"Outputs this zone as aString, using the ID."
java.time.ZoneOffset.adjustInto,Adjusts the specified temporal object to have the same offset as this object.
java.time.ZoneOffset.compareTo,Compares this offset to another offset in descending order.
java.time.ZoneOffset.equals,Checks if this offset is equal to another offset.
java.time.ZoneOffset.from,Obtains an instance ofZoneOffsetfrom a temporal object.
java.time.ZoneOffset.get,Gets the value of the specified field from this offset as anint.
java.time.ZoneOffset.getId,Gets the normalized zone offset ID.
java.time.ZoneOffset.getLong,Gets the value of the specified field from this offset as along.
java.time.ZoneOffset.getRules,Gets the associated time-zone rules.
java.time.ZoneOffset.getTotalSeconds,Gets the total zone offset in seconds.
java.time.ZoneOffset.hashCode,A hash code for this offset.
java.time.ZoneOffset.of,Obtains an instance ofZoneOffsetusing the ID.
java.time.ZoneOffset.ofHours,Obtains an instance ofZoneOffsetusing an offset in hours.
java.time.ZoneOffset.ofHoursMinutes,Obtains an instance ofZoneOffsetusing an offset in  hours and minutes.
java.time.ZoneOffset.ofHoursMinutesSeconds,"Obtains an instance ofZoneOffsetusing an offset in  hours, minutes and seconds."
java.time.ZoneOffset.ofTotalSeconds,Obtains an instance ofZoneOffsetspecifying the total offset in seconds
java.time.ZoneOffset.query,Queries this offset using the specified query.
java.time.ZoneOffset.toString,"Outputs this offset as aString, using the normalized ID."
java.time.chrono.AbstractChronology.compareTo,Compares this chronology to another chronology.
java.time.chrono.AbstractChronology.equals,Checks if this chronology is equal to another chronology.
java.time.chrono.AbstractChronology.hashCode,A hash code for this chronology.
java.time.chrono.AbstractChronology.resolveDate,Resolves parsedChronoFieldvalues into a date during parsing.
java.time.chrono.AbstractChronology.toString,"Outputs this chronology as aString, using the chronology ID."
java.time.chrono.HijrahChronology.date,"Obtains a local date in Hijrah calendar system from the  proleptic-year, month-of-year and day-of-month fields."
java.time.chrono.HijrahChronology.date,"Obtains a local date in Hijrah calendar system from the  era, year-of-era, month-of-year and day-of-month fields."
java.time.chrono.HijrahChronology.date,Obtains a local date in this chronology from another temporal object.
java.time.chrono.HijrahChronology.dateEpochDay,Obtains a local date in the Hijrah calendar system from the epoch-day.
java.time.chrono.HijrahChronology.dateNow,Obtains the current local date in this chronology from the system clock in the default time-zone.
java.time.chrono.HijrahChronology.dateNow,Obtains the current local date in this chronology from the specified clock.
java.time.chrono.HijrahChronology.dateNow,Obtains the current local date in this chronology from the system clock in the specified time-zone.
java.time.chrono.HijrahChronology.dateYearDay,Obtains a local date in Hijrah calendar system from the  proleptic-year and day-of-year fields.
java.time.chrono.HijrahChronology.dateYearDay,"Obtains a local date in Hijrah calendar system from the  era, year-of-era and day-of-year fields."
java.time.chrono.HijrahChronology.eraOf,Creates the HijrahEra object from the numeric value.
java.time.chrono.HijrahChronology.eras,Gets the list of eras for the chronology.
java.time.chrono.HijrahChronology.getCalendarType,Gets the calendar type of the Islamic calendar.
java.time.chrono.HijrahChronology.getId,Gets the ID of the chronology.
java.time.chrono.HijrahChronology.isLeapYear,Checks if the specified year is a leap year.
java.time.chrono.HijrahChronology.localDateTime,Obtains a local date-time in this chronology from another temporal object.
java.time.chrono.HijrahChronology.prolepticYear,Calculates the proleptic-year given the era and year-of-era.
java.time.chrono.HijrahChronology.zonedDateTime,Obtains aChronoZonedDateTimein this chronology from anInstant.
java.time.chrono.HijrahChronology.zonedDateTime,Obtains aChronoZonedDateTimein this chronology from another temporal object.
java.time.chrono.HijrahDate.atTime,Combines this date with a time to create aChronoLocalDateTime.
java.time.chrono.HijrahDate.equals,"Compares this date to another date, including the chronology."
java.time.chrono.HijrahDate.from,Obtains aHijrahDateof the Islamic Umm Al-Qura calendar from a temporal object.
java.time.chrono.HijrahDate.getChronology,"Gets the chronology of this date, which is the Hijrah calendar system."
java.time.chrono.HijrahDate.getLong,Gets the value of the specified field as along.
java.time.chrono.HijrahDate.isLeapYear,"Checks if the year is a leap year, according to the Hijrah calendar system rules."
java.time.chrono.HijrahDate.minus,Returns an object of the same type as this object with the specified period subtracted.
java.time.chrono.HijrahDate.minus,Returns an object of the same type as this object with an amount subtracted.
java.time.chrono.HijrahDate.now,Obtains the currentHijrahDateof the Islamic Umm Al-Qura calendar  in the default time-zone.
java.time.chrono.HijrahDate.now,Obtains the currentHijrahDateof the Islamic Umm Al-Qura calendar  from the specified clock.
java.time.chrono.HijrahDate.now,Obtains the currentHijrahDateof the Islamic Umm Al-Qura calendar  in the specified time-zone.
java.time.chrono.HijrahDate.of,"Obtains aHijrahDateof the Islamic Umm Al-Qura calendar  from the proleptic-year, month-of-year and day-of-month fields."
java.time.chrono.HijrahDate.plus,Returns an object of the same type as this object with the specified period added.
java.time.chrono.HijrahDate.plus,Returns an object of the same type as this object with an amount added.
java.time.chrono.HijrahDate.until,Calculates the period between this date and another date as aChronoPeriod.
java.time.chrono.HijrahDate.with,Returns an adjusted object of the same type as this object with the adjustment made.
java.time.chrono.HijrahDate.with,Returns an object of the same type as this object with the specified field altered.
java.time.chrono.HijrahDate.withVariant,Returns aHijrahDatewith the Chronology requested.
java.time.chrono.IsoChronology.date,"Obtains an ISO local date from the proleptic-year, month-of-year  and day-of-month fields."
java.time.chrono.IsoChronology.date,"Obtains an ISO local date from the era, year-of-era, month-of-year  and day-of-month fields."
java.time.chrono.IsoChronology.date,Obtains an ISO local date from another date-time object.
java.time.chrono.IsoChronology.dateEpochDay,Obtains an ISO local date from the epoch-day.
java.time.chrono.IsoChronology.dateNow,Obtains the current ISO local date from the system clock in the default time-zone.
java.time.chrono.IsoChronology.dateNow,Obtains the current ISO local date from the specified clock.
java.time.chrono.IsoChronology.dateNow,Obtains the current ISO local date from the system clock in the specified time-zone.
java.time.chrono.IsoChronology.dateYearDay,Obtains an ISO local date from the proleptic-year and day-of-year fields.
java.time.chrono.IsoChronology.dateYearDay,"Obtains an ISO local date from the era, year-of-era and day-of-year fields."
java.time.chrono.IsoChronology.epochSecond,Gets the number of seconds from the epoch of 1970-01-01T00:00:00Z.
java.time.chrono.IsoChronology.eraOf,Creates the chronology era object from the numeric value.
java.time.chrono.IsoChronology.getCalendarType,Gets the calendar type of the underlying calendar system - 'iso8601'.
java.time.chrono.IsoChronology.getId,Gets the ID of the chronology - 'ISO'.
java.time.chrono.IsoChronology.localDateTime,Obtains an ISO local date-time from another date-time object.
java.time.chrono.IsoChronology.period,"Obtains a period for this chronology based on years, months and days."
java.time.chrono.IsoChronology.zonedDateTime,Obtains an ISO zoned date-time in this chronology from anInstant.
java.time.chrono.IsoChronology.zonedDateTime,Obtains an ISO zoned date-time from another date-time object.
java.time.chrono.JapaneseChronology.date,"Obtains a local date in Japanese calendar system from the  proleptic-year, month-of-year and day-of-month fields."
java.time.chrono.JapaneseChronology.date,"Obtains a local date in Japanese calendar system from the  era, year-of-era, month-of-year and day-of-month fields."
java.time.chrono.JapaneseChronology.dateEpochDay,Obtains a local date in the Japanese calendar system from the epoch-day.
java.time.chrono.JapaneseChronology.dateYearDay,Obtains a local date in Japanese calendar system from the  proleptic-year and day-of-year fields.
java.time.chrono.JapaneseChronology.dateYearDay,"Obtains a local date in Japanese calendar system from the  era, year-of-era and day-of-year fields."
java.time.chrono.JapaneseChronology.eraOf,Returns the calendar system era object from the given numeric value.
java.time.chrono.JapaneseChronology.getCalendarType,Gets the calendar type of the underlying calendar system - 'japanese'.
java.time.chrono.JapaneseChronology.getId,Gets the ID of the chronology - 'Japanese'.
java.time.chrono.JapaneseDate.from,Obtains aJapaneseDatefrom a temporal object.
java.time.chrono.JapaneseDate.getChronology,"Gets the chronology of this date, which is the Japanese calendar system."
java.time.chrono.JapaneseDate.now,Obtains the currentJapaneseDatefrom the system clock in the default time-zone.
java.time.chrono.JapaneseDate.now,Obtains the currentJapaneseDatefrom the specified clock.
java.time.chrono.JapaneseDate.now,Obtains the currentJapaneseDatefrom the system clock in the specified time-zone.
java.time.chrono.JapaneseDate.of,"Obtains aJapaneseDaterepresenting a date in the Japanese calendar  system from the proleptic-year, month-of-year and day-of-month fields."
java.time.chrono.JapaneseDate.of,"Obtains aJapaneseDaterepresenting a date in the Japanese calendar  system from the era, year-of-era, month-of-year and day-of-month fields."
java.time.chrono.JapaneseEra.getDisplayName,Gets the textual representation of this era.
java.time.chrono.JapaneseEra.getValue,Gets the numeric eraintvalue.
java.time.chrono.JapaneseEra.of,Obtains an instance ofJapaneseErafrom anintvalue.
java.time.chrono.JapaneseEra.valueOf,Returns theJapaneseErawith the name.
java.time.chrono.JapaneseEra.values,Returns an array of JapaneseEras.
java.time.chrono.MinguoChronology.date,"Obtains a local date in Minguo calendar system from the  proleptic-year, month-of-year and day-of-month fields."
java.time.chrono.MinguoChronology.date,"Obtains a local date in Minguo calendar system from the  era, year-of-era, month-of-year and day-of-month fields."
java.time.chrono.MinguoChronology.dateEpochDay,Obtains a local date in the Minguo calendar system from the epoch-day.
java.time.chrono.MinguoChronology.dateYearDay,Obtains a local date in Minguo calendar system from the  proleptic-year and day-of-year fields.
java.time.chrono.MinguoChronology.dateYearDay,"Obtains a local date in Minguo calendar system from the  era, year-of-era and day-of-year fields."
java.time.chrono.MinguoChronology.getCalendarType,Gets the calendar type of the underlying calendar system - 'roc'.
java.time.chrono.MinguoChronology.getId,Gets the ID of the chronology - 'Minguo'.
java.time.chrono.MinguoDate.from,Obtains aMinguoDatefrom a temporal object.
java.time.chrono.MinguoDate.getChronology,"Gets the chronology of this date, which is the Minguo calendar system."
java.time.chrono.MinguoDate.now,Obtains the currentMinguoDatefrom the system clock in the default time-zone.
java.time.chrono.MinguoDate.now,Obtains the currentMinguoDatefrom the specified clock.
java.time.chrono.MinguoDate.now,Obtains the currentMinguoDatefrom the system clock in the specified time-zone.
java.time.chrono.MinguoDate.of,"Obtains aMinguoDaterepresenting a date in the Minguo calendar  system from the proleptic-year, month-of-year and day-of-month fields."
java.time.chrono.ThaiBuddhistChronology.date,"Obtains a local date in Thai Buddhist calendar system from the  proleptic-year, month-of-year and day-of-month fields."
java.time.chrono.ThaiBuddhistChronology.date,"Obtains a local date in Thai Buddhist calendar system from the  era, year-of-era, month-of-year and day-of-month fields."
java.time.chrono.ThaiBuddhistChronology.dateEpochDay,Obtains a local date in the Thai Buddhist calendar system from the epoch-day.
java.time.chrono.ThaiBuddhistChronology.dateYearDay,Obtains a local date in Thai Buddhist calendar system from the  proleptic-year and day-of-year fields.
java.time.chrono.ThaiBuddhistChronology.dateYearDay,"Obtains a local date in Thai Buddhist calendar system from the  era, year-of-era and day-of-year fields."
java.time.chrono.ThaiBuddhistChronology.getCalendarType,Gets the calendar type of the underlying calendar system - 'buddhist'.
java.time.chrono.ThaiBuddhistChronology.getId,Gets the ID of the chronology - 'ThaiBuddhist'.
java.time.chrono.ThaiBuddhistDate.from,Obtains aThaiBuddhistDatefrom a temporal object.
java.time.chrono.ThaiBuddhistDate.getChronology,"Gets the chronology of this date, which is the Thai Buddhist calendar system."
java.time.chrono.ThaiBuddhistDate.now,Obtains the currentThaiBuddhistDatefrom the system clock in the default time-zone.
java.time.chrono.ThaiBuddhistDate.now,Obtains the currentThaiBuddhistDatefrom the specified clock.
java.time.chrono.ThaiBuddhistDate.now,Obtains the currentThaiBuddhistDatefrom the system clock in the specified time-zone.
java.time.chrono.ThaiBuddhistDate.of,"Obtains aThaiBuddhistDaterepresenting a date in the Thai Buddhist calendar  system from the proleptic-year, month-of-year and day-of-month fields."
java.time.format.DateTimeFormatter.format,Formats a date-time object using this formatter.
java.time.format.DateTimeFormatter.formatTo,Formats a date-time object to anAppendableusing this formatter.
java.time.format.DateTimeFormatter.getChronology,Gets the overriding chronology to be used during formatting.
java.time.format.DateTimeFormatter.getDecimalStyle,Gets the DecimalStyle to be used during formatting.
java.time.format.DateTimeFormatter.getLocale,Gets the locale to be used during formatting.
java.time.format.DateTimeFormatter.getResolverFields,Gets the resolver fields to use during parsing.
java.time.format.DateTimeFormatter.getResolverStyle,Gets the resolver style to use during parsing.
java.time.format.DateTimeFormatter.getZone,Gets the overriding zone to be used during formatting.
java.time.format.DateTimeFormatter.localizedBy,"Returns a copy of this formatter with localized values of the locale,  calendar, region, decimal style and/or timezone, that supersede values in  this formatter."
java.time.format.DateTimeFormatter.ofLocalizedDate,Returns a locale specific date format for the ISO chronology.
java.time.format.DateTimeFormatter.ofLocalizedDateTime,Returns a locale specific date-time formatter for the ISO chronology.
java.time.format.DateTimeFormatter.ofLocalizedDateTime,Returns a locale specific date and time format for the ISO chronology.
java.time.format.DateTimeFormatter.ofLocalizedTime,Returns a locale specific time format for the ISO chronology.
java.time.format.DateTimeFormatter.ofPattern,Creates a formatter using the specified pattern.
java.time.format.DateTimeFormatter.ofPattern,Creates a formatter using the specified pattern and locale.
java.time.format.DateTimeFormatter.parse,Fully parses the text producing a temporal object.
java.time.format.DateTimeFormatter.parse,"Parses the text using this formatter, providing control over the text position."
java.time.format.DateTimeFormatter.parse,Fully parses the text producing an object of the specified type.
java.time.format.DateTimeFormatter.parseBest,Fully parses the text producing an object of one of the specified types.
java.time.format.DateTimeFormatter.parsedExcessDays,A query that provides access to the excess days that were parsed.
java.time.format.DateTimeFormatter.parsedLeapSecond,A query that provides access to whether a leap-second was parsed.
java.time.format.DateTimeFormatter.parseUnresolved,"Parses the text using this formatter, without resolving the result, intended  for advanced use cases."
java.time.format.DateTimeFormatter.toFormat,Returns this formatter as ajava.text.Formatinstance.
java.time.format.DateTimeFormatter.toFormat,Returns this formatter as ajava.text.Formatinstance that will  parse using the specified query.
java.time.format.DateTimeFormatter.toString,Returns a description of the underlying formatters.
java.time.format.DateTimeFormatter.withChronology,Returns a copy of this formatter with a new override chronology.
java.time.format.DateTimeFormatter.withDecimalStyle,Returns a copy of this formatter with a new DecimalStyle.
java.time.format.DateTimeFormatter.withLocale,Returns a copy of this formatter with a new locale.
java.time.format.DateTimeFormatter.withResolverFields,Returns a copy of this formatter with a new set of resolver fields.
java.time.format.DateTimeFormatter.withResolverStyle,Returns a copy of this formatter with a new resolver style.
java.time.format.DateTimeFormatter.withZone,Returns a copy of this formatter with a new override zone.
java.time.format.DateTimeFormatterBuilder.append,Appends all the elements of a formatter to the builder.
java.time.format.DateTimeFormatterBuilder.appendChronologyId,"Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter."
java.time.format.DateTimeFormatterBuilder.appendChronologyText,Appends the chronology name to the formatter.
java.time.format.DateTimeFormatterBuilder.appendDayPeriodText,Appends the day period text to the formatter.
java.time.format.DateTimeFormatterBuilder.appendFraction,Appends the fractional value of a date-time field to the formatter.
java.time.format.DateTimeFormatterBuilder.appendGenericZoneText,"Appends the generic time-zone name, such as 'Pacific Time', to the formatter."
java.time.format.DateTimeFormatterBuilder.appendInstant,"Appends an instant using ISO-8601 to the formatter, formatting fractional  digits in groups of three."
java.time.format.DateTimeFormatterBuilder.appendInstant,Appends an instant using ISO-8601 to the formatter with control over  the number of fractional digits.
java.time.format.DateTimeFormatterBuilder.appendLiteral,Appends a character literal to the formatter.
java.time.format.DateTimeFormatterBuilder.appendLiteral,Appends a string literal to the formatter.
java.time.format.DateTimeFormatterBuilder.appendLocalized,Appends a localized date-time pattern to the formatter.
java.time.format.DateTimeFormatterBuilder.appendLocalizedOffset,"Appends the localized zone offset, such as 'GMT+01:00', to the formatter."
java.time.format.DateTimeFormatterBuilder.appendOffset,"Appends the zone offset, such as '+01:00', to the formatter."
java.time.format.DateTimeFormatterBuilder.appendOptional,Appends a formatter to the builder which will optionally format/parse.
java.time.format.DateTimeFormatterBuilder.appendPattern,Appends the elements defined by the specified pattern to the builder.
java.time.format.DateTimeFormatterBuilder.appendText,Appends the text of a date-time field to the formatter using the full  text style.
java.time.format.DateTimeFormatterBuilder.appendText,Appends the text of a date-time field to the formatter.
java.time.format.DateTimeFormatterBuilder.appendText,Appends the text of a date-time field to the formatter using the specified  map to supply the text.
java.time.format.DateTimeFormatterBuilder.appendValue,Appends the value of a date-time field to the formatter using a normal  output style.
java.time.format.DateTimeFormatterBuilder.appendValue,"Appends the value of a date-time field to the formatter using a fixed  width, zero-padded approach."
java.time.format.DateTimeFormatterBuilder.appendValue,Appends the value of a date-time field to the formatter providing full  control over formatting.
java.time.format.DateTimeFormatterBuilder.appendValueReduced,Appends the reduced value of a date-time field to the formatter.
java.time.format.DateTimeFormatterBuilder.appendZoneId,"Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter."
java.time.format.DateTimeFormatterBuilder.appendZoneOrOffsetId,"Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to  the formatter, using the best available zone ID."
java.time.format.DateTimeFormatterBuilder.appendZoneRegionId,"Appends the time-zone region ID, such as 'Europe/Paris', to the formatter,  rejecting the zone ID if it is aZoneOffset."
java.time.format.DateTimeFormatterBuilder.appendZoneText,"Appends the time-zone name, such as 'British Summer Time', to the formatter."
java.time.format.DateTimeFormatterBuilder.getLocalizedDateTimePattern,Gets the formatting pattern for date and time styles for a locale and chronology.
java.time.format.DateTimeFormatterBuilder.optionalEnd,Ends an optional section.
java.time.format.DateTimeFormatterBuilder.optionalStart,Mark the start of an optional section.
java.time.format.DateTimeFormatterBuilder.padNext,Causes the next added printer/parser to pad to a fixed width using a space.
java.time.format.DateTimeFormatterBuilder.padNext,Causes the next added printer/parser to pad to a fixed width.
java.time.format.DateTimeFormatterBuilder.parseCaseInsensitive,Changes the parse style to be case insensitive for the remainder of the formatter.
java.time.format.DateTimeFormatterBuilder.parseCaseSensitive,Changes the parse style to be case sensitive for the remainder of the formatter.
java.time.format.DateTimeFormatterBuilder.parseDefaulting,Appends a default value for a field to the formatter for use in parsing.
java.time.format.DateTimeFormatterBuilder.parseLenient,Changes the parse style to be lenient for the remainder of the formatter.
java.time.format.DateTimeFormatterBuilder.parseStrict,Changes the parse style to be strict for the remainder of the formatter.
java.time.format.DateTimeFormatterBuilder.toFormatter,Completes this builder by creating theDateTimeFormatterusing the default locale.
java.time.format.DateTimeFormatterBuilder.toFormatter,Completes this builder by creating theDateTimeFormatterusing the specified locale.
java.time.format.DateTimeParseException.getErrorIndex,Returns the index where the error was found.
java.time.format.DateTimeParseException.getParsedString,Returns the string that was being parsed.
java.time.format.DecimalStyle.equals,Checks if this DecimalStyle is equal to another DecimalStyle.
java.time.format.DecimalStyle.getAvailableLocales,Lists all the locales that are supported.
java.time.format.DecimalStyle.getDecimalSeparator,Gets the character that represents the decimal point.
java.time.format.DecimalStyle.getNegativeSign,Gets the character that represents the negative sign.
java.time.format.DecimalStyle.getPositiveSign,Gets the character that represents the positive sign.
java.time.format.DecimalStyle.getZeroDigit,Gets the character that represents zero.
java.time.format.DecimalStyle.hashCode,A hash code for this DecimalStyle.
java.time.format.DecimalStyle.of,Obtains the DecimalStyle for the specified locale.
java.time.format.DecimalStyle.ofDefaultLocale,Obtains the DecimalStyle for the defaultFORMATlocale.
java.time.format.DecimalStyle.toString,Returns a string describing this DecimalStyle.
java.time.format.DecimalStyle.withDecimalSeparator,Returns a copy of the info with a new character that represents the decimal point.
java.time.format.DecimalStyle.withNegativeSign,Returns a copy of the info with a new character that represents the negative sign.
java.time.format.DecimalStyle.withPositiveSign,Returns a copy of the info with a new character that represents the positive sign.
java.time.format.DecimalStyle.withZeroDigit,Returns a copy of the info with a new character that represents zero.
java.time.temporal.TemporalAdjusters.dayOfWeekInMonth,"Returns the day-of-week in month adjuster, which returns a new date  with the ordinal day-of-week based on the month."
java.time.temporal.TemporalAdjusters.firstDayOfMonth,"Returns the ""first day of month"" adjuster, which returns a new date set to  the first day of the current month."
java.time.temporal.TemporalAdjusters.firstDayOfNextMonth,"Returns the ""first day of next month"" adjuster, which returns a new date set to  the first day of the next month."
java.time.temporal.TemporalAdjusters.firstDayOfNextYear,"Returns the ""first day of next year"" adjuster, which returns a new date set to  the first day of the next year."
java.time.temporal.TemporalAdjusters.firstDayOfYear,"Returns the ""first day of year"" adjuster, which returns a new date set to  the first day of the current year."
java.time.temporal.TemporalAdjusters.firstInMonth,"Returns the first in month adjuster, which returns a new date  in the same month with the first matching day-of-week."
java.time.temporal.TemporalAdjusters.lastDayOfMonth,"Returns the ""last day of month"" adjuster, which returns a new date set to  the last day of the current month."
java.time.temporal.TemporalAdjusters.lastDayOfYear,"Returns the ""last day of year"" adjuster, which returns a new date set to  the last day of the current year."
java.time.temporal.TemporalAdjusters.lastInMonth,"Returns the last in month adjuster, which returns a new date  in the same month with the last matching day-of-week."
java.time.temporal.TemporalAdjusters.next,"Returns the next day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week after the date being adjusted."
java.time.temporal.TemporalAdjusters.nextOrSame,"Returns the next-or-same day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week after the date being adjusted  unless it is already on that day in which case the same object is returned."
java.time.temporal.TemporalAdjusters.ofDateAdjuster,Obtains aTemporalAdjusterthat wraps a date adjuster.
java.time.temporal.TemporalAdjusters.previous,"Returns the previous day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week before the date being adjusted."
java.time.temporal.TemporalAdjusters.previousOrSame,"Returns the previous-or-same day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week before the date being adjusted  unless it is already on that day in which case the same object is returned."
java.time.temporal.TemporalQueries.chronology,A query for theChronology.
java.time.temporal.TemporalQueries.localDate,A query forLocalDatereturning null if not found.
java.time.temporal.TemporalQueries.localTime,A query forLocalTimereturning null if not found.
java.time.temporal.TemporalQueries.offset,A query forZoneOffsetreturning null if not found.
java.time.temporal.TemporalQueries.precision,A query for the smallest supported unit.
java.time.temporal.TemporalQueries.zone,"A lenient query for theZoneId, falling back to theZoneOffset."
java.time.temporal.TemporalQueries.zoneId,A strict query for theZoneId.
java.time.temporal.ValueRange.checkValidIntValue,Checks that the specified value is valid and fits in anint.
java.time.temporal.ValueRange.checkValidValue,Checks that the specified value is valid.
java.time.temporal.ValueRange.equals,Checks if this range is equal to another range.
java.time.temporal.ValueRange.getLargestMinimum,Gets the largest possible minimum value that the field can take.
java.time.temporal.ValueRange.getMaximum,Gets the maximum value that the field can take.
java.time.temporal.ValueRange.getMinimum,Gets the minimum value that the field can take.
java.time.temporal.ValueRange.getSmallestMaximum,Gets the smallest possible maximum value that the field can take.
java.time.temporal.ValueRange.hashCode,A hash code for this range.
java.time.temporal.ValueRange.isFixed,Is the value range fixed and fully known.
java.time.temporal.ValueRange.isIntValue,Checks if all values in the range fit in anint.
java.time.temporal.ValueRange.isValidIntValue,Checks if the value is within the valid range and that all values  in the range fit in anint.
java.time.temporal.ValueRange.isValidValue,Checks if the value is within the valid range.
java.time.temporal.ValueRange.of,Obtains a fixed value range.
java.time.temporal.ValueRange.of,Obtains a variable value range.
java.time.temporal.ValueRange.of,Obtains a fully variable value range.
java.time.temporal.ValueRange.toString,Outputs this range as aString.
java.time.temporal.WeekFields.dayOfWeek,Returns a field to access the day of week based on thisWeekFields.
java.time.temporal.WeekFields.equals,Checks if thisWeekFieldsis equal to the specified object.
java.time.temporal.WeekFields.getFirstDayOfWeek,Gets the first day-of-week.
java.time.temporal.WeekFields.getMinimalDaysInFirstWeek,Gets the minimal number of days in the first week.
java.time.temporal.WeekFields.hashCode,A hash code for thisWeekFields.
java.time.temporal.WeekFields.of,Obtains an instance ofWeekFieldsfrom the first day-of-week and minimal days.
java.time.temporal.WeekFields.of,Obtains an instance ofWeekFieldsappropriate for a locale.
java.time.temporal.WeekFields.toString,A string representation of thisWeekFieldsinstance.
java.time.temporal.WeekFields.weekBasedYear,Returns a field to access the year of a week-based-year based on thisWeekFields.
java.time.temporal.WeekFields.weekOfMonth,Returns a field to access the week of month based on thisWeekFields.
java.time.temporal.WeekFields.weekOfWeekBasedYear,Returns a field to access the week of a week-based-year based on thisWeekFields.
java.time.temporal.WeekFields.weekOfYear,Returns a field to access the week of year based on thisWeekFields.
java.time.zone.ZoneOffsetTransition.compareTo,Compares this transition to another based on the transition instant.
java.time.zone.ZoneOffsetTransition.equals,Checks if this object equals another.
java.time.zone.ZoneOffsetTransition.getDateTimeAfter,"Gets the local transition date-time, as would be expressed with the 'after' offset."
java.time.zone.ZoneOffsetTransition.getDateTimeBefore,"Gets the local transition date-time, as would be expressed with the 'before' offset."
java.time.zone.ZoneOffsetTransition.getDuration,Gets the duration of the transition.
java.time.zone.ZoneOffsetTransition.getInstant,Gets the transition instant.
java.time.zone.ZoneOffsetTransition.getOffsetAfter,Gets the offset after the transition.
java.time.zone.ZoneOffsetTransition.getOffsetBefore,Gets the offset before the transition.
java.time.zone.ZoneOffsetTransition.hashCode,Returns a suitable hash code.
java.time.zone.ZoneOffsetTransition.isGap,Does this transition represent a gap in the local time-line.
java.time.zone.ZoneOffsetTransition.isOverlap,Does this transition represent an overlap in the local time-line.
java.time.zone.ZoneOffsetTransition.isValidOffset,Checks if the specified offset is valid during this transition.
java.time.zone.ZoneOffsetTransition.of,Obtains an instance defining a transition between two offsets.
java.time.zone.ZoneOffsetTransition.toEpochSecond,Gets the transition instant as an epoch second.
java.time.zone.ZoneOffsetTransition.toString,Returns a string describing this object.
java.time.zone.ZoneOffsetTransitionRule.createTransition,Creates a transition instance for the specified year.
java.time.zone.ZoneOffsetTransitionRule.getDayOfMonthIndicator,Gets the indicator of the day-of-month of the transition.
java.time.zone.ZoneOffsetTransitionRule.getDayOfWeek,Gets the day-of-week of the transition.
java.time.zone.ZoneOffsetTransitionRule.getLocalTime,Gets the local time of day of the transition which must be checked withisMidnightEndOfDay().
java.time.zone.ZoneOffsetTransitionRule.getMonth,Gets the month of the transition.
java.time.zone.ZoneOffsetTransitionRule.getStandardOffset,Gets the standard offset in force at the transition.
java.time.zone.ZoneOffsetTransitionRule.getTimeDefinition,"Gets the time definition, specifying how to convert the time to an instant."
java.time.zone.ZoneOffsetTransitionRule.isMidnightEndOfDay,Is the transition local time midnight at the end of day.
java.time.zone.ZoneOffsetTransitionRule.of,Obtains an instance defining the yearly rule to create transitions between two offsets.
java.time.zone.ZoneOffsetTransitionRule.createDateTime,Converts the specified local date-time to the local date-time actually  seen on a wall clock.
java.time.zone.ZoneRules.equals,Checks if this set of rules equals another.
java.time.zone.ZoneRules.getDaylightSavings,Gets the amount of daylight savings in use for the specified instant in this zone.
java.time.zone.ZoneRules.getOffset,Gets the offset applicable at the specified instant in these rules.
java.time.zone.ZoneRules.getOffset,Gets a suitable offset for the specified local date-time in these rules.
java.time.zone.ZoneRules.getStandardOffset,Gets the standard offset for the specified instant in this zone.
java.time.zone.ZoneRules.getTransition,Gets the offset transition applicable at the specified local date-time in these rules.
java.time.zone.ZoneRules.getTransitionRules,Gets the list of transition rules for years beyond those defined in the transition list.
java.time.zone.ZoneRules.getTransitions,Gets the complete list of fully defined transitions.
java.time.zone.ZoneRules.getValidOffsets,Gets the offset applicable at the specified local date-time in these rules.
java.time.zone.ZoneRules.hashCode,Returns a suitable hash code given the definition of#equals.
java.time.zone.ZoneRules.isDaylightSavings,Checks if the specified instant is in daylight savings.
java.time.zone.ZoneRules.isFixedOffset,"Checks of the zone rules are fixed, such that the offset never varies."
java.time.zone.ZoneRules.isValidOffset,Checks if the offset date-time is valid for these rules.
java.time.zone.ZoneRules.nextTransition,Gets the next transition after the specified instant.
java.time.zone.ZoneRules.of,Obtains an instance of ZoneRules that has fixed zone rules.
java.time.zone.ZoneRules.of,Obtains an instance of a ZoneRules.
java.time.zone.ZoneRules.previousTransition,Gets the previous transition before the specified instant.
java.time.zone.ZoneRulesProvider.getRules,Gets the rules for the zone ID.
java.time.zone.ZoneRulesProvider.getVersions,Gets the history of rules for the zone ID.
java.time.zone.ZoneRulesProvider.provideRefresh,SPI method to refresh the rules from the underlying data provider.
java.time.zone.ZoneRulesProvider.provideRules,SPI method to get the rules for the zone ID.
java.time.zone.ZoneRulesProvider.provideVersions,SPI method to get the history of rules for the zone ID.
java.time.zone.ZoneRulesProvider.provideZoneIds,SPI method to get the available zone IDs.
java.time.zone.ZoneRulesProvider.refresh,Refreshes the rules from the underlying data provider.
java.time.zone.ZoneRulesProvider.registerProvider,Registers a zone rules provider.
java.util.AbstractCollection.add,Ensures that this collection contains the specified element (optional  operation).
java.util.AbstractCollection.addAll,Adds all of the elements in the specified collection to this collection  (optional operation).
java.util.AbstractCollection.clear,Removes all of the elements from this collection (optional operation).
java.util.AbstractCollection.contains,Returnstrueif this collection contains the specified element.
java.util.AbstractCollection.containsAll,Returnstrueif this collection contains all of the elements  in the specified collection.
java.util.AbstractCollection.isEmpty,Returnstrueif this collection contains no elements.
java.util.AbstractCollection.iterator,Returns an iterator over the elements contained in this collection.
java.util.AbstractCollection.remove,"Removes a single instance of the specified element from this  collection, if it is present (optional operation)."
java.util.AbstractCollection.removeAll,Removes all of this collection's elements that are also contained in the  specified collection (optional operation).
java.util.AbstractCollection.retainAll,Retains only the elements in this collection that are contained in the  specified collection (optional operation).
java.util.AbstractCollection.toArray,Returns an array containing all of the elements in this collection.
java.util.AbstractCollection.toArray,Returns an array containing all of the elements in this collection;  the runtime type of the returned array is that of the specified array.
java.util.AbstractCollection.toString,Returns a string representation of this collection.
java.util.AbstractList.add,Inserts the specified element at the specified position in this list  (optional operation).
java.util.AbstractList.add,Appends the specified element to the end of this list (optional  operation).
java.util.AbstractList.addAll,Inserts all of the elements in the specified collection into this  list at the specified position (optional operation).
java.util.AbstractList.clear,Removes all of the elements from this list (optional operation).
java.util.AbstractList.equals,Compares the specified object with this list for equality.
java.util.AbstractList.get,Returns the element at the specified position in this list.
java.util.AbstractList.hashCode,Returns the hash code value for this list.
java.util.AbstractList.indexOf,"Returns the index of the first occurrence of the specified element  in this list, or -1 if this list does not contain the element."
java.util.AbstractList.iterator,Returns an iterator over the elements in this list in proper sequence.
java.util.AbstractList.lastIndexOf,"Returns the index of the last occurrence of the specified element  in this list, or -1 if this list does not contain the element."
java.util.AbstractList.listIterator,Returns a list iterator over the elements in this list (in proper  sequence).
java.util.AbstractList.listIterator,"Returns a list iterator over the elements in this list (in proper  sequence), starting at the specified position in the list."
java.util.AbstractList.remove,Removes the element at the specified position in this list (optional  operation).
java.util.AbstractList.removeRange,"Removes from this list all of the elements whose index is betweenfromIndex, inclusive, andtoIndex, exclusive."
java.util.AbstractList.set,Replaces the element at the specified position in this list with the  specified element (optional operation).
java.util.AbstractList.subList,"Returns a view of the portion of this list between the specifiedfromIndex, inclusive, andtoIndex, exclusive."
java.util.AbstractMap.clear,Removes all of the mappings from this map (optional operation).
java.util.AbstractMap.clone,Returns a shallow copy of thisAbstractMapinstance: the keys  and values themselves are not cloned.
java.util.AbstractMap.containsKey,Returnstrueif this map contains a mapping for the specified  key.
java.util.AbstractMap.containsValue,Returnstrueif this map maps one or more keys to the  specified value.
java.util.AbstractMap.equals,Compares the specified object with this map for equality.
java.util.AbstractMap.get,"Returns the value to which the specified key is mapped,  ornullif this map contains no mapping for the key."
java.util.AbstractMap.hashCode,Returns the hash code value for this map.
java.util.AbstractMap.isEmpty,Returnstrueif this map contains no key-value mappings.
java.util.AbstractMap.keySet,Returns aSetview of the keys contained in this map.
java.util.AbstractMap.put,Associates the specified value with the specified key in this map  (optional operation).
java.util.AbstractMap.putAll,Copies all of the mappings from the specified map to this map  (optional operation).
java.util.AbstractMap.remove,Removes the mapping for a key from this map if it is present  (optional operation).
java.util.AbstractMap.size,Returns the number of key-value mappings in this map.
java.util.AbstractMap.toString,Returns a string representation of this map.
java.util.AbstractMap.values,Returns aCollectionview of the values contained in this map.
java.util.AbstractMap.equals,Compares the specified object with this entry for equality.
java.util.AbstractMap.getKey,Returns the key corresponding to this entry.
java.util.AbstractMap.getValue,Returns the value corresponding to this entry.
java.util.AbstractMap.hashCode,Returns the hash code value for this map entry.
java.util.AbstractMap.setValue,Replaces the value corresponding to this entry with the specified  value.
java.util.AbstractMap.toString,Returns a String representation of this map entry.
java.util.AbstractMap.setValue,Replaces the value corresponding to this entry with the specified  value (optional operation).
java.util.AbstractQueue.add,"Inserts the specified element into this queue if it is possible to do so  immediately without violating capacity restrictions, returningtrueupon success and throwing anIllegalStateExceptionif no space is currently available."
java.util.AbstractQueue.addAll,Adds all of the elements in the specified collection to this  queue.
java.util.AbstractQueue.clear,Removes all of the elements from this queue.
java.util.AbstractQueue.element,"Retrieves, but does not remove, the head of this queue."
java.util.AbstractQueue.remove,Retrieves and removes the head of this queue.
java.util.AbstractSequentialList.iterator,Returns an iterator over the elements in this list (in proper  sequence).
java.util.AbstractSet.equals,Compares the specified object with this set for equality.
java.util.AbstractSet.hashCode,Returns the hash code value for this set.
java.util.AbstractSet.removeAll,Removes from this set all of its elements that are contained in the  specified collection (optional operation).
java.util.ArrayDeque.add,Inserts the specified element at the end of this deque.
java.util.ArrayDeque.addAll,"Adds all of the elements in the specified collection at the end  of this deque, as if by callingaddLast(E)on each one,  in the order that they are returned by the collection's iterator."
java.util.ArrayDeque.addFirst,Inserts the specified element at the front of this deque.
java.util.ArrayDeque.clear,Removes all of the elements from this deque.
java.util.ArrayDeque.clone,Returns a copy of this deque.
java.util.ArrayDeque.contains,Returnstrueif this deque contains the specified element.
java.util.ArrayDeque.descendingIterator,Returns an iterator over the elements in this deque in reverse  sequential order.
java.util.ArrayDeque.element,"Retrieves, but does not remove, the head of the queue represented by  this deque."
java.util.ArrayDeque.forEach,Performs the given action for each element of theIterableuntil all elements have been processed or the action throws an  exception.
java.util.ArrayDeque.getFirst,"Retrieves, but does not remove, the first element of this deque."
java.util.ArrayDeque.getLast,"Retrieves, but does not remove, the last element of this deque."
java.util.ArrayDeque.isEmpty,Returnstrueif this deque contains no elements.
java.util.ArrayDeque.iterator,Returns an iterator over the elements in this deque.
java.util.ArrayDeque.peek,"Retrieves, but does not remove, the head of the queue represented by  this deque, or returnsnullif this deque is empty."
java.util.ArrayDeque.peekFirst,"Retrieves, but does not remove, the first element of this deque,  or returnsnullif this deque is empty."
java.util.ArrayDeque.peekLast,"Retrieves, but does not remove, the last element of this deque,  or returnsnullif this deque is empty."
java.util.ArrayDeque.poll,"Retrieves and removes the head of the queue represented by this deque  (in other words, the first element of this deque), or returnsnullif this deque is empty."
java.util.ArrayDeque.pollFirst,"Retrieves and removes the first element of this deque,  or returnsnullif this deque is empty."
java.util.ArrayDeque.pollLast,"Retrieves and removes the last element of this deque,  or returnsnullif this deque is empty."
java.util.ArrayDeque.pop,Pops an element from the stack represented by this deque.
java.util.ArrayDeque.push,Pushes an element onto the stack represented by this deque.
java.util.ArrayDeque.remove,Retrieves and removes the head of the queue represented by this deque.
java.util.ArrayDeque.remove,Removes a single instance of the specified element from this deque.
java.util.ArrayDeque.removeFirst,Retrieves and removes the first element of this deque.
java.util.ArrayDeque.removeFirstOccurrence,Removes the first occurrence of the specified element in this  deque (when traversing the deque from head to tail).
java.util.ArrayDeque.removeIf,Removes all of the elements of this collection that satisfy the given  predicate.
java.util.ArrayDeque.removeLast,Retrieves and removes the last element of this deque.
java.util.ArrayDeque.removeLastOccurrence,Removes the last occurrence of the specified element in this  deque (when traversing the deque from head to tail).
java.util.ArrayDeque.size,Returns the number of elements in this deque.
java.util.ArrayDeque.spliterator,Creates alate-bindingandfail-fastSpliteratorover the elements in this  deque.
java.util.ArrayDeque.toArray,Returns an array containing all of the elements in this deque  in proper sequence (from first to last element).
java.util.ArrayDeque.toArray,Returns an array containing all of the elements in this deque in  proper sequence (from first to last element); the runtime type of the  returned array is that of the specified array.
java.util.ArrayList.add,Inserts the specified element at the specified position in this  list.
java.util.ArrayList.add,Appends the specified element to the end of this list.
java.util.ArrayList.addAll,"Inserts all of the elements in the specified collection into this  list, starting at the specified position."
java.util.ArrayList.addAll,"Appends all of the elements in the specified collection to the end of  this list, in the order that they are returned by the  specified collection's Iterator."
java.util.ArrayList.clear,Removes all of the elements from this list.
java.util.ArrayList.clone,Returns a shallow copy of thisArrayListinstance.
java.util.ArrayList.contains,Returnstrueif this list contains the specified element.
java.util.ArrayList.ensureCapacity,"Increases the capacity of thisArrayListinstance, if  necessary, to ensure that it can hold at least the number of elements  specified by the minimum capacity argument."
java.util.ArrayList.isEmpty,Returnstrueif this list contains no elements.
java.util.ArrayList.remove,Removes the element at the specified position in this list.
java.util.ArrayList.remove,"Removes the first occurrence of the specified element from this list,  if it is present."
java.util.ArrayList.removeAll,Removes from this list all of its elements that are contained in the  specified collection.
java.util.ArrayList.retainAll,Retains only the elements in this list that are contained in the  specified collection.
java.util.ArrayList.set,Replaces the element at the specified position in this list with  the specified element.
java.util.ArrayList.size,Returns the number of elements in this list.
java.util.ArrayList.spliterator,Creates alate-bindingandfail-fastSpliteratorover the elements in this  list.
java.util.ArrayList.toArray,Returns an array containing all of the elements in this list  in proper sequence (from first to last element).
java.util.ArrayList.toArray,Returns an array containing all of the elements in this list in proper  sequence (from first to last element); the runtime type of the returned  array is that of the specified array.
java.util.ArrayList.trimToSize,Trims the capacity of thisArrayListinstance to be the  list's current size.
java.util.Arrays.asList,Returns a fixed-size list backed by the specified array.
java.util.Arrays.binarySearch,Searches the specified array of bytes for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array of bytes for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches the specified array of chars for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array of chars for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches the specified array of doubles for the specified value using  the binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array of doubles for the specified value using  the binary search algorithm.
java.util.Arrays.binarySearch,Searches the specified array of floats for the specified value using  the binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array of floats for the specified value using  the binary search algorithm.
java.util.Arrays.binarySearch,Searches the specified array of ints for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array of ints for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array of longs for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches the specified array of longs for the specified value using the  binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array of shorts for the specified value using  the binary search algorithm.
java.util.Arrays.binarySearch,Searches the specified array of shorts for the specified value using  the binary search algorithm.
java.util.Arrays.binarySearch,Searches a range of  the specified array for the specified object using the binary  search algorithm.
java.util.Arrays.binarySearch,Searches the specified array for the specified object using the binary  search algorithm.
java.util.Arrays.compare,Compares twobooleanarrays lexicographically.
java.util.Arrays.compare,Compares twobooleanarrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twobytearrays lexicographically.
java.util.Arrays.compare,Compares twobytearrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twochararrays lexicographically.
java.util.Arrays.compare,Compares twochararrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twodoublearrays lexicographically.
java.util.Arrays.compare,Compares twodoublearrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twofloatarrays lexicographically.
java.util.Arrays.compare,Compares twofloatarrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twointarrays lexicographically.
java.util.Arrays.compare,Compares twointarrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twolongarrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twolongarrays lexicographically.
java.util.Arrays.compare,Compares twoshortarrays lexicographically over the specified  ranges.
java.util.Arrays.compare,Compares twoshortarrays lexicographically.
java.util.Arrays.compare,Compares twoObjectarrays lexicographically over the specified  ranges.
java.util.Arrays.compare,"Compares twoObjectarrays, within comparable elements,  lexicographically."
java.util.Arrays.compare,Compares twoObjectarrays lexicographically using a specified  comparator.
java.util.Arrays.compareUnsigned,"Compares twobytearrays lexicographically, numerically treating  elements as unsigned."
java.util.Arrays.compareUnsigned,"Compares twobytearrays lexicographically over the specified  ranges, numerically treating elements as unsigned."
java.util.Arrays.compareUnsigned,"Compares twointarrays lexicographically, numerically treating  elements as unsigned."
java.util.Arrays.compareUnsigned,"Compares twointarrays lexicographically over the specified  ranges, numerically treating elements as unsigned."
java.util.Arrays.compareUnsigned,"Compares twolongarrays lexicographically over the specified  ranges, numerically treating elements as unsigned."
java.util.Arrays.compareUnsigned,"Compares twolongarrays lexicographically, numerically treating  elements as unsigned."
java.util.Arrays.compareUnsigned,"Compares twoshortarrays lexicographically over the specified  ranges, numerically treating elements as unsigned."
java.util.Arrays.compareUnsigned,"Compares twoshortarrays lexicographically, numerically treating  elements as unsigned."
java.util.Arrays.copyOf,"Copies the specified array, truncating or padding withfalse(if necessary)  so the copy has the specified length."
java.util.Arrays.copyOf,"Copies the specified array, truncating or padding with zeros (if necessary)  so the copy has the specified length."
java.util.Arrays.copyOf,"Copies the specified array, truncating or padding with null characters (if necessary)  so the copy has the specified length."
java.util.Arrays.copyOf,"Copies the specified array, truncating or padding with nulls (if necessary)  so the copy has the specified length."
java.util.Arrays.copyOfRange,Copies the specified range of the specified array into a new array.
java.util.Arrays.deepEquals,Returnstrueif the two specified arrays aredeeply  equalto one another.
java.util.Arrays.deepHashCode,"Returns a hash code based on the ""deep contents"" of the specified  array."
java.util.Arrays.deepToString,"Returns a string representation of the ""deep contents"" of the specified  array."
java.util.Arrays.equals,Returnstrueif the two specified arrays of booleans areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of booleans, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of bytes areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of bytes, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of chars areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of chars, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of doubles areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of doubles, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of floats areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of floats, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of ints areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of ints, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,"Returns true if the two specified arrays of longs, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of longs areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of shorts, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of shorts areequalto one another.
java.util.Arrays.equals,"Returns true if the two specified arrays of Objects, over the specified  ranges, areequalto one another."
java.util.Arrays.equals,Returnstrueif the two specified arrays of Objects areequalto one another.
java.util.Arrays.fill,Assigns the specified boolean value to each element of the specified  array of booleans.
java.util.Arrays.fill,Assigns the specified boolean value to each element of the specified  range of the specified array of booleans.
java.util.Arrays.fill,Assigns the specified byte value to each element of the specified array  of bytes.
java.util.Arrays.fill,Assigns the specified byte value to each element of the specified  range of the specified array of bytes.
java.util.Arrays.fill,Assigns the specified char value to each element of the specified array  of chars.
java.util.Arrays.fill,Assigns the specified char value to each element of the specified  range of the specified array of chars.
java.util.Arrays.fill,Assigns the specified double value to each element of the specified  array of doubles.
java.util.Arrays.fill,Assigns the specified double value to each element of the specified  range of the specified array of doubles.
java.util.Arrays.fill,Assigns the specified float value to each element of the specified array  of floats.
java.util.Arrays.fill,Assigns the specified float value to each element of the specified  range of the specified array of floats.
java.util.Arrays.fill,Assigns the specified int value to each element of the specified array  of ints.
java.util.Arrays.fill,Assigns the specified int value to each element of the specified  range of the specified array of ints.
java.util.Arrays.fill,Assigns the specified long value to each element of the specified  range of the specified array of longs.
java.util.Arrays.fill,Assigns the specified long value to each element of the specified array  of longs.
java.util.Arrays.fill,Assigns the specified short value to each element of the specified  range of the specified array of shorts.
java.util.Arrays.fill,Assigns the specified short value to each element of the specified array  of shorts.
java.util.Arrays.fill,Assigns the specified Object reference to each element of the specified  range of the specified array of Objects.
java.util.Arrays.fill,Assigns the specified Object reference to each element of the specified  array of Objects.
java.util.Arrays.hashCode,Returns a hash code based on the contents of the specified array.
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twobooleanarrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twobooleanarrays over the specified ranges, otherwise return -1 if  no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twobytearrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twobytearrays over the specified ranges, otherwise return -1 if no  mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twochararrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twochararrays over the specified ranges, otherwise return -1 if no  mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twodoublearrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twodoublearrays over the specified ranges, otherwise return -1 if  no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twofloatarrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twofloatarrays over the specified ranges, otherwise return -1 if no  mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twointarrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twointarrays over the specified ranges, otherwise return -1 if no  mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twolongarrays over the specified ranges, otherwise return -1 if no  mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twolongarrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twoshortarrays over the specified ranges, otherwise return -1 if no  mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twoshortarrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the relative index of the first mismatch between twoObjectarrays over the specified ranges, otherwise return -1 if  no mismatch is found."
java.util.Arrays.mismatch,"Finds and returns the index of the first mismatch between twoObjectarrays, otherwise return -1 if no mismatch is found."
java.util.Arrays.parallelPrefix,"PerformsparallelPrefix(double[], DoubleBinaryOperator)for the given subrange of the array."
java.util.Arrays.parallelPrefix,"Cumulates, in parallel, each element of the given array in place,  using the supplied function."
java.util.Arrays.parallelPrefix,"PerformsparallelPrefix(int[], IntBinaryOperator)for the given subrange of the array."
java.util.Arrays.parallelPrefix,"PerformsparallelPrefix(long[], LongBinaryOperator)for the given subrange of the array."
java.util.Arrays.parallelPrefix,"PerformsparallelPrefix(Object[], BinaryOperator)for the given subrange of the array."
java.util.Arrays.parallelSetAll,"Set all elements of the specified array, in parallel, using the  provided generator function to compute each element."
java.util.Arrays.parallelSort,Sorts the specified array into ascending numerical order.
java.util.Arrays.parallelSort,Sorts the specified range of the array into ascending numerical order.
java.util.Arrays.parallelSort,"Sorts the specified array of objects into ascending order, according  to thenatural orderingof its elements."
java.util.Arrays.parallelSort,"Sorts the specified range of the specified array of objects into  ascending order, according to thenatural orderingof its  elements."
java.util.Arrays.parallelSort,Sorts the specified range of the specified array of objects according  to the order induced by the specified comparator.
java.util.Arrays.parallelSort,Sorts the specified array of objects according to the order induced by  the specified comparator.
java.util.Arrays.setAll,"Set all elements of the specified array, using the provided  generator function to compute each element."
java.util.Arrays.sort,Sorts the specified range of the array into ascending order.
java.util.Arrays.spliterator,Returns aSpliterator.OfDoublecovering all of the specified  array.
java.util.Arrays.spliterator,Returns aSpliterator.OfDoublecovering the specified range of  the specified array.
java.util.Arrays.spliterator,Returns aSpliterator.OfIntcovering all of the specified array.
java.util.Arrays.spliterator,Returns aSpliterator.OfIntcovering the specified range of the  specified array.
java.util.Arrays.spliterator,Returns aSpliterator.OfLongcovering all of the specified array.
java.util.Arrays.spliterator,Returns aSpliterator.OfLongcovering the specified range of the  specified array.
java.util.Arrays.spliterator,Returns aSpliteratorcovering all of the specified array.
java.util.Arrays.spliterator,Returns aSpliteratorcovering the specified range of the  specified array.
java.util.Arrays.stream,Returns a sequentialDoubleStreamwith the specified array as its  source.
java.util.Arrays.stream,Returns a sequentialDoubleStreamwith the specified range of the  specified array as its source.
java.util.Arrays.stream,Returns a sequentialIntStreamwith the specified array as its  source.
java.util.Arrays.stream,Returns a sequentialIntStreamwith the specified range of the  specified array as its source.
java.util.Arrays.stream,Returns a sequentialLongStreamwith the specified array as its  source.
java.util.Arrays.stream,Returns a sequentialLongStreamwith the specified range of the  specified array as its source.
java.util.Arrays.stream,Returns a sequentialStreamwith the specified array as its  source.
java.util.Arrays.stream,Returns a sequentialStreamwith the specified range of the  specified array as its source.
java.util.Arrays.toString,Returns a string representation of the contents of the specified array.
java.util.Base64.decode,"Decodes all bytes from the input byte array using theBase64encoding scheme, writing the results into a newly-allocated output  byte array."
java.util.Base64.decode,"Decodes all bytes from the input byte array using theBase64encoding scheme, writing the results into the given output byte array,  starting at offset 0."
java.util.Base64.decode,Decodes a Base64 encoded String into a newly-allocated byte array  using theBase64encoding scheme.
java.util.Base64.decode,"Decodes all bytes from the input byte buffer using theBase64encoding scheme, writing the results into a newly-allocated ByteBuffer."
java.util.Base64.wrap,Returns an input stream for decodingBase64encoded byte stream.
java.util.Base64.encode,Encodes all bytes from the specified byte array into a newly-allocated  byte array using theBase64encoding scheme.
java.util.Base64.encode,"Encodes all bytes from the specified byte array using theBase64encoding scheme, writing the resulting bytes to the  given output byte array, starting at offset 0."
java.util.Base64.encode,Encodes all remaining bytes from the specified byte buffer into  a newly-allocated ByteBuffer using theBase64encoding  scheme.
java.util.Base64.encodeToString,Encodes the specified byte array into a String using theBase64encoding scheme.
java.util.Base64.withoutPadding,"Returns an encoder instance that encodes equivalently to this one,  but without adding any padding character at the end of the encoded  byte data."
java.util.Base64.wrap,Wraps an output stream for encoding byte data using theBase64encoding scheme.
java.util.Base64.getDecoder,Returns aBase64.Decoderthat decodes using theBasictype base64 encoding scheme.
java.util.Base64.getEncoder,Returns aBase64.Encoderthat encodes using theBasictype base64 encoding scheme.
java.util.Base64.getMimeDecoder,Returns aBase64.Decoderthat decodes using theMIMEtype base64 decoding scheme.
java.util.Base64.getMimeEncoder,Returns aBase64.Encoderthat encodes using theMIMEtype base64 encoding scheme.
java.util.Base64.getMimeEncoder,Returns aBase64.Encoderthat encodes using theMIMEtype base64 encoding scheme  with specified line length and line separators.
java.util.Base64.getUrlDecoder,Returns aBase64.Decoderthat decodes using theURL and Filename safetype base64  encoding scheme.
java.util.Base64.getUrlEncoder,Returns aBase64.Encoderthat encodes using theURL and Filename safetype base64  encoding scheme.
java.util.BitSet.and,Performs a logicalANDof this target bit set with the  argument bit set.
java.util.BitSet.andNot,Clears all of the bits in thisBitSetwhose corresponding  bit is set in the specifiedBitSet.
java.util.BitSet.cardinality,Returns the number of bits set totruein thisBitSet.
java.util.BitSet.clear,Sets all of the bits in this BitSet tofalse.
java.util.BitSet.clear,Sets the bit specified by the index tofalse.
java.util.BitSet.clear,Sets the bits from the specifiedfromIndex(inclusive) to the  specifiedtoIndex(exclusive) tofalse.
java.util.BitSet.clone,Cloning thisBitSetproduces a newBitSetthat is equal to it.
java.util.BitSet.flip,Sets the bit at the specified index to the complement of its  current value.
java.util.BitSet.flip,Sets each bit from the specifiedfromIndex(inclusive) to the  specifiedtoIndex(exclusive) to the complement of its current  value.
java.util.BitSet.get,Returns the value of the bit with the specified index.
java.util.BitSet.get,Returns a newBitSetcomposed of bits from thisBitSetfromfromIndex(inclusive) totoIndex(exclusive).
java.util.BitSet.hashCode,Returns the hash code value for this bit set.
java.util.BitSet.intersects,Returns true if the specifiedBitSethas any bits set totruethat are also set totruein thisBitSet.
java.util.BitSet.isEmpty,Returns true if thisBitSetcontains no bits that are set  totrue.
java.util.BitSet.length,"Returns the ""logical size"" of thisBitSet: the index of  the highest set bit in theBitSetplus one."
java.util.BitSet.nextClearBit,Returns the index of the first bit that is set tofalsethat occurs on or after the specified starting index.
java.util.BitSet.nextSetBit,Returns the index of the first bit that is set totruethat occurs on or after the specified starting index.
java.util.BitSet.or,Performs a logicalORof this bit set with the bit set  argument.
java.util.BitSet.previousClearBit,Returns the index of the nearest bit that is set tofalsethat occurs on or before the specified starting index.
java.util.BitSet.previousSetBit,Returns the index of the nearest bit that is set totruethat occurs on or before the specified starting index.
java.util.BitSet.set,Sets the bit at the specified index totrue.
java.util.BitSet.set,Sets the bit at the specified index to the specified value.
java.util.BitSet.set,Sets the bits from the specifiedfromIndex(inclusive) to the  specifiedtoIndex(exclusive) totrue.
java.util.BitSet.set,Sets the bits from the specifiedfromIndex(inclusive) to the  specifiedtoIndex(exclusive) to the specified value.
java.util.BitSet.size,Returns the number of bits of space actually in use by thisBitSetto represent bit values.
java.util.BitSet.stream,Returns a stream of indices for which thisBitSetcontains a bit in the set state.
java.util.BitSet.toByteArray,Returns a new byte array containing all the bits in this bit set.
java.util.BitSet.toLongArray,Returns a new long array containing all the bits in this bit set.
java.util.BitSet.toString,Returns a string representation of this bit set.
java.util.BitSet.valueOf,Returns a new bit set containing all the bits in the given byte array.
java.util.BitSet.valueOf,Returns a new bit set containing all the bits in the given long array.
java.util.BitSet.valueOf,Returns a new bit set containing all the bits in the given byte  buffer between its position and limit.
java.util.BitSet.valueOf,Returns a new bit set containing all the bits in the given long  buffer between its position and limit.
java.util.BitSet.xor,Performs a logicalXORof this bit set with the bit set  argument.
java.util.Calendar.build,Returns aCalendarbuilt from the parameters set by the  setter methods.
java.util.Calendar.set,Sets thefieldparameter to the givenvalue.
java.util.Calendar.setCalendarType,Sets the calendar type parameter to the giventype.
java.util.Calendar.setDate,"Sets the date field parameters to the values given byyear,month, anddayOfMonth."
java.util.Calendar.setFields,Sets field parameters to their values given byfieldValuePairsthat are pairs of a field and its value.
java.util.Calendar.setInstant,Sets the instant parameter to the giveninstantvalue that is  a millisecond offset fromthe  Epoch.
java.util.Calendar.setInstant,Sets the instant parameter to theinstantvalue given by aDate.
java.util.Calendar.setLenient,Sets the lenient mode parameter to the value given bylenient.
java.util.Calendar.setLocale,Sets the locale parameter to the givenlocale.
java.util.Calendar.setTimeOfDay,"Sets the time of day field parameters to the values given byhourOfDay,minute, andsecond."
java.util.Calendar.setTimeOfDay,"Sets the time of day field parameters to the values given byhourOfDay,minute,second, andmillis."
java.util.Calendar.setTimeZone,Sets the time zone parameter to the givenzone.
java.util.Calendar.setWeekDate,"Sets the week-based date parameters to the values with the given  date specifiers - week year, week of year, and day of week."
java.util.Calendar.setWeekDefinition,Sets the week definition parameters to the values given byfirstDayOfWeekandminimalDaysInFirstWeekthat are  used to determine thefirst  weekof a year.
java.util.Calendar.add,"Adds or subtracts the specified amount of time to the given calendar field,  based on the calendar's rules."
java.util.Calendar.after,Returns whether thisCalendarrepresents a time  after the time represented by the specifiedObject.
java.util.Calendar.before,Returns whether thisCalendarrepresents a time  before the time represented by the specifiedObject.
java.util.Calendar.clear,Sets all the calendar field values and the time value  (millisecond offset from theEpoch) of  thisCalendarundefined.
java.util.Calendar.clear,Sets the given calendar field value and the time value  (millisecond offset from theEpoch) of  thisCalendarundefined.
java.util.Calendar.compareTo,Compares the time values (millisecond offsets from theEpoch) represented by twoCalendarobjects.
java.util.Calendar.complete,Fills in any unset fields in the calendar fields.
java.util.Calendar.computeFields,Converts the current millisecond time valuetimeto calendar field values infields[].
java.util.Calendar.computeTime,Converts the current calendar field values infields[]to the millisecond time valuetime.
java.util.Calendar.equals,Compares thisCalendarto the specifiedObject.
java.util.Calendar.get,Returns the value of the given calendar field.
java.util.Calendar.getActualMaximum,"Returns the maximum value that the specified calendar field  could have, given the time value of thisCalendar."
java.util.Calendar.getActualMinimum,"Returns the minimum value that the specified calendar field  could have, given the time value of thisCalendar."
java.util.Calendar.getAvailableCalendarTypes,Returns an unmodifiableSetcontaining all calendar types  supported byCalendarin the runtime environment.
java.util.Calendar.getAvailableLocales,Returns an array of all locales for which thegetInstancemethods of this class can return localized instances.
java.util.Calendar.getCalendarType,Returns the calendar type of thisCalendar.
java.util.Calendar.getDisplayName,Returns the string representation of the calendarfieldvalue in the givenstyleandlocale.
java.util.Calendar.getDisplayNames,Returns aMapcontaining all names of the calendarfieldin the givenstyleandlocaleand their corresponding field values.
java.util.Calendar.getFirstDayOfWeek,"Gets what the first day of the week is; e.g.,SUNDAYin the U.S.,MONDAYin France."
java.util.Calendar.getGreatestMinimum,Returns the highest minimum value for the given calendar field  of thisCalendarinstance.
java.util.Calendar.getInstance,Gets a calendar using the default time zone and locale.
java.util.Calendar.getInstance,Gets a calendar using the default time zone and specified locale.
java.util.Calendar.getInstance,Gets a calendar using the specified time zone and default locale.
java.util.Calendar.getInstance,Gets a calendar with the specified time zone and locale.
java.util.Calendar.getLeastMaximum,Returns the lowest maximum value for the given calendar field  of thisCalendarinstance.
java.util.Calendar.getMaximum,Returns the maximum value for the given calendar field of thisCalendarinstance.
java.util.Calendar.getMinimalDaysInFirstWeek,"Gets what the minimal days required in the first week of the year are;  e.g., if the first week is defined as one that contains the first day  of the first month of a year, this method returns 1."
java.util.Calendar.getMinimum,Returns the minimum value for the given calendar field of thisCalendarinstance.
java.util.Calendar.getTime,"Returns aDateobject representing thisCalendar's time value (millisecond offset from theEpoch"")."
java.util.Calendar.getTimeInMillis,Returns this Calendar's time value in milliseconds.
java.util.Calendar.getWeeksInWeekYear,Returns the number of weeks in the week year represented by thisCalendar.
java.util.Calendar.getWeekYear,Returns the week year represented by thisCalendar.
java.util.Calendar.hashCode,Returns a hash code for this calendar.
java.util.Calendar.isLenient,Tells whether date/time interpretation is to be lenient.
java.util.Calendar.isSet,"Determines if the given calendar field has a value set,  including cases that the value has been set by internal fields  calculations triggered by agetmethod call."
java.util.Calendar.isWeekDateSupported,Returns whether thisCalendarsupports week dates.
java.util.Calendar.roll,Adds or subtracts (up/down) a single unit of time on the given time  field without changing larger fields.
java.util.Calendar.roll,Adds the specified (signed) amount to the specified calendar field  without changing larger fields.
java.util.Calendar.set,Sets the given calendar field to the given value.
java.util.Calendar.set,"Sets the values for the calendar fieldsYEAR,MONTH, andDAY_OF_MONTH."
java.util.Calendar.set,"Sets the values for the calendar fieldsYEAR,MONTH,DAY_OF_MONTH,HOUR_OF_DAY, andMINUTE."
java.util.Calendar.set,"Sets the values for the fieldsYEAR,MONTH,DAY_OF_MONTH,HOUR_OF_DAY,MINUTE, andSECOND."
java.util.Calendar.setFirstDayOfWeek,"Sets what the first day of the week is; e.g.,SUNDAYin the U.S.,MONDAYin France."
java.util.Calendar.setLenient,Specifies whether or not date/time interpretation is to be lenient.
java.util.Calendar.setMinimalDaysInFirstWeek,"Sets what the minimal days required in the first week of the year are;  For example, if the first week is defined as one that contains the first  day of the first month of a year, call this method with value 1."
java.util.Calendar.setTime,Sets this Calendar's time with the givenDate.
java.util.Calendar.setTimeInMillis,Sets this Calendar's current time from the given long value.
java.util.Calendar.setTimeZone,Sets the time zone with the given time zone value.
java.util.Calendar.setWeekDate,"Sets the date of thisCalendarwith the given date  specifiers - week year, week of year, and day of week."
java.util.Calendar.toInstant,Converts this object to anInstant.
java.util.Calendar.toString,Return a string representation of this calendar.
java.util.Collections.addAll,Adds all of the specified elements to the specified collection.
java.util.Collections.asLifoQueue,Returns a view of aDequeas a Last-in-first-out (Lifo)Queue.
java.util.Collections.binarySearch,Searches the specified list for the specified object using the binary  search algorithm.
java.util.Collections.checkedCollection,Returns a dynamically typesafe view of the specified collection.
java.util.Collections.checkedList,Returns a dynamically typesafe view of the specified list.
java.util.Collections.checkedMap,Returns a dynamically typesafe view of the specified map.
java.util.Collections.checkedNavigableMap,Returns a dynamically typesafe view of the specified navigable map.
java.util.Collections.checkedNavigableSet,Returns a dynamically typesafe view of the specified navigable set.
java.util.Collections.checkedQueue,Returns a dynamically typesafe view of the specified queue.
java.util.Collections.checkedSet,Returns a dynamically typesafe view of the specified set.
java.util.Collections.checkedSortedMap,Returns a dynamically typesafe view of the specified sorted map.
java.util.Collections.checkedSortedSet,Returns a dynamically typesafe view of the specified sorted set.
java.util.Collections.copy,Copies all of the elements from one list into another.
java.util.Collections.disjoint,Returnstrueif the two specified collections have no  elements in common.
java.util.Collections.emptyEnumeration,Returns an enumeration that has no elements.
java.util.Collections.emptyIterator,Returns an iterator that has no elements.
java.util.Collections.emptyList,Returns an empty list (immutable).
java.util.Collections.emptyListIterator,Returns a list iterator that has no elements.
java.util.Collections.emptyMap,Returns an empty map (immutable).
java.util.Collections.emptyNavigableMap,Returns an empty navigable map (immutable).
java.util.Collections.emptyNavigableSet,Returns an empty navigable set (immutable).
java.util.Collections.emptySet,Returns an empty set (immutable).
java.util.Collections.emptySortedMap,Returns an empty sorted map (immutable).
java.util.Collections.emptySortedSet,Returns an empty sorted set (immutable).
java.util.Collections.enumeration,Returns an enumeration over the specified collection.
java.util.Collections.fill,Replaces all of the elements of the specified list with the specified  element.
java.util.Collections.frequency,Returns the number of elements in the specified collection equal to the  specified object.
java.util.Collections.indexOfSubList,"Returns the starting position of the first occurrence of the specified  target list within the specified source list, or -1 if there is no  such occurrence."
java.util.Collections.lastIndexOfSubList,"Returns the starting position of the last occurrence of the specified  target list within the specified source list, or -1 if there is no such  occurrence."
java.util.Collections.list,Returns an array list containing the elements returned by the  specified enumeration in the order they are returned by the  enumeration.
java.util.Collections.max,"Returns the maximum element of the given collection, according to thenatural orderingof its elements."
java.util.Collections.max,"Returns the maximum element of the given collection, according to the  order induced by the specified comparator."
java.util.Collections.min,"Returns the minimum element of the given collection, according to thenatural orderingof its elements."
java.util.Collections.min,"Returns the minimum element of the given collection, according to the  order induced by the specified comparator."
java.util.Collections.nCopies,Returns an immutable list consisting ofncopies of the  specified object.
java.util.Collections.newSetFromMap,Returns a set backed by the specified map.
java.util.Collections.replaceAll,Replaces all occurrences of one specified value in a list with another.
java.util.Collections.reverse,Reverses the order of the elements in the specified list.
java.util.Collections.reverseOrder,Returns a comparator that imposes the reverse of thenatural  orderingon a collection of objects that implement theComparableinterface.
java.util.Collections.reverseOrder,Returns a comparator that imposes the reverse ordering of the specified  comparator.
java.util.Collections.rotate,Rotates the elements in the specified list by the specified distance.
java.util.Collections.shuffle,Randomly permutes the specified list using a default source of  randomness.
java.util.Collections.shuffle,Randomly permute the specified list using the specified source of  randomness.
java.util.Collections.singleton,Returns an immutable set containing only the specified object.
java.util.Collections.singletonList,Returns an immutable list containing only the specified object.
java.util.Collections.singletonMap,"Returns an immutable map, mapping only the specified key to the  specified value."
java.util.Collections.sort,"Sorts the specified list into ascending order, according to thenatural orderingof its elements."
java.util.Collections.sort,Sorts the specified list according to the order induced by the  specified comparator.
java.util.Collections.swap,Swaps the elements at the specified positions in the specified list.
java.util.Collections.synchronizedCollection,Returns a synchronized (thread-safe) collection backed by the specified  collection.
java.util.Collections.synchronizedList,Returns a synchronized (thread-safe) list backed by the specified  list.
java.util.Collections.synchronizedMap,Returns a synchronized (thread-safe) map backed by the specified  map.
java.util.Collections.synchronizedNavigableMap,Returns a synchronized (thread-safe) navigable map backed by the  specified navigable map.
java.util.Collections.synchronizedNavigableSet,Returns a synchronized (thread-safe) navigable set backed by the  specified navigable set.
java.util.Collections.synchronizedSet,Returns a synchronized (thread-safe) set backed by the specified  set.
java.util.Collections.synchronizedSortedMap,Returns a synchronized (thread-safe) sorted map backed by the specified  sorted map.
java.util.Collections.synchronizedSortedSet,Returns a synchronized (thread-safe) sorted set backed by the specified  sorted set.
java.util.Collections.unmodifiableCollection,Returns anunmodifiable viewof the  specified collection.
java.util.Collections.unmodifiableList,Returns anunmodifiable viewof the  specified list.
java.util.Collections.unmodifiableMap,Returns anunmodifiable viewof the  specified map.
java.util.Collections.unmodifiableNavigableMap,Returns anunmodifiable viewof the  specified navigable map.
java.util.Collections.unmodifiableNavigableSet,Returns anunmodifiable viewof the  specified navigable set.
java.util.Collections.unmodifiableSet,Returns anunmodifiable viewof the  specified set.
java.util.Collections.unmodifiableSortedMap,Returns anunmodifiable viewof the  specified sorted map.
java.util.Collections.unmodifiableSortedSet,Returns anunmodifiable viewof the  specified sorted set.
java.util.Currency.getAvailableCurrencies,Gets the set of available currencies.
java.util.Currency.getCurrencyCode,Gets the ISO 4217 currency code of this currency.
java.util.Currency.getDefaultFractionDigits,Gets the default number of fraction digits used with this currency.
java.util.Currency.getDisplayName,Gets the name that is suitable for displaying this currency for  the defaultDISPLAYlocale.
java.util.Currency.getDisplayName,Gets the name that is suitable for displaying this currency for  the specified locale.
java.util.Currency.getInstance,Returns theCurrencyinstance for the given currency code.
java.util.Currency.getInstance,Returns theCurrencyinstance for the country of the  given locale.
java.util.Currency.getNumericCode,Returns the ISO 4217 numeric code of this currency.
java.util.Currency.getNumericCodeAsString,Returns the 3 digit ISO 4217 numeric code of this currency as aString.
java.util.Currency.getSymbol,Gets the symbol of this currency for the defaultDISPLAYlocale.
java.util.Currency.getSymbol,Gets the symbol of this currency for the specified locale.
java.util.Currency.toString,Returns the ISO 4217 currency code of this currency.
java.util.Date.after,Tests if this date is after the specified date.
java.util.Date.before,Tests if this date is before the specified date.
java.util.Date.clone,Return a copy of this object.
java.util.Date.compareTo,Compares two Dates for ordering.
java.util.Date.equals,Compares two dates for equality.
java.util.Date.from,Obtains an instance ofDatefrom anInstantobject.
java.util.Date.getDate,"Deprecated.As of JDK version 1.1,  replaced byCalendar.get(Calendar.DAY_OF_MONTH)."
java.util.Date.getDay,"Deprecated.As of JDK version 1.1,  replaced byCalendar.get(Calendar.DAY_OF_WEEK)."
java.util.Date.getHours,"Deprecated.As of JDK version 1.1,  replaced byCalendar.get(Calendar.HOUR_OF_DAY)."
java.util.Date.getMinutes,"Deprecated.As of JDK version 1.1,  replaced byCalendar.get(Calendar.MINUTE)."
java.util.Date.getMonth,"Deprecated.As of JDK version 1.1,  replaced byCalendar.get(Calendar.MONTH)."
java.util.Date.getSeconds,"Deprecated.As of JDK version 1.1,  replaced byCalendar.get(Calendar.SECOND)."
java.util.Date.getTime,"Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT  represented by thisDateobject."
java.util.Date.getTimezoneOffset,"Deprecated.As of JDK version 1.1,  replaced by-(Calendar.get(Calendar.ZONE_OFFSET) +  Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)."
java.util.Date.getYear,"Deprecated.As of JDK version 1.1,  replaced byCalendar.get(Calendar.YEAR) - 1900."
java.util.Date.hashCode,Returns a hash code value for this object.
java.util.Date.parse,"Deprecated.As of JDK version 1.1,  replaced byDateFormat.parse(String s)."
java.util.Date.setDate,"Deprecated.As of JDK version 1.1,  replaced byCalendar.set(Calendar.DAY_OF_MONTH, int date)."
java.util.Date.setHours,"Deprecated.As of JDK version 1.1,  replaced byCalendar.set(Calendar.HOUR_OF_DAY, int hours)."
java.util.Date.setMinutes,"Deprecated.As of JDK version 1.1,  replaced byCalendar.set(Calendar.MINUTE, int minutes)."
java.util.Date.setMonth,"Deprecated.As of JDK version 1.1,  replaced byCalendar.set(Calendar.MONTH, int month)."
java.util.Date.setSeconds,"Deprecated.As of JDK version 1.1,  replaced byCalendar.set(Calendar.SECOND, int seconds)."
java.util.Date.setTime,"Sets thisDateobject to represent a point in time that istimemilliseconds after January 1, 1970 00:00:00 GMT."
java.util.Date.setYear,"Deprecated.As of JDK version 1.1,  replaced byCalendar.set(Calendar.YEAR, year + 1900)."
java.util.Date.toGMTString,"Deprecated.As of JDK version 1.1,  replaced byDateFormat.format(Date date), using a  GMTTimeZone."
java.util.Date.toInstant,Converts thisDateobject to anInstant.
java.util.Date.toLocaleString,"Deprecated.As of JDK version 1.1,  replaced byDateFormat.format(Date date)."
java.util.Date.toString,Converts thisDateobject to aStringof the form:
java.util.Date.UTC,"Deprecated.As of JDK version 1.1,  replaced byCalendar.set(year + 1900, month, date, hrs, min, sec)orGregorianCalendar(year + 1900, month, date, hrs, min, sec), using a UTCTimeZone, followed byCalendar.getTime().getTime()."
java.util.Dictionary.elements,Returns an enumeration of the values in this dictionary.
java.util.Dictionary.get,Returns the value to which the key is mapped in this dictionary.
java.util.Dictionary.isEmpty,Tests if this dictionary maps no keys to value.
java.util.Dictionary.keys,Returns an enumeration of the keys in this dictionary.
java.util.Dictionary.put,Maps the specifiedkeyto the specifiedvaluein this dictionary.
java.util.Dictionary.remove,Removes thekey(and its correspondingvalue) from this dictionary.
java.util.Dictionary.size,Returns the number of entries (distinct keys) in this dictionary.
java.util.DoubleSummaryStatistics.accept,Records another value into the summary information.
java.util.DoubleSummaryStatistics.combine,Combines the state of anotherDoubleSummaryStatisticsinto this  one.
java.util.DoubleSummaryStatistics.getAverage,"Returns the arithmetic mean of values recorded, or zero if no  values have been recorded."
java.util.DoubleSummaryStatistics.getCount,Return the count of values recorded.
java.util.DoubleSummaryStatistics.getMax,"Returns the maximum recorded value,Double.NaNif any recorded  value was NaN orDouble.NEGATIVE_INFINITYif no values were  recorded."
java.util.DoubleSummaryStatistics.getMin,"Returns the minimum recorded value,Double.NaNif any recorded  value was NaN orDouble.POSITIVE_INFINITYif no values were  recorded."
java.util.DoubleSummaryStatistics.getSum,"Returns the sum of values recorded, or zero if no values have been  recorded."
java.util.DoubleSummaryStatistics.toString,Returns a non-empty string representation of this object suitable for  debugging.
java.util.DuplicateFormatFlagsException.getFlags,Returns the set of flags which contains a duplicate flag.
java.util.EnumMap.clear,Removes all mappings from this map.
java.util.EnumMap.clone,Returns a shallow copy of this enum map.
java.util.EnumMap.entrySet,Returns aSetview of the mappings contained in this map.
java.util.EnumMap.put,Associates the specified value with the specified key in this map.
java.util.EnumMap.putAll,Copies all of the mappings from the specified map to this map.
java.util.EnumMap.remove,Removes the mapping for this key from this map if present.
java.util.EnumSet.allOf,Creates an enum set containing all of the elements in the specified  element type.
java.util.EnumSet.clone,Returns a copy of this set.
java.util.EnumSet.complementOf,"Creates an enum set with the same element type as the specified enum  set, initially containing all the elements of this type that arenotcontained in the specified set."
java.util.EnumSet.copyOf,Creates an enum set initialized from the specified collection.
java.util.EnumSet.copyOf,"Creates an enum set with the same element type as the specified enum  set, initially containing the same elements (if any)."
java.util.EnumSet.noneOf,Creates an empty enum set with the specified element type.
java.util.EnumSet.of,Creates an enum set initially containing the specified element.
java.util.EnumSet.of,Creates an enum set initially containing the specified elements.
java.util.EnumSet.range,Creates an enum set initially containing all of the elements in the  range defined by the two specified endpoints.
java.util.EventListenerProxy.getListener,Returns the listener associated with the proxy.
java.util.EventObject.getSource,The object on which the Event initially occurred.
java.util.EventObject.toString,Returns a String representation of this EventObject.
java.util.FormatFlagsConversionMismatchException.getConversion,Returns the incompatible conversion.
java.util.FormatFlagsConversionMismatchException.getFlags,Returns the incompatible flag.
java.util.Formatter.close,Closes this formatter.
java.util.Formatter.flush,Flushes this formatter.
java.util.Formatter.format,Writes a formatted string to this object's destination using the  specified format string and arguments.
java.util.Formatter.format,"Writes a formatted string to this object's destination using the  specified locale, format string, and arguments."
java.util.Formatter.ioException,Returns theIOExceptionlast thrown by this formatter'sAppendable.
java.util.Formatter.locale,Returns the locale set by the construction of this formatter.
java.util.Formatter.out,Returns the destination for the output.
java.util.Formatter.toString,Returns the result of invokingtoString()on the destination  for the output.
java.util.GregorianCalendar.add,"Adds the specified (signed) amount of time to the given calendar field,  based on the calendar's rules."
java.util.GregorianCalendar.computeFields,Converts the time value (millisecond offset from theEpoch) to calendar field values.
java.util.GregorianCalendar.computeTime,Converts calendar field values to the time value (millisecond  offset from theEpoch).
java.util.GregorianCalendar.equals,Compares thisGregorianCalendarto the specifiedObject.
java.util.GregorianCalendar.from,Obtains an instance ofGregorianCalendarwith the default locale  from aZonedDateTimeobject.
java.util.GregorianCalendar.getActualMaximum,"Returns the maximum value that this calendar field could have,  taking into consideration the given time value and the current  values of thegetFirstDayOfWeek,getMinimalDaysInFirstWeek,getGregorianChangeandgetTimeZonemethods."
java.util.GregorianCalendar.getActualMinimum,"Returns the minimum value that this calendar field could have,  taking into consideration the given time value and the current  values of thegetFirstDayOfWeek,getMinimalDaysInFirstWeek,getGregorianChangeandgetTimeZonemethods."
java.util.GregorianCalendar.getCalendarType,"Returns""gregory""as the calendar type."
java.util.GregorianCalendar.getGreatestMinimum,Returns the highest minimum value for the given calendar field  of thisGregorianCalendarinstance.
java.util.GregorianCalendar.getGregorianChange,Gets the Gregorian Calendar change date.
java.util.GregorianCalendar.getLeastMaximum,Returns the lowest maximum value for the given calendar field  of thisGregorianCalendarinstance.
java.util.GregorianCalendar.getMaximum,Returns the maximum value for the given calendar field of thisGregorianCalendarinstance.
java.util.GregorianCalendar.getMinimum,Returns the minimum value for the given calendar field of thisGregorianCalendarinstance.
java.util.GregorianCalendar.getWeeksInWeekYear,Returns the number of weeks in theweek yearrepresented by thisGregorianCalendar.
java.util.GregorianCalendar.getWeekYear,Returns theweek yearrepresented by thisGregorianCalendar.
java.util.GregorianCalendar.hashCode,Generates the hash code for thisGregorianCalendarobject.
java.util.GregorianCalendar.isLeapYear,Determines if the given year is a leap year.
java.util.GregorianCalendar.isWeekDateSupported,Returnstrueindicating thisGregorianCalendarsupports week dates.
java.util.GregorianCalendar.roll,Adds a signed amount to the specified calendar field without changing larger fields.
java.util.GregorianCalendar.setGregorianChange,Sets theGregorianCalendarchange date.
java.util.GregorianCalendar.setWeekDate,"Sets thisGregorianCalendarto the date given by the  date specifiers -weekYear,weekOfYear, anddayOfWeek."
java.util.GregorianCalendar.toZonedDateTime,Converts this object to aZonedDateTimethat represents  the same point on the time-line as thisGregorianCalendar.
java.util.HashMap.clear,Removes all of the mappings from this map.
java.util.HashMap.clone,Returns a shallow copy of thisHashMapinstance: the keys and  values themselves are not cloned.
java.util.HashMap.compute,Attempts to compute a mapping for the specified key and its current  mapped value (ornullif there is no current mapping).
java.util.HashMap.computeIfAbsent,"If the specified key is not already associated with a value (or is mapped  tonull), attempts to compute its value using the given mapping  function and enters it into this map unlessnull."
java.util.HashMap.containsKey,Returnstrueif this map contains a mapping for the  specified key.
java.util.HashMap.merge,"If the specified key is not already associated with a value or is  associated with null, associates it with the given non-null value."
java.util.HashMap.remove,Removes the mapping for the specified key from this map if present.
java.util.HashSet.add,Adds the specified element to this set if it is not already present.
java.util.HashSet.clear,Removes all of the elements from this set.
java.util.HashSet.clone,Returns a shallow copy of thisHashSetinstance: the elements  themselves are not cloned.
java.util.HashSet.contains,Returnstrueif this set contains the specified element.
java.util.HashSet.isEmpty,Returnstrueif this set contains no elements.
java.util.HashSet.iterator,Returns an iterator over the elements in this set.
java.util.HashSet.remove,Removes the specified element from this set if it is present.
java.util.HashSet.size,Returns the number of elements in this set (its cardinality).
java.util.HashSet.spliterator,Creates alate-bindingandfail-fastSpliteratorover the elements in this  set.
java.util.Hashtable.clear,Clears this hashtable so that it contains no keys.
java.util.Hashtable.clone,Creates a shallow copy of this hashtable.
java.util.Hashtable.contains,Tests if some key maps into the specified value in this hashtable.
java.util.Hashtable.containsKey,Tests if the specified object is a key in this hashtable.
java.util.Hashtable.containsValue,Returns true if this hashtable maps one or more keys to this value.
java.util.Hashtable.elements,Returns an enumeration of the values in this hashtable.
java.util.Hashtable.equals,"Compares the specified Object with this Map for equality,  as per the definition in the Map interface."
java.util.Hashtable.hashCode,Returns the hash code value for this Map as per the definition in the  Map interface.
java.util.Hashtable.isEmpty,Tests if this hashtable maps no keys to values.
java.util.Hashtable.keys,Returns an enumeration of the keys in this hashtable.
java.util.Hashtable.put,Maps the specifiedkeyto the specifiedvaluein this hashtable.
java.util.Hashtable.putAll,Copies all of the mappings from the specified map to this hashtable.
java.util.Hashtable.rehash,"Increases the capacity of and internally reorganizes this  hashtable, in order to accommodate and access its entries more  efficiently."
java.util.Hashtable.remove,Removes the key (and its corresponding value) from this  hashtable.
java.util.Hashtable.size,Returns the number of keys in this hashtable.
java.util.Hashtable.toString,"Returns a string representation of thisHashtableobject  in the form of a set of entries, enclosed in braces and separated  by the ASCII characters "","" (comma and space)."
java.util.HexFormat.delimiter,Returns the delimiter between hexadecimal values in formatted hexadecimal strings.
java.util.HexFormat.equals,Returnstrueif the other object is aHexFormatwith the same parameters.
java.util.HexFormat.formatHex,Returns a hexadecimal string formatted from a byte array.
java.util.HexFormat.formatHex,Returns a hexadecimal string formatted from a byte array range.
java.util.HexFormat.formatHex,Appends formatted hexadecimal strings from a byte array to theAppendable.
java.util.HexFormat.formatHex,Appends formatted hexadecimal strings from a byte array range to theAppendable.
java.util.HexFormat.fromHexDigit,Returns the value for the hexadecimal character or codepoint.
java.util.HexFormat.fromHexDigits,Returns theintvalue parsed from a string of up to eight hexadecimal characters.
java.util.HexFormat.fromHexDigits,Returns theintvalue parsed from a string range of up to eight hexadecimal  characters.
java.util.HexFormat.fromHexDigitsToLong,Returns the long value parsed from a string of up to sixteen hexadecimal characters.
java.util.HexFormat.fromHexDigitsToLong,Returns the long value parsed from a string range of up to sixteen hexadecimal  characters.
java.util.HexFormat.hashCode,Returns a hashcode for thisHexFormat.
java.util.HexFormat.isHexDigit,Returnstrueif the character is a valid hexadecimal character or codepoint.
java.util.HexFormat.isUpperCase,"Returnstrueif the hexadecimal digits are uppercase,  otherwisefalse."
java.util.HexFormat.of,Returns a hexadecimal formatter with no delimiter and lowercase characters.
java.util.HexFormat.ofDelimiter,Returns a hexadecimal formatter with the delimiter and lowercase characters.
java.util.HexFormat.parseHex,Returns a byte array containing hexadecimal values parsed from  a range of the character array.
java.util.HexFormat.parseHex,Returns a byte array containing hexadecimal values parsed from the string.
java.util.HexFormat.parseHex,Returns a byte array containing hexadecimal values parsed from a range of the string.
java.util.HexFormat.prefix,Returns the prefix used for each hexadecimal value in formatted hexadecimal strings.
java.util.HexFormat.suffix,Returns the suffix used for each hexadecimal value in formatted hexadecimal strings.
java.util.HexFormat.toHexDigits,Returns the two hexadecimal characters for thebytevalue.
java.util.HexFormat.toHexDigits,Returns the four hexadecimal characters for thecharvalue.
java.util.HexFormat.toHexDigits,Returns the eight hexadecimal characters for theintvalue.
java.util.HexFormat.toHexDigits,Returns the sixteen hexadecimal characters for thelongvalue.
java.util.HexFormat.toHexDigits,Returns up to sixteen hexadecimal characters for thelongvalue.
java.util.HexFormat.toHexDigits,Returns the four hexadecimal characters for theshortvalue.
java.util.HexFormat.toHexDigits,Appends two hexadecimal characters for the byte value to theAppendable.
java.util.HexFormat.toHighHexDigit,Returns the hexadecimal character for the high 4 bits of the value considering it to be a byte.
java.util.HexFormat.toLowHexDigit,Returns the hexadecimal character for the low 4 bits of the value considering it to be a byte.
java.util.HexFormat.toString,"Returns a description of the formatter parameters for uppercase,  delimiter, prefix, and suffix."
java.util.HexFormat.withDelimiter,Returns a copy of thisHexFormatwith the delimiter.
java.util.HexFormat.withLowerCase,Returns a copy of thisHexFormatto use lowercase hexadecimal characters.
java.util.HexFormat.withPrefix,Returns a copy of thisHexFormatwith the prefix.
java.util.HexFormat.withSuffix,Returns a copy of thisHexFormatwith the suffix.
java.util.HexFormat.withUpperCase,Returns a copy of thisHexFormatto use uppercase hexadecimal characters.
java.util.IdentityHashMap.clone,Returns a shallow copy of this identity hash map: the keys and values  themselves are not cloned.
java.util.IdentityHashMap.containsKey,Tests whether the specified object reference is a key in this identity  hash map.
java.util.IdentityHashMap.containsValue,Tests whether the specified object reference is a value in this identity  hash map.
java.util.IdentityHashMap.isEmpty,Returnstrueif this identity hash map contains no key-value  mappings.
java.util.IdentityHashMap.keySet,Returns an identity-based set view of the keys contained in this map.
java.util.IdentityHashMap.put,Associates the specified value with the specified key in this identity  hash map.
java.util.IdentityHashMap.size,Returns the number of key-value mappings in this identity hash map.
java.util.IllegalFormatCodePointException.getCodePoint,Returns the illegal code point as defined byCharacter.isValidCodePoint(int).
java.util.IllegalFormatConversionException.getArgumentClass,Returns the class of the mismatched argument.
java.util.IllegalFormatConversionException.getConversion,Returns the inapplicable conversion.
java.util.IllegalFormatFlagsException.getFlags,Returns the set of flags which contains an illegal combination.
java.util.IllegalFormatPrecisionException.getPrecision,Returns the precision.
java.util.IllegalFormatWidthException.getWidth,Returns the width.
java.util.IntSummaryStatistics.accept,Records a new value into the summary information
java.util.IntSummaryStatistics.combine,Combines the state of anotherIntSummaryStatisticsinto this one.
java.util.IntSummaryStatistics.getAverage,"Returns the arithmetic mean of values recorded, or zero if no values have been  recorded."
java.util.IntSummaryStatistics.getCount,Returns the count of values recorded.
java.util.IntSummaryStatistics.getMax,"Returns the maximum value recorded, orInteger.MIN_VALUEif no  values have been recorded."
java.util.IntSummaryStatistics.getMin,"Returns the minimum value recorded, orInteger.MAX_VALUEif no  values have been recorded."
java.util.LinkedHashMap.removeEldestEntry,Returnstrueif this map should remove its eldest entry.
java.util.LinkedHashSet.spliterator,Creates alate-bindingandfail-fastSpliteratorover the elements in this set.
java.util.LinkedList.add,Inserts the specified element at the specified position in this list.
java.util.LinkedList.addAll,"Appends all of the elements in the specified collection to the end of  this list, in the order that they are returned by the specified  collection's iterator."
java.util.LinkedList.addFirst,Inserts the specified element at the beginning of this list.
java.util.LinkedList.clone,Returns a shallow copy of thisLinkedList.
java.util.LinkedList.element,"Retrieves, but does not remove, the head (first element) of this list."
java.util.LinkedList.getFirst,Returns the first element in this list.
java.util.LinkedList.getLast,Returns the last element in this list.
java.util.LinkedList.listIterator,"Returns a list-iterator of the elements in this list (in proper  sequence), starting at the specified position in the list."
java.util.LinkedList.offer,Adds the specified element as the tail (last element) of this list.
java.util.LinkedList.offerFirst,Inserts the specified element at the front of this list.
java.util.LinkedList.offerLast,Inserts the specified element at the end of this list.
java.util.LinkedList.peekFirst,"Retrieves, but does not remove, the first element of this list,  or returnsnullif this list is empty."
java.util.LinkedList.peekLast,"Retrieves, but does not remove, the last element of this list,  or returnsnullif this list is empty."
java.util.LinkedList.poll,Retrieves and removes the head (first element) of this list.
java.util.LinkedList.pollFirst,"Retrieves and removes the first element of this list,  or returnsnullif this list is empty."
java.util.LinkedList.pollLast,"Retrieves and removes the last element of this list,  or returnsnullif this list is empty."
java.util.LinkedList.pop,Pops an element from the stack represented by this list.
java.util.LinkedList.push,Pushes an element onto the stack represented by this list.
java.util.LinkedList.removeFirst,Removes and returns the first element from this list.
java.util.LinkedList.removeFirstOccurrence,Removes the first occurrence of the specified element in this  list (when traversing the list from head to tail).
java.util.LinkedList.removeLast,Removes and returns the last element from this list.
java.util.LinkedList.removeLastOccurrence,Removes the last occurrence of the specified element in this  list (when traversing the list from head to tail).
java.util.LinkedList.set,Replaces the element at the specified position in this list with the  specified element.
java.util.LinkedList.toArray,Returns an array containing all of the elements in this list in  proper sequence (from first to last element); the runtime type of  the returned array is that of the specified array.
java.util.ListResourceBundle.getContents,Returns an array in which each item is a pair of objects in anObjectarray.
java.util.ListResourceBundle.getKeys,Returns anEnumerationof the keys contained in  thisResourceBundleand its parent bundles.
java.util.ListResourceBundle.handleGetObject,Gets an object for the given key from this resource bundle.
java.util.ListResourceBundle.handleKeySet,Returns aSetof the keys containedonlyin thisResourceBundle.
java.util.Locale.addUnicodeLocaleAttribute,"Adds a unicode locale attribute, if not already present, otherwise  has no effect."
java.util.Locale.build,Returns an instance ofLocalecreated from the fields set  on this builder.
java.util.Locale.clear,"Resets the builder to its initial, empty state."
java.util.Locale.clearExtensions,"Resets the extensions to their initial, empty state."
java.util.Locale.removeUnicodeLocaleAttribute,"Removes a unicode locale attribute, if present, otherwise has no  effect."
java.util.Locale.setExtension,Sets the extension for the given key.
java.util.Locale.setLanguage,Sets the language.
java.util.Locale.setLanguageTag,Resets the Builder to match the provided IETF BCP 47  language tag.
java.util.Locale.setLocale,Resets theBuilderto match the providedlocale.
java.util.Locale.setRegion,Sets the region.
java.util.Locale.setScript,Sets the script.
java.util.Locale.setUnicodeLocaleKeyword,Sets the Unicode locale keyword type for the given key.
java.util.Locale.setVariant,Sets the variant.
java.util.Locale.equals,Returns true if this Locale is equal to another object.
java.util.Locale.filter,Returns a list of matchingLocaleinstances using the filtering  mechanism defined in RFC 4647.
java.util.Locale.filterTags,Returns a list of matching languages tags using the basic filtering  mechanism defined in RFC 4647.
java.util.Locale.forLanguageTag,Returns a locale for the specified IETF BCP 47 language tag string.
java.util.Locale.getAvailableLocales,Returns an array of all installed locales.
java.util.Locale.getCountry,"Returns the country/region code for this locale, which should  either be the empty string, an uppercase ISO 3166 2-letter code,  or a UN M.49 3-digit code."
java.util.Locale.getDefault,Gets the current value of the default locale for this instance  of the Java Virtual Machine.
java.util.Locale.getDefault,Gets the current value of the default locale for the specified Category  for this instance of the Java Virtual Machine.
java.util.Locale.getDisplayCountry,Returns a name for the locale's country that is appropriate for display to the  user.
java.util.Locale.getDisplayLanguage,Returns a name for the locale's language that is appropriate for display to the  user.
java.util.Locale.getDisplayName,Returns a name for the locale that is appropriate for display to the  user.
java.util.Locale.getDisplayName,Returns a name for the locale that is appropriate for display  to the user.
java.util.Locale.getDisplayScript,Returns a name for the locale's script that is appropriate for display to  the user.
java.util.Locale.getDisplayScript,Returns a name for the locale's script that is appropriate  for display to the user.
java.util.Locale.getDisplayVariant,Returns a name for the locale's variant code that is appropriate for display to the  user.
java.util.Locale.getExtension,"Returns the extension (or private use) value associated with  the specified key, or null if there is no extension  associated with the key."
java.util.Locale.getExtensionKeys,"Returns the set of extension keys associated with this locale, or the  empty set if it has no extensions."
java.util.Locale.getISO3Country,Returns a three-letter abbreviation for this locale's country.
java.util.Locale.getISO3Language,Returns a three-letter abbreviation of this locale's language.
java.util.Locale.getISOCountries,Returns a list of all 2-letter country codes defined in ISO 3166.
java.util.Locale.getISOCountries,Returns aSetof ISO3166 country codes for the specified type.
java.util.Locale.getISOLanguages,Returns a list of all 2-letter language codes defined in ISO 639.
java.util.Locale.getLanguage,Returns the language code of this Locale.
java.util.Locale.getScript,"Returns the script for this locale, which should  either be the empty string or an ISO 15924 4-letter script  code."
java.util.Locale.getUnicodeLocaleAttributes,"Returns the set of unicode locale attributes associated with  this locale, or the empty set if it has no attributes."
java.util.Locale.getUnicodeLocaleKeys,"Returns the set of Unicode locale keys defined by this locale, or the empty set if  this locale has none."
java.util.Locale.getUnicodeLocaleType,Returns the Unicode locale type associated with the specified Unicode locale key  for this locale.
java.util.Locale.getVariant,Returns the variant code for this locale.
java.util.Locale.hasExtensions,Returnstrueif thisLocalehas anyextensions.
java.util.Locale.lookup,Returns aLocaleinstance for the best-matching language  tag using the lookup mechanism defined in RFC 4647.
java.util.Locale.lookupTag,Returns the best-matching language tag using the lookup mechanism  defined in RFC 4647.
java.util.Locale.setDefault,Sets the default locale for this instance of the Java Virtual Machine.
java.util.Locale.setDefault,Sets the default locale for the specified Category for this instance  of the Java Virtual Machine.
java.util.Locale.stripExtensions,Returns a copy of thisLocalewith noextensions.
java.util.Locale.toLanguageTag,Returns a well-formed IETF BCP 47 language tag representing  this locale.
java.util.Locale.toString,"Returns a string representation of thisLocaleobject, consisting of language, country, variant, script,  and extensions as below:    language + ""_"" + country + ""_"" + (variant + ""_#"" | ""#"") + script + ""_"" + extensions     Language is always lower case, country is always upper case, script is always title  case, and extensions are always lower case."
java.util.Locale.getRange,Returns the language range of thisLanguageRange.
java.util.Locale.getWeight,Returns the weight of thisLanguageRange.
java.util.Locale.mapEquivalents,Generates a new customized Language Priority List using the givenpriorityListandmap.
java.util.Locale.parse,Parses the givenrangesto generate a Language Priority List.
java.util.Locale.parse,"Parses the givenrangesto generate a Language Priority  List, and then customizes the list using the givenmap."
java.util.Locale.toString,"Returns an informative string representation of thisLanguageRangeobject, consisting of language range and weight if the range is  weighted and the weight is less than the max weight."
java.util.LongSummaryStatistics.accept,Records a newintvalue into the summary information.
java.util.LongSummaryStatistics.accept,Records a newlongvalue into the summary information.
java.util.LongSummaryStatistics.combine,Combines the state of anotherLongSummaryStatisticsinto this  one.
java.util.LongSummaryStatistics.getMax,"Returns the maximum value recorded, orLong.MIN_VALUEif no  values have been recorded"
java.util.LongSummaryStatistics.getMin,"Returns the minimum value recorded, orLong.MAX_VALUEif no  values have been recorded."
java.util.MissingFormatArgumentException.getFormatSpecifier,Returns the unmatched format specifier.
java.util.MissingFormatWidthException.getFormatSpecifier,Returns the format specifier which does not have a width.
java.util.MissingResourceException.getClassName,Gets parameter passed by constructor.
java.util.Objects.checkFromIndexSize,Checks if the sub-range fromfromIndex(inclusive) tofromIndex + size(exclusive) is within the bounds of range from0(inclusive) tolength(exclusive).
java.util.Objects.checkFromToIndex,Checks if the sub-range fromfromIndex(inclusive) totoIndex(exclusive) is within the bounds of range from0(inclusive) tolength(exclusive).
java.util.Objects.checkIndex,Checks if theindexis within the bounds of the range from0(inclusive) tolength(exclusive).
java.util.Objects.compare,"Returns 0 if the arguments are identical andc.compare(a, b)otherwise."
java.util.Objects.deepEquals,Returnstrueif the arguments are deeply equal to each other  andfalseotherwise.
java.util.Objects.equals,Returnstrueif the arguments are equal to each other  andfalseotherwise.
java.util.Objects.hash,Generates a hash code for a sequence of input values.
java.util.Objects.hashCode,Returns the hash code of a non-nullargument and 0 for  anullargument.
java.util.Objects.isNull,Returnstrueif the provided reference isnullotherwise  returnsfalse.
java.util.Objects.nonNull,Returnstrueif the provided reference is non-nullotherwise returnsfalse.
java.util.Objects.requireNonNull,Checks that the specified object reference is notnull.
java.util.Objects.requireNonNull,Checks that the specified object reference is notnulland  throws a customizedNullPointerExceptionif it is.
java.util.Objects.requireNonNullElse,Returns the first argument if it is non-nulland  otherwise returns the non-nullsecond argument.
java.util.Objects.requireNonNullElseGet,Returns the first argument if it is non-nulland otherwise  returns the non-nullvalue ofsupplier.get().
java.util.Objects.toString,"Returns the result of callingtoStringfor a non-nullargument and""null""for anullargument."
java.util.Objects.toString,Returns the result of callingtoStringon the first  argument if the first argument is notnulland returns  the second argument otherwise.
java.util.Optional.empty,Returns an emptyOptionalinstance.
java.util.Optional.equals,"Indicates whether some other object is ""equal to"" thisOptional."
java.util.Optional.filter,"If a value is present, and the value matches the given predicate,  returns anOptionaldescribing the value, otherwise returns an  emptyOptional."
java.util.Optional.flatMap,"If a value is present, returns the result of applying the givenOptional-bearing mapping function to the value, otherwise returns  an emptyOptional."
java.util.Optional.get,"If a value is present, returns the value, otherwise throwsNoSuchElementException."
java.util.Optional.hashCode,"Returns the hash code of the value, if present, otherwise0(zero) if no value is present."
java.util.Optional.ifPresent,"If a value is present, performs the given action with the value,  otherwise does nothing."
java.util.Optional.ifPresentOrElse,"If a value is present, performs the given action with the value,  otherwise performs the given empty-based action."
java.util.Optional.isEmpty,"If a value is  not present, returnstrue, otherwisefalse."
java.util.Optional.isPresent,"If a value is present, returnstrue, otherwisefalse."
java.util.Optional.map,"If a value is present, returns anOptionaldescribing (as if byofNullable(T)) the result of applying the given mapping function to  the value, otherwise returns an emptyOptional."
java.util.Optional.of,Returns anOptionaldescribing the given non-nullvalue.
java.util.Optional.ofNullable,"Returns anOptionaldescribing the given value, if  non-null, otherwise returns an emptyOptional."
java.util.Optional.or,"If a value is present, returns anOptionaldescribing the value,  otherwise returns anOptionalproduced by the supplying function."
java.util.Optional.orElse,"If a value is present, returns the value, otherwise returnsother."
java.util.Optional.orElseGet,"If a value is present, returns the value, otherwise returns the result  produced by the supplying function."
java.util.Optional.orElseThrow,"If a value is present, returns the value, otherwise throws an exception  produced by the exception supplying function."
java.util.Optional.stream,"If a value is present, returns a sequentialStreamcontaining  only that value, otherwise returns an emptyStream."
java.util.Optional.toString,Returns a non-empty string representation of thisOptionalsuitable for debugging.
java.util.OptionalDouble.empty,Returns an emptyOptionalDoubleinstance.
java.util.OptionalDouble.equals,"Indicates whether some other object is ""equal to"" thisOptionalDouble."
java.util.OptionalDouble.isEmpty,"If a value is not present, returnstrue, otherwisefalse."
java.util.OptionalDouble.of,Returns anOptionalDoubledescribing the given value.
java.util.OptionalDouble.stream,"If a value is present, returns a sequentialDoubleStreamcontaining only that value, otherwise returns an emptyDoubleStream."
java.util.OptionalDouble.toString,Returns a non-empty string representation of thisOptionalDoublesuitable for debugging.
java.util.OptionalInt.empty,Returns an emptyOptionalIntinstance.
java.util.OptionalInt.equals,"Indicates whether some other object is ""equal to"" thisOptionalInt."
java.util.OptionalInt.of,Returns anOptionalIntdescribing the given value.
java.util.OptionalInt.stream,"If a value is present, returns a sequentialIntStreamcontaining  only that value, otherwise returns an emptyIntStream."
java.util.OptionalInt.toString,Returns a non-empty string representation of thisOptionalIntsuitable for debugging.
java.util.OptionalLong.empty,Returns an emptyOptionalLonginstance.
java.util.OptionalLong.equals,"Indicates whether some other object is ""equal to"" thisOptionalLong."
java.util.OptionalLong.of,Returns anOptionalLongdescribing the given value.
java.util.OptionalLong.stream,"If a value is present, returns a sequentialLongStreamcontaining  only that value, otherwise returns an emptyLongStream."
java.util.OptionalLong.toString,Returns a non-empty string representation of thisOptionalLongsuitable for debugging.
java.util.PriorityQueue.add,Inserts the specified element into this priority queue.
java.util.PriorityQueue.clear,Removes all of the elements from this priority queue.
java.util.PriorityQueue.comparator,"Returns the comparator used to order the elements in this  queue, ornullif this queue is sorted according to  thenatural orderingof its elements."
java.util.PriorityQueue.contains,Returnstrueif this queue contains the specified element.
java.util.PriorityQueue.iterator,Returns an iterator over the elements in this queue.
java.util.PriorityQueue.peek,"Retrieves, but does not remove, the head of this queue,  or returnsnullif this queue is empty."
java.util.PriorityQueue.poll,"Retrieves and removes the head of this queue,  or returnsnullif this queue is empty."
java.util.PriorityQueue.remove,"Removes a single instance of the specified element from this queue,  if it is present."
java.util.PriorityQueue.size,Returns the number of elements in this collection.
java.util.PriorityQueue.spliterator,Creates alate-bindingandfail-fastSpliteratorover the elements in this  queue.
java.util.PriorityQueue.toArray,Returns an array containing all of the elements in this queue.
java.util.PriorityQueue.toArray,Returns an array containing all of the elements in this queue; the  runtime type of the returned array is that of the specified array.
java.util.Properties.getProperty,Searches for the property with the specified key in this property list.
java.util.Properties.list,Prints this property list out to the specified output stream.
java.util.Properties.load,Reads a property list (key and element pairs) from the input  byte stream.
java.util.Properties.load,Reads a property list (key and element pairs) from the input  character stream in a simple line-oriented format.
java.util.Properties.loadFromXML,Loads all of the properties represented by the XML document on the  specified input stream into this properties table.
java.util.Properties.propertyNames,"Returns an enumeration of all the keys in this property list,  including distinct keys in the default property list if a key  of the same name has not already been found from the main  properties list."
java.util.Properties.save,Deprecated.This method does not throw an IOException if an I/O error  occurs while saving the property list.
java.util.Properties.setProperty,Calls theHashtablemethodput.
java.util.Properties.store,Writes this property list (key and element pairs) in thisPropertiestable to the output stream in a format suitable  for loading into aPropertiestable using theload(InputStream)method.
java.util.Properties.store,Writes this property list (key and element pairs) in thisPropertiestable to the output character stream in a  format suitable for using theload(Reader)method.
java.util.Properties.storeToXML,Emits an XML document representing all of the properties contained  in this table.
java.util.Properties.storeToXML,"Emits an XML document representing all of the properties contained  in this table, using the specified encoding."
java.util.Properties.stringPropertyNames,"Returns an unmodifiable set of keys from this property list  where the key and its corresponding value are strings,  including distinct keys in the default property list if a key  of the same name has not already been found from the main  properties list."
java.util.PropertyPermission.equals,Checks two PropertyPermission objects for equality.
java.util.PropertyPermission.implies,"Checks if this PropertyPermission object ""implies"" the specified  permission."
java.util.PropertyPermission.newPermissionCollection,Returns a new PermissionCollection object for storing  PropertyPermission objects.
java.util.Random.doubles,"Returns an effectively unlimited stream of pseudorandomdoublevalues, each between zero (inclusive) and one  (exclusive)."
java.util.Random.doubles,"Returns an effectively unlimited stream of pseudorandomdoublevalues, each conforming to the given origin (inclusive) and bound  (exclusive)."
java.util.Random.doubles,"Returns a stream producing the givenstreamSizenumber of  pseudorandomdoublevalues, each between zero  (inclusive) and one (exclusive)."
java.util.Random.doubles,"Returns a stream producing the givenstreamSizenumber of  pseudorandomdoublevalues, each conforming to the given origin  (inclusive) and bound (exclusive)."
java.util.Random.ints,Returns an effectively unlimited stream of pseudorandomintvalues.
java.util.Random.ints,"Returns an effectively unlimited stream of pseudorandomintvalues, each conforming to the given origin (inclusive) and bound  (exclusive)."
java.util.Random.ints,Returns a stream producing the givenstreamSizenumber of  pseudorandomintvalues.
java.util.Random.ints,"Returns a stream producing the givenstreamSizenumber  of pseudorandomintvalues, each conforming to the given  origin (inclusive) and bound (exclusive)."
java.util.Random.longs,Returns an effectively unlimited stream of pseudorandomlongvalues.
java.util.Random.longs,Returns a stream producing the givenstreamSizenumber of  pseudorandomlongvalues.
java.util.Random.longs,"Returns an effectively unlimited stream of pseudorandomlongvalues, each conforming to the given origin (inclusive) and bound  (exclusive)."
java.util.Random.longs,"Returns a stream producing the givenstreamSizenumber of  pseudorandomlong, each conforming to the given origin  (inclusive) and bound (exclusive)."
java.util.Random.next,Generates the next pseudorandom number.
java.util.Random.nextBoolean,"Returns the next pseudorandom, uniformly distributedbooleanvalue from this random number generator's  sequence."
java.util.Random.nextBytes,Generates random bytes and places them into a user-supplied  byte array.
java.util.Random.nextDouble,"Returns the next pseudorandom, uniformly distributeddoublevalue between0.0and1.0from this random number generator's sequence."
java.util.Random.nextFloat,"Returns the next pseudorandom, uniformly distributedfloatvalue between0.0and1.0from this random  number generator's sequence."
java.util.Random.nextGaussian,"Returns the next pseudorandom, Gaussian (""normally"") distributeddoublevalue with mean0.0and standard  deviation1.0from this random number generator's sequence."
java.util.Random.nextInt,"Returns the next pseudorandom, uniformly distributedintvalue from this random number generator's sequence."
java.util.Random.nextInt,"Returns a pseudorandom, uniformly distributedintvalue  between 0 (inclusive) and the specified value (exclusive), drawn from  this random number generator's sequence."
java.util.Random.nextLong,"Returns the next pseudorandom, uniformly distributedlongvalue from this random number generator's sequence."
java.util.Random.setSeed,Sets the seed of this random number generator using a singlelongseed.
java.util.ResourceBundle.getCandidateLocales,Returns aListofLocales as candidate  locales forbaseNameandlocale.
java.util.ResourceBundle.getControl,Returns aResourceBundle.Controlin which thegetFormatsmethod returns the specifiedformats.
java.util.ResourceBundle.getFallbackLocale,Returns aLocaleto be used as a fallback locale for  further resource bundle searches by theResourceBundle.getBundlefactory method.
java.util.ResourceBundle.getFormats,Returns aListofStrings containing  formats to be used to load resource bundles for the givenbaseName.
java.util.ResourceBundle.getNoFallbackControl,Returns aResourceBundle.Controlin which thegetFormatsmethod returns the specifiedformatsand thegetFallbackLocalemethod returnsnull.
java.util.ResourceBundle.getTimeToLive,Returns the time-to-live (TTL) value for resource bundles that  are loaded under thisResourceBundle.Control.
java.util.ResourceBundle.needsReload,Determines if the expiredbundlein the cache needs  to be reloaded based on the loading time given byloadTimeor some other criteria.
java.util.ResourceBundle.newBundle,"Instantiates a resource bundle for the given bundle name of the  given format and locale, using the given class loader if  necessary."
java.util.ResourceBundle.toBundleName,Converts the givenbaseNameandlocaleto the bundle name.
java.util.ResourceBundle.toResourceName,Converts the givenbundleNameto the form required  by theClassLoader.getResourcemethod by replacing all occurrences of'.'inbundleNamewith'/'and appending a'.'and the given filesuffix.
java.util.ResourceBundle.clearCache,Removes all resource bundles from the cache that have been loaded  by the caller's module.
java.util.ResourceBundle.clearCache,Removes all resource bundles from the cache that have been loaded  by the given class loader.
java.util.ResourceBundle.containsKey,Determines whether the givenkeyis contained in  thisResourceBundleor its parent bundles.
java.util.ResourceBundle.getBaseBundleName,"Returns the base name of this bundle, if known, ornullif unknown."
java.util.ResourceBundle.getBundle,"Gets a resource bundle using the specified base name, the default locale,  and the caller module."
java.util.ResourceBundle.getBundle,Gets a resource bundle using the specified base name and the default locale  on behalf of the specified module.
java.util.ResourceBundle.getBundle,"Gets a resource bundle using the specified base name and locale,  and the caller module."
java.util.ResourceBundle.getBundle,"Gets a resource bundle using the specified base name, locale, and class  loader."
java.util.ResourceBundle.getBundle,"Returns a resource bundle using the specified base name, target  locale, class loader and control."
java.util.ResourceBundle.getBundle,Gets a resource bundle using the specified base name and locale  on behalf of the specified module.
java.util.ResourceBundle.getBundle,"Returns a resource bundle using the specified base name, target  locale and control, and the caller's class loader."
java.util.ResourceBundle.getBundle,"Returns a resource bundle using the specified base name, the  default locale and the specified control."
java.util.ResourceBundle.getKeys,Returns an enumeration of the keys.
java.util.ResourceBundle.getLocale,Returns the locale of this resource bundle.
java.util.ResourceBundle.getObject,Gets an object for the given key from this resource bundle or one of its parents.
java.util.ResourceBundle.getString,Gets a string for the given key from this resource bundle or one of its parents.
java.util.ResourceBundle.getStringArray,Gets a string array for the given key from this resource bundle or one of its parents.
java.util.ResourceBundle.keySet,Returns aSetof all keys contained in thisResourceBundleand its parent bundles.
java.util.ResourceBundle.setParent,Sets the parent bundle of this bundle.
java.util.Scanner.close,Closes this scanner.
java.util.Scanner.delimiter,Returns thePatternthisScanneris currently  using to match delimiters.
java.util.Scanner.findAll,Returns a stream of match results that match the provided pattern string.
java.util.Scanner.findAll,Returns a stream of match results from this scanner.
java.util.Scanner.findInLine,"Attempts to find the next occurrence of a pattern constructed from the  specified string, ignoring delimiters."
java.util.Scanner.findInLine,Attempts to find the next occurrence of the specified pattern ignoring  delimiters.
java.util.Scanner.findWithinHorizon,Attempts to find the next occurrence of the specified pattern.
java.util.Scanner.hasNext,Returns true if this scanner has another token in its input.
java.util.Scanner.hasNext,Returns true if the next token matches the pattern constructed from the  specified string.
java.util.Scanner.hasNext,Returns true if the next complete token matches the specified pattern.
java.util.Scanner.hasNextBigDecimal,Returns true if the next token in this scanner's input can be  interpreted as aBigDecimalusing thenextBigDecimal()method.
java.util.Scanner.hasNextBigInteger,Returns true if the next token in this scanner's input can be  interpreted as aBigIntegerin the default radix using thenextBigInteger()method.
java.util.Scanner.hasNextBigInteger,Returns true if the next token in this scanner's input can be  interpreted as aBigIntegerin the specified radix using  thenextBigInteger()method.
java.util.Scanner.hasNextBoolean,"Returns true if the next token in this scanner's input can be  interpreted as a boolean value using a case insensitive pattern  created from the string ""true|false""."
java.util.Scanner.hasNextByte,Returns true if the next token in this scanner's input can be  interpreted as a byte value in the default radix using thenextByte()method.
java.util.Scanner.hasNextByte,Returns true if the next token in this scanner's input can be  interpreted as a byte value in the specified radix using thenextByte()method.
java.util.Scanner.hasNextDouble,Returns true if the next token in this scanner's input can be  interpreted as a double value using thenextDouble()method.
java.util.Scanner.hasNextFloat,Returns true if the next token in this scanner's input can be  interpreted as a float value using thenextFloat()method.
java.util.Scanner.hasNextInt,Returns true if the next token in this scanner's input can be  interpreted as an int value in the default radix using thenextInt()method.
java.util.Scanner.hasNextInt,Returns true if the next token in this scanner's input can be  interpreted as an int value in the specified radix using thenextInt()method.
java.util.Scanner.hasNextLine,Returns true if there is another line in the input of this scanner.
java.util.Scanner.hasNextLong,Returns true if the next token in this scanner's input can be  interpreted as a long value in the default radix using thenextLong()method.
java.util.Scanner.hasNextLong,Returns true if the next token in this scanner's input can be  interpreted as a long value in the specified radix using thenextLong()method.
java.util.Scanner.hasNextShort,Returns true if the next token in this scanner's input can be  interpreted as a short value in the default radix using thenextShort()method.
java.util.Scanner.hasNextShort,Returns true if the next token in this scanner's input can be  interpreted as a short value in the specified radix using thenextShort()method.
java.util.Scanner.ioException,Returns theIOExceptionlast thrown by thisScanner's underlyingReadable.
java.util.Scanner.locale,Returns this scanner's locale.
java.util.Scanner.match,Returns the match result of the last scanning operation performed  by this scanner.
java.util.Scanner.next,Finds and returns the next complete token from this scanner.
java.util.Scanner.next,Returns the next token if it matches the pattern constructed from the  specified string.
java.util.Scanner.next,Returns the next token if it matches the specified pattern.
java.util.Scanner.nextBigDecimal,Scans the next token of the input as aBigDecimal.
java.util.Scanner.nextBigInteger,Scans the next token of the input as aBigInteger.
java.util.Scanner.nextBoolean,Scans the next token of the input into a boolean value and returns  that value.
java.util.Scanner.nextByte,Scans the next token of the input as abyte.
java.util.Scanner.nextDouble,Scans the next token of the input as adouble.
java.util.Scanner.nextFloat,Scans the next token of the input as afloat.
java.util.Scanner.nextInt,Scans the next token of the input as anint.
java.util.Scanner.nextLine,Advances this scanner past the current line and returns the input  that was skipped.
java.util.Scanner.nextLong,Scans the next token of the input as along.
java.util.Scanner.nextShort,Scans the next token of the input as ashort.
java.util.Scanner.radix,Returns this scanner's default radix.
java.util.Scanner.remove,The remove operation is not supported by this implementation ofIterator.
java.util.Scanner.reset,Resets this scanner.
java.util.Scanner.skip,Skips input that matches a pattern constructed from the specified  string.
java.util.Scanner.skip,"Skips input that matches the specified pattern, ignoring delimiters."
java.util.Scanner.tokens,Returns a stream of delimiter-separated tokens from this scanner.
java.util.Scanner.toString,Returns the string representation of thisScanner.
java.util.Scanner.useDelimiter,Sets this scanner's delimiting pattern to a pattern constructed from  the specifiedString.
java.util.Scanner.useDelimiter,Sets this scanner's delimiting pattern to the specified pattern.
java.util.Scanner.useLocale,Sets this scanner's locale to the specified locale.
java.util.Scanner.useRadix,Sets this scanner's default radix to the specified radix.
java.util.ServiceLoader.findFirst,Load the first available service provider of this loader's service.
java.util.ServiceLoader.iterator,Returns an iterator to lazily load and instantiate the available  providers of this loader's service.
java.util.ServiceLoader.load,"Creates a new service loader for the given service type, using the  current thread'scontext class loader."
java.util.ServiceLoader.load,Creates a new service loader for the given service.
java.util.ServiceLoader.load,Creates a new service loader for the given service type to load service  providers from modules in the given module layer and its ancestors.
java.util.ServiceLoader.loadInstalled,"Creates a new service loader for the given service type, using theplatform class loader."
java.util.ServiceLoader.reload,Clear this loader's provider cache so that all providers will be  reloaded.
java.util.ServiceLoader.stream,Returns a stream to lazily load available providers of this loader's  service.
java.util.ServiceLoader.toString,Returns a string describing this service.
java.util.ServiceLoader.get,Returns an instance of the provider.
java.util.ServiceLoader.type,Returns the provider type.
java.util.SimpleTimeZone.clone,Returns a clone of thisSimpleTimeZoneinstance.
java.util.SimpleTimeZone.equals,Compares the equality of twoSimpleTimeZoneobjects.
java.util.SimpleTimeZone.getDSTSavings,Returns the amount of time in milliseconds that the clock is  advanced during daylight saving time.
java.util.SimpleTimeZone.getOffset,"Returns the difference in milliseconds between local time and  UTC, taking into account both the raw offset and the effect of  daylight saving, for the specified date and time."
java.util.SimpleTimeZone.getOffset,Returns the offset of this time zone from UTC at the given  time.
java.util.SimpleTimeZone.getRawOffset,Gets the GMT offset for this time zone.
java.util.SimpleTimeZone.hashCode,Generates the hash code for the SimpleDateFormat object.
java.util.SimpleTimeZone.hasSameRules,Returnstrueif this zone has the same rules and offset as another zone.
java.util.SimpleTimeZone.inDaylightTime,Queries if the given date is in daylight saving time.
java.util.SimpleTimeZone.observesDaylightTime,Returnstrueif thisSimpleTimeZoneobserves  Daylight Saving Time.
java.util.SimpleTimeZone.setDSTSavings,Sets the amount of time in milliseconds that the clock is advanced  during daylight saving time.
java.util.SimpleTimeZone.setEndRule,Sets the daylight saving time end rule to a fixed date within a month.
java.util.SimpleTimeZone.setEndRule,Sets the daylight saving time end rule.
java.util.SimpleTimeZone.setEndRule,"Sets the daylight saving time end rule to a weekday before or after the given date within  a month, e.g., the first Monday on or after the 8th."
java.util.SimpleTimeZone.setRawOffset,Sets the base time zone offset to GMT.
java.util.SimpleTimeZone.setStartRule,Sets the daylight saving time start rule to a fixed date within a month.
java.util.SimpleTimeZone.setStartRule,Sets the daylight saving time start rule.
java.util.SimpleTimeZone.setStartRule,"Sets the daylight saving time start rule to a weekday before or after the given date within  a month, e.g., the first Monday on or after the 8th."
java.util.SimpleTimeZone.setStartYear,Sets the daylight saving time starting year.
java.util.SimpleTimeZone.toString,Returns a string representation of this time zone.
java.util.SimpleTimeZone.useDaylightTime,Queries if this time zone uses daylight saving time.
java.util.Spliterators.characteristics,Returns a set of characteristics of this Spliterator and its  elements.
java.util.Spliterators.estimateSize,"Returns an estimate of the number of elements that would be  encountered by aSpliterator.forEachRemaining(java.util.function.Consumer<? super T>)traversal, or returnsLong.MAX_VALUEif infinite, unknown, or too expensive to compute."
java.util.Spliterators.trySplit,"If this spliterator can be partitioned, returns a Spliterator  covering elements, that will, upon return from this method, not  be covered by this Spliterator."
java.util.Spliterators.emptyDoubleSpliterator,Creates an emptySpliterator.OfDouble
java.util.Spliterators.emptyIntSpliterator,Creates an emptySpliterator.OfInt
java.util.Spliterators.emptyLongSpliterator,Creates an emptySpliterator.OfLong
java.util.Spliterators.emptySpliterator,Creates an emptySpliterator
java.util.Spliterators.iterator,Creates anPrimitiveIterator.OfDoublefrom aSpliterator.OfDouble.
java.util.Spliterators.iterator,Creates anPrimitiveIterator.OfIntfrom aSpliterator.OfInt.
java.util.Spliterators.iterator,Creates anPrimitiveIterator.OfLongfrom aSpliterator.OfLong.
java.util.Spliterators.iterator,Creates anIteratorfrom aSpliterator.
java.util.Spliterators.spliterator,"Creates aSpliterator.OfDoublecovering the elements of a given array,  using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfDoublecovering a range of elements of a  given array, using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfIntcovering the elements of a given array,  using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfIntcovering a range of elements of a  given array, using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfLongcovering the elements of a given array,  using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfLongcovering a range of elements of a  given array, using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliteratorcovering the elements of a given array,  using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliteratorcovering a range of elements of a given  array, using a customized set of spliterator characteristics."
java.util.Spliterators.spliterator,"Creates aSpliteratorusing the given collection'sCollection.iterator()as the source of elements, and  reporting itsCollection.size()as its initial size."
java.util.Spliterators.spliterator,"Creates aSpliteratorusing a givenIteratoras the source of elements, and with a given initially reported size."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfDoubleusing a givenDoubleStream.DoubleIteratoras the source of elements, and with a  given initially reported size."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfIntusing a givenIntStream.IntIteratoras the source of elements, and with a given  initially reported size."
java.util.Spliterators.spliterator,"Creates aSpliterator.OfLongusing a givenLongStream.LongIteratoras the source of elements, and with a  given initially reported size."
java.util.Spliterators.spliteratorUnknownSize,"Creates aSpliteratorusing a givenIteratoras the source of elements, with no initial size estimate."
java.util.Spliterators.spliteratorUnknownSize,"Creates aSpliterator.OfDoubleusing a givenDoubleStream.DoubleIteratoras the source of elements, with no  initial size estimate."
java.util.Spliterators.spliteratorUnknownSize,"Creates aSpliterator.OfIntusing a givenIntStream.IntIteratoras the source of elements, with no initial  size estimate."
java.util.Spliterators.spliteratorUnknownSize,"Creates aSpliterator.OfLongusing a givenLongStream.LongIteratoras the source of elements, with no  initial size estimate."
java.util.SplittableRandom.doubles,Returns an effectively unlimited stream of pseudorandomdoublevalues from this generator and/or one split from it; each value  is between zero (inclusive) and one (exclusive).
java.util.SplittableRandom.doubles,Returns an effectively unlimited stream of pseudorandomdoublevalues from this generator and/or one split from it; each value  conforms to the given origin (inclusive) and bound (exclusive).
java.util.SplittableRandom.doubles,Returns a stream producing the givenstreamSizenumber of  pseudorandomdoublevalues from this generator and/or one split  from it; each value is between zero (inclusive) and one (exclusive).
java.util.SplittableRandom.doubles,Returns a stream producing the givenstreamSizenumber of  pseudorandomdoublevalues from this generator and/or one split  from it; each value conforms to the given origin (inclusive) and bound  (exclusive).
java.util.SplittableRandom.ints,Returns an effectively unlimited stream of pseudorandomintvalues from this generator and/or one split from it.
java.util.SplittableRandom.ints,Returns an effectively unlimited stream of pseudorandomintvalues from this generator and/or one split from it; each value  conforms to the given origin (inclusive) and bound (exclusive).
java.util.SplittableRandom.ints,Returns a stream producing the givenstreamSizenumber  of pseudorandomintvalues from this generator and/or  one split from it.
java.util.SplittableRandom.ints,Returns a stream producing the givenstreamSizenumber  of pseudorandomintvalues from this generator and/or one split  from it; each value conforms to the given origin (inclusive) and bound  (exclusive).
java.util.SplittableRandom.longs,Returns an effectively unlimited stream of pseudorandomlongvalues from this generator and/or one split from it.
java.util.SplittableRandom.longs,Returns a stream producing the givenstreamSizenumber  of pseudorandomlongvalues from this generator and/or  one split from it.
java.util.SplittableRandom.longs,Returns an effectively unlimited stream of pseudorandomlongvalues from this generator and/or one split from it; each value  conforms to the given origin (inclusive) and bound (exclusive).
java.util.SplittableRandom.longs,Returns a stream producing the givenstreamSizenumber of  pseudorandomlongvalues from this generator and/or one split  from it; each value conforms to the given origin (inclusive) and bound  (exclusive).
java.util.SplittableRandom.nextBytes,Fills a user-supplied byte array with generated byte values  pseudorandomly chosen uniformly from the range of values between -128  (inclusive) and 127 (inclusive).
java.util.SplittableRandom.nextLong,Returns a pseudorandomly chosenlongvalue.
java.util.SplittableRandom.split,Constructs and returns a new SplittableRandom instance that  shares no mutable state with this instance.
java.util.SplittableRandom.split,"Returns a new pseudorandom number generator, split off from this one,  that implements theRandomGeneratorandRandomGenerator.SplittableGeneratorinterfaces."
java.util.SplittableRandom.splits,"Returns an effectively unlimited stream of new pseudorandom number  generators, each of which implements theRandomGenerator.SplittableGeneratorinterface."
java.util.SplittableRandom.splits,"Returns a stream producing the givenstreamSizenumber of new  pseudorandom number generators, each of which implements theRandomGenerator.SplittableGeneratorinterface."
java.util.Stack.empty,Tests if this stack is empty.
java.util.Stack.peek,Looks at the object at the top of this stack without removing it  from the stack.
java.util.Stack.pop,Removes the object at the top of this stack and returns that  object as the value of this function.
java.util.Stack.push,Pushes an item onto the top of this stack.
java.util.Stack.search,Returns the 1-based position where an object is on this stack.
java.util.StringJoiner.add,Adds a copy of the givenCharSequencevalue as the next  element of theStringJoinervalue.
java.util.StringJoiner.length,Returns the length of theStringrepresentation  of thisStringJoiner.
java.util.StringJoiner.merge,Adds the contents of the givenStringJoinerwithout prefix and  suffix as the next element if it is non-empty.
java.util.StringJoiner.setEmptyValue,"Sets the sequence of characters to be used when determining the string  representation of thisStringJoinerand no elements have been  added yet, that is, when it is empty."
java.util.StringJoiner.toString,"Returns the current value, consisting of theprefix, the values  added so far separated by thedelimiter, and thesuffix,  unless no elements have been added in which case, theprefix + suffixor theemptyValuecharacters are returned."
java.util.StringTokenizer.countTokens,Calculates the number of times that this tokenizer'snextTokenmethod can be called before it generates an  exception.
java.util.StringTokenizer.hasMoreElements,Returns the same value as thehasMoreTokensmethod.
java.util.StringTokenizer.hasMoreTokens,Tests if there are more tokens available from this tokenizer's string.
java.util.StringTokenizer.nextElement,"Returns the same value as thenextTokenmethod,  except that its declared return value isObjectrather thanString."
java.util.StringTokenizer.nextToken,Returns the next token from this string tokenizer.
java.util.StringTokenizer.nextToken,Returns the next token in this string tokenizer's string.
java.util.Timer.cancel,"Terminates this timer, discarding any currently scheduled tasks."
java.util.Timer.purge,Removes all cancelled tasks from this timer's task queue.
java.util.Timer.schedule,Schedules the specified task for execution after the specified delay.
java.util.Timer.schedule,"Schedules the specified task for repeatedfixed-delay execution,  beginning after the specified delay."
java.util.Timer.schedule,Schedules the specified task for execution at the specified time.
java.util.Timer.schedule,"Schedules the specified task for repeatedfixed-delay execution,  beginning at the specified time."
java.util.Timer.scheduleAtFixedRate,"Schedules the specified task for repeatedfixed-rate execution,  beginning after the specified delay."
java.util.Timer.scheduleAtFixedRate,"Schedules the specified task for repeatedfixed-rate execution,  beginning at the specified time."
java.util.TimerTask.cancel,Cancels this timer task.
java.util.TimerTask.run,The action to be performed by this timer task.
java.util.TimerTask.scheduledExecutionTime,Returns thescheduledexecution time of the most recentactualexecution of this task.
java.util.TimeZone.clone,Creates a copy of thisTimeZone.
java.util.TimeZone.getAvailableIDs,Gets all the available IDs supported.
java.util.TimeZone.getAvailableIDs,Gets the available IDs according to the given time zone offset in milliseconds.
java.util.TimeZone.getDefault,Gets the defaultTimeZoneof the Java virtual machine.
java.util.TimeZone.getDisplayName,Returns a long standard time name of thisTimeZonesuitable for  presentation to the user in the default locale.
java.util.TimeZone.getDisplayName,Returns a name in the specifiedstyleof thisTimeZonesuitable for presentation to the user in the default locale.
java.util.TimeZone.getDisplayName,Returns a name in the specifiedstyleof thisTimeZonesuitable for presentation to the user in the specifiedlocale.
java.util.TimeZone.getDisplayName,Returns a long standard time name of thisTimeZonesuitable for  presentation to the user in the specifiedlocale.
java.util.TimeZone.getDSTSavings,Returns the amount of time to be added to local standard time  to get local wall clock time.
java.util.TimeZone.getID,Gets the ID of this time zone.
java.util.TimeZone.getOffset,"Gets the time zone offset, for current date, modified in case of  daylight savings."
java.util.TimeZone.getOffset,Returns the offset of this time zone from UTC at the specified  date.
java.util.TimeZone.getRawOffset,Returns the amount of time in milliseconds to add to UTC to get  standard time in this time zone.
java.util.TimeZone.getTimeZone,Gets theTimeZonefor the given ID.
java.util.TimeZone.getTimeZone,Gets theTimeZonefor the givenzoneId.
java.util.TimeZone.hasSameRules,Returns true if this zone has the same rule and offset as another zone.
java.util.TimeZone.inDaylightTime,Queries if the givendateis in Daylight Saving Time in  this time zone.
java.util.TimeZone.observesDaylightTime,"Returnstrueif thisTimeZoneis currently in  Daylight Saving Time, or if a transition from Standard Time to  Daylight Saving Time occurs at any future time."
java.util.TimeZone.setDefault,Sets theTimeZonethat is returned by thegetDefaultmethod.
java.util.TimeZone.setID,Sets the time zone ID.
java.util.TimeZone.toZoneId,Converts thisTimeZoneobject to aZoneId.
java.util.TimeZone.useDaylightTime,Queries if thisTimeZoneuses Daylight Saving Time.
java.util.TreeMap.ceilingEntry,"Returns a key-value mapping associated with the least key  greater than or equal to the given key, ornullif  there is no such key."
java.util.TreeMap.ceilingKey,"Returns the least key greater than or equal to the given key,  ornullif there is no such key."
java.util.TreeMap.clone,Returns a shallow copy of thisTreeMapinstance.
java.util.TreeMap.comparator,"Returns the comparator used to order the keys in this map, ornullif this map uses thenatural orderingof its keys."
java.util.TreeMap.descendingKeySet,Returns a reverse orderNavigableSetview of the keys contained in this map.
java.util.TreeMap.descendingMap,Returns a reverse order view of the mappings contained in this map.
java.util.TreeMap.firstEntry,"Returns a key-value mapping associated with the least  key in this map, ornullif the map is empty."
java.util.TreeMap.firstKey,Returns the first (lowest) key currently in this map.
java.util.TreeMap.floorEntry,"Returns a key-value mapping associated with the greatest key  less than or equal to the given key, ornullif there  is no such key."
java.util.TreeMap.floorKey,"Returns the greatest key less than or equal to the given key,  ornullif there is no such key."
java.util.TreeMap.headMap,Returns a view of the portion of this map whose keys are  strictly less thantoKey.
java.util.TreeMap.headMap,"Returns a view of the portion of this map whose keys are less than (or  equal to, ifinclusiveis true)toKey."
java.util.TreeMap.higherEntry,"Returns a key-value mapping associated with the least key  strictly greater than the given key, ornullif there  is no such key."
java.util.TreeMap.higherKey,"Returns the least key strictly greater than the given key, ornullif there is no such key."
java.util.TreeMap.lastEntry,"Returns a key-value mapping associated with the greatest  key in this map, ornullif the map is empty."
java.util.TreeMap.lastKey,Returns the last (highest) key currently in this map.
java.util.TreeMap.lowerEntry,"Returns a key-value mapping associated with the greatest key  strictly less than the given key, ornullif there is  no such key."
java.util.TreeMap.lowerKey,"Returns the greatest key strictly less than the given key, ornullif there is no such key."
java.util.TreeMap.navigableKeySet,Returns aNavigableSetview of the keys contained in this map.
java.util.TreeMap.pollFirstEntry,"Removes and returns a key-value mapping associated with  the least key in this map, ornullif the map is empty."
java.util.TreeMap.pollLastEntry,"Removes and returns a key-value mapping associated with  the greatest key in this map, ornullif the map is empty."
java.util.TreeMap.remove,Removes the mapping for this key from this TreeMap if present.
java.util.TreeMap.subMap,Returns a view of the portion of this map whose keys range fromfromKeytotoKey.
java.util.TreeMap.subMap,"Returns a view of the portion of this map whose keys range fromfromKey, inclusive, totoKey, exclusive."
java.util.TreeMap.tailMap,Returns a view of the portion of this map whose keys are  greater than or equal tofromKey.
java.util.TreeMap.tailMap,"Returns a view of the portion of this map whose keys are greater than (or  equal to, ifinclusiveis true)fromKey."
java.util.TreeSet.addAll,Adds all of the elements in the specified collection to this set.
java.util.TreeSet.ceiling,"Returns the least element in this set greater than or equal to  the given element, ornullif there is no such element."
java.util.TreeSet.clone,Returns a shallow copy of thisTreeSetinstance.
java.util.TreeSet.comparator,"Returns the comparator used to order the elements in this set,  ornullif this set uses thenatural orderingof its elements."
java.util.TreeSet.descendingIterator,Returns an iterator over the elements in this set in descending order.
java.util.TreeSet.descendingSet,Returns a reverse order view of the elements contained in this set.
java.util.TreeSet.first,Returns the first (lowest) element currently in this set.
java.util.TreeSet.floor,"Returns the greatest element in this set less than or equal to  the given element, ornullif there is no such element."
java.util.TreeSet.headSet,Returns a view of the portion of this set whose elements are  strictly less thantoElement.
java.util.TreeSet.headSet,"Returns a view of the portion of this set whose elements are less than  (or equal to, ifinclusiveis true)toElement."
java.util.TreeSet.higher,"Returns the least element in this set strictly greater than the  given element, ornullif there is no such element."
java.util.TreeSet.iterator,Returns an iterator over the elements in this set in ascending order.
java.util.TreeSet.last,Returns the last (highest) element currently in this set.
java.util.TreeSet.lower,"Returns the greatest element in this set strictly less than the  given element, ornullif there is no such element."
java.util.TreeSet.pollFirst,"Retrieves and removes the first (lowest) element,  or returnsnullif this set is empty."
java.util.TreeSet.pollLast,"Retrieves and removes the last (highest) element,  or returnsnullif this set is empty."
java.util.TreeSet.subSet,Returns a view of the portion of this set whose elements range fromfromElementtotoElement.
java.util.TreeSet.subSet,"Returns a view of the portion of this set whose elements range  fromfromElement, inclusive, totoElement,  exclusive."
java.util.TreeSet.tailSet,Returns a view of the portion of this set whose elements are  greater than or equal tofromElement.
java.util.TreeSet.tailSet,"Returns a view of the portion of this set whose elements are greater  than (or equal to, ifinclusiveis true)fromElement."
java.util.UnknownFormatConversionException.getConversion,Returns the unknown conversion.
java.util.UnknownFormatFlagsException.getFlags,Returns the set of flags which contains an unknown flag.
java.util.UUID.clockSequence,The clock sequence value associated with this UUID.
java.util.UUID.compareTo,Compares this UUID with the specified UUID.
java.util.UUID.fromString,Creates aUUIDfrom the string standard representation as  described in thetoString()method.
java.util.UUID.getLeastSignificantBits,Returns the least significant 64 bits of this UUID's 128 bit value.
java.util.UUID.getMostSignificantBits,Returns the most significant 64 bits of this UUID's 128 bit value.
java.util.UUID.hashCode,Returns a hash code for thisUUID.
java.util.UUID.nameUUIDFromBytes,Static factory to retrieve a type 3 (name based)UUIDbased on  the specified byte array.
java.util.UUID.node,The node value associated with this UUID.
java.util.UUID.randomUUID,Static factory to retrieve a type 4 (pseudo randomly generated) UUID.
java.util.UUID.timestamp,The timestamp value associated with this UUID.
java.util.UUID.toString,Returns aStringobject representing thisUUID.
java.util.UUID.variant,The variant number associated with thisUUID.
java.util.UUID.version,The version number associated with thisUUID.
java.util.Vector.add,Inserts the specified element at the specified position in this Vector.
java.util.Vector.add,Appends the specified element to the end of this Vector.
java.util.Vector.addAll,Inserts all of the elements in the specified Collection into this  Vector at the specified position.
java.util.Vector.addAll,"Appends all of the elements in the specified Collection to the end of  this Vector, in the order that they are returned by the specified  Collection's Iterator."
java.util.Vector.addElement,"Adds the specified component to the end of this vector,  increasing its size by one."
java.util.Vector.capacity,Returns the current capacity of this vector.
java.util.Vector.clear,Removes all of the elements from this Vector.
java.util.Vector.clone,Returns a clone of this vector.
java.util.Vector.contains,Returnstrueif this vector contains the specified element.
java.util.Vector.containsAll,Returns true if this Vector contains all of the elements in the  specified Collection.
java.util.Vector.copyInto,Copies the components of this vector into the specified array.
java.util.Vector.elementAt,Returns the component at the specified index.
java.util.Vector.elements,Returns an enumeration of the components of this vector.
java.util.Vector.ensureCapacity,"Increases the capacity of this vector, if necessary, to ensure  that it can hold at least the number of components specified by  the minimum capacity argument."
java.util.Vector.equals,Compares the specified Object with this Vector for equality.
java.util.Vector.firstElement,Returns the first component (the item at index0) of  this vector.
java.util.Vector.get,Returns the element at the specified position in this Vector.
java.util.Vector.hashCode,Returns the hash code value for this Vector.
java.util.Vector.indexOf,"Returns the index of the first occurrence of the specified element  in this vector, or -1 if this vector does not contain the element."
java.util.Vector.indexOf,"Returns the index of the first occurrence of the specified element in  this vector, searching forwards fromindex, or returns -1 if  the element is not found."
java.util.Vector.insertElementAt,Inserts the specified object as a component in this vector at the  specifiedindex.
java.util.Vector.isEmpty,Tests if this vector has no components.
java.util.Vector.lastElement,Returns the last component of the vector.
java.util.Vector.lastIndexOf,"Returns the index of the last occurrence of the specified element  in this vector, or -1 if this vector does not contain the element."
java.util.Vector.lastIndexOf,"Returns the index of the last occurrence of the specified element in  this vector, searching backwards fromindex, or returns -1 if  the element is not found."
java.util.Vector.remove,Removes the element at the specified position in this Vector.
java.util.Vector.remove,"Removes the first occurrence of the specified element in this Vector  If the Vector does not contain the element, it is unchanged."
java.util.Vector.removeAll,Removes from this Vector all of its elements that are contained in the  specified Collection.
java.util.Vector.removeAllElements,Removes all components from this vector and sets its size to zero.
java.util.Vector.removeElement,Removes the first (lowest-indexed) occurrence of the argument  from this vector.
java.util.Vector.removeElementAt,Deletes the component at the specified index.
java.util.Vector.replaceAll,Replaces each element of this list with the result of applying the  operator to that element.
java.util.Vector.retainAll,Retains only the elements in this Vector that are contained in the  specified Collection.
java.util.Vector.set,Replaces the element at the specified position in this Vector with the  specified element.
java.util.Vector.setElementAt,Sets the component at the specifiedindexof this  vector to be the specified object.
java.util.Vector.setSize,Sets the size of this vector.
java.util.Vector.size,Returns the number of components in this vector.
java.util.Vector.subList,"Returns a view of the portion of this List between fromIndex,  inclusive, and toIndex, exclusive."
java.util.Vector.toArray,Returns an array containing all of the elements in this Vector  in the correct order.
java.util.Vector.toArray,Returns an array containing all of the elements in this Vector in the  correct order; the runtime type of the returned array is that of the  specified array.
java.util.Vector.toString,"Returns a string representation of this Vector, containing  the String representation of each element."
java.util.Vector.trimToSize,Trims the capacity of this vector to be the vector's current  size.
java.util.WeakHashMap.remove,Removes the mapping for a key from this weak hash map if it is present.
java.util.concurrent.AbstractExecutorService.invokeAll,"Executes the given tasks, returning a list of Futures holding  their status and results when all complete."
java.util.concurrent.AbstractExecutorService.invokeAll,"Executes the given tasks, returning a list of Futures holding  their status and results  when all complete or the timeout expires, whichever happens first."
java.util.concurrent.AbstractExecutorService.invokeAny,"Executes the given tasks, returning the result  of one that has completed successfully (i.e., without throwing  an exception), if any do."
java.util.concurrent.AbstractExecutorService.invokeAny,"Executes the given tasks, returning the result  of one that has completed successfully (i.e., without throwing  an exception), if any do before the given timeout elapses."
java.util.concurrent.AbstractExecutorService.newTaskFor,Returns aRunnableFuturefor the given runnable and default  value.
java.util.concurrent.AbstractExecutorService.newTaskFor,Returns aRunnableFuturefor the given callable task.
java.util.concurrent.AbstractExecutorService.submit,Submits a Runnable task for execution and returns a Future  representing that task.
java.util.concurrent.AbstractExecutorService.submit,Submits a value-returning task for execution and returns a  Future representing the pending results of the task.
java.util.concurrent.ArrayBlockingQueue.add,"Inserts the specified element at the tail of this queue if it is  possible to do so immediately without exceeding the queue's capacity,  returningtrueupon success and throwing anIllegalStateExceptionif this queue is full."
java.util.concurrent.ArrayBlockingQueue.clear,Atomically removes all of the elements from this queue.
java.util.concurrent.ArrayBlockingQueue.drainTo,Removes all available elements from this queue and adds them  to the given collection.
java.util.concurrent.ArrayBlockingQueue.drainTo,Removes at most the given number of available elements from  this queue and adds them to the given collection.
java.util.concurrent.ArrayBlockingQueue.iterator,Returns an iterator over the elements in this queue in proper sequence.
java.util.concurrent.ArrayBlockingQueue.offer,"Inserts the specified element at the tail of this queue if it is  possible to do so immediately without exceeding the queue's capacity,  returningtrueupon success andfalseif this queue  is full."
java.util.concurrent.ArrayBlockingQueue.offer,"Inserts the specified element at the tail of this queue, waiting  up to the specified wait time for space to become available if  the queue is full."
java.util.concurrent.ArrayBlockingQueue.poll,"Retrieves and removes the head of this queue, waiting up to the  specified wait time if necessary for an element to become available."
java.util.concurrent.ArrayBlockingQueue.put,"Inserts the specified element at the tail of this queue, waiting  for space to become available if the queue is full."
java.util.concurrent.ArrayBlockingQueue.remainingCapacity,Returns the number of additional elements that this queue can ideally  (in the absence of memory or resource constraints) accept without  blocking.
java.util.concurrent.ArrayBlockingQueue.size,Returns the number of elements in this queue.
java.util.concurrent.ArrayBlockingQueue.spliterator,Returns aSpliteratorover the elements in this queue.
java.util.concurrent.ArrayBlockingQueue.take,"Retrieves and removes the head of this queue, waiting if necessary  until an element becomes available."
java.util.concurrent.ArrayBlockingQueue.toArray,"Returns an array containing all of the elements in this queue, in  proper sequence."
java.util.concurrent.ArrayBlockingQueue.toArray,"Returns an array containing all of the elements in this queue, in  proper sequence; the runtime type of the returned array is that of  the specified array."
java.util.concurrent.CompletableFuture.acceptEither,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, is executed with the  corresponding result as argument to the supplied action."
java.util.concurrent.CompletableFuture.acceptEitherAsync,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, is executed using this  stage's default asynchronous execution facility, with the  corresponding result as argument to the supplied action."
java.util.concurrent.CompletableFuture.acceptEitherAsync,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, is executed using the  supplied executor, with the corresponding result as argument to  the supplied action."
java.util.concurrent.CompletableFuture.allOf,Returns a new CompletableFuture that is completed when all of  the given CompletableFutures complete.
java.util.concurrent.CompletableFuture.anyOf,"Returns a new CompletableFuture that is completed when any of  the given CompletableFutures complete, with the same result."
java.util.concurrent.CompletableFuture.applyToEither,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, is executed with the  corresponding result as argument to the supplied function."
java.util.concurrent.CompletableFuture.applyToEitherAsync,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, is executed using this  stage's default asynchronous execution facility, with the  corresponding result as argument to the supplied function."
java.util.concurrent.CompletableFuture.applyToEitherAsync,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, is executed using the  supplied executor, with the corresponding result as argument to  the supplied function."
java.util.concurrent.CompletableFuture.cancel,"If not already completed, completes this CompletableFuture with  aCancellationException."
java.util.concurrent.CompletableFuture.complete,"If not already completed, sets the value returned byget()and related methods to the given value."
java.util.concurrent.CompletableFuture.completeAsync,Completes this CompletableFuture with the result of the given  Supplier function invoked from an asynchronous task using the  default executor.
java.util.concurrent.CompletableFuture.completeAsync,Completes this CompletableFuture with the result of  the given Supplier function invoked from an asynchronous  task using the given executor.
java.util.concurrent.CompletableFuture.completedFuture,Returns a new CompletableFuture that is already completed with  the given value.
java.util.concurrent.CompletableFuture.completedStage,Returns a new CompletionStage that is already completed with  the given value and supports only those methods in  interfaceCompletionStage.
java.util.concurrent.CompletableFuture.completeExceptionally,"If not already completed, causes invocations ofget()and related methods to throw the given exception."
java.util.concurrent.CompletableFuture.completeOnTimeout,Completes this CompletableFuture with the given value if not  otherwise completed before the given timeout.
java.util.concurrent.CompletableFuture.copy,Returns a new CompletableFuture that is completed normally with  the same value as this CompletableFuture when it completes  normally.
java.util.concurrent.CompletableFuture.defaultExecutor,Returns the default Executor used for async methods that do not  specify an Executor.
java.util.concurrent.CompletableFuture.delayedExecutor,Returns a new Executor that submits a task to the default  executor after the given delay (or no delay if non-positive).
java.util.concurrent.CompletableFuture.delayedExecutor,Returns a new Executor that submits a task to the given base  executor after the given delay (or no delay if non-positive).
java.util.concurrent.CompletableFuture.exceptionally,"Returns a new CompletionStage that, when this stage completes  exceptionally, is executed with this stage's exception as the  argument to the supplied function."
java.util.concurrent.CompletableFuture.failedFuture,Returns a new CompletableFuture that is already completed  exceptionally with the given exception.
java.util.concurrent.CompletableFuture.failedStage,Returns a new CompletionStage that is already completed  exceptionally with the given exception and supports only those  methods in interfaceCompletionStage.
java.util.concurrent.CompletableFuture.get,"Waits if necessary for this future to complete, and then  returns its result."
java.util.concurrent.CompletableFuture.get,"Waits if necessary for at most the given time for this future  to complete, and then returns its result, if available."
java.util.concurrent.CompletableFuture.getNow,"Returns the result value (or throws any encountered exception)  if completed, else returns the given valueIfAbsent."
java.util.concurrent.CompletableFuture.getNumberOfDependents,Returns the estimated number of CompletableFutures whose  completions are awaiting completion of this CompletableFuture.
java.util.concurrent.CompletableFuture.handle,"Returns a new CompletionStage that, when this stage completes  either normally or exceptionally, is executed with this stage's  result and exception as arguments to the supplied function."
java.util.concurrent.CompletableFuture.handleAsync,"Returns a new CompletionStage that, when this stage completes  either normally or exceptionally, is executed using this stage's  default asynchronous execution facility, with this stage's  result and exception as arguments to the supplied function."
java.util.concurrent.CompletableFuture.handleAsync,"Returns a new CompletionStage that, when this stage completes  either normally or exceptionally, is executed using the  supplied executor, with this stage's result and exception as  arguments to the supplied function."
java.util.concurrent.CompletableFuture.isCancelled,Returnstrueif this CompletableFuture was cancelled  before it completed normally.
java.util.concurrent.CompletableFuture.isCompletedExceptionally,"Returnstrueif this CompletableFuture completed  exceptionally, in any way."
java.util.concurrent.CompletableFuture.isDone,"Returnstrueif completed in any fashion: normally,  exceptionally, or via cancellation."
java.util.concurrent.CompletableFuture.join,"Returns the result value when complete, or throws an  (unchecked) exception if completed exceptionally."
java.util.concurrent.CompletableFuture.minimalCompletionStage,"Returns a new CompletionStage that is completed normally with  the same value as this CompletableFuture when it completes  normally, and cannot be independently completed or otherwise  used in ways not defined by the methods of interfaceCompletionStage."
java.util.concurrent.CompletableFuture.newIncompleteFuture,Returns a new incomplete CompletableFuture of the type to be  returned by a CompletionStage method.
java.util.concurrent.CompletableFuture.obtrudeException,"Forcibly causes subsequent invocations of methodget()and related methods to throw the given exception, whether or  not already completed."
java.util.concurrent.CompletableFuture.obtrudeValue,"Forcibly sets or resets the value subsequently returned by  methodget()and related methods, whether or not  already completed."
java.util.concurrent.CompletableFuture.orTimeout,Exceptionally completes this CompletableFuture with  aTimeoutExceptionif not otherwise completed  before the given timeout.
java.util.concurrent.CompletableFuture.runAfterBoth,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, executes the given action."
java.util.concurrent.CompletableFuture.runAfterBothAsync,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, executes the given action  using this stage's default asynchronous execution facility."
java.util.concurrent.CompletableFuture.runAfterBothAsync,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, executes the given action  using the supplied executor."
java.util.concurrent.CompletableFuture.runAfterEither,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, executes the given action."
java.util.concurrent.CompletableFuture.runAfterEitherAsync,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, executes the given action  using this stage's default asynchronous execution facility."
java.util.concurrent.CompletableFuture.runAfterEitherAsync,"Returns a new CompletionStage that, when either this or the  other given stage complete normally, executes the given action  using the supplied executor."
java.util.concurrent.CompletableFuture.runAsync,Returns a new CompletableFuture that is asynchronously completed  by a task running in theForkJoinPool.commonPool()after  it runs the given action.
java.util.concurrent.CompletableFuture.runAsync,Returns a new CompletableFuture that is asynchronously completed  by a task running in the given executor after it runs the given  action.
java.util.concurrent.CompletableFuture.supplyAsync,Returns a new CompletableFuture that is asynchronously completed  by a task running in theForkJoinPool.commonPool()with  the value obtained by calling the given Supplier.
java.util.concurrent.CompletableFuture.supplyAsync,Returns a new CompletableFuture that is asynchronously completed  by a task running in the given executor with the value obtained  by calling the given Supplier.
java.util.concurrent.CompletableFuture.thenAccept,"Returns a new CompletionStage that, when this stage completes  normally, is executed with this stage's result as the argument  to the supplied action."
java.util.concurrent.CompletableFuture.thenAcceptAsync,"Returns a new CompletionStage that, when this stage completes  normally, is executed using this stage's default asynchronous  execution facility, with this stage's result as the argument to  the supplied action."
java.util.concurrent.CompletableFuture.thenAcceptAsync,"Returns a new CompletionStage that, when this stage completes  normally, is executed using the supplied Executor, with this  stage's result as the argument to the supplied action."
java.util.concurrent.CompletableFuture.thenAcceptBoth,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, is executed with the two  results as arguments to the supplied action."
java.util.concurrent.CompletableFuture.thenAcceptBothAsync,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, is executed using this  stage's default asynchronous execution facility, with the two  results as arguments to the supplied action."
java.util.concurrent.CompletableFuture.thenAcceptBothAsync,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, is executed using the  supplied executor, with the two results as arguments to the  supplied action."
java.util.concurrent.CompletableFuture.thenApply,"Returns a new CompletionStage that, when this stage completes  normally, is executed with this stage's result as the argument  to the supplied function."
java.util.concurrent.CompletableFuture.thenApplyAsync,"Returns a new CompletionStage that, when this stage completes  normally, is executed using this stage's default asynchronous  execution facility, with this stage's result as the argument to  the supplied function."
java.util.concurrent.CompletableFuture.thenApplyAsync,"Returns a new CompletionStage that, when this stage completes  normally, is executed using the supplied Executor, with this  stage's result as the argument to the supplied function."
java.util.concurrent.CompletableFuture.thenCombine,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, is executed with the two  results as arguments to the supplied function."
java.util.concurrent.CompletableFuture.thenCombineAsync,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, is executed using this  stage's default asynchronous execution facility, with the two  results as arguments to the supplied function."
java.util.concurrent.CompletableFuture.thenCombineAsync,"Returns a new CompletionStage that, when this and the other  given stage both complete normally, is executed using the  supplied executor, with the two results as arguments to the  supplied function."
java.util.concurrent.CompletableFuture.thenCompose,Returns a new CompletionStage that is completed with the same  value as the CompletionStage returned by the given function.
java.util.concurrent.CompletableFuture.thenComposeAsync,"Returns a new CompletionStage that is completed with the same  value as the CompletionStage returned by the given function,  executed using this stage's default asynchronous execution  facility."
java.util.concurrent.CompletableFuture.thenComposeAsync,"Returns a new CompletionStage that is completed with the same  value as the CompletionStage returned by the given function,  executed using the supplied Executor."
java.util.concurrent.CompletableFuture.thenRun,"Returns a new CompletionStage that, when this stage completes  normally, executes the given action."
java.util.concurrent.CompletableFuture.thenRunAsync,"Returns a new CompletionStage that, when this stage completes  normally, executes the given action using this stage's default  asynchronous execution facility."
java.util.concurrent.CompletableFuture.thenRunAsync,"Returns a new CompletionStage that, when this stage completes  normally, executes the given action using the supplied Executor."
java.util.concurrent.CompletableFuture.toCompletableFuture,Returns this CompletableFuture.
java.util.concurrent.CompletableFuture.toString,"Returns a string identifying this CompletableFuture, as well as  its completion state."
java.util.concurrent.CompletableFuture.whenComplete,"Returns a new CompletionStage with the same result or exception as  this stage, that executes the given action when this stage completes."
java.util.concurrent.CompletableFuture.whenCompleteAsync,"Returns a new CompletionStage with the same result or exception as  this stage, that executes the given action using this stage's  default asynchronous execution facility when this stage completes."
java.util.concurrent.CompletableFuture.whenCompleteAsync,"Returns a new CompletionStage with the same result or exception as  this stage, that executes the given action using the supplied  Executor when this stage completes."
java.util.concurrent.ConcurrentHashMap.computeIfAbsent,"If the specified key is not already associated with a value,  attempts to compute its value using the given mapping function  and enters it into this map unlessnull."
java.util.concurrent.ConcurrentHashMap.computeIfPresent,"If the value for the specified key is present, attempts to  compute a new mapping given the key and its current mapped  value."
java.util.concurrent.ConcurrentHashMap.contains,Tests if some key maps into the specified value in this table.
java.util.concurrent.ConcurrentHashMap.containsKey,Tests if the specified object is a key in this table.
java.util.concurrent.ConcurrentHashMap.elements,Returns an enumeration of the values in this table.
java.util.concurrent.ConcurrentHashMap.forEach,"Performs the given action for each (key, value)."
java.util.concurrent.ConcurrentHashMap.forEach,"Performs the given action for each non-null transformation  of each (key, value)."
java.util.concurrent.ConcurrentHashMap.forEachEntry,Performs the given action for each entry.
java.util.concurrent.ConcurrentHashMap.forEachEntry,Performs the given action for each non-null transformation  of each entry.
java.util.concurrent.ConcurrentHashMap.forEachKey,Performs the given action for each key.
java.util.concurrent.ConcurrentHashMap.forEachKey,Performs the given action for each non-null transformation  of each key.
java.util.concurrent.ConcurrentHashMap.forEachValue,Performs the given action for each value.
java.util.concurrent.ConcurrentHashMap.forEachValue,Performs the given action for each non-null transformation  of each value.
java.util.concurrent.ConcurrentHashMap.getOrDefault,"Returns the value to which the specified key is mapped, or the  given default value if this map contains no mapping for the  key."
java.util.concurrent.ConcurrentHashMap.hashCode,"Returns the hash code value for thisMap, i.e.,  the sum of, for each key-value pair in the map,key.hashCode() ^ value.hashCode()."
java.util.concurrent.ConcurrentHashMap.keys,Returns an enumeration of the keys in this table.
java.util.concurrent.ConcurrentHashMap.keySet,"Returns aSetview of the keys in this map, using the  given common mapped value for any additions (i.e.,Collection.add(E)andCollection.addAll(Collection))."
java.util.concurrent.ConcurrentHashMap.mappingCount,Returns the number of mappings.
java.util.concurrent.ConcurrentHashMap.merge,"If the specified key is not already associated with a  (non-null) value, associates it with the given value."
java.util.concurrent.ConcurrentHashMap.newKeySet,Creates a newSetbacked by a ConcurrentHashMap  from the given type toBoolean.TRUE.
java.util.concurrent.ConcurrentHashMap.put,Maps the specified key to the specified value in this table.
java.util.concurrent.ConcurrentHashMap.putAll,Copies all of the mappings from the specified map to this one.
java.util.concurrent.ConcurrentHashMap.putIfAbsent,"If the specified key is not already associated  with a value, associates it with the given value."
java.util.concurrent.ConcurrentHashMap.reduce,"Returns the result of accumulating the given transformation  of all (key, value) pairs using the given reducer to  combine values, or null if none."
java.util.concurrent.ConcurrentHashMap.reduceEntries,"Returns the result of accumulating all entries using the  given reducer to combine values, or null if none."
java.util.concurrent.ConcurrentHashMap.reduceEntries,"Returns the result of accumulating the given transformation  of all entries using the given reducer to combine values,  or null if none."
java.util.concurrent.ConcurrentHashMap.reduceEntriesToDouble,"Returns the result of accumulating the given transformation  of all entries using the given reducer to combine values,  and the given basis as an identity value."
java.util.concurrent.ConcurrentHashMap.reduceKeys,"Returns the result of accumulating all keys using the given  reducer to combine values, or null if none."
java.util.concurrent.ConcurrentHashMap.reduceKeys,"Returns the result of accumulating the given transformation  of all keys using the given reducer to combine values, or  null if none."
java.util.concurrent.ConcurrentHashMap.reduceKeysToDouble,"Returns the result of accumulating the given transformation  of all keys using the given reducer to combine values, and  the given basis as an identity value."
java.util.concurrent.ConcurrentHashMap.reduceToDouble,"Returns the result of accumulating the given transformation  of all (key, value) pairs using the given reducer to  combine values, and the given basis as an identity value."
java.util.concurrent.ConcurrentHashMap.reduceValues,"Returns the result of accumulating all values using the  given reducer to combine values, or null if none."
java.util.concurrent.ConcurrentHashMap.reduceValues,"Returns the result of accumulating the given transformation  of all values using the given reducer to combine values, or  null if none."
java.util.concurrent.ConcurrentHashMap.reduceValuesToDouble,"Returns the result of accumulating the given transformation  of all values using the given reducer to combine values,  and the given basis as an identity value."
java.util.concurrent.ConcurrentHashMap.remove,Removes the key (and its corresponding value) from this map.
java.util.concurrent.ConcurrentHashMap.remove,Removes the entry for a key only if currently mapped to a given value.
java.util.concurrent.ConcurrentHashMap.replace,Replaces the entry for a key only if currently mapped to some value.
java.util.concurrent.ConcurrentHashMap.replace,Replaces the entry for a key only if currently mapped to a given value.
java.util.concurrent.ConcurrentHashMap.search,"Returns a non-null result from applying the given search  function on each (key, value), or null if none."
java.util.concurrent.ConcurrentHashMap.searchEntries,"Returns a non-null result from applying the given search  function on each entry, or null if none."
java.util.concurrent.ConcurrentHashMap.searchKeys,"Returns a non-null result from applying the given search  function on each key, or null if none."
java.util.concurrent.ConcurrentHashMap.searchValues,"Returns a non-null result from applying the given search  function on each value, or null if none."
java.util.concurrent.ConcurrentHashMap.add,"Adds the specified key to this set view by mapping the key to  the default mapped value in the backing map, if defined."
java.util.concurrent.ConcurrentHashMap.addAll,"Adds all of the elements in the specified collection to this set,  as if by callingadd(K)on each one."
java.util.concurrent.ConcurrentHashMap.clear,"Removes all of the elements from this view, by removing all  the mappings from the map backing this view."
java.util.concurrent.ConcurrentHashMap.getMap,Returns the map backing this view.
java.util.concurrent.ConcurrentHashMap.getMappedValue,"Returns the default mapped value for additions,  ornullif additions are not supported."
java.util.concurrent.ConcurrentHashMap.iterator,Returns an iterator over the elements in this collection.
java.util.concurrent.ConcurrentHashMap.remove,"Removes the key from this map view, by removing the key (and its  corresponding value) from the backing map."
java.util.concurrent.ConcurrentLinkedDeque.add,Inserts the specified element at the tail of this deque.
java.util.concurrent.ConcurrentLinkedDeque.addAll,"Appends all of the elements in the specified collection to the end of  this deque, in the order that they are returned by the specified  collection's iterator."
java.util.concurrent.ConcurrentLinkedDeque.element,"Retrieves, but does not remove, the head of the queue represented by  this deque (in other words, the first element of this deque)."
java.util.concurrent.ConcurrentLinkedDeque.iterator,Returns an iterator over the elements in this deque in proper sequence.
java.util.concurrent.ConcurrentLinkedDeque.peek,"Retrieves, but does not remove, the head of the queue represented by  this deque (in other words, the first element of this deque), or  returnsnullif this deque is empty."
java.util.concurrent.ConcurrentLinkedDeque.push,"Pushes an element onto the stack represented by this deque (in other  words, at the head of this deque) if it is possible to do so  immediately without violating capacity restrictions, throwing anIllegalStateExceptionif no space is currently available."
java.util.concurrent.ConcurrentLinkedDeque.remove,"Retrieves and removes the head of the queue represented by this deque  (in other words, the first element of this deque)."
java.util.concurrent.ConcurrentLinkedDeque.remove,Removes the first occurrence of the specified element from this deque.
java.util.concurrent.ConcurrentLinkedDeque.removeLastOccurrence,Removes the last occurrence of the specified element from this deque.
java.util.concurrent.ConcurrentLinkedDeque.spliterator,Returns aSpliteratorover the elements in this deque.
java.util.concurrent.ConcurrentLinkedDeque.toArray,"Returns an array containing all of the elements in this deque, in  proper sequence (from first to last element)."
java.util.concurrent.ConcurrentLinkedDeque.toArray,"Returns an array containing all of the elements in this deque,  in proper sequence (from first to last element); the runtime  type of the returned array is that of the specified array."
java.util.concurrent.ConcurrentLinkedQueue.add,Inserts the specified element at the tail of this queue.
java.util.concurrent.ConcurrentLinkedQueue.addAll,"Appends all of the elements in the specified collection to the end of  this queue, in the order that they are returned by the specified  collection's iterator."
java.util.concurrent.ConcurrentLinkedQueue.isEmpty,Returnstrueif this queue contains no elements.
java.util.concurrent.ConcurrentSkipListMap.ceilingEntry,"Returns a key-value mapping associated with the least key  greater than or equal to the given key, ornullif  there is no such entry."
java.util.concurrent.ConcurrentSkipListMap.clone,Returns a shallow copy of thisConcurrentSkipListMapinstance.
java.util.concurrent.ConcurrentSkipListMap.getOrDefault,"Returns the value to which the specified key is mapped,  or the given defaultValue if this map contains no mapping for the key."
java.util.concurrent.ConcurrentSkipListMap.merge,"If the specified key is not already associated with a value,  associates it with the given value."
java.util.concurrent.ConcurrentSkipListSet.clone,Returns a shallow copy of thisConcurrentSkipListSetinstance.
java.util.concurrent.ConcurrentSkipListSet.removeAll,Removes from this set all of its elements that are contained in  the specified collection.
java.util.concurrent.ConcurrentSkipListSet.size,Returns the number of elements in this set.
java.util.concurrent.ConcurrentSkipListSet.spliterator,Returns aSpliteratorover the elements in this set.
java.util.concurrent.CopyOnWriteArrayList.addAll,"Appends all of the elements in the specified collection to the end  of this list, in the order that they are returned by the specified  collection's iterator."
java.util.concurrent.CopyOnWriteArrayList.addAllAbsent,"Appends all of the elements in the specified collection that  are not already contained in this list, to the end of  this list, in the order that they are returned by the  specified collection's iterator."
java.util.concurrent.CopyOnWriteArrayList.addIfAbsent,"Appends the element, if not present."
java.util.concurrent.CopyOnWriteArrayList.clone,Returns a shallow copy of this list.
java.util.concurrent.CopyOnWriteArrayList.containsAll,Returnstrueif this list contains all of the elements of the  specified collection.
java.util.concurrent.CopyOnWriteArrayList.indexOf,"Returns the index of the first occurrence of the specified element in  this list, searching forwards fromindex, or returns -1 if  the element is not found."
java.util.concurrent.CopyOnWriteArrayList.lastIndexOf,"Returns the index of the last occurrence of the specified element in  this list, searching backwards fromindex, or returns -1 if  the element is not found."
java.util.concurrent.CopyOnWriteArrayList.removeAll,Removes from this list all of its elements that are contained in  the specified collection.
java.util.concurrent.CopyOnWriteArrayList.spliterator,Returns aSpliteratorover the elements in this list.
java.util.concurrent.CopyOnWriteArrayList.subList,"Returns a view of the portion of this list betweenfromIndex, inclusive, andtoIndex, exclusive."
java.util.concurrent.CopyOnWriteArrayList.toString,Returns a string representation of this list.
java.util.concurrent.CopyOnWriteArraySet.addAll,Adds all of the elements in the specified collection to this set if  they're not already present.
java.util.concurrent.CopyOnWriteArraySet.containsAll,Returnstrueif this set contains all of the elements of the  specified collection.
java.util.concurrent.CopyOnWriteArraySet.iterator,Returns an iterator over the elements contained in this set  in the order in which these elements were added.
java.util.concurrent.CopyOnWriteArraySet.removeAll,Removes from this set all of its elements that are contained in the  specified collection.
java.util.concurrent.CopyOnWriteArraySet.retainAll,Retains only the elements in this set that are contained in the  specified collection.
java.util.concurrent.CopyOnWriteArraySet.spliterator,Returns aSpliteratorover the elements in this set in the order  in which these elements were added.
java.util.concurrent.CopyOnWriteArraySet.toArray,Returns an array containing all of the elements in this set.
java.util.concurrent.CopyOnWriteArraySet.toArray,Returns an array containing all of the elements in this set; the  runtime type of the returned array is that of the specified array.
java.util.concurrent.CountDownLatch.await,"Causes the current thread to wait until the latch has counted down to  zero, unless the thread isinterrupted."
java.util.concurrent.CountDownLatch.await,"Causes the current thread to wait until the latch has counted down to  zero, unless the thread isinterrupted,  or the specified waiting time elapses."
java.util.concurrent.CountDownLatch.countDown,"Decrements the count of the latch, releasing all waiting threads if  the count reaches zero."
java.util.concurrent.CountDownLatch.getCount,Returns the current count.
java.util.concurrent.CountDownLatch.toString,"Returns a string identifying this latch, as well as its state."
java.util.concurrent.CountedCompleter.addToPendingCount,Adds (atomically) the given value to the pending count.
java.util.concurrent.CountedCompleter.compareAndSetPendingCount,Sets (atomically) the pending count to the given count only if  it currently holds the given expected value.
java.util.concurrent.CountedCompleter.complete,"Regardless of pending count, invokesonCompletion(CountedCompleter), marks this task as  complete and further triggerstryComplete()on this  task's completer, if one exists."
java.util.concurrent.CountedCompleter.compute,The main computation performed by this task.
java.util.concurrent.CountedCompleter.decrementPendingCountUnlessZero,"If the pending count is nonzero, (atomically) decrements it."
java.util.concurrent.CountedCompleter.exec,Implements execution conventions for CountedCompleters.
java.util.concurrent.CountedCompleter.firstComplete,"If this task's pending count is zero, returns this task;  otherwise decrements its pending count and returnsnull."
java.util.concurrent.CountedCompleter.getCompleter,"Returns the completer established in this task's constructor,  ornullif none."
java.util.concurrent.CountedCompleter.getPendingCount,Returns the current pending count.
java.util.concurrent.CountedCompleter.getRawResult,Returns the result of the computation.
java.util.concurrent.CountedCompleter.getRoot,"Returns the root of the current computation; i.e., this  task if it has no completer, else its completer's root."
java.util.concurrent.CountedCompleter.helpComplete,"If this task has not completed, attempts to process at most the  given number of other unprocessed tasks for which this task is  on the completion path, if any are known to exist."
java.util.concurrent.CountedCompleter.nextComplete,"If this task does not have a completer, invokesForkJoinTask.quietlyComplete()and returnsnull."
java.util.concurrent.CountedCompleter.onCompletion,"Performs an action when methodtryComplete()is invoked  and the pending count is zero, or when the unconditional  methodcomplete(T)is invoked."
java.util.concurrent.CountedCompleter.onExceptionalCompletion,"Performs an action when methodForkJoinTask.completeExceptionally(Throwable)is invoked or methodcompute()throws an exception, and this task has not already  otherwise completed normally."
java.util.concurrent.CountedCompleter.propagateCompletion,"Equivalent totryComplete()but does not invokeonCompletion(CountedCompleter)along the completion path:  If the pending count is nonzero, decrements the count;  otherwise, similarly tries to complete this task's completer, if  one exists, else marks this task as complete."
java.util.concurrent.CountedCompleter.quietlyCompleteRoot,Equivalent togetRoot().quietlyComplete().
java.util.concurrent.CountedCompleter.setPendingCount,Sets the pending count to the given value.
java.util.concurrent.CountedCompleter.setRawResult,A method that result-bearing CountedCompleters may optionally  use to help maintain result data.
java.util.concurrent.CountedCompleter.tryComplete,"If the pending count is nonzero, decrements the count;  otherwise invokesonCompletion(CountedCompleter)and then similarly tries to complete this task's completer,  if one exists, else marks this task as complete."
java.util.concurrent.CyclicBarrier.await,Waits until allpartieshave invokedawaiton this barrier.
java.util.concurrent.CyclicBarrier.await,"Waits until allpartieshave invokedawaiton this barrier, or the specified waiting time elapses."
java.util.concurrent.CyclicBarrier.getNumberWaiting,Returns the number of parties currently waiting at the barrier.
java.util.concurrent.CyclicBarrier.getParties,Returns the number of parties required to trip this barrier.
java.util.concurrent.CyclicBarrier.isBroken,Queries if this barrier is in a broken state.
java.util.concurrent.CyclicBarrier.reset,Resets the barrier to its initial state.
java.util.concurrent.DelayQueue.add,Inserts the specified element into this delay queue.
java.util.concurrent.DelayQueue.clear,Atomically removes all of the elements from this delay queue.
java.util.concurrent.DelayQueue.iterator,Returns an iterator over all the elements (both expired and  unexpired) in this queue.
java.util.concurrent.DelayQueue.peek,"Retrieves, but does not remove, the head of this queue, or  returnsnullif this queue is empty."
java.util.concurrent.DelayQueue.poll,"Retrieves and removes the head of this queue, or returnsnullif this queue has no elements with an expired delay."
java.util.concurrent.DelayQueue.poll,"Retrieves and removes the head of this queue, waiting if necessary  until an element with an expired delay is available on this queue,  or the specified wait time expires."
java.util.concurrent.DelayQueue.remainingCapacity,Always returnsInteger.MAX_VALUEbecause  aDelayQueueis not capacity constrained.
java.util.concurrent.DelayQueue.remove,"Removes a single instance of the specified element from this  queue, if it is present, whether or not it has expired."
java.util.concurrent.DelayQueue.take,"Retrieves and removes the head of this queue, waiting if necessary  until an element with an expired delay is available on this queue."
java.util.concurrent.Exchanger.exchange,"Waits for another thread to arrive at this exchange point (unless  the current thread isinterrupted),  and then transfers the given object to it, receiving its object  in return."
java.util.concurrent.Exchanger.exchange,"Waits for another thread to arrive at this exchange point (unless  the current thread isinterruptedor  the specified waiting time elapses), and then transfers the given  object to it, receiving its object in return."
java.util.concurrent.ExecutorCompletionService.poll,"Retrieves and removes the Future representing the next  completed task, ornullif none are present."
java.util.concurrent.ExecutorCompletionService.poll,"Retrieves and removes the Future representing the next  completed task, waiting if necessary up to the specified wait  time if none are yet present."
java.util.concurrent.ExecutorCompletionService.submit,Submits a value-returning task for execution and returns a Future  representing the pending results of the task.
java.util.concurrent.ExecutorCompletionService.take,"Retrieves and removes the Future representing the next  completed task, waiting if none are yet present."
java.util.concurrent.Executors.callable,"Returns aCallableobject that, when  called, runs the given task and returnsnull."
java.util.concurrent.Executors.callable,"Returns aCallableobject that, when  called, runs the given task and returns the given result."
java.util.concurrent.Executors.callable,"Returns aCallableobject that, when  called, runs the given privileged action and returns its result."
java.util.concurrent.Executors.callable,"Returns aCallableobject that, when  called, runs the given privileged exception action and returns  its result."
java.util.concurrent.Executors.defaultThreadFactory,Returns a default thread factory used to create new threads.
java.util.concurrent.Executors.newCachedThreadPool,"Creates a thread pool that creates new threads as needed, but  will reuse previously constructed threads when they are  available."
java.util.concurrent.Executors.newCachedThreadPool,"Creates a thread pool that creates new threads as needed, but  will reuse previously constructed threads when they are  available, and uses the provided  ThreadFactory to create new threads when needed."
java.util.concurrent.Executors.newFixedThreadPool,Creates a thread pool that reuses a fixed number of threads  operating off a shared unbounded queue.
java.util.concurrent.Executors.newFixedThreadPool,"Creates a thread pool that reuses a fixed number of threads  operating off a shared unbounded queue, using the provided  ThreadFactory to create new threads when needed."
java.util.concurrent.Executors.newScheduledThreadPool,"Creates a thread pool that can schedule commands to run after a  given delay, or to execute periodically."
java.util.concurrent.Executors.newSingleThreadExecutor,Creates an Executor that uses a single worker thread operating  off an unbounded queue.
java.util.concurrent.Executors.newSingleThreadExecutor,"Creates an Executor that uses a single worker thread operating  off an unbounded queue, and uses the provided ThreadFactory to  create a new thread when needed."
java.util.concurrent.Executors.newSingleThreadScheduledExecutor,"Creates a single-threaded executor that can schedule commands  to run after a given delay, or to execute periodically."
java.util.concurrent.Executors.newWorkStealingPool,Creates a work-stealing thread pool using the number ofavailable processorsas its target parallelism level.
java.util.concurrent.Executors.newWorkStealingPool,"Creates a thread pool that maintains enough threads to support  the given parallelism level, and may use multiple queues to  reduce contention."
java.util.concurrent.Executors.unconfigurableExecutorService,"Returns an object that delegates all definedExecutorServicemethods to the given executor, but not any  other methods that might otherwise be accessible using  casts."
java.util.concurrent.Executors.unconfigurableScheduledExecutorService,"Returns an object that delegates all definedScheduledExecutorServicemethods to the given executor, but  not any other methods that might otherwise be accessible using  casts."
java.util.concurrent.Flow.defaultBufferSize,"Returns a default value for Publisher or Subscriber buffering,  that may be used in the absence of other constraints."
java.util.concurrent.Flow.subscribe,Adds the given Subscriber if possible.
java.util.concurrent.Flow.onComplete,"Method invoked when it is known that no additional  Subscriber method invocations will occur for a Subscription  that is not already terminated by error, after which no  other Subscriber methods are invoked by the Subscription."
java.util.concurrent.Flow.onError,"Method invoked upon an unrecoverable error encountered by a  Publisher or Subscription, after which no other Subscriber  methods are invoked by the Subscription."
java.util.concurrent.Flow.onNext,Method invoked with a Subscription's next item.
java.util.concurrent.Flow.onSubscribe,Method invoked prior to invoking any other Subscriber  methods for the given Subscription.
java.util.concurrent.Flow.cancel,Causes the Subscriber to (eventually) stop receiving  messages.
java.util.concurrent.Flow.request,Adds the given numbernof items to the current  unfulfilled demand for this subscription.
java.util.concurrent.ForkJoinPool.newThread,Returns a new worker thread operating in the given pool.
java.util.concurrent.ForkJoinPool.awaitQuiescence,"If called by a ForkJoinTask operating in this pool, equivalent  in effect toForkJoinTask.helpQuiesce()."
java.util.concurrent.ForkJoinPool.awaitTermination,"Blocks until all tasks have completed execution after a  shutdown request, or the timeout occurs, or the current thread  is interrupted, whichever happens first."
java.util.concurrent.ForkJoinPool.commonPool,Returns the common pool instance.
java.util.concurrent.ForkJoinPool.drainTasksTo,"Removes all available unexecuted submitted and forked tasks  from scheduling queues and adds them to the given collection,  without altering their execution status."
java.util.concurrent.ForkJoinPool.execute,Executes the given command at some time in the future.
java.util.concurrent.ForkJoinPool.execute,Arranges for (asynchronous) execution of the given task.
java.util.concurrent.ForkJoinPool.getActiveThreadCount,Returns an estimate of the number of threads that are currently  stealing or executing tasks.
java.util.concurrent.ForkJoinPool.getAsyncMode,Returnstrueif this pool uses local first-in-first-out  scheduling mode for forked tasks that are never joined.
java.util.concurrent.ForkJoinPool.getCommonPoolParallelism,Returns the targeted parallelism level of the common pool.
java.util.concurrent.ForkJoinPool.getFactory,Returns the factory used for constructing new workers.
java.util.concurrent.ForkJoinPool.getParallelism,Returns the targeted parallelism level of this pool.
java.util.concurrent.ForkJoinPool.getPoolSize,Returns the number of worker threads that have started but not  yet terminated.
java.util.concurrent.ForkJoinPool.getQueuedSubmissionCount,Returns an estimate of the number of tasks submitted to this  pool that have not yet begun executing.
java.util.concurrent.ForkJoinPool.getQueuedTaskCount,Returns an estimate of the total number of tasks currently held  in queues by worker threads (but not including tasks submitted  to the pool that have not begun executing).
java.util.concurrent.ForkJoinPool.getRunningThreadCount,Returns an estimate of the number of worker threads that are  not blocked waiting to join tasks or for other managed  synchronization.
java.util.concurrent.ForkJoinPool.getStealCount,Returns an estimate of the total number of completed tasks that  were executed by a thread other than their submitter.
java.util.concurrent.ForkJoinPool.getUncaughtExceptionHandler,Returns the handler for internal worker threads that terminate  due to unrecoverable errors encountered while executing tasks.
java.util.concurrent.ForkJoinPool.hasQueuedSubmissions,Returnstrueif there are any tasks submitted to this  pool that have not yet begun executing.
java.util.concurrent.ForkJoinPool.invoke,"Performs the given task, returning its result upon completion."
java.util.concurrent.ForkJoinPool.isQuiescent,Returnstrueif all worker threads are currently idle.
java.util.concurrent.ForkJoinPool.isShutdown,Returnstrueif this pool has been shut down.
java.util.concurrent.ForkJoinPool.isTerminated,Returnstrueif all tasks have completed following shut down.
java.util.concurrent.ForkJoinPool.isTerminating,Returnstrueif the process of termination has  commenced but not yet completed.
java.util.concurrent.ForkJoinPool.managedBlock,Runs the given possibly blocking task.
java.util.concurrent.ForkJoinPool.pollSubmission,Removes and returns the next unexecuted submission if one is  available.
java.util.concurrent.ForkJoinPool.shutdown,"Possibly initiates an orderly shutdown in which previously  submitted tasks are executed, but no new tasks will be  accepted."
java.util.concurrent.ForkJoinPool.shutdownNow,"Possibly attempts to cancel and/or stop all tasks, and reject  all subsequently submitted tasks."
java.util.concurrent.ForkJoinPool.submit,Submits a ForkJoinTask for execution.
java.util.concurrent.ForkJoinPool.toString,"Returns a string identifying this pool, as well as its state,  including indications of run state, parallelism level, and  worker and task counts."
java.util.concurrent.ForkJoinPool.block,"Possibly blocks the current thread, for example waiting for  a lock or condition."
java.util.concurrent.ForkJoinPool.isReleasable,Returnstrueif blocking is unnecessary.
java.util.concurrent.ForkJoinTask.adapt,"Returns a newForkJoinTaskthat performs therunmethod of the givenRunnableas its action, and returns  a null result uponjoin()."
java.util.concurrent.ForkJoinTask.adapt,"Returns a newForkJoinTaskthat performs therunmethod of the givenRunnableas its action, and returns  the given result uponjoin()."
java.util.concurrent.ForkJoinTask.adapt,"Returns a newForkJoinTaskthat performs thecallmethod of the givenCallableas its action, and returns  its result uponjoin(), translating any checked exceptions  encountered intoRuntimeException."
java.util.concurrent.ForkJoinTask.cancel,Attempts to cancel execution of this task.
java.util.concurrent.ForkJoinTask.compareAndSetForkJoinTaskTag,Atomically conditionally sets the tag value for this task.
java.util.concurrent.ForkJoinTask.complete,"Completes this task, and if not already aborted or cancelled,  returning the given value as the result of subsequent  invocations ofjoinand related operations."
java.util.concurrent.ForkJoinTask.completeExceptionally,"Completes this task abnormally, and if not already aborted or  cancelled, causes it to throw the given exception uponjoinand related operations."
java.util.concurrent.ForkJoinTask.exec,"Immediately performs the base action of this task and returns  true if, upon return from this method, this task is guaranteed  to have completed."
java.util.concurrent.ForkJoinTask.fork,"Arranges to asynchronously execute this task in the pool the  current task is running in, if applicable, or using theForkJoinPool.commonPool()if notinForkJoinPool()."
java.util.concurrent.ForkJoinTask.get,"Waits if necessary for the computation to complete, and then  retrieves its result."
java.util.concurrent.ForkJoinTask.get,"Waits if necessary for at most the given time for the computation  to complete, and then retrieves its result, if available."
java.util.concurrent.ForkJoinTask.getException,"Returns the exception thrown by the base computation, or aCancellationExceptionif cancelled, ornullif  none or if the method has not yet completed."
java.util.concurrent.ForkJoinTask.getForkJoinTaskTag,Returns the tag for this task.
java.util.concurrent.ForkJoinTask.getPool,"Returns the pool hosting the current thread, ornullif the current thread is executing outside of any ForkJoinPool."
java.util.concurrent.ForkJoinTask.getQueuedTaskCount,Returns an estimate of the number of tasks that have been  forked by the current worker thread but not yet executed.
java.util.concurrent.ForkJoinTask.getRawResult,"Returns the result that would be returned byjoin(), even  if this task completed abnormally, ornullif this task  is not known to have been completed."
java.util.concurrent.ForkJoinTask.getSurplusQueuedTaskCount,"Returns an estimate of how many more locally queued tasks are  held by the current worker thread than there are other worker  threads that might steal them, or zero if this thread is not  operating in a ForkJoinPool."
java.util.concurrent.ForkJoinTask.helpQuiesce,Possibly executes tasks until the pool hosting the current taskis quiescent.
java.util.concurrent.ForkJoinTask.inForkJoinPool,Returnstrueif the current thread is aForkJoinWorkerThreadexecuting as a ForkJoinPool computation.
java.util.concurrent.ForkJoinTask.invoke,"Commences performing this task, awaits its completion if  necessary, and returns its result, or throws an (unchecked)RuntimeExceptionorErrorif the underlying  computation did so."
java.util.concurrent.ForkJoinTask.invokeAll,"Forks all tasks in the specified collection, returning whenisDoneholds for each task or an (unchecked) exception  is encountered, in which case the exception is rethrown."
java.util.concurrent.ForkJoinTask.invokeAll,"Forks the given tasks, returning whenisDoneholds for  each task or an (unchecked) exception is encountered, in which  case the exception is rethrown."
java.util.concurrent.ForkJoinTask.isCancelled,Returnstrueif this task was cancelled before it completed  normally.
java.util.concurrent.ForkJoinTask.isCompletedAbnormally,Returnstrueif this task threw an exception or was cancelled.
java.util.concurrent.ForkJoinTask.isCompletedNormally,Returnstrueif this task completed without throwing an  exception and was not cancelled.
java.util.concurrent.ForkJoinTask.isDone,Returnstrueif this task completed.
java.util.concurrent.ForkJoinTask.join,Returns the result of the computation when itis done.
java.util.concurrent.ForkJoinTask.peekNextLocalTask,"Returns, but does not unschedule or execute, a task queued by  the current thread but not yet executed, if one is immediately  available."
java.util.concurrent.ForkJoinTask.pollNextLocalTask,"Unschedules and returns, without executing, the next task  queued by the current thread but not yet executed, if the  current thread is operating in a ForkJoinPool."
java.util.concurrent.ForkJoinTask.pollSubmission,"If the current thread is operating in a ForkJoinPool,  unschedules and returns, without executing, a task externally  submitted to the pool, if one is available."
java.util.concurrent.ForkJoinTask.pollTask,"If the current thread is operating in a ForkJoinPool,  unschedules and returns, without executing, the next task  queued by the current thread but not yet executed, if one is  available, or if not available, a task that was forked by some  other thread, if available."
java.util.concurrent.ForkJoinTask.quietlyComplete,Completes this task normally without setting a value.
java.util.concurrent.ForkJoinTask.quietlyInvoke,"Commences performing this task and awaits its completion if  necessary, without returning its result or throwing its  exception."
java.util.concurrent.ForkJoinTask.quietlyJoin,"Joins this task, without returning its result or throwing its  exception."
java.util.concurrent.ForkJoinTask.reinitialize,"Resets the internal bookkeeping state of this task, allowing a  subsequentfork."
java.util.concurrent.ForkJoinTask.setForkJoinTaskTag,Atomically sets the tag value for this task and returns the old value.
java.util.concurrent.ForkJoinTask.setRawResult,Forces the given value to be returned as a result.
java.util.concurrent.ForkJoinTask.tryUnfork,Tries to unschedule this task for execution.
java.util.concurrent.ForkJoinWorkerThread.getPool,Returns the pool hosting this thread.
java.util.concurrent.ForkJoinWorkerThread.getPoolIndex,Returns the unique index number of this thread in its pool.
java.util.concurrent.ForkJoinWorkerThread.onStart,Initializes internal state after construction but before  processing any tasks.
java.util.concurrent.ForkJoinWorkerThread.onTermination,Performs cleanup associated with termination of this worker  thread.
java.util.concurrent.ForkJoinWorkerThread.run,"This method is required to be public, but should never be  called explicitly."
java.util.concurrent.FutureTask.done,Protected method invoked when this task transitions to stateisDone(whether normally or via cancellation).
java.util.concurrent.FutureTask.run,Sets this Future to the result of its computation  unless it has been cancelled.
java.util.concurrent.FutureTask.runAndReset,"Executes the computation without setting its result, and then  resets this future to initial state, failing to do so if the  computation encounters an exception or is cancelled."
java.util.concurrent.FutureTask.set,Sets the result of this future to the given value unless  this future has already been set or has been cancelled.
java.util.concurrent.FutureTask.setException,"Causes this future to report anExecutionExceptionwith the given throwable as its cause, unless this future has  already been set or has been cancelled."
java.util.concurrent.FutureTask.toString,Returns a string representation of this FutureTask.
java.util.concurrent.LinkedBlockingDeque.add,Inserts the specified element at the end of this deque unless it would  violate capacity restrictions.
java.util.concurrent.LinkedBlockingDeque.addFirst,"Inserts the specified element at the front of this deque if it is  possible to do so immediately without violating capacity restrictions,  throwing anIllegalStateExceptionif no space is currently  available."
java.util.concurrent.LinkedBlockingDeque.addLast,"Inserts the specified element at the end of this deque if it is  possible to do so immediately without violating capacity restrictions,  throwing anIllegalStateExceptionif no space is currently  available."
java.util.concurrent.LinkedBlockingDeque.clear,Atomically removes all of the elements from this deque.
java.util.concurrent.LinkedBlockingDeque.offer,"Inserts the specified element into the queue represented by this deque  (in other words, at the tail of this deque) if it is possible to do so  immediately without violating capacity restrictions, returningtrueupon success andfalseif no space is currently  available."
java.util.concurrent.LinkedBlockingDeque.offer,"Inserts the specified element into the queue represented by this deque  (in other words, at the tail of this deque), waiting up to the  specified wait time if necessary for space to become available."
java.util.concurrent.LinkedBlockingDeque.offerFirst,"Inserts the specified element at the front of this deque if it is  possible to do so immediately without violating capacity restrictions,  returningtrueupon success andfalseif no space is  currently available."
java.util.concurrent.LinkedBlockingDeque.offerFirst,"Inserts the specified element at the front of this deque,  waiting up to the specified wait time if necessary for space to  become available."
java.util.concurrent.LinkedBlockingDeque.offerLast,"Inserts the specified element at the end of this deque if it is  possible to do so immediately without violating capacity restrictions,  returningtrueupon success andfalseif no space is  currently available."
java.util.concurrent.LinkedBlockingDeque.offerLast,"Inserts the specified element at the end of this deque,  waiting up to the specified wait time if necessary for space to  become available."
java.util.concurrent.LinkedBlockingDeque.poll,"Retrieves and removes the head of the queue represented by this deque  (in other words, the first element of this deque), waiting up to the  specified wait time if necessary for an element to become available."
java.util.concurrent.LinkedBlockingDeque.pollFirst,"Retrieves and removes the first element of this deque, waiting  up to the specified wait time if necessary for an element to  become available."
java.util.concurrent.LinkedBlockingDeque.pollLast,"Retrieves and removes the last element of this deque, waiting  up to the specified wait time if necessary for an element to  become available."
java.util.concurrent.LinkedBlockingDeque.put,"Inserts the specified element into the queue represented by this deque  (in other words, at the tail of this deque), waiting if necessary for  space to become available."
java.util.concurrent.LinkedBlockingDeque.putFirst,"Inserts the specified element at the front of this deque,  waiting if necessary for space to become available."
java.util.concurrent.LinkedBlockingDeque.putLast,"Inserts the specified element at the end of this deque,  waiting if necessary for space to become available."
java.util.concurrent.LinkedBlockingDeque.remainingCapacity,Returns the number of additional elements that this deque can ideally  (in the absence of memory or resource constraints) accept without  blocking.
java.util.concurrent.LinkedBlockingDeque.take,"Retrieves and removes the head of the queue represented by this deque  (in other words, the first element of this deque), waiting if  necessary until an element becomes available."
java.util.concurrent.LinkedBlockingDeque.takeFirst,"Retrieves and removes the first element of this deque, waiting  if necessary until an element becomes available."
java.util.concurrent.LinkedBlockingDeque.takeLast,"Retrieves and removes the last element of this deque, waiting  if necessary until an element becomes available."
java.util.concurrent.LinkedBlockingDeque.toArray,"Returns an array containing all of the elements in this deque, in  proper sequence; the runtime type of the returned array is that of  the specified array."
java.util.concurrent.LinkedBlockingQueue.offer,"Inserts the specified element at the tail of this queue, waiting if  necessary up to the specified wait time for space to become available."
java.util.concurrent.LinkedBlockingQueue.put,"Inserts the specified element at the tail of this queue, waiting if  necessary for space to become available."
java.util.concurrent.LinkedTransferQueue.getWaitingConsumerCount,Returns an estimate of the number of consumers waiting to  receive elements viaBlockingQueue.take()or timedpoll.
java.util.concurrent.LinkedTransferQueue.hasWaitingConsumer,Returnstrueif there is at least one consumer waiting  to receive an element viaBlockingQueue.take()or  timedpoll.
java.util.concurrent.LinkedTransferQueue.remainingCapacity,Always returnsInteger.MAX_VALUEbecause aLinkedTransferQueueis not capacity constrained.
java.util.concurrent.LinkedTransferQueue.transfer,"Transfers the element to a consumer, waiting if necessary to do so."
java.util.concurrent.LinkedTransferQueue.tryTransfer,"Transfers the element to a waiting consumer immediately, if possible."
java.util.concurrent.LinkedTransferQueue.tryTransfer,Transfers the element to a consumer if it is possible to do so  before the timeout elapses.
java.util.concurrent.Phaser.arrive,"Arrives at this phaser, without waiting for others to arrive."
java.util.concurrent.Phaser.arriveAndAwaitAdvance,Arrives at this phaser and awaits others.
java.util.concurrent.Phaser.arriveAndDeregister,Arrives at this phaser and deregisters from it without waiting  for others to arrive.
java.util.concurrent.Phaser.awaitAdvance,"Awaits the phase of this phaser to advance from the given phase  value, returning immediately if the current phase is not equal  to the given phase value or this phaser is terminated."
java.util.concurrent.Phaser.awaitAdvanceInterruptibly,"Awaits the phase of this phaser to advance from the given phase  value, throwingInterruptedExceptionif interrupted  while waiting, or returning immediately if the current phase is  not equal to the given phase value or this phaser is  terminated."
java.util.concurrent.Phaser.awaitAdvanceInterruptibly,"Awaits the phase of this phaser to advance from the given phase  value or the given timeout to elapse, throwingInterruptedExceptionif interrupted while waiting, or  returning immediately if the current phase is not equal to the  given phase value or this phaser is terminated."
java.util.concurrent.Phaser.bulkRegister,Adds the given number of new unarrived parties to this phaser.
java.util.concurrent.Phaser.forceTermination,Forces this phaser to enter termination state.
java.util.concurrent.Phaser.getArrivedParties,Returns the number of registered parties that have arrived at  the current phase of this phaser.
java.util.concurrent.Phaser.getParent,"Returns the parent of this phaser, ornullif none."
java.util.concurrent.Phaser.getPhase,Returns the current phase number.
java.util.concurrent.Phaser.getRegisteredParties,Returns the number of parties registered at this phaser.
java.util.concurrent.Phaser.getRoot,"Returns the root ancestor of this phaser, which is the same as  this phaser if it has no parent."
java.util.concurrent.Phaser.getUnarrivedParties,Returns the number of registered parties that have not yet  arrived at the current phase of this phaser.
java.util.concurrent.Phaser.isTerminated,Returnstrueif this phaser has been terminated.
java.util.concurrent.Phaser.onAdvance,"Overridable method to perform an action upon impending phase  advance, and to control termination."
java.util.concurrent.Phaser.register,Adds a new unarrived party to this phaser.
java.util.concurrent.Phaser.toString,"Returns a string identifying this phaser, as well as its  state."
java.util.concurrent.PriorityBlockingQueue.comparator,"Returns the comparator used to order the elements in this queue,  ornullif this queue uses thenatural orderingof its elements."
java.util.concurrent.PriorityBlockingQueue.remainingCapacity,Always returnsInteger.MAX_VALUEbecause  aPriorityBlockingQueueis not capacity constrained.
java.util.concurrent.RecursiveAction.exec,Implements execution conventions for RecursiveActions.
java.util.concurrent.RecursiveAction.getRawResult,Always returnsnull.
java.util.concurrent.RecursiveAction.setRawResult,Requires null completion value.
java.util.concurrent.RecursiveTask.exec,Implements execution conventions for RecursiveTask.
java.util.concurrent.RecursiveTask.getRawResult,"Returns the result that would be returned byForkJoinTask.join(), even  if this task completed abnormally, ornullif this task  is not known to have been completed."
java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask,Modifies or replaces the task used to execute a runnable.
java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask,Modifies or replaces the task used to execute a callable.
java.util.concurrent.ScheduledThreadPoolExecutor.execute,Executescommandwith zero required delay.
java.util.concurrent.ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy,Gets the policy on whether to continue executing existing  periodic tasks even when this executor has beenshutdown.
java.util.concurrent.ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy,Gets the policy on whether to execute existing delayed  tasks even when this executor has beenshutdown.
java.util.concurrent.ScheduledThreadPoolExecutor.getQueue,Returns the task queue used by this executor.
java.util.concurrent.ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy,Gets the policy on whether cancelled tasks should be immediately  removed from the work queue at time of cancellation.
java.util.concurrent.ScheduledThreadPoolExecutor.schedule,Submits a one-shot task that becomes enabled after the given delay.
java.util.concurrent.ScheduledThreadPoolExecutor.schedule,Submits a value-returning one-shot task that becomes enabled  after the given delay.
java.util.concurrent.ScheduledThreadPoolExecutor.scheduleAtFixedRate,"Submits a periodic action that becomes enabled first after the  given initial delay, and subsequently with the given period;  that is, executions will commence afterinitialDelay, theninitialDelay + period, theninitialDelay + 2 * period, and so on."
java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay,"Submits a periodic action that becomes enabled first after the  given initial delay, and subsequently with the given delay  between the termination of one execution and the commencement of  the next."
java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy,Sets the policy on whether to continue executing existing  periodic tasks even when this executor has beenshutdown.
java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy,Sets the policy on whether to execute existing delayed  tasks even when this executor has beenshutdown.
java.util.concurrent.ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy,Sets the policy on whether cancelled tasks should be immediately  removed from the work queue at time of cancellation.
java.util.concurrent.ScheduledThreadPoolExecutor.shutdown,"Initiates an orderly shutdown in which previously submitted  tasks are executed, but no new tasks will be accepted."
java.util.concurrent.ScheduledThreadPoolExecutor.shutdownNow,"Attempts to stop all actively executing tasks, halts the  processing of waiting tasks, and returns a list of the tasks  that were awaiting execution."
java.util.concurrent.Semaphore.acquire,"Acquires a permit from this semaphore, blocking until one is  available, or the thread isinterrupted."
java.util.concurrent.Semaphore.acquire,"Acquires the given number of permits from this semaphore,  blocking until all are available,  or the thread isinterrupted."
java.util.concurrent.Semaphore.acquireUninterruptibly,"Acquires a permit from this semaphore, blocking until one is  available."
java.util.concurrent.Semaphore.acquireUninterruptibly,"Acquires the given number of permits from this semaphore,  blocking until all are available."
java.util.concurrent.Semaphore.availablePermits,Returns the current number of permits available in this semaphore.
java.util.concurrent.Semaphore.drainPermits,"Acquires and returns all permits that are immediately  available, or if negative permits are available, releases them."
java.util.concurrent.Semaphore.getQueuedThreads,Returns a collection containing threads that may be waiting to acquire.
java.util.concurrent.Semaphore.getQueueLength,Returns an estimate of the number of threads waiting to acquire.
java.util.concurrent.Semaphore.hasQueuedThreads,Queries whether any threads are waiting to acquire.
java.util.concurrent.Semaphore.isFair,Returnstrueif this semaphore has fairness set true.
java.util.concurrent.Semaphore.reducePermits,Shrinks the number of available permits by the indicated  reduction.
java.util.concurrent.Semaphore.release,"Releases a permit, returning it to the semaphore."
java.util.concurrent.Semaphore.release,"Releases the given number of permits, returning them to the semaphore."
java.util.concurrent.Semaphore.toString,"Returns a string identifying this semaphore, as well as its state."
java.util.concurrent.Semaphore.tryAcquire,"Acquires a permit from this semaphore, only if one is available at the  time of invocation."
java.util.concurrent.Semaphore.tryAcquire,"Acquires the given number of permits from this semaphore, only  if all are available at the time of invocation."
java.util.concurrent.Semaphore.tryAcquire,"Acquires the given number of permits from this semaphore, if all  become available within the given waiting time and the current  thread has not beeninterrupted."
java.util.concurrent.Semaphore.tryAcquire,"Acquires a permit from this semaphore, if one becomes available  within the given waiting time and the current thread has not  beeninterrupted."
java.util.concurrent.SubmissionPublisher.close,"Unless already closed, issuesonCompletesignals to current  subscribers, and disallows subsequent attempts to publish."
java.util.concurrent.SubmissionPublisher.closeExceptionally,"Unless already closed, issuesonErrorsignals to current  subscribers with the given error, and disallows subsequent  attempts to publish."
java.util.concurrent.SubmissionPublisher.consume,Processes all published items using the given Consumer function.
java.util.concurrent.SubmissionPublisher.estimateMaximumLag,Returns an estimate of the maximum number of items produced but  not yet consumed among all current subscribers.
java.util.concurrent.SubmissionPublisher.estimateMinimumDemand,"Returns an estimate of the minimum number of items requested  (viarequest) but not  yet produced, among all current subscribers."
java.util.concurrent.SubmissionPublisher.getClosedException,"Returns the exception associated withcloseExceptionally, or null if  not closed or if closed normally."
java.util.concurrent.SubmissionPublisher.getExecutor,Returns the Executor used for asynchronous delivery.
java.util.concurrent.SubmissionPublisher.getMaxBufferCapacity,Returns the maximum per-subscriber buffer capacity.
java.util.concurrent.SubmissionPublisher.getNumberOfSubscribers,Returns the number of current subscribers.
java.util.concurrent.SubmissionPublisher.getSubscribers,"Returns a list of current subscribers for monitoring and  tracking purposes, not for invokingFlow.Subscribermethods on the subscribers."
java.util.concurrent.SubmissionPublisher.hasSubscribers,Returns true if this publisher has any subscribers.
java.util.concurrent.SubmissionPublisher.isClosed,Returns true if this publisher is not accepting submissions.
java.util.concurrent.SubmissionPublisher.isSubscribed,Returns true if the given Subscriber is currently subscribed.
java.util.concurrent.SubmissionPublisher.offer,"Publishes the given item, if possible, to each current subscriber  by asynchronously invoking itsonNextmethod, blocking while  resources for any subscription are unavailable, up to the  specified timeout or until the caller thread is interrupted, at  which point the given handler (if non-null) is invoked, and if it  returns true, retried once."
java.util.concurrent.SubmissionPublisher.offer,"Publishes the given item, if possible, to each current subscriber  by asynchronously invoking itsonNextmethod."
java.util.concurrent.SubmissionPublisher.submit,"Publishes the given item to each current subscriber by  asynchronously invoking itsonNextmethod, blocking uninterruptibly while resources for any  subscriber are unavailable."
java.util.concurrent.SubmissionPublisher.subscribe,Adds the given Subscriber unless already subscribed.
java.util.concurrent.SynchronousQueue.clear,Does nothing.
java.util.concurrent.SynchronousQueue.contains,Always returnsfalse.
java.util.concurrent.SynchronousQueue.containsAll,Returnsfalseunless the given collection is empty.
java.util.concurrent.SynchronousQueue.isEmpty,Always returnstrue.
java.util.concurrent.SynchronousQueue.iterator,Returns an empty iterator in whichhasNextalways returnsfalse.
java.util.concurrent.SynchronousQueue.offer,"Inserts the specified element into this queue, if another thread is  waiting to receive it."
java.util.concurrent.SynchronousQueue.offer,"Inserts the specified element into this queue, waiting if necessary  up to the specified wait time for another thread to receive it."
java.util.concurrent.SynchronousQueue.poll,"Retrieves and removes the head of this queue, if another thread  is currently making an element available."
java.util.concurrent.SynchronousQueue.poll,"Retrieves and removes the head of this queue, waiting  if necessary up to the specified wait time, for another thread  to insert it."
java.util.concurrent.SynchronousQueue.put,"Adds the specified element to this queue, waiting if necessary for  another thread to receive it."
java.util.concurrent.SynchronousQueue.remainingCapacity,Always returns zero.
java.util.concurrent.SynchronousQueue.spliterator,Returns an empty spliterator in which calls totrySplitalways returnnull.
java.util.concurrent.SynchronousQueue.take,"Retrieves and removes the head of this queue, waiting if necessary  for another thread to insert it."
java.util.concurrent.SynchronousQueue.toArray,Returns a zero-length array.
java.util.concurrent.SynchronousQueue.toArray,Sets the zeroth element of the specified array tonull(if the array has non-zero length) and returns it.
java.util.concurrent.SynchronousQueue.toString,"Always returns""[]""."
java.util.concurrent.ThreadLocalRandom.current,Returns the current thread'sThreadLocalRandomobject.
java.util.concurrent.ThreadLocalRandom.next,Generates a pseudorandom number with the indicated number of  low-order bits.
java.util.concurrent.ThreadLocalRandom.nextDouble,Returns a pseudorandomly chosendoublevalue between zero  (inclusive) and the specified bound (exclusive).
java.util.concurrent.ThreadLocalRandom.nextDouble,Returns a pseudorandomly chosendoublevalue between the  specified origin (inclusive) and the specified bound (exclusive).
java.util.concurrent.ThreadLocalRandom.nextFloat,Returns a pseudorandomly chosenfloatvalue between zero  (inclusive) and the specified bound (exclusive).
java.util.concurrent.ThreadLocalRandom.nextFloat,Returns a pseudorandomly chosenfloatvalue between the  specified origin (inclusive) and the specified bound (exclusive).
java.util.concurrent.ThreadLocalRandom.nextInt,Returns a pseudorandomly chosenintvalue between the specified  origin (inclusive) and the specified bound (exclusive).
java.util.concurrent.ThreadLocalRandom.nextLong,Returns a pseudorandomly chosenlongvalue between zero  (inclusive) and the specified bound (exclusive).
java.util.concurrent.ThreadLocalRandom.nextLong,Returns a pseudorandomly chosenlongvalue between the  specified origin (inclusive) and the specified bound (exclusive).
java.util.concurrent.ThreadLocalRandom.setSeed,ThrowsUnsupportedOperationException.
java.util.concurrent.ThreadPoolExecutor.rejectedExecution,Always throws RejectedExecutionException.
java.util.concurrent.ThreadPoolExecutor.rejectedExecution,"Executes task r in the caller's thread, unless the executor  has been shut down, in which case the task is discarded."
java.util.concurrent.ThreadPoolExecutor.rejectedExecution,"Obtains and ignores the next task that the executor  would otherwise execute, if one is immediately available,  and then retries execution of task r, unless the executor  is shut down, in which case task r is instead discarded."
java.util.concurrent.ThreadPoolExecutor.rejectedExecution,"Does nothing, which has the effect of discarding task r."
java.util.concurrent.ThreadPoolExecutor.afterExecute,Method invoked upon completion of execution of the given Runnable.
java.util.concurrent.ThreadPoolExecutor.allowCoreThreadTimeOut,"Sets the policy governing whether core threads may time out and  terminate if no tasks arrive within the keep-alive time, being  replaced if needed when new tasks arrive."
java.util.concurrent.ThreadPoolExecutor.allowsCoreThreadTimeOut,"Returns true if this pool allows core threads to time out and  terminate if no tasks arrive within the keepAlive time, being  replaced if needed when new tasks arrive."
java.util.concurrent.ThreadPoolExecutor.awaitTermination,"Blocks until all tasks have completed execution after a shutdown  request, or the timeout occurs, or the current thread is  interrupted, whichever happens first."
java.util.concurrent.ThreadPoolExecutor.beforeExecute,Method invoked prior to executing the given Runnable in the  given thread.
java.util.concurrent.ThreadPoolExecutor.execute,Executes the given task sometime in the future.
java.util.concurrent.ThreadPoolExecutor.getActiveCount,Returns the approximate number of threads that are actively  executing tasks.
java.util.concurrent.ThreadPoolExecutor.getCompletedTaskCount,Returns the approximate total number of tasks that have  completed execution.
java.util.concurrent.ThreadPoolExecutor.getCorePoolSize,Returns the core number of threads.
java.util.concurrent.ThreadPoolExecutor.getKeepAliveTime,"Returns the thread keep-alive time, which is the amount of time  that threads may remain idle before being terminated."
java.util.concurrent.ThreadPoolExecutor.getLargestPoolSize,Returns the largest number of threads that have ever  simultaneously been in the pool.
java.util.concurrent.ThreadPoolExecutor.getMaximumPoolSize,Returns the maximum allowed number of threads.
java.util.concurrent.ThreadPoolExecutor.getPoolSize,Returns the current number of threads in the pool.
java.util.concurrent.ThreadPoolExecutor.getRejectedExecutionHandler,Returns the current handler for unexecutable tasks.
java.util.concurrent.ThreadPoolExecutor.getTaskCount,Returns the approximate total number of tasks that have ever been  scheduled for execution.
java.util.concurrent.ThreadPoolExecutor.getThreadFactory,Returns the thread factory used to create new threads.
java.util.concurrent.ThreadPoolExecutor.isShutdown,Returnstrueif this executor has been shut down.
java.util.concurrent.ThreadPoolExecutor.isTerminating,Returns true if this executor is in the process of terminating  aftershutdown()orshutdownNow()but has not  completely terminated.
java.util.concurrent.ThreadPoolExecutor.prestartAllCoreThreads,"Starts all core threads, causing them to idly wait for work."
java.util.concurrent.ThreadPoolExecutor.prestartCoreThread,"Starts a core thread, causing it to idly wait for work."
java.util.concurrent.ThreadPoolExecutor.purge,Tries to remove from the work queue allFuturetasks that have been cancelled.
java.util.concurrent.ThreadPoolExecutor.remove,"Removes this task from the executor's internal queue if it is  present, thus causing it not to be run if it has not already  started."
java.util.concurrent.ThreadPoolExecutor.setCorePoolSize,Sets the core number of threads.
java.util.concurrent.ThreadPoolExecutor.setKeepAliveTime,"Sets the thread keep-alive time, which is the amount of time  that threads may remain idle before being terminated."
java.util.concurrent.ThreadPoolExecutor.setMaximumPoolSize,Sets the maximum allowed number of threads.
java.util.concurrent.ThreadPoolExecutor.setRejectedExecutionHandler,Sets a new handler for unexecutable tasks.
java.util.concurrent.ThreadPoolExecutor.setThreadFactory,Sets the thread factory used to create new threads.
java.util.concurrent.ThreadPoolExecutor.terminated,Method invoked when the Executor has terminated.
java.util.concurrent.ThreadPoolExecutor.toString,"Returns a string identifying this pool, as well as its state,  including indications of run state and estimated worker and  task counts."
java.util.concurrent.atomic.AtomicBoolean.compareAndExchange,"Atomically sets the value tonewValueif the current value,  referred to as thewitness value,== expectedValue,  with memory effects as specified byVarHandle.compareAndExchange(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.compareAndExchangeAcquire,"Atomically sets the value tonewValueif the current value,  referred to as thewitness value,== expectedValue,  with memory effects as specified byVarHandle.compareAndExchangeAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.compareAndExchangeRelease,"Atomically sets the value tonewValueif the current value,  referred to as thewitness value,== expectedValue,  with memory effects as specified byVarHandle.compareAndExchangeRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.compareAndSet,"Atomically sets the value tonewValueif the current value== expectedValue,  with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.get,"Returns the current value,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.getAcquire,"Returns the current value,  with memory effects as specified byVarHandle.getAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.getAndSet,"Atomically sets the value tonewValueand returns the old value,  with memory effects as specified byVarHandle.getAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.getOpaque,"Returns the current value,  with memory effects as specified byVarHandle.getOpaque(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.getPlain,"Returns the current value, with memory semantics of reading as  if the variable was declared non-volatile."
java.util.concurrent.atomic.AtomicBoolean.lazySet,"Sets the value tonewValue,  with memory effects as specified byVarHandle.setRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.set,"Sets the value tonewValue,  with memory effects as specified byVarHandle.setVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.setOpaque,"Sets the value tonewValue,  with memory effects as specified byVarHandle.setOpaque(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.setPlain,"Sets the value tonewValue, with memory semantics  of setting as if the variable was declared non-volatileand non-final."
java.util.concurrent.atomic.AtomicBoolean.toString,Returns the String representation of the current value.
java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSet,"Deprecated.This method has plain memory effects but the method  name implies volatile memory effects (see methods such ascompareAndExchange(boolean, boolean)andcompareAndSet(boolean, boolean))."
java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSetAcquire,"Possibly atomically sets the value tonewValueif the current  value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSetPlain,"Possibly atomically sets the value tonewValueif the current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetPlain(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSetRelease,"Possibly atomically sets the value tonewValueif the current  value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSetVolatile,"Possibly atomically sets the value tonewValueif the current  value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.accumulateAndGet,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the current value with the results of  applying the given function to the current and given values,  returning the updated value."
java.util.concurrent.atomic.AtomicInteger.addAndGet,"Atomically adds the given value to the current value,  with memory effects as specified byVarHandle.getAndAdd(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.decrementAndGet,"Atomically decrements the current value,  with memory effects as specified byVarHandle.getAndAdd(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.doubleValue,"Returns the current value of thisAtomicIntegeras adoubleafter a widening primitive conversion,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.floatValue,"Returns the current value of thisAtomicIntegeras afloatafter a widening primitive conversion,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.getAndAccumulate,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the current value with the results of  applying the given function to the current and given values,  returning the previous value."
java.util.concurrent.atomic.AtomicInteger.getAndIncrement,"Atomically increments the current value,  with memory effects as specified byVarHandle.getAndAdd(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.getAndUpdate,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the current value with the results of  applying the given function, returning the previous value."
java.util.concurrent.atomic.AtomicInteger.intValue,"Returns the current value of thisAtomicIntegeras anint,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.longValue,"Returns the current value of thisAtomicIntegeras alongafter a widening primitive conversion,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.updateAndGet,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the current value with the results of  applying the given function, returning the updated value."
java.util.concurrent.atomic.AtomicInteger.weakCompareAndSet,"Deprecated.This method has plain memory effects but the method  name implies volatile memory effects (see methods such ascompareAndExchange(int, int)andcompareAndSet(int, int))."
java.util.concurrent.atomic.AtomicInteger.weakCompareAndSetAcquire,"Possibly atomically sets the value tonewValueif  the current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.weakCompareAndSetRelease,"Possibly atomically sets the value tonewValueif  the current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicInteger.weakCompareAndSetVolatile,"Possibly atomically sets the value tonewValueif  the current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.accumulateAndGet,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the element at indexiwith  the results of applying the given function to the current and  given values, returning the updated value."
java.util.concurrent.atomic.AtomicIntegerArray.addAndGet,"Atomically adds the given value to the element at indexi,  with memory effects as specified byVarHandle.getAndAdd(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.compareAndExchange,"Atomically sets the element at indexitonewValueif the element's current value, referred to as thewitness  value,== expectedValue,  with memory effects as specified byVarHandle.compareAndExchange(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.compareAndExchangeAcquire,"Atomically sets the element at indexitonewValueif the element's current value, referred to as thewitness  value,== expectedValue,  with memory effects as specified byVarHandle.compareAndExchangeAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.compareAndExchangeRelease,"Atomically sets the element at indexitonewValueif the element's current value, referred to as thewitness  value,== expectedValue,  with memory effects as specified byVarHandle.compareAndExchangeRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.compareAndSet,"Atomically sets the element at indexitonewValueif the element's current value== expectedValue,  with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.decrementAndGet,"Atomically decrements the value of the element at indexi,  with memory effects as specified byVarHandle.getAndAdd(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.get,"Returns the current value of the element at indexi,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.getAcquire,"Returns the current value of the element at indexi,  with memory effects as specified byVarHandle.getAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.getAndAccumulate,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the element at indexiwith  the results of applying the given function to the current and  given values, returning the previous value."
java.util.concurrent.atomic.AtomicIntegerArray.getAndIncrement,"Atomically increments the value of the element at indexi,  with memory effects as specified byVarHandle.getAndAdd(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.getAndSet,"Atomically sets the element at indexitonewValueand returns the old value,  with memory effects as specified byVarHandle.getAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.getAndUpdate,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the element at indexiwith  the results of applying the given function, returning the  previous value."
java.util.concurrent.atomic.AtomicIntegerArray.getOpaque,"Returns the current value of the element at indexi,  with memory effects as specified byVarHandle.getOpaque(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.getPlain,"Returns the current value of the element at indexi,  with memory semantics of reading as if the variable was declared  non-volatile."
java.util.concurrent.atomic.AtomicIntegerArray.lazySet,"Sets the element at indexitonewValue,  with memory effects as specified byVarHandle.setRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.length,Returns the length of the array.
java.util.concurrent.atomic.AtomicIntegerArray.set,"Sets the element at indexitonewValue,  with memory effects as specified byVarHandle.setVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.setOpaque,"Sets the element at indexitonewValue,  with memory effects as specified byVarHandle.setOpaque(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.setPlain,"Sets the element at indexitonewValue,  with memory semantics of setting as if the variable was  declared non-volatileand non-final."
java.util.concurrent.atomic.AtomicIntegerArray.toString,Returns the String representation of the current values of array.
java.util.concurrent.atomic.AtomicIntegerArray.updateAndGet,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the element at indexiwith  the results of applying the given function, returning the  updated value."
java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSet,"Deprecated.This method has plain memory effects but the method  name implies volatile memory effects (see methods such ascompareAndExchange(int, int, int)andcompareAndSet(int, int, int))."
java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSetAcquire,"Possibly atomically sets the element at indexitonewValueif the element's current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSetPlain,"Possibly atomically sets the element at indexitonewValueif the element's current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetPlain(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSetRelease,"Possibly atomically sets the element at indexitonewValueif the element's current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSetVolatile,"Possibly atomically sets the element at indexitonewValueif the element's current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.accumulateAndGet,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the field of the given object managed  by this updater with the results of applying the given function  to the current and given values, returning the updated value."
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.addAndGet,Atomically adds the given value to the current value of the field of  the given object managed by this updater.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.compareAndSet,Atomically sets the field of the given object managed by this updater  to the given updated value if the current value==the  expected value.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet,Atomically decrements by one the current value of the field of the  given object managed by this updater.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.get,Returns the current value held in the field of the given object  managed by this updater.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAccumulate,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the field of the given object managed  by this updater with the results of applying the given function  to the current and given values, returning the previous value."
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndIncrement,Atomically increments by one the current value of the field of the  given object managed by this updater.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndSet,Atomically sets the field of the given object managed by this updater  to the given value and returns the old value.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndUpdate,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the field of the given object managed  by this updater with the results of applying the given  function, returning the previous value."
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.lazySet,Eventually sets the field of the given object managed by this  updater to the given updated value.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater,Creates and returns an updater for objects with the given field.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.set,Sets the field of the given object managed by this updater to the  given updated value.
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.updateAndGet,"Atomically updates (with memory effects as specified byVarHandle.compareAndSet(java.lang.Object...)) the field of the given object managed  by this updater with the results of applying the given  function, returning the updated value."
java.util.concurrent.atomic.AtomicLong.doubleValue,"Returns the current value of thisAtomicLongas adoubleafter a widening primitive conversion,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicLong.floatValue,"Returns the current value of thisAtomicLongas afloatafter a widening primitive conversion,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicLong.getPlain,"Returns the current value, with memory semantics of reading as if the  variable was declared non-volatile."
java.util.concurrent.atomic.AtomicLong.intValue,"Returns the current value of thisAtomicLongas anintafter a narrowing primitive conversion,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicLong.longValue,"Returns the current value of thisAtomicLongas along,  with memory effects as specified byVarHandle.getVolatile(java.lang.Object...)."
java.util.concurrent.atomic.AtomicLong.weakCompareAndSet,"Deprecated.This method has plain memory effects but the method  name implies volatile memory effects (see methods such ascompareAndExchange(long, long)andcompareAndSet(long, long))."
java.util.concurrent.atomic.AtomicLong.weakCompareAndSetAcquire,"Possibly atomically sets the value tonewValueif the current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetAcquire(java.lang.Object...)."
java.util.concurrent.atomic.AtomicLong.weakCompareAndSetRelease,"Possibly atomically sets the value tonewValueif the current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSetRelease(java.lang.Object...)."
java.util.concurrent.atomic.AtomicLong.weakCompareAndSetVolatile,"Possibly atomically sets the value tonewValueif the current value== expectedValue,  with memory effects as specified byVarHandle.weakCompareAndSet(java.lang.Object...)."
java.util.concurrent.atomic.AtomicLongArray.weakCompareAndSet,"Deprecated.This method has plain memory effects but the method  name implies volatile memory effects (see methods such ascompareAndExchange(int, long, long)andcompareAndSet(int, long, long))."
java.util.concurrent.atomic.AtomicMarkableReference.attemptMark,Atomically sets the value of the mark to the given update value  if the current reference is==to the expected  reference.
java.util.concurrent.atomic.AtomicMarkableReference.compareAndSet,Atomically sets the value of both the reference and mark  to the given update values if the  current reference is==to the expected reference  and the current mark is equal to the expected mark.
java.util.concurrent.atomic.AtomicMarkableReference.get,Returns the current values of both the reference and the mark.
java.util.concurrent.atomic.AtomicMarkableReference.getReference,Returns the current value of the reference.
java.util.concurrent.atomic.AtomicMarkableReference.isMarked,Returns the current value of the mark.
java.util.concurrent.atomic.AtomicMarkableReference.set,Unconditionally sets the value of both the reference and mark.
java.util.concurrent.atomic.AtomicMarkableReference.weakCompareAndSet,Atomically sets the value of both the reference and mark to the  given update values if the current reference is==to  the expected reference and the current mark is equal to the  expected mark.
java.util.concurrent.atomic.AtomicReference.weakCompareAndSet,"Deprecated.This method has plain memory effects but the method  name implies volatile memory effects (see methods such ascompareAndExchange(V, V)andcompareAndSet(V, V))."
java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSet,"Deprecated.This method has plain memory effects but the method  name implies volatile memory effects (see methods such ascompareAndExchange(int, E, E)andcompareAndSet(int, E, E))."
java.util.concurrent.atomic.AtomicStampedReference.attemptStamp,Atomically sets the value of the stamp to the given update value  if the current reference is==to the expected  reference.
java.util.concurrent.atomic.AtomicStampedReference.compareAndSet,Atomically sets the value of both the reference and stamp  to the given update values if the  current reference is==to the expected reference  and the current stamp is equal to the expected stamp.
java.util.concurrent.atomic.AtomicStampedReference.get,Returns the current values of both the reference and the stamp.
java.util.concurrent.atomic.AtomicStampedReference.getStamp,Returns the current value of the stamp.
java.util.concurrent.atomic.AtomicStampedReference.set,Unconditionally sets the value of both the reference and stamp.
java.util.concurrent.atomic.AtomicStampedReference.weakCompareAndSet,Atomically sets the value of both the reference and stamp to  the given update values if the current reference is==to the expected reference and the current stamp is equal to the  expected stamp.
java.util.concurrent.atomic.DoubleAccumulator.accumulate,Updates with the given value.
java.util.concurrent.atomic.DoubleAccumulator.doubleValue,Equivalent toget().
java.util.concurrent.atomic.DoubleAccumulator.floatValue,Returns thecurrent valueas afloatafter a narrowing primitive conversion.
java.util.concurrent.atomic.DoubleAccumulator.get,Returns the current value.
java.util.concurrent.atomic.DoubleAccumulator.getThenReset,Equivalent in effect toget()followed byreset().
java.util.concurrent.atomic.DoubleAccumulator.intValue,Returns thecurrent valueas anintafter a narrowing primitive conversion.
java.util.concurrent.atomic.DoubleAccumulator.longValue,Returns thecurrent valueas alongafter a narrowing primitive conversion.
java.util.concurrent.atomic.DoubleAccumulator.reset,Resets variables maintaining updates to the identity value.
java.util.concurrent.atomic.DoubleAdder.add,Adds the given value.
java.util.concurrent.atomic.DoubleAdder.doubleValue,Equivalent tosum().
java.util.concurrent.atomic.DoubleAdder.floatValue,Returns thesum()as afloatafter a narrowing primitive conversion.
java.util.concurrent.atomic.DoubleAdder.intValue,Returns thesum()as anintafter a  narrowing primitive conversion.
java.util.concurrent.atomic.DoubleAdder.longValue,Returns thesum()as alongafter a  narrowing primitive conversion.
java.util.concurrent.atomic.DoubleAdder.reset,Resets variables maintaining the sum to zero.
java.util.concurrent.atomic.DoubleAdder.sum,Returns the current sum.
java.util.concurrent.atomic.DoubleAdder.sumThenReset,Equivalent in effect tosum()followed byreset().
java.util.concurrent.atomic.DoubleAdder.toString,Returns the String representation of thesum().
java.util.concurrent.atomic.LongAccumulator.doubleValue,Returns thecurrent valueas adoubleafter a widening primitive conversion.
java.util.concurrent.atomic.LongAccumulator.floatValue,Returns thecurrent valueas afloatafter a widening primitive conversion.
java.util.concurrent.atomic.LongAdder.decrement,Equivalent toadd(-1).
java.util.concurrent.atomic.LongAdder.doubleValue,Returns thesum()as adoubleafter a widening  primitive conversion.
java.util.concurrent.atomic.LongAdder.floatValue,Returns thesum()as afloatafter a widening primitive conversion.
java.util.concurrent.atomic.LongAdder.increment,Equivalent toadd(1).
java.util.concurrent.atomic.LongAdder.intValue,Returns thesum()as anintafter a narrowing  primitive conversion.
java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread,"Returns the thread last set bysetExclusiveOwnerThread,  ornullif never set."
java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread,Sets the thread that currently owns exclusive access.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.await,Implements interruptible condition wait.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.await,Implements timed condition wait.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.awaitUninterruptibly,Implements uninterruptible condition wait.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.awaitUntil,Implements absolute timed condition wait.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitingThreads,Returns a collection containing those threads that may be  waiting on this Condition.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitQueueLength,Returns an estimate of the number of threads waiting on  this condition.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasWaiters,Queries whether any threads are waiting on this condition.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.signal,"Moves the longest-waiting thread, if one exists, from the  wait queue for this condition to the wait queue for the  owning lock."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.signalAll,Moves all threads from the wait queue for this condition to  the wait queue for the owning lock.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquire,"Acquires in exclusive mode, ignoring interrupts."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireInterruptibly,"Acquires in exclusive mode, aborting if interrupted."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireShared,"Acquires in shared mode, ignoring interrupts."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireSharedInterruptibly,"Acquires in shared mode, aborting if interrupted."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.compareAndSetState,Atomically sets synchronization state to the given updated  value if the current state value equals the expected value.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads,Returns a collection containing threads that may be waiting to  acquire in exclusive mode.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getFirstQueuedThread,"Returns the first (longest-waiting) thread in the queue, ornullif no threads are currently queued."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueuedThreads,Returns a collection containing threads that may be waiting to  acquire.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueueLength,Returns an estimate of the number of threads waiting to  acquire.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getSharedQueuedThreads,Returns a collection containing threads that may be waiting to  acquire in shared mode.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getState,Returns the current value of synchronization state.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitingThreads,Returns a collection containing those threads that may be  waiting on the given condition associated with this  synchronizer.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitQueueLength,Returns an estimate of the number of threads waiting on the  given condition associated with this synchronizer.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasContended,"Queries whether any threads have ever contended to acquire this  synchronizer; that is, if an acquire method has ever blocked."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedPredecessors,Queries whether any threads have been waiting to acquire longer  than the current thread.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasWaiters,Queries whether any threads are waiting on the given condition  associated with this synchronizer.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isHeldExclusively,Returnstrueif synchronization is held exclusively with  respect to the current (calling) thread.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isQueued,Returns true if the given thread is currently queued.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.owns,Queries whether the given ConditionObject  uses this synchronizer as its lock.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.release,Releases in exclusive mode.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.releaseShared,Releases in shared mode.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.setState,Sets the value of synchronization state.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.toString,"Returns a string identifying this synchronizer, as well as its state."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquire,Attempts to acquire in exclusive mode.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireNanos,"Attempts to acquire in exclusive mode, aborting if interrupted,  and failing if the given timeout elapses."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireShared,Attempts to acquire in shared mode.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireSharedNanos,"Attempts to acquire in shared mode, aborting if interrupted, and  failing if the given timeout elapses."
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryRelease,Attempts to set the state to reflect a release in exclusive  mode.
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryReleaseShared,Attempts to set the state to reflect a release in shared mode.
java.util.concurrent.locks.LockSupport.getBlocker,"Returns the blocker object supplied to the most recent  invocation of a park method that has not yet unblocked, or null  if not blocked."
java.util.concurrent.locks.LockSupport.park,Disables the current thread for thread scheduling purposes unless the  permit is available.
java.util.concurrent.locks.LockSupport.parkNanos,"Disables the current thread for thread scheduling purposes, for up to  the specified waiting time, unless the permit is available."
java.util.concurrent.locks.LockSupport.parkUntil,"Disables the current thread for thread scheduling purposes, until  the specified deadline, unless the permit is available."
java.util.concurrent.locks.LockSupport.setCurrentBlocker,Sets the object to be returned by invocations ofgetBlockerfor the current thread.
java.util.concurrent.locks.LockSupport.unpark,"Makes available the permit for the given thread, if it  was not already available."
java.util.concurrent.locks.ReentrantLock.getHoldCount,Queries the number of holds on this lock by the current thread.
java.util.concurrent.locks.ReentrantLock.getOwner,"Returns the thread that currently owns this lock, ornullif not owned."
java.util.concurrent.locks.ReentrantLock.getQueuedThreads,Returns a collection containing threads that may be waiting to  acquire this lock.
java.util.concurrent.locks.ReentrantLock.getQueueLength,Returns an estimate of the number of threads waiting to acquire  this lock.
java.util.concurrent.locks.ReentrantLock.getWaitingThreads,Returns a collection containing those threads that may be  waiting on the given condition associated with this lock.
java.util.concurrent.locks.ReentrantLock.getWaitQueueLength,Returns an estimate of the number of threads waiting on the  given condition associated with this lock.
java.util.concurrent.locks.ReentrantLock.hasQueuedThread,Queries whether the given thread is waiting to acquire this  lock.
java.util.concurrent.locks.ReentrantLock.hasQueuedThreads,Queries whether any threads are waiting to acquire this lock.
java.util.concurrent.locks.ReentrantLock.hasWaiters,Queries whether any threads are waiting on the given condition  associated with this lock.
java.util.concurrent.locks.ReentrantLock.isFair,Returnstrueif this lock has fairness set true.
java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread,Queries if this lock is held by the current thread.
java.util.concurrent.locks.ReentrantLock.isLocked,Queries if this lock is held by any thread.
java.util.concurrent.locks.ReentrantLock.lock,Acquires the lock.
java.util.concurrent.locks.ReentrantLock.lockInterruptibly,Acquires the lock unless the current thread isinterrupted.
java.util.concurrent.locks.ReentrantLock.newCondition,Returns aConditioninstance for use with thisLockinstance.
java.util.concurrent.locks.ReentrantLock.toString,"Returns a string identifying this lock, as well as its lock state."
java.util.concurrent.locks.ReentrantLock.tryLock,Acquires the lock only if it is not held by another thread at the time  of invocation.
java.util.concurrent.locks.ReentrantLock.tryLock,Acquires the lock if it is not held by another thread within the given  waiting time and the current thread has not beeninterrupted.
java.util.concurrent.locks.ReentrantLock.unlock,Attempts to release this lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getOwner,"Returns the thread that currently owns the write lock, ornullif not owned."
java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedReaderThreads,Returns a collection containing threads that may be waiting to  acquire the read lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedThreads,Returns a collection containing threads that may be waiting to  acquire either the read or write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedWriterThreads,Returns a collection containing threads that may be waiting to  acquire the write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getQueueLength,Returns an estimate of the number of threads waiting to acquire  either the read or write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getReadHoldCount,Queries the number of reentrant read holds on this lock by the  current thread.
java.util.concurrent.locks.ReentrantReadWriteLock.getReadLockCount,Queries the number of read locks held for this lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getWaitingThreads,Returns a collection containing those threads that may be  waiting on the given condition associated with the write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getWaitQueueLength,Returns an estimate of the number of threads waiting on the  given condition associated with the write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.getWriteHoldCount,Queries the number of reentrant write holds on this lock by the  current thread.
java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThread,Queries whether the given thread is waiting to acquire either  the read or write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThreads,Queries whether any threads are waiting to acquire the read or  write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.hasWaiters,Queries whether any threads are waiting on the given condition  associated with the write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLocked,Queries if the write lock is held by any thread.
java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLockedByCurrentThread,Queries if the write lock is held by the current thread.
java.util.concurrent.locks.ReentrantReadWriteLock.readLock,Returns the lock used for reading.
java.util.concurrent.locks.ReentrantReadWriteLock.writeLock,Returns the lock used for writing.
java.util.concurrent.locks.ReentrantReadWriteLock.lock,Acquires the read lock.
java.util.concurrent.locks.ReentrantReadWriteLock.lockInterruptibly,Acquires the read lock unless the current thread isinterrupted.
java.util.concurrent.locks.ReentrantReadWriteLock.newCondition,ThrowsUnsupportedOperationExceptionbecauseReadLocksdo not support conditions.
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock,Acquires the read lock only if the write lock is not held by  another thread at the time of invocation.
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock,Acquires the read lock if the write lock is not held by  another thread within the given waiting time and the  current thread has not beeninterrupted.
java.util.concurrent.locks.ReentrantReadWriteLock.getHoldCount,Queries the number of holds on this write lock by the current  thread.
java.util.concurrent.locks.ReentrantReadWriteLock.isHeldByCurrentThread,Queries if this write lock is held by the current thread.
java.util.concurrent.locks.ReentrantReadWriteLock.lock,Acquires the write lock.
java.util.concurrent.locks.ReentrantReadWriteLock.lockInterruptibly,Acquires the write lock unless the current thread isinterrupted.
java.util.concurrent.locks.ReentrantReadWriteLock.toString,"Returns a string identifying this lock, as well as its lock  state."
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock,Acquires the write lock only if it is not held by another thread  at the time of invocation.
java.util.concurrent.locks.ReentrantReadWriteLock.tryLock,Acquires the write lock if it is not held by another thread  within the given waiting time and the current thread has  not beeninterrupted.
java.util.concurrent.locks.StampedLock.asReadLock,"Returns a plainLockview of this StampedLock in which  theLock.lock()method is mapped toreadLock(),  and similarly for other methods."
java.util.concurrent.locks.StampedLock.asReadWriteLock,"Returns aReadWriteLockview of this StampedLock in  which theReadWriteLock.readLock()method is mapped toasReadLock(), andReadWriteLock.writeLock()toasWriteLock()."
java.util.concurrent.locks.StampedLock.asWriteLock,"Returns a plainLockview of this StampedLock in which  theLock.lock()method is mapped towriteLock(),  and similarly for other methods."
java.util.concurrent.locks.StampedLock.isLockStamp,Tells whether a stamp represents holding a lock.
java.util.concurrent.locks.StampedLock.isOptimisticReadStamp,Tells whether a stamp represents a successful optimistic read.
java.util.concurrent.locks.StampedLock.isReadLocked,Returnstrueif the lock is currently held non-exclusively.
java.util.concurrent.locks.StampedLock.isReadLockStamp,Tells whether a stamp represents holding a lock non-exclusively.
java.util.concurrent.locks.StampedLock.isWriteLocked,Returnstrueif the lock is currently held exclusively.
java.util.concurrent.locks.StampedLock.isWriteLockStamp,Tells whether a stamp represents holding a lock exclusively.
java.util.concurrent.locks.StampedLock.readLock,"Non-exclusively acquires the lock, blocking if necessary  until available."
java.util.concurrent.locks.StampedLock.readLockInterruptibly,"Non-exclusively acquires the lock, blocking if necessary  until available or the current thread is interrupted."
java.util.concurrent.locks.StampedLock.tryConvertToOptimisticRead,"If the lock state matches the given stamp then, atomically, if the stamp  represents holding a lock, releases it and returns an  observation stamp."
java.util.concurrent.locks.StampedLock.tryConvertToReadLock,"If the lock state matches the given stamp, atomically performs one of  the following actions."
java.util.concurrent.locks.StampedLock.tryOptimisticRead,"Returns a stamp that can later be validated, or zero  if exclusively locked."
java.util.concurrent.locks.StampedLock.tryReadLock,Non-exclusively acquires the lock if it is immediately available.
java.util.concurrent.locks.StampedLock.tryReadLock,Non-exclusively acquires the lock if it is available within the  given time and the current thread has not been interrupted.
java.util.concurrent.locks.StampedLock.tryUnlockRead,"Releases one hold of the read lock if it is held, without  requiring a stamp value."
java.util.concurrent.locks.StampedLock.tryUnlockWrite,"Releases the write lock if it is held, without requiring a  stamp value."
java.util.concurrent.locks.StampedLock.tryWriteLock,Exclusively acquires the lock if it is immediately available.
java.util.concurrent.locks.StampedLock.tryWriteLock,Exclusively acquires the lock if it is available within the  given time and the current thread has not been interrupted.
java.util.concurrent.locks.StampedLock.unlock,"If the lock state matches the given stamp, releases the  corresponding mode of the lock."
java.util.concurrent.locks.StampedLock.unlockRead,"If the lock state matches the given stamp, releases the  non-exclusive lock."
java.util.concurrent.locks.StampedLock.unlockWrite,"If the lock state matches the given stamp, releases the  exclusive lock."
java.util.concurrent.locks.StampedLock.validate,Returns true if the lock has not been exclusively acquired  since issuance of the given stamp.
java.util.concurrent.locks.StampedLock.writeLock,"Exclusively acquires the lock, blocking if necessary  until available."
java.util.concurrent.locks.StampedLock.writeLockInterruptibly,"Exclusively acquires the lock, blocking if necessary  until available or the current thread is interrupted."
java.util.jar.Attributes.clear,Removes all attributes from this Map.
java.util.jar.Attributes.clone,"Returns a copy of the Attributes, implemented as follows:"
java.util.jar.Attributes.containsKey,Returns true if this Map contains the specified attribute name (key).
java.util.jar.Attributes.containsValue,Returns true if this Map maps one or more attribute names (keys)  to the specified value.
java.util.jar.Attributes.entrySet,Returns a Collection view of the attribute name-value mappings  contained in this Map.
java.util.jar.Attributes.equals,Compares the specified object to the underlyingmapfor equality.
java.util.jar.Attributes.get,"Returns the value of the specified attribute name, or null if the  attribute name was not found."
java.util.jar.Attributes.getValue,"Returns the value of the specified attribute name, specified as  a string, or null if the attribute was not found."
java.util.jar.Attributes.getValue,"Returns the value of the specified Attributes.Name, or null if the  attribute was not found."
java.util.jar.Attributes.hashCode,Returns the hash code value for this Map.
java.util.jar.Attributes.isEmpty,Returns true if this Map contains no attributes.
java.util.jar.Attributes.keySet,Returns a Set view of the attribute names (keys) contained in this Map.
java.util.jar.Attributes.put,Associates the specified value with the specified attribute name  (key) in this Map.
java.util.jar.Attributes.putAll,Copies all of the attribute name-value mappings from the specified  Attributes to this Map.
java.util.jar.Attributes.putValue,"Associates the specified value with the specified attribute name,  specified as a String."
java.util.jar.Attributes.remove,Removes the attribute with the specified name (key) from this Map.
java.util.jar.Attributes.size,Returns the number of attributes in this Map.
java.util.jar.Attributes.values,Returns a Collection view of the attribute values contained in this Map.
java.util.jar.Attributes.equals,Compares this attribute name to another for equality.
java.util.jar.Attributes.hashCode,Computes the hash value for this attribute name.
java.util.jar.Attributes.toString,Returns the attribute name as a String.
java.util.jar.JarEntry.getAttributes,"Returns theManifestAttributesfor this  entry, ornullif none."
java.util.jar.JarEntry.getCertificates,"Returns theCertificateobjects for this entry, ornullif none."
java.util.jar.JarEntry.getCodeSigners,"Returns theCodeSignerobjects for this entry, ornullif none."
java.util.jar.JarEntry.getRealName,Returns the real name of thisJarEntry.
java.util.jar.JarFile.baseVersion,Returns the version that represents the unversioned configuration of a  multi-release jar file.
java.util.jar.JarFile.entries,Returns an enumeration of the jar file entries.
java.util.jar.JarFile.getEntry,Returns theZipEntryfor the given base entry name ornullif not found.
java.util.jar.JarFile.getInputStream,Returns an input stream for reading the contents of the specified  zip file entry.
java.util.jar.JarFile.getJarEntry,Returns theJarEntryfor the given base entry name ornullif not found.
java.util.jar.JarFile.getManifest,"Returns the jar file manifest, ornullif none."
java.util.jar.JarFile.getVersion,Returns the maximum version used when searching for versioned entries.
java.util.jar.JarFile.isMultiRelease,Indicates whether or not this jar file is a multi-release jar file.
java.util.jar.JarFile.runtimeVersion,Returns the version that represents the effective runtime versioned  configuration of a multi-release jar file.
java.util.jar.JarFile.stream,Returns an orderedStreamover the jar file entries.
java.util.jar.JarFile.versionedStream,Returns aStreamof the versioned jar file entries.
java.util.jar.JarInputStream.createZipEntry,Creates a newJarEntry(ZipEntry) for the  specified JAR file entry name.
java.util.jar.JarInputStream.getManifest,"Returns theManifestfor this JAR file, ornullif none."
java.util.jar.JarInputStream.getNextEntry,Reads the next ZIP file entry and positions the stream at the  beginning of the entry data.
java.util.jar.JarInputStream.getNextJarEntry,Reads the next JAR file entry and positions the stream at the  beginning of the entry data.
java.util.jar.JarInputStream.read,Reads from the current JAR file entry into an array of bytes.
java.util.jar.JarOutputStream.putNextEntry,Begins writing a new JAR file entry and positions the stream  to the start of the entry data.
java.util.jar.Manifest.clear,Clears the main Attributes as well as the entries in this Manifest.
java.util.jar.Manifest.clone,Returns a shallow copy of this Manifest.
java.util.jar.Manifest.equals,Returns true if the specified Object is also a Manifest and has  the same main Attributes and entries.
java.util.jar.Manifest.getAttributes,Returns the Attributes for the specified entry name.
java.util.jar.Manifest.getEntries,Returns a Map of the entries contained in this Manifest.
java.util.jar.Manifest.getMainAttributes,Returns the main Attributes for the Manifest.
java.util.jar.Manifest.hashCode,Returns the hash code for this Manifest.
java.util.jar.Manifest.read,Reads the Manifest from the specified InputStream.
java.util.jar.Manifest.write,Writes the Manifest to the specified OutputStream.
java.util.random.RandomGeneratorFactory.all,Returns a non-empty stream of availableRandomGeneratorFactory(s).
java.util.random.RandomGeneratorFactory.create,Create an instance ofRandomGeneratorbased onalgorithmchosen.
java.util.random.RandomGeneratorFactory.create,Create an instance ofRandomGeneratorbased onalgorithmchosen  providing a starting byte[] seed.
java.util.random.RandomGeneratorFactory.create,Create an instance ofRandomGeneratorbased onalgorithmchosen  providing a starting long seed.
java.util.random.RandomGeneratorFactory.equidistribution,Returns the equidistribution of thealgorithm.
java.util.random.RandomGeneratorFactory.getDefault,Returns aRandomGeneratorFactorymeeting the minimal requirement  of having an algorithm whose state bits are greater than or equal 64.
java.util.random.RandomGeneratorFactory.group,Return the group name of thealgorithmused by the random number generator.
java.util.random.RandomGeneratorFactory.isArbitrarilyJumpable,Return true if random generator can jump an arbitrarily specified distant  point in the state cycle.
java.util.random.RandomGeneratorFactory.isDeprecated,Return true if the implementation of RandomGenerator (algorithm) has been  marked for deprecation.
java.util.random.RandomGeneratorFactory.isHardware,Return true if random generator uses a hardware device (HRNG) to produce  entropic input.
java.util.random.RandomGeneratorFactory.isJumpable,Return true if random generator can jump a specified distant point in  the state cycle.
java.util.random.RandomGeneratorFactory.isLeapable,Return true if random generator is jumpable and can leap to a very distant  point in the state cycle.
java.util.random.RandomGeneratorFactory.isSplittable,Return true if random generator can be cloned into a separate object with  the same properties but positioned further in the state cycle.
java.util.random.RandomGeneratorFactory.isStatistical,Return true if random generator is computed using an arithmeticalgorithmand is statistically deterministic.
java.util.random.RandomGeneratorFactory.isStochastic,Return true if random generator is computed using external or entropic  sources as inputs.
java.util.random.RandomGeneratorFactory.isStreamable,Return true if random generator can be used to createStreamsof random numbers.
java.util.random.RandomGeneratorFactory.name,Return the name of thealgorithmused by the random number generator.
java.util.random.RandomGeneratorFactory.of,Returns aRandomGeneratorFactorythat can produce instances ofRandomGeneratorthat utilize thenamealgorithm.
java.util.random.RandomGeneratorFactory.period,Return the period of thealgorithmused by the random number generator.
java.util.random.RandomGeneratorFactory.stateBits,Returns number of bits used by thealgorithmto maintain state of seed.
java.util.regex.Matcher.appendReplacement,Implements a non-terminal append-and-replace step.
java.util.regex.Matcher.appendTail,Implements a terminal append-and-replace step.
java.util.regex.Matcher.end,Returns the offset after the last character matched.
java.util.regex.Matcher.end,Returns the offset after the last character of the subsequence  captured by the given group during the previous match operation.
java.util.regex.Matcher.end,Returns the offset after the last character of the subsequence  captured by the givennamed-capturing  groupduring the previous match operation.
java.util.regex.Matcher.find,Attempts to find the next subsequence of the input sequence that matches  the pattern.
java.util.regex.Matcher.find,"Resets this matcher and then attempts to find the next subsequence of  the input sequence that matches the pattern, starting at the specified  index."
java.util.regex.Matcher.group,Returns the input subsequence matched by the previous match.
java.util.regex.Matcher.group,Returns the input subsequence captured by the given group during the  previous match operation.
java.util.regex.Matcher.group,Returns the input subsequence captured by the givennamed-capturing groupduring the  previous match operation.
java.util.regex.Matcher.groupCount,Returns the number of capturing groups in this matcher's pattern.
java.util.regex.Matcher.hasAnchoringBounds,Queries the anchoring of region bounds for this matcher.
java.util.regex.Matcher.hasTransparentBounds,Queries the transparency of region bounds for this matcher.
java.util.regex.Matcher.hitEnd,Returns true if the end of input was hit by the search engine in  the last match operation performed by this matcher.
java.util.regex.Matcher.lookingAt,"Attempts to match the input sequence, starting at the beginning of the  region, against the pattern."
java.util.regex.Matcher.matches,Attempts to match the entire region against the pattern.
java.util.regex.Matcher.pattern,Returns the pattern that is interpreted by this matcher.
java.util.regex.Matcher.quoteReplacement,Returns a literal replacementStringfor the specifiedString.
java.util.regex.Matcher.region,Sets the limits of this matcher's region.
java.util.regex.Matcher.regionEnd,Reports the end index (exclusive) of this matcher's region.
java.util.regex.Matcher.regionStart,Reports the start index of this matcher's region.
java.util.regex.Matcher.replaceAll,Replaces every subsequence of the input sequence that matches the  pattern with the given replacement string.
java.util.regex.Matcher.replaceAll,Replaces every subsequence of the input sequence that matches the  pattern with the result of applying the given replacer function to the  match result of this matcher corresponding to that subsequence.
java.util.regex.Matcher.replaceFirst,Replaces the first subsequence of the input sequence that matches the  pattern with the given replacement string.
java.util.regex.Matcher.replaceFirst,Replaces the first subsequence of the input sequence that matches the  pattern with the result of applying the given replacer function to the  match result of this matcher corresponding to that subsequence.
java.util.regex.Matcher.requireEnd,Returns true if more input could change a positive match into a  negative one.
java.util.regex.Matcher.reset,Resets this matcher.
java.util.regex.Matcher.reset,Resets this matcher with a new input sequence.
java.util.regex.Matcher.results,Returns a stream of match results for each subsequence of the input  sequence that matches the pattern.
java.util.regex.Matcher.start,Returns the start index of the previous match.
java.util.regex.Matcher.start,Returns the start index of the subsequence captured by the given group  during the previous match operation.
java.util.regex.Matcher.start,Returns the start index of the subsequence captured by the givennamed-capturing groupduring the  previous match operation.
java.util.regex.Matcher.toMatchResult,Returns the match state of this matcher as aMatchResult.
java.util.regex.Matcher.toString,Returns the string representation of this matcher.
java.util.regex.Matcher.useAnchoringBounds,Sets the anchoring of region bounds for this matcher.
java.util.regex.Matcher.usePattern,Changes thePatternthat thisMatcheruses to  find matches with.
java.util.regex.Matcher.useTransparentBounds,Sets the transparency of region bounds for this matcher.
java.util.regex.Pattern.asMatchPredicate,Creates a predicate that tests if this pattern matches a given input string.
java.util.regex.Pattern.asPredicate,Creates a predicate that tests if this pattern is found in a given input  string.
java.util.regex.Pattern.compile,Compiles the given regular expression into a pattern.
java.util.regex.Pattern.compile,Compiles the given regular expression into a pattern with the given  flags.
java.util.regex.Pattern.flags,Returns this pattern's match flags.
java.util.regex.Pattern.matcher,Creates a matcher that will match the given input against this pattern.
java.util.regex.Pattern.matches,Compiles the given regular expression and attempts to match the given  input against it.
java.util.regex.Pattern.pattern,Returns the regular expression from which this pattern was compiled.
java.util.regex.Pattern.quote,Returns a literal patternStringfor the specifiedString.
java.util.regex.Pattern.split,Splits the given input sequence around matches of this pattern.
java.util.regex.Pattern.splitAsStream,Creates a stream from the given input sequence around matches of this  pattern.
java.util.regex.Pattern.toString,Returns the string representation of this pattern.
java.util.regex.PatternSyntaxException.getDescription,Retrieves the description of the error.
java.util.regex.PatternSyntaxException.getIndex,Retrieves the error index.
java.util.regex.PatternSyntaxException.getMessage,"Returns a multi-line string containing the description of the syntax  error and its index, the erroneous regular-expression pattern, and a  visual indication of the error index within the pattern."
java.util.regex.PatternSyntaxException.getPattern,Retrieves the erroneous regular-expression pattern.
java.util.spi.AbstractResourceBundleProvider.getBundle,Returns aResourceBundlefor the givenbaseNameandlocale.
java.util.spi.AbstractResourceBundleProvider.toBundleName,Returns the bundle name for the givenbaseNameandlocalethat this provider provides.
java.util.spi.CalendarDataProvider.getFirstDayOfWeek,Returns the first day of a week in the givenlocale.
java.util.spi.CalendarDataProvider.getMinimalDaysInFirstWeek,Returns the minimal number of days required in the first week of a  year.
java.util.spi.CalendarNameProvider.getDisplayName,Returns the string representation (display name) of the calendarfield valuein the givenstyleandlocale.
java.util.spi.CalendarNameProvider.getDisplayNames,Returns aMapcontaining all string representations (display  names) of theCalendarfieldin the givenstyleandlocaleand their corresponding field values.
java.util.spi.CurrencyNameProvider.getDisplayName,Returns a name for the currency that is appropriate for display to the  user.
java.util.spi.CurrencyNameProvider.getSymbol,Gets the symbol of the given currency code for the specified locale.
java.util.spi.LocaleNameProvider.getDisplayCountry,Returns a localized name for the givenIETF BCP47region code (either ISO 3166 country code or UN M.49 area  codes) and the given locale that is appropriate for display to the user.
java.util.spi.LocaleNameProvider.getDisplayLanguage,Returns a localized name for the givenIETF BCP47language code and the given locale that is appropriate for  display to the user.
java.util.spi.LocaleNameProvider.getDisplayScript,Returns a localized name for the givenIETF BCP47script code and the given locale that is appropriate for  display to the user.
java.util.spi.LocaleNameProvider.getDisplayUnicodeExtensionKey,"Returns a localized name for the givenUnicode extensionkey,  and the given locale that is appropriate for display to the user."
java.util.spi.LocaleNameProvider.getDisplayUnicodeExtensionType,"Returns a localized name for the givenUnicode extensiontype,  and the given locale that is appropriate for display to the user."
java.util.spi.LocaleNameProvider.getDisplayVariant,Returns a localized name for the given variant code and the given locale that  is appropriate for display to the user.
java.util.spi.LocaleServiceProvider.getAvailableLocales,Returns an array of all locales for which this locale service provider  can provide localized objects or names.
java.util.spi.LocaleServiceProvider.isSupportedLocale,Returnstrueif the givenlocaleis supported by  this locale service provider.
java.util.spi.TimeZoneNameProvider.getDisplayName,Returns a name for the given time zone ID that's suitable for  presentation to the user in the specified locale.
java.util.spi.TimeZoneNameProvider.getGenericDisplayName,Returns a generic name for the given time zoneIDthat's suitable  for presentation to the user in the specifiedlocale.
java.util.stream.Collectors.averagingDouble,Returns aCollectorthat produces the arithmetic mean of a double-valued  function applied to the input elements.
java.util.stream.Collectors.averagingInt,Returns aCollectorthat produces the arithmetic mean of an integer-valued  function applied to the input elements.
java.util.stream.Collectors.averagingLong,Returns aCollectorthat produces the arithmetic mean of a long-valued  function applied to the input elements.
java.util.stream.Collectors.collectingAndThen,Adapts aCollectorto perform an additional finishing  transformation.
java.util.stream.Collectors.counting,Returns aCollectoraccepting elements of typeTthat  counts the number of input elements.
java.util.stream.Collectors.filtering,Adapts aCollectorto one accepting elements of the same typeTby applying the predicate to each input element and only  accumulating if the predicate returnstrue.
java.util.stream.Collectors.flatMapping,Adapts aCollectoraccepting elements of typeUto one  accepting elements of typeTby applying a flat mapping function  to each input element before accumulation.
java.util.stream.Collectors.groupingBy,"Returns aCollectorimplementing a ""group by"" operation on  input elements of typeT, grouping elements according to a  classification function, and returning the results in aMap."
java.util.stream.Collectors.groupingBy,"Returns aCollectorimplementing a cascaded ""group by"" operation  on input elements of typeT, grouping elements according to a  classification function, and then performing a reduction operation on  the values associated with a given key using the specified downstreamCollector."
java.util.stream.Collectors.groupingByConcurrent,"Returns a concurrentCollectorimplementing a ""group by""  operation on input elements of typeT, grouping elements  according to a classification function."
java.util.stream.Collectors.groupingByConcurrent,"Returns a concurrentCollectorimplementing a cascaded ""group by""  operation on input elements of typeT, grouping elements  according to a classification function, and then performing a reduction  operation on the values associated with a given key using the specified  downstreamCollector."
java.util.stream.Collectors.joining,"Returns aCollectorthat concatenates the input elements into aString, in encounter order."
java.util.stream.Collectors.joining,"Returns aCollectorthat concatenates the input elements,  separated by the specified delimiter, in encounter order."
java.util.stream.Collectors.joining,"Returns aCollectorthat concatenates the input elements,  separated by the specified delimiter, with the specified prefix and  suffix, in encounter order."
java.util.stream.Collectors.mapping,Adapts aCollectoraccepting elements of typeUto one  accepting elements of typeTby applying a mapping function to  each input element before accumulation.
java.util.stream.Collectors.maxBy,"Returns aCollectorthat produces the maximal element according  to a givenComparator, described as anOptional<T>."
java.util.stream.Collectors.minBy,"Returns aCollectorthat produces the minimal element according  to a givenComparator, described as anOptional<T>."
java.util.stream.Collectors.partitioningBy,"Returns aCollectorwhich partitions the input elements according  to aPredicate, and organizes them into aMap<Boolean, List<T>>."
java.util.stream.Collectors.partitioningBy,"Returns aCollectorwhich partitions the input elements according  to aPredicate, reduces the values in each partition according to  anotherCollector, and organizes them into aMap<Boolean, D>whose values are the result of the downstream  reduction."
java.util.stream.Collectors.reducing,Returns aCollectorwhich performs a reduction of its  input elements under a specifiedBinaryOperator.
java.util.stream.Collectors.reducing,Returns aCollectorwhich performs a reduction of its  input elements under a specifiedBinaryOperatorusing the  provided identity.
java.util.stream.Collectors.reducing,Returns aCollectorwhich performs a reduction of its  input elements under a specified mapping function andBinaryOperator.
java.util.stream.Collectors.summarizingDouble,"Returns aCollectorwhich applies andouble-producing  mapping function to each input element, and returns summary statistics  for the resulting values."
java.util.stream.Collectors.summarizingInt,"Returns aCollectorwhich applies anint-producing  mapping function to each input element, and returns summary statistics  for the resulting values."
java.util.stream.Collectors.summarizingLong,"Returns aCollectorwhich applies anlong-producing  mapping function to each input element, and returns summary statistics  for the resulting values."
java.util.stream.Collectors.summingDouble,Returns aCollectorthat produces the sum of a double-valued  function applied to the input elements.
java.util.stream.Collectors.summingInt,Returns aCollectorthat produces the sum of a integer-valued  function applied to the input elements.
java.util.stream.Collectors.summingLong,Returns aCollectorthat produces the sum of a long-valued  function applied to the input elements.
java.util.stream.Collectors.teeing,Returns aCollectorthat is a composite of two downstream collectors.
java.util.stream.Collectors.toCollection,"Returns aCollectorthat accumulates the input elements into a  newCollection, in encounter order."
java.util.stream.Collectors.toConcurrentMap,Returns a concurrentCollectorthat accumulates elements into aConcurrentMapwhose keys and values are the result of applying  the provided mapping functions to the input elements.
java.util.stream.Collectors.toList,Returns aCollectorthat accumulates the input elements into a  newList.
java.util.stream.Collectors.toMap,Returns aCollectorthat accumulates elements into aMapwhose keys and values are the result of applying the provided  mapping functions to the input elements.
java.util.stream.Collectors.toSet,Returns aCollectorthat accumulates the input elements into a  newSet.
java.util.stream.Collectors.toUnmodifiableList,Returns aCollectorthat accumulates the input elements into anunmodifiable Listin encounter  order.
java.util.stream.Collectors.toUnmodifiableMap,"Returns aCollectorthat accumulates the input elements into anunmodifiable Map,  whose keys and values are the result of applying the provided  mapping functions to the input elements."
java.util.stream.Collectors.toUnmodifiableSet,Returns aCollectorthat accumulates the input elements into anunmodifiable Set.
java.util.stream.StreamSupport.doubleStream,Creates a new sequential or parallelDoubleStreamfrom aSupplierofSpliterator.OfDouble.
java.util.stream.StreamSupport.doubleStream,Creates a new sequential or parallelDoubleStreamfrom aSpliterator.OfDouble.
java.util.stream.StreamSupport.intStream,Creates a new sequential or parallelIntStreamfrom aSupplierofSpliterator.OfInt.
java.util.stream.StreamSupport.intStream,Creates a new sequential or parallelIntStreamfrom aSpliterator.OfInt.
java.util.stream.StreamSupport.longStream,Creates a new sequential or parallelLongStreamfrom aSupplierofSpliterator.OfLong.
java.util.stream.StreamSupport.longStream,Creates a new sequential or parallelLongStreamfrom aSpliterator.OfLong.
java.util.stream.StreamSupport.stream,Creates a new sequential or parallelStreamfrom aSupplierofSpliterator.
java.util.stream.StreamSupport.stream,Creates a new sequential or parallelStreamfrom aSpliterator.
java.util.zip.Adler32.getValue,Returns the checksum value.
java.util.zip.Adler32.reset,Resets the checksum to initial value.
java.util.zip.Adler32.update,Updates the checksum with the specified array of bytes.
java.util.zip.Adler32.update,Updates the checksum with the specified byte (the low eight  bits of the argument b).
java.util.zip.Adler32.update,Updates the checksum with the bytes from the specified buffer.
java.util.zip.CheckedInputStream.getChecksum,Returns the Checksum for this input stream.
java.util.zip.CheckedInputStream.read,Reads a byte.
java.util.zip.CheckedInputStream.skip,Skips specified number of bytes of input.
java.util.zip.CheckedOutputStream.getChecksum,Returns the Checksum for this output stream.
java.util.zip.CRC32.getValue,Returns CRC-32 value.
java.util.zip.CRC32.reset,Resets CRC-32 to initial value.
java.util.zip.CRC32.update,Updates the CRC-32 checksum with the specified array of bytes.
java.util.zip.CRC32.update,Updates the CRC-32 checksum with the specified byte (the low  eight bits of the argument b).
java.util.zip.CRC32.update,Updates the CRC-32 checksum with the bytes from the specified buffer.
java.util.zip.CRC32C.getValue,Returns CRC-32C value.
java.util.zip.CRC32C.reset,Resets CRC-32C to initial value.
java.util.zip.CRC32C.update,Updates the CRC-32C checksum with the specified array of bytes.
java.util.zip.CRC32C.update,Updates the CRC-32C checksum with the specified byte (the low eight bits  of the argument b).
java.util.zip.CRC32C.update,Updates the CRC-32C checksum with the bytes from the specified buffer.
java.util.zip.Deflater.deflate,Compresses the input data and fills specified buffer with compressed  data.
java.util.zip.Deflater.deflate,Compresses the input data and fills the specified buffer with compressed  data.
java.util.zip.Deflater.end,Closes the compressor and discards any unprocessed input.
java.util.zip.Deflater.finish,"When called, indicates that compression should end with the current  contents of the input buffer."
java.util.zip.Deflater.finished,Returns true if the end of the compressed data output stream has  been reached.
java.util.zip.Deflater.getAdler,Returns the ADLER-32 value of the uncompressed data.
java.util.zip.Deflater.getBytesRead,Returns the total number of uncompressed bytes input so far.
java.util.zip.Deflater.getBytesWritten,Returns the total number of compressed bytes output so far.
java.util.zip.Deflater.needsInput,Returns true if no data remains in the input buffer.
java.util.zip.Deflater.reset,Resets deflater so that a new set of input data can be processed.
java.util.zip.Deflater.setDictionary,Sets preset dictionary for compression.
java.util.zip.Deflater.setInput,Sets input data for compression.
java.util.zip.Deflater.setLevel,Sets the compression level to the specified value.
java.util.zip.Deflater.setStrategy,Sets the compression strategy to the specified value.
java.util.zip.DeflaterInputStream.available,"Returns 0 after EOF has been reached, otherwise always return 1."
java.util.zip.DeflaterInputStream.close,"Closes this input stream and its underlying input stream, discarding  any pending uncompressed data."
java.util.zip.DeflaterInputStream.mark,This operation is not supported.
java.util.zip.DeflaterInputStream.markSupported,Always returnsfalsebecause this input stream does not support  themark()andreset()methods.
java.util.zip.DeflaterInputStream.read,Reads a single byte of compressed data from the input stream.
java.util.zip.DeflaterInputStream.read,Reads compressed data into a byte array.
java.util.zip.DeflaterInputStream.skip,Skips over and discards data from the input stream.
java.util.zip.DeflaterOutputStream.close,Writes remaining compressed data to the output stream and closes the  underlying stream.
java.util.zip.DeflaterOutputStream.deflate,Writes next block of compressed data to the output stream.
java.util.zip.DeflaterOutputStream.finish,Finishes writing compressed data to the output stream without closing  the underlying stream.
java.util.zip.DeflaterOutputStream.flush,Flushes the compressed output stream.
java.util.zip.DeflaterOutputStream.write,Writes an array of bytes to the compressed output stream.
java.util.zip.DeflaterOutputStream.write,Writes a byte to the compressed output stream.
java.util.zip.GZIPInputStream.read,Reads uncompressed data into an array of bytes.
java.util.zip.GZIPOutputStream.write,Writes array of bytes to the compressed output stream.
java.util.zip.Inflater.end,Closes the decompressor and discards any unprocessed input.
java.util.zip.Inflater.finished,Returns true if the end of the compressed data stream has been  reached.
java.util.zip.Inflater.getBytesRead,Returns the total number of compressed bytes input so far.
java.util.zip.Inflater.getBytesWritten,Returns the total number of uncompressed bytes output so far.
java.util.zip.Inflater.getRemaining,Returns the total number of bytes remaining in the input buffer.
java.util.zip.Inflater.inflate,Uncompresses bytes into specified buffer.
java.util.zip.Inflater.needsDictionary,Returns true if a preset dictionary is needed for decompression.
java.util.zip.Inflater.reset,Resets inflater so that a new set of input data can be processed.
java.util.zip.Inflater.setDictionary,Sets the preset dictionary to the given array of bytes.
java.util.zip.Inflater.setDictionary,Sets the preset dictionary to the bytes in the given buffer.
java.util.zip.Inflater.setInput,Sets input data for decompression.
java.util.zip.InflaterInputStream.fill,Fills input buffer with more data to decompress.
java.util.zip.InflaterInputStream.read,Reads a byte of uncompressed data.
java.util.zip.InflaterInputStream.skip,Skips specified number of bytes of uncompressed data.
java.util.zip.InflaterOutputStream.close,Writes any remaining uncompressed data to the output stream and closes  the underlying output stream.
java.util.zip.InflaterOutputStream.finish,Finishes writing uncompressed data to the output stream without closing  the underlying stream.
java.util.zip.InflaterOutputStream.flush,"Flushes this output stream, forcing any pending buffered output bytes to be  written."
java.util.zip.InflaterOutputStream.write,Writes an array of bytes to the uncompressed output stream.
java.util.zip.InflaterOutputStream.write,Writes a byte to the uncompressed output stream.
java.util.zip.ZipEntry.clone,Returns a copy of this entry.
java.util.zip.ZipEntry.getComment,Returns the comment string for the entry.
java.util.zip.ZipEntry.getCompressedSize,Returns the size of the compressed entry data.
java.util.zip.ZipEntry.getCrc,Returns the CRC-32 checksum of the uncompressed entry data.
java.util.zip.ZipEntry.getCreationTime,Returns the creation time of the entry.
java.util.zip.ZipEntry.getExtra,Returns the extra field data for the entry.
java.util.zip.ZipEntry.getLastAccessTime,Returns the last access time of the entry.
java.util.zip.ZipEntry.getLastModifiedTime,Returns the last modification time of the entry.
java.util.zip.ZipEntry.getMethod,Returns the compression method of the entry.
java.util.zip.ZipEntry.getName,Returns the name of the entry.
java.util.zip.ZipEntry.getSize,Returns the uncompressed size of the entry data.
java.util.zip.ZipEntry.getTimeLocal,Returns the last modification time of the entry in local date-time.
java.util.zip.ZipEntry.hashCode,Returns the hash code value for this entry.
java.util.zip.ZipEntry.isDirectory,Returns true if this is a directory entry.
java.util.zip.ZipEntry.setComment,Sets the optional comment string for the entry.
java.util.zip.ZipEntry.setCompressedSize,Sets the size of the compressed entry data.
java.util.zip.ZipEntry.setCrc,Sets the CRC-32 checksum of the uncompressed entry data.
java.util.zip.ZipEntry.setCreationTime,Sets the creation time of the entry.
java.util.zip.ZipEntry.setExtra,Sets the optional extra field data for the entry.
java.util.zip.ZipEntry.setLastAccessTime,Sets the last access time of the entry.
java.util.zip.ZipEntry.setLastModifiedTime,Sets the last modification time of the entry.
java.util.zip.ZipEntry.setMethod,Sets the compression method for the entry.
java.util.zip.ZipEntry.setSize,Sets the uncompressed size of the entry data.
java.util.zip.ZipEntry.setTimeLocal,Sets the last modification time of the entry in local date-time.
java.util.zip.ZipEntry.toString,Returns a string representation of the ZIP entry.
java.util.zip.ZipFile.close,Closes the ZIP file.
java.util.zip.ZipFile.entries,Returns an enumeration of the ZIP file entries.
java.util.zip.ZipFile.getComment,"Returns the zip file comment, or null if none."
java.util.zip.ZipFile.getEntry,"Returns the zip file entry for the specified name, or null  if not found."
java.util.zip.ZipFile.getName,Returns the path name of the ZIP file.
java.util.zip.ZipFile.size,Returns the number of entries in the ZIP file.
java.util.zip.ZipFile.stream,Returns an orderedStreamover the ZIP file entries.
java.util.zip.ZipInputStream.available,"Returns 0 after EOF has reached for the current entry data,  otherwise always return 1."
java.util.zip.ZipInputStream.closeEntry,Closes the current ZIP entry and positions the stream for reading the  next entry.
java.util.zip.ZipInputStream.createZipEntry,Creates a newZipEntryobject for the specified  entry name.
java.util.zip.ZipInputStream.read,Reads from the current ZIP entry into an array of bytes.
java.util.zip.ZipInputStream.skip,Skips specified number of bytes in the current ZIP entry.
java.util.zip.ZipOutputStream.close,Closes the ZIP output stream as well as the stream being filtered.
java.util.zip.ZipOutputStream.closeEntry,Closes the current ZIP entry and positions the stream for writing  the next entry.
java.util.zip.ZipOutputStream.finish,Finishes writing the contents of the ZIP output stream without closing  the underlying stream.
java.util.zip.ZipOutputStream.putNextEntry,Begins writing a new ZIP file entry and positions the stream to the  start of the entry data.
java.util.zip.ZipOutputStream.setComment,Sets the ZIP file comment.
java.util.zip.ZipOutputStream.setLevel,Sets the compression level for subsequent entries which are DEFLATED.
java.util.zip.ZipOutputStream.setMethod,Sets the default compression method for subsequent entries.
java.util.zip.ZipOutputStream.write,Writes an array of bytes to the current ZIP entry data.
javax.crypto.Cipher.doFinal,"Finishes a multiple-part encryption or decryption operation, depending  on how this cipher was initialized."
javax.crypto.Cipher.doFinal,"Encrypts or decrypts data in a single-part operation, or finishes a  multiple-part operation."
javax.crypto.Cipher.getAlgorithm,Returns the algorithm name of thisCipherobject.
javax.crypto.Cipher.getBlockSize,Returns the block size (in bytes).
javax.crypto.Cipher.getExemptionMechanism,Returns the exemption mechanism object used with this cipher.
javax.crypto.Cipher.getInstance,Returns aCipherobject that implements the specified  transformation.
javax.crypto.Cipher.getIV,Returns the initialization vector (IV) in a new buffer.
javax.crypto.Cipher.getMaxAllowedKeyLength,Returns the maximum key length for the specified transformation  according to the installed JCE jurisdiction policy files.
javax.crypto.Cipher.getMaxAllowedParameterSpec,Returns an AlgorithmParameterSpec object which contains  the maximum cipher parameter value according to the  jurisdiction policy file.
javax.crypto.Cipher.getOutputSize,"Returns the length in bytes that an output buffer would need to be in  order to hold the result of the nextupdateordoFinaloperation, given the input lengthinputLen(in bytes)."
javax.crypto.Cipher.getParameters,Returns the parameters used with this cipher.
javax.crypto.Cipher.getProvider,Returns the provider of thisCipherobject.
javax.crypto.Cipher.init,Initializes this cipher with the public key from the given certificate.
javax.crypto.Cipher.init,Initializes this cipher with the public key from the given certificate  and a source of randomness.
javax.crypto.Cipher.init,Initializes this cipher with a key.
javax.crypto.Cipher.init,Initializes this cipher with a key and a set of algorithm  parameters.
javax.crypto.Cipher.init,"Initializes this cipher with a key, a set of algorithm  parameters, and a source of randomness."
javax.crypto.Cipher.init,Initializes this cipher with a key and a source of randomness.
javax.crypto.Cipher.toString,Returns a String representation of this Cipher.
javax.crypto.Cipher.unwrap,Unwrap a previously wrapped key.
javax.crypto.Cipher.update,"Continues a multiple-part encryption or decryption operation  (depending on how this cipher was initialized), processing another data  part."
javax.crypto.Cipher.updateAAD,Continues a multi-part update of the Additional Authentication  Data (AAD).
javax.crypto.Cipher.updateAAD,"Continues a multi-part update of the Additional Authentication  Data (AAD), using a subset of the provided buffer."
javax.crypto.Cipher.wrap,Wrap a key.
javax.crypto.CipherInputStream.skip,Skipsnbytes of input from the bytes that can be read  from this input stream without blocking.
javax.crypto.CipherOutputStream.flush,Flushes this output stream by forcing any buffered output bytes  that have already been processed by the encapsulated cipher object  to be written out.
javax.crypto.CipherSpi.engineDoFinal,"Encrypts or decrypts data in a single-part operation,  or finishes a multiple-part operation."
javax.crypto.CipherSpi.engineGetKeySize,Returns the key size of the given key object in bits.
javax.crypto.CipherSpi.engineGetOutputSize,"Returns the length in bytes that an output buffer would  need to be in order to hold the result of the nextupdateordoFinaloperation, given the input lengthinputLen(in bytes)."
javax.crypto.CipherSpi.engineInit,"Initializes this cipher with a key, a set of  algorithm parameters, and a source of randomness."
javax.crypto.CipherSpi.engineInit,Initializes this cipher with a key and a source  of randomness.
javax.crypto.CipherSpi.engineSetMode,Sets the mode of this cipher.
javax.crypto.CipherSpi.engineSetPadding,Sets the padding mechanism of this cipher.
javax.crypto.EncryptedPrivateKeyInfo.getAlgName,Returns the encryption algorithm.
javax.crypto.EncryptedPrivateKeyInfo.getAlgParameters,Returns the algorithm parameters used by the encryption algorithm.
javax.crypto.EncryptedPrivateKeyInfo.getEncoded,Returns the ASN.1 encoding of this object.
javax.crypto.EncryptedPrivateKeyInfo.getEncryptedData,Returns the encrypted data.
javax.crypto.EncryptedPrivateKeyInfo.getKeySpec,Extract the enclosed PKCS8EncodedKeySpec object from the  encrypted data and return it.
javax.crypto.ExemptionMechanism.genExemptionBlob,Generates the exemption mechanism key blob.
javax.crypto.ExemptionMechanism.genExemptionBlob,"Generates the exemption mechanism key blob, and stores the result in  theoutputbuffer."
javax.crypto.ExemptionMechanism.genExemptionBlob,"Generates the exemption mechanism key blob, and stores the result in  theoutputbuffer, starting atoutputOffsetinclusive."
javax.crypto.ExemptionMechanism.getInstance,Returns anExemptionMechanismobject that implements the  specified exemption mechanism algorithm.
javax.crypto.ExemptionMechanism.getName,Returns the exemption mechanism name of thisExemptionMechanismobject.
javax.crypto.ExemptionMechanism.getOutputSize,"Returns the length in bytes that an output buffer would need to be in  order to hold the result of the nextgenExemptionBloboperation, given the input lengthinputLen(in bytes)."
javax.crypto.ExemptionMechanism.getProvider,Returns the provider of thisExemptionMechanismobject.
javax.crypto.ExemptionMechanism.init,Initializes this exemption mechanism with a key.
javax.crypto.ExemptionMechanism.init,Initializes this exemption mechanism with a key and a set of algorithm  parameters.
javax.crypto.ExemptionMechanism.isCryptoAllowed,Returns whether the result blob has been generated successfully by this  exemption mechanism.
javax.crypto.ExemptionMechanismSpi.engineGetOutputSize,"Returns the length in bytes that an output buffer would need to be in  order to hold the result of the nextengineGenExemptionBloboperation, given the input lengthinputLen(in bytes)."
javax.crypto.KeyAgreement.doPhase,Executes the next phase of this key agreement with the given  key that was received from one of the other parties involved in this key  agreement.
javax.crypto.KeyAgreement.generateSecret,Generates the shared secret and returns it in a new buffer.
javax.crypto.KeyAgreement.generateSecret,"Generates the shared secret, and places it into the buffersharedSecret, beginning atoffsetinclusive."
javax.crypto.KeyAgreement.generateSecret,Creates the shared secret and returns it as aSecretKeyobject of the specified algorithm.
javax.crypto.KeyAgreement.getAlgorithm,Returns the algorithm name of thisKeyAgreementobject.
javax.crypto.KeyAgreement.getInstance,Returns aKeyAgreementobject that implements the  specified key agreement algorithm.
javax.crypto.KeyAgreement.getProvider,Returns the provider of thisKeyAgreementobject.
javax.crypto.KeyAgreement.init,"Initializes this key agreement with the given key, which is required to  contain all the algorithm parameters required for this key agreement."
javax.crypto.KeyAgreement.init,Initializes this key agreement with the given key and source of  randomness.
javax.crypto.KeyAgreement.init,Initializes this key agreement with the given key and set of  algorithm parameters.
javax.crypto.KeyAgreement.init,"Initializes this key agreement with the given key, set of  algorithm parameters, and source of randomness."
javax.crypto.KeyAgreementSpi.engineGenerateSecret,Creates the shared secret and returns it as a secret key object  of the requested algorithm type.
javax.crypto.KeyGenerator.generateKey,Generates a secret key.
javax.crypto.KeyGenerator.getAlgorithm,Returns the algorithm name of thisKeyGeneratorobject.
javax.crypto.KeyGenerator.getInstance,Returns aKeyGeneratorobject that generates secret keys  for the specified algorithm.
javax.crypto.KeyGenerator.getProvider,Returns the provider of thisKeyGeneratorobject.
javax.crypto.KeyGenerator.init,Initializes this key generator for a certain keysize.
javax.crypto.KeyGenerator.init,"Initializes this key generator for a certain keysize, using a  user-provided source of randomness."
javax.crypto.KeyGenerator.init,Initializes this key generator.
javax.crypto.KeyGenerator.init,Initializes this key generator with the specified parameter set.
javax.crypto.KeyGenerator.init,Initializes this key generator with the specified parameter  set and a user-provided source of randomness.
javax.crypto.KeyGeneratorSpi.engineInit,"Initializes this key generator for a certain keysize, using the given  source of randomness."
javax.crypto.KeyGeneratorSpi.engineInit,Initializes the key generator.
javax.crypto.KeyGeneratorSpi.engineInit,Initializes the key generator with the specified parameter  set and a user-provided source of randomness.
javax.crypto.Mac.clone,Returns a clone if the provider implementation is cloneable.
javax.crypto.Mac.doFinal,Finishes the MAC operation.
javax.crypto.Mac.doFinal,Processes the given array of bytes and finishes the MAC operation.
javax.crypto.Mac.getAlgorithm,Returns the algorithm name of thisMacobject.
javax.crypto.Mac.getInstance,Returns aMacobject that implements the  specified MAC algorithm.
javax.crypto.Mac.getMacLength,Returns the length of the MAC in bytes.
javax.crypto.Mac.getProvider,Returns the provider of thisMacobject.
javax.crypto.Mac.init,Initializes thisMacobject with the given key.
javax.crypto.Mac.init,Initializes thisMacobject with the given key and  algorithm parameters.
javax.crypto.Mac.reset,Resets thisMacobject.
javax.crypto.Mac.update,Processes the given byte.
javax.crypto.Mac.update,Processes the given array of bytes.
javax.crypto.Mac.update,"Processes the firstlenbytes ininput,  starting atoffsetinclusive."
javax.crypto.Mac.update,"Processesinput.remaining()bytes in the ByteBufferinput, starting atinput.position()."
javax.crypto.MacSpi.engineDoFinal,"Completes the MAC computation and resets the MAC for further use,  maintaining the secret key that the MAC was initialized with."
javax.crypto.MacSpi.engineInit,Initializes the MAC with the given (secret) key and algorithm  parameters.
javax.crypto.MacSpi.engineReset,"Resets the MAC for further use, maintaining the secret key that the  MAC was initialized with."
javax.crypto.SealedObject.getAlgorithm,Returns the algorithm that was used to seal this object.
javax.crypto.SealedObject.getObject,Retrieves the original (encapsulated) object.
javax.crypto.SecretKeyFactory.generateSecret,Generates aSecretKeyobject from the provided key  specification (key material).
javax.crypto.SecretKeyFactory.getAlgorithm,Returns the algorithm name of thisSecretKeyFactoryobject.
javax.crypto.SecretKeyFactory.getInstance,Returns aSecretKeyFactoryobject that converts  secret keys of the specified algorithm.
javax.crypto.SecretKeyFactory.getKeySpec,Returns a specification (key material) of the given key object  in the requested format.
javax.crypto.SecretKeyFactory.getProvider,Returns the provider of thisSecretKeyFactoryobject.
javax.crypto.SecretKeyFactory.translateKey,"Translates a key object, whose provider may be unknown or potentially  untrusted, into a corresponding key object of this secret-key factory."
javax.crypto.SecretKeyFactorySpi.engineGenerateSecret,Generates aSecretKeyobject from the  provided key specification (key material).
javax.crypto.SecretKeyFactorySpi.engineGetKeySpec,Returns a specification (key material) of the given key  object in the requested format.
javax.crypto.SecretKeyFactorySpi.engineTranslateKey,"Translates a key object, whose provider may be unknown or  potentially untrusted, into a corresponding key object of this  secret-key factory."
javax.crypto.spec.ChaCha20ParameterSpec.getCounter,Returns the configured counter value.
javax.crypto.spec.ChaCha20ParameterSpec.getNonce,Returns the nonce value.
javax.crypto.spec.DESedeKeySpec.getKey,Returns the DES-EDE key.
javax.crypto.spec.DESedeKeySpec.isParityAdjusted,"Checks if the given DES-EDE key, starting atoffsetinclusive, is parity-adjusted."
javax.crypto.spec.DESKeySpec.getKey,Returns the DES key material.
javax.crypto.spec.DESKeySpec.isParityAdjusted,"Checks if the given DES key material, starting atoffsetinclusive, is parity-adjusted."
javax.crypto.spec.DESKeySpec.isWeak,Checks if the given DES key material is weak or semi-weak.
javax.crypto.spec.DHGenParameterSpec.getExponentSize,Returns the size in bits of the random exponent (private value).
javax.crypto.spec.DHGenParameterSpec.getPrimeSize,Returns the size in bits of the prime modulus.
javax.crypto.spec.DHParameterSpec.getG,Returns the base generatorg.
javax.crypto.spec.DHParameterSpec.getL,"Returns the size in bits,l, of the random exponent  (private value)."
javax.crypto.spec.DHParameterSpec.getP,Returns the prime modulusp.
javax.crypto.spec.DHPrivateKeySpec.getX,Returns the private valuex.
javax.crypto.spec.DHPublicKeySpec.getY,Returns the public valuey.
javax.crypto.spec.GCMParameterSpec.getIV,Returns the Initialization Vector (IV).
javax.crypto.spec.GCMParameterSpec.getTLen,Returns the authentication tag length.
javax.crypto.spec.IvParameterSpec.getIV,Returns the initialization vector (IV).
javax.crypto.spec.OAEPParameterSpec.getPSource,Returns the source of encoding input P.
javax.crypto.spec.PBEKeySpec.clearPassword,Clears the internal copy of the password.
javax.crypto.spec.PBEKeySpec.getIterationCount,Returns the iteration count or 0 if not specified.
javax.crypto.spec.PBEKeySpec.getKeyLength,Returns the to-be-derived key length or 0 if not specified.
javax.crypto.spec.PBEKeySpec.getPassword,Returns a copy of the password.
javax.crypto.spec.PBEKeySpec.getSalt,Returns a copy of the salt or null if not specified.
javax.crypto.spec.PBEParameterSpec.getIterationCount,Returns the iteration count.
javax.crypto.spec.PBEParameterSpec.getParameterSpec,Returns the cipher algorithm parameter specification.
javax.crypto.spec.PBEParameterSpec.getSalt,Returns the salt.
javax.crypto.spec.PSource.getAlgorithm,Returns the PSource algorithm name.
javax.crypto.spec.PSource.getValue,Returns the value of encoding input P.
javax.crypto.spec.RC2ParameterSpec.getEffectiveKeyBits,Returns the effective key size in bits.
javax.crypto.spec.RC2ParameterSpec.getIV,Returns the IV or null if this parameter set does not contain an IV.
javax.crypto.spec.RC2ParameterSpec.hashCode,Calculates a hash code value for the object.
javax.crypto.spec.RC5ParameterSpec.getRounds,Returns the number of rounds.
javax.crypto.spec.RC5ParameterSpec.getVersion,Returns the version.
javax.crypto.spec.RC5ParameterSpec.getWordSize,Returns the word size in bits.
javax.crypto.spec.SecretKeySpec.getAlgorithm,Returns the name of the algorithm associated with this secret key.
javax.crypto.spec.SecretKeySpec.getEncoded,Returns the key material of this secret key.
javax.crypto.spec.SecretKeySpec.getFormat,Returns the name of the encoding format for this secret key.
javax.net.ServerSocketFactory.createServerSocket,Returns an unbound server socket.
javax.net.ServerSocketFactory.createServerSocket,Returns a server socket bound to the specified port.
javax.net.ServerSocketFactory.createServerSocket,"Returns a server socket bound to the specified port, and uses the  specified connection backlog."
javax.net.ServerSocketFactory.createServerSocket,"Returns a server socket bound to the specified port,  with a specified listen backlog and local IP."
javax.net.ServerSocketFactory.getDefault,Returns a copy of the environment's default socket factory.
javax.net.SocketFactory.createSocket,Creates an unconnected socket.
javax.net.SocketFactory.createSocket,Creates a socket and connects it to the specified remote host  at the specified remote port.
javax.net.SocketFactory.createSocket,Creates a socket and connects it to the specified remote host  on the specified remote port.
javax.net.SocketFactory.createSocket,Creates a socket and connects it to the specified port number  at the specified address.
javax.net.SocketFactory.createSocket,Creates a socket and connect it to the specified remote address  on the specified remote port.
javax.net.ssl.CertPathTrustManagerParameters.getParameters,Return a clone of the CertPathParameters encapsulated by this class.
javax.net.ssl.ExtendedSSLSession.getLocalSupportedSignatureAlgorithms,Obtains an array of supported signature algorithms that the local side  is willing to use.
javax.net.ssl.ExtendedSSLSession.getPeerSupportedSignatureAlgorithms,Obtains an array of supported signature algorithms that the peer is  able to use.
javax.net.ssl.ExtendedSSLSession.getRequestedServerNames,Obtains aListcontaining allSNIServerNames  of the requested Server Name Indication (SNI) extension.
javax.net.ssl.ExtendedSSLSession.getStatusResponses,Returns aListcontaining DER-encoded OCSP responses  (using the ASN.1 type OCSPResponse defined in RFC 6960) for  the client to verify status of the server's certificate during  handshaking.
javax.net.ssl.HandshakeCompletedEvent.getCipherSuite,Returns the cipher suite in use by the session which was produced  by the handshake.
javax.net.ssl.HandshakeCompletedEvent.getLocalCertificates,Returns the certificate(s) that were sent to the peer during  handshaking.
javax.net.ssl.HandshakeCompletedEvent.getLocalPrincipal,Returns the principal that was sent to the peer during handshaking.
javax.net.ssl.HandshakeCompletedEvent.getPeerCertificateChain,"Deprecated, for removal: This API element is subject to removal in a future version.ThegetPeerCertificates()method that returns an                array ofjava.security.cert.Certificateshould                be used instead."
javax.net.ssl.HandshakeCompletedEvent.getPeerCertificates,Returns the identity of the peer which was established as part  of defining the session.
javax.net.ssl.HandshakeCompletedEvent.getPeerPrincipal,Returns the identity of the peer which was established as part of  defining the session.
javax.net.ssl.HandshakeCompletedEvent.getSession,Returns the session that triggered this event.
javax.net.ssl.HandshakeCompletedEvent.getSocket,Returns the socket which is the source of this event.
javax.net.ssl.HttpsURLConnection.getCipherSuite,Returns the cipher suite in use on this connection.
javax.net.ssl.HttpsURLConnection.getDefaultHostnameVerifier,Gets the defaultHostnameVerifierthat is inherited  by new instances of this class.
javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory,Gets the default staticSSLSocketFactorythat is  inherited by new instances of this class.
javax.net.ssl.HttpsURLConnection.getHostnameVerifier,Gets theHostnameVerifierin place on this instance.
javax.net.ssl.HttpsURLConnection.getLocalCertificates,Returns the certificate(s) that were sent to the server during  handshaking.
javax.net.ssl.HttpsURLConnection.getLocalPrincipal,Returns the principal that was sent to the server during handshaking.
javax.net.ssl.HttpsURLConnection.getPeerPrincipal,Returns the server's principal which was established as part of  defining the session.
javax.net.ssl.HttpsURLConnection.getServerCertificates,Returns the server's certificate chain which was established  as part of defining the session.
javax.net.ssl.HttpsURLConnection.getSSLSession,Returns anOptionalcontaining theSSLSessionin  use on this connection.
javax.net.ssl.HttpsURLConnection.getSSLSocketFactory,Gets the SSL socket factory to be used when creating sockets  for secure https URL connections.
javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier,Sets the defaultHostnameVerifierinherited by a  new instance of this class.
javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory,Sets the defaultSSLSocketFactoryinherited by new  instances of this class.
javax.net.ssl.HttpsURLConnection.setHostnameVerifier,Sets theHostnameVerifierfor this instance.
javax.net.ssl.HttpsURLConnection.setSSLSocketFactory,Sets theSSLSocketFactoryto be used when this instance  creates sockets for secure https URL connections.
javax.net.ssl.KeyManagerFactory.getAlgorithm,Returns the algorithm name of thisKeyManagerFactoryobject.
javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm,Obtains the default KeyManagerFactory algorithm name.
javax.net.ssl.KeyManagerFactory.getInstance,Returns aKeyManagerFactoryobject that acts as a  factory for key managers.
javax.net.ssl.KeyManagerFactory.getKeyManagers,Returns one key manager for each type of key material.
javax.net.ssl.KeyManagerFactory.getProvider,Returns the provider of thisKeyManagerFactoryobject.
javax.net.ssl.KeyManagerFactory.init,Initializes this factory with a source of key material.
javax.net.ssl.KeyManagerFactory.init,Initializes this factory with a source of provider-specific  key material.
javax.net.ssl.KeyStoreBuilderParameters.getParameters,Return the unmodifiable List of theKeyStore.Builders  encapsulated by this object.
javax.net.ssl.SNIHostName.createSNIMatcher,Creates anSNIMatcherobject forSNIHostNames.
javax.net.ssl.SNIHostName.equals,Compares this server name to the specified object.
javax.net.ssl.SNIHostName.getAsciiName,Returns theStandardCharsets.US_ASCII-compliant hostname of  thisSNIHostNameobject.
javax.net.ssl.SNIHostName.hashCode,Returns a hash code value for thisSNIHostName.
javax.net.ssl.SNIHostName.toString,"Returns a string representation of the object, including the DNS  hostname in thisSNIHostNameobject."
javax.net.ssl.SNIMatcher.getType,Returns the server name type of thisSNIMatcherobject.
javax.net.ssl.SNIMatcher.matches,Attempts to match the givenSNIServerName.
javax.net.ssl.SNIServerName.equals,"Indicates whether some other object is ""equal to"" this server name."
javax.net.ssl.SNIServerName.getEncoded,Returns a copy of the encoded server name value of this server name.
javax.net.ssl.SNIServerName.getType,Returns the name type of this server name.
javax.net.ssl.SNIServerName.hashCode,Returns a hash code value for this server name.
javax.net.ssl.SNIServerName.toString,"Returns a string representation of this server name, including the server  name type and the encoded server name value in thisSNIServerNameobject."
javax.net.ssl.SSLContext.createSSLEngine,Creates a newSSLEngineusing this context.
javax.net.ssl.SSLContext.createSSLEngine,Creates a newSSLEngineusing this context using  advisory peer information.
javax.net.ssl.SSLContext.getClientSessionContext,"Returns the client session context, which represents the set of  SSL sessions available for use during the handshake phase of  client-side SSL sockets."
javax.net.ssl.SSLContext.getDefault,Returns the default SSL context.
javax.net.ssl.SSLContext.getDefaultSSLParameters,Returns a copy of the SSLParameters indicating the default  settings for this SSL context.
javax.net.ssl.SSLContext.getInstance,Returns aSSLContextobject that implements the  specified secure socket protocol.
javax.net.ssl.SSLContext.getProtocol,Returns the protocol name of thisSSLContextobject.
javax.net.ssl.SSLContext.getProvider,Returns the provider of thisSSLContextobject.
javax.net.ssl.SSLContext.getServerSessionContext,"Returns the server session context, which represents the set of  SSL sessions available for use during the handshake phase of  server-side SSL sockets."
javax.net.ssl.SSLContext.getServerSocketFactory,Returns aServerSocketFactoryobject for  this context.
javax.net.ssl.SSLContext.getSocketFactory,Returns aSocketFactoryobject for this  context.
javax.net.ssl.SSLContext.getSupportedSSLParameters,Returns a copy of the SSLParameters indicating the supported  settings for this SSL context.
javax.net.ssl.SSLContext.init,Initializes this context.
javax.net.ssl.SSLContext.setDefault,Sets the default SSL context.
javax.net.ssl.SSLContextSpi.engineCreateSSLEngine,Creates aSSLEngineusing this context.
javax.net.ssl.SSLContextSpi.engineGetClientSessionContext,Returns a clientSSLSessionContextobject for  this context.
javax.net.ssl.SSLContextSpi.engineGetServerSessionContext,Returns a serverSSLSessionContextobject for  this context.
javax.net.ssl.SSLContextSpi.engineGetSupportedSSLParameters,Returns a copy of the SSLParameters indicating the maximum supported  settings for this SSL context.
javax.net.ssl.SSLEngine.beginHandshake,Initiates handshaking (initial or renegotiation) on this SSLEngine.
javax.net.ssl.SSLEngine.closeInbound,Signals that no more inbound network data will be sent  to thisSSLEngine.
javax.net.ssl.SSLEngine.closeOutbound,Signals that no more outbound application data will be sent  on thisSSLEngine.
javax.net.ssl.SSLEngine.getApplicationProtocol,Returns the most recent application protocol value negotiated for this  connection.
javax.net.ssl.SSLEngine.getDelegatedTask,Returns a delegatedRunnabletask for  thisSSLEngine.
javax.net.ssl.SSLEngine.getEnabledCipherSuites,Returns the names of the SSL cipher suites which are currently  enabled for use on this engine.
javax.net.ssl.SSLEngine.getEnabledProtocols,Returns the names of the protocol versions which are currently  enabled for use with thisSSLEngine.
javax.net.ssl.SSLEngine.getEnableSessionCreation,Returns true if new SSL sessions may be established by this engine.
javax.net.ssl.SSLEngine.getHandshakeApplicationProtocol,Returns the application protocol value negotiated on a SSL/TLS  handshake currently in progress.
javax.net.ssl.SSLEngine.getHandshakeApplicationProtocolSelector,Retrieves the callback function that selects an application protocol  value during a SSL/TLS/DTLS handshake.
javax.net.ssl.SSLEngine.getHandshakeSession,Returns theSSLSessionbeing constructed during a SSL/TLS/DTLS  handshake.
javax.net.ssl.SSLEngine.getHandshakeStatus,Returns the current handshake status for thisSSLEngine.
javax.net.ssl.SSLEngine.getNeedClientAuth,Returns true if the engine willrequireclient authentication.
javax.net.ssl.SSLEngine.getPeerHost,Returns the host name of the peer.
javax.net.ssl.SSLEngine.getPeerPort,Returns the port number of the peer.
javax.net.ssl.SSLEngine.getSession,Returns theSSLSessionin use in thisSSLEngine.
javax.net.ssl.SSLEngine.getSSLParameters,Returns the SSLParameters in effect for this SSLEngine.
javax.net.ssl.SSLEngine.getSupportedCipherSuites,Returns the names of the cipher suites which could be enabled for use  on this engine.
javax.net.ssl.SSLEngine.getSupportedProtocols,Returns the names of the protocols which could be enabled for use  with thisSSLEngine.
javax.net.ssl.SSLEngine.getUseClientMode,Returns true if the engine is set to use client mode when  handshaking.
javax.net.ssl.SSLEngine.getWantClientAuth,Returns true if the engine willrequestclient authentication.
javax.net.ssl.SSLEngine.isInboundDone,"Returns whetherunwrap(ByteBuffer, ByteBuffer)will  accept any more inbound data messages."
javax.net.ssl.SSLEngine.isOutboundDone,"Returns whetherwrap(ByteBuffer, ByteBuffer)will  produce any more outbound data messages."
javax.net.ssl.SSLEngine.setEnabledCipherSuites,Sets the cipher suites enabled for use on this engine.
javax.net.ssl.SSLEngine.setEnabledProtocols,Set the protocol versions enabled for use on this engine.
javax.net.ssl.SSLEngine.setEnableSessionCreation,Controls whether new SSL sessions may be established by this engine.
javax.net.ssl.SSLEngine.setHandshakeApplicationProtocolSelector,Registers a callback function that selects an application protocol  value for a SSL/TLS/DTLS handshake.
javax.net.ssl.SSLEngine.setNeedClientAuth,Configures the engine torequireclient authentication.
javax.net.ssl.SSLEngine.setSSLParameters,Applies SSLParameters to this engine.
javax.net.ssl.SSLEngine.setUseClientMode,Configures the engine to use client (or server) mode when  handshaking.
javax.net.ssl.SSLEngine.setWantClientAuth,Configures the engine torequestclient authentication.
javax.net.ssl.SSLEngine.unwrap,Attempts to decode SSL/TLS/DTLS network data into a plaintext  application data buffer.
javax.net.ssl.SSLEngine.unwrap,Attempts to decode SSL/TLS/DTLS network data into a sequence of plaintext  application data buffers.
javax.net.ssl.SSLEngine.unwrap,Attempts to decode SSL/TLS/DTLS network data into a subsequence of  plaintext application data buffers.
javax.net.ssl.SSLEngine.wrap,Attempts to encode plaintext bytes from a subsequence of data  buffers into SSL/TLS/DTLS network data.
javax.net.ssl.SSLEngine.wrap,Attempts to encode plaintext bytes from a sequence of data  buffers into SSL/TLS/DTLS network data.
javax.net.ssl.SSLEngine.wrap,Attempts to encode a buffer of plaintext application data into  SSL/TLS/DTLS network data.
javax.net.ssl.SSLEngineResult.bytesConsumed,Returns the number of bytes consumed from the input buffer.
javax.net.ssl.SSLEngineResult.bytesProduced,Returns the number of bytes written to the output buffer.
javax.net.ssl.SSLEngineResult.getHandshakeStatus,Gets the handshake status of thisSSLEngineoperation.
javax.net.ssl.SSLEngineResult.getStatus,Gets the return value of thisSSLEngineoperation.
javax.net.ssl.SSLEngineResult.sequenceNumber,Returns the sequence number of the produced or consumed SSL/TLS/DTLS  record (optional operation).
javax.net.ssl.SSLEngineResult.toString,Returns a String representation of this object.
javax.net.ssl.SSLParameters.getAlgorithmConstraints,Returns the cryptographic algorithm constraints.
javax.net.ssl.SSLParameters.getApplicationProtocols,Returns a prioritized array of application-layer protocol names that  can be negotiated over the SSL/TLS/DTLS protocols.
javax.net.ssl.SSLParameters.getCipherSuites,Returns a copy of the array of ciphersuites or null if none  have been set.
javax.net.ssl.SSLParameters.getEnableRetransmissions,Returns whether DTLS handshake retransmissions should be enabled.
javax.net.ssl.SSLParameters.getEndpointIdentificationAlgorithm,Gets the endpoint identification algorithm.
javax.net.ssl.SSLParameters.getMaximumPacketSize,Returns the maximum expected network packet size in bytes for  SSL/TLS/DTLS records.
javax.net.ssl.SSLParameters.getNeedClientAuth,Returns whether client authentication should be required.
javax.net.ssl.SSLParameters.getProtocols,Returns a copy of the array of protocols or null if none  have been set.
javax.net.ssl.SSLParameters.getServerNames,"Returns aListcontaining allSNIServerNames of the  Server Name Indication (SNI) parameter, or null if none has been set."
javax.net.ssl.SSLParameters.getSNIMatchers,"Returns aCollectioncontaining allSNIMatchers of the  Server Name Indication (SNI) parameter, or null if none has been set."
javax.net.ssl.SSLParameters.getUseCipherSuitesOrder,Returns whether the local cipher suites preference should be honored.
javax.net.ssl.SSLParameters.getWantClientAuth,Returns whether client authentication should be requested.
javax.net.ssl.SSLParameters.setAlgorithmConstraints,"Sets the cryptographic algorithm constraints, which will be used  in addition to any configured by the runtime environment."
javax.net.ssl.SSLParameters.setApplicationProtocols,Sets the prioritized array of application-layer protocol names that  can be negotiated over the SSL/TLS/DTLS protocols.
javax.net.ssl.SSLParameters.setCipherSuites,Sets the array of ciphersuites.
javax.net.ssl.SSLParameters.setEnableRetransmissions,Sets whether DTLS handshake retransmissions should be enabled.
javax.net.ssl.SSLParameters.setEndpointIdentificationAlgorithm,Sets the endpoint identification algorithm.
javax.net.ssl.SSLParameters.setMaximumPacketSize,Sets the maximum expected network packet size in bytes for  SSL/TLS/DTLS records.
javax.net.ssl.SSLParameters.setNeedClientAuth,Sets whether client authentication should be required.
javax.net.ssl.SSLParameters.setProtocols,Sets the array of protocols.
javax.net.ssl.SSLParameters.setServerNames,Sets the desiredSNIServerNames of the Server Name  Indication (SNI) parameter.
javax.net.ssl.SSLParameters.setSNIMatchers,Sets theSNIMatchers of the Server Name Indication (SNI)  parameter.
javax.net.ssl.SSLParameters.setUseCipherSuitesOrder,Sets whether the local cipher suites preference should be honored.
javax.net.ssl.SSLParameters.setWantClientAuth,Sets whether client authentication should be requested.
javax.net.ssl.SSLServerSocket.getEnabledCipherSuites,Returns the list of cipher suites which are currently enabled  for use by newly accepted connections.
javax.net.ssl.SSLServerSocket.getEnabledProtocols,Returns the names of the protocols which are currently  enabled for use by the newly accepted connections.
javax.net.ssl.SSLServerSocket.getEnableSessionCreation,Returns true if new SSL sessions may be established by the  sockets which are created from this server socket.
javax.net.ssl.SSLServerSocket.getNeedClientAuth,Returns true if client authentication will berequiredon  newlyaccepted server-modeSSLSockets.
javax.net.ssl.SSLServerSocket.getSSLParameters,Returns the SSLParameters in effect for newly accepted connections.
javax.net.ssl.SSLServerSocket.getSupportedCipherSuites,Returns the names of the cipher suites which could be enabled for use  on an SSL connection.
javax.net.ssl.SSLServerSocket.getSupportedProtocols,Returns the names of the protocols which could be enabled for use.
javax.net.ssl.SSLServerSocket.getUseClientMode,Returns true if accepted connections will be in SSL client mode.
javax.net.ssl.SSLServerSocket.getWantClientAuth,Returns true if client authentication will berequestedon  newly accepted server-mode connections.
javax.net.ssl.SSLServerSocket.setEnabledCipherSuites,Sets the cipher suites enabled for use by accepted connections.
javax.net.ssl.SSLServerSocket.setEnabledProtocols,Controls which particular protocols are enabled for use by  accepted connections.
javax.net.ssl.SSLServerSocket.setEnableSessionCreation,Controls whether new SSL sessions may be established by the  sockets which are created from this server socket.
javax.net.ssl.SSLServerSocket.setNeedClientAuth,Controls whetheraccepted server-modeSSLSocketswill be initially configured torequireclient authentication.
javax.net.ssl.SSLServerSocket.setSSLParameters,Applies SSLParameters to newly accepted connections.
javax.net.ssl.SSLServerSocket.setUseClientMode,"Controls whether accepted connections are in the (default) SSL  server mode, or the SSL client mode."
javax.net.ssl.SSLServerSocket.setWantClientAuth,Controls whetheraccepted server-modeSSLSocketswill be initially configured torequestclient authentication.
javax.net.ssl.SSLServerSocketFactory.getDefault,Returns the default SSL server socket factory.
javax.net.ssl.SSLServerSocketFactory.getDefaultCipherSuites,Returns the list of cipher suites which are enabled by default.
javax.net.ssl.SSLServerSocketFactory.getSupportedCipherSuites,Returns the names of the cipher suites which could be enabled for use  on an SSL connection created by this factory.
javax.net.ssl.SSLSessionBindingEvent.getName,"Returns the name to which the object is being bound, or the name  from which the object is being unbound."
javax.net.ssl.SSLSessionBindingEvent.getSession,Returns the SSLSession into which the listener is being bound or  from which the listener is being unbound.
javax.net.ssl.SSLSocket.addHandshakeCompletedListener,Registers an event listener to receive notifications that an  SSL handshake has completed on this connection.
javax.net.ssl.SSLSocket.getEnabledCipherSuites,Returns the names of the SSL cipher suites which are currently  enabled for use on this connection.
javax.net.ssl.SSLSocket.getEnabledProtocols,Returns the names of the protocol versions which are currently  enabled for use on this connection.
javax.net.ssl.SSLSocket.getEnableSessionCreation,Returns true if new SSL sessions may be established by this socket.
javax.net.ssl.SSLSocket.getHandshakeSession,Returns theSSLSessionbeing constructed during a SSL/TLS  handshake.
javax.net.ssl.SSLSocket.getNeedClientAuth,Returns true if the socket willrequireclient authentication.
javax.net.ssl.SSLSocket.getSession,Returns the SSL Session in use by this connection.
javax.net.ssl.SSLSocket.getSSLParameters,Returns the SSLParameters in effect for this SSLSocket.
javax.net.ssl.SSLSocket.getSupportedCipherSuites,Returns the names of the cipher suites which could be enabled for use  on this connection.
javax.net.ssl.SSLSocket.getSupportedProtocols,Returns the names of the protocols which could be enabled for use  on an SSL connection.
javax.net.ssl.SSLSocket.getUseClientMode,Returns true if the socket is set to use client mode when  handshaking.
javax.net.ssl.SSLSocket.getWantClientAuth,Returns true if the socket willrequestclient authentication.
javax.net.ssl.SSLSocket.removeHandshakeCompletedListener,Removes a previously registered handshake completion listener.
javax.net.ssl.SSLSocket.setEnabledCipherSuites,Sets the cipher suites enabled for use on this connection.
javax.net.ssl.SSLSocket.setEnabledProtocols,Sets the protocol versions enabled for use on this connection.
javax.net.ssl.SSLSocket.setEnableSessionCreation,Controls whether new SSL sessions may be established by this socket.
javax.net.ssl.SSLSocket.setNeedClientAuth,Configures the socket torequireclient authentication.
javax.net.ssl.SSLSocket.setSSLParameters,Applies SSLParameters to this socket.
javax.net.ssl.SSLSocket.setUseClientMode,Configures the socket to use client (or server) mode when  handshaking.
javax.net.ssl.SSLSocket.setWantClientAuth,Configures the socket torequestclient authentication.
javax.net.ssl.SSLSocket.startHandshake,Starts an SSL handshake on this connection.
javax.net.ssl.SSLSocketFactory.createSocket,"Creates a server modeSocketlayered over an  existing connected socket, and is able to read data which has  already been consumed/removed from theSocket's  underlyingInputStream."
javax.net.ssl.SSLSocketFactory.createSocket,"Returns a socket layered over an existing socket connected to the named  host, at the given port."
javax.net.ssl.SSLSocketFactory.getDefault,Returns the default SSL socket factory.
javax.net.ssl.TrustManagerFactory.getAlgorithm,Returns the algorithm name of thisTrustManagerFactoryobject.
javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm,Obtains the default TrustManagerFactory algorithm name.
javax.net.ssl.TrustManagerFactory.getInstance,Returns aTrustManagerFactoryobject that acts as a  factory for trust managers.
javax.net.ssl.TrustManagerFactory.getProvider,Returns the provider of thisTrustManagerFactoryobject.
javax.net.ssl.TrustManagerFactory.getTrustManagers,Returns one trust manager for each type of trust material.
javax.net.ssl.TrustManagerFactory.init,Initializes this factory with a source of certificate  authorities and related trust material.
javax.net.ssl.TrustManagerFactory.init,Initializes this factory with a source of provider-specific  trust material.
javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias,Choose an alias to authenticate the client side of anSSLEngineconnection given the public key type  and the list of certificate issuer authorities recognized by  the peer (if any).
javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias,Choose an alias to authenticate the server side of anSSLEngineconnection given the public key type  and the list of certificate issuer authorities recognized by  the peer (if any).
javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted,"Given the partial or complete certificate chain provided by the  peer, build and validate the certificate path based on the  authentication type and ssl parameters."
javax.security.auth.PrivateCredentialPermission.equals,Checks twoPrivateCredentialPermissionobjects for  equality.
javax.security.auth.PrivateCredentialPermission.getCredentialClass,Returns the Class name of the Credential associated with thisPrivateCredentialPermission.
javax.security.auth.PrivateCredentialPermission.getPrincipals,Returns thePrincipalclasses and names  associated with thisPrivateCredentialPermission.
javax.security.auth.PrivateCredentialPermission.implies,Checks if thisPrivateCredentialPermissionimplies  the specifiedPermission.
javax.security.auth.PrivateCredentialPermission.newPermissionCollection,Return a homogeneous collection of PrivateCredentialPermissions  in aPermissionCollection.
javax.security.auth.Subject.doAs,Perform work as a particularSubject.
javax.security.auth.Subject.equals,Compares the specified Object with thisSubjectfor equality.
javax.security.auth.Subject.getPrincipals,Return theSetof Principals associated with thisSubject.
javax.security.auth.Subject.getPrincipals,Return aSetof Principals associated with thisSubjectthat are instances or subclasses of the specifiedClass.
javax.security.auth.Subject.getPrivateCredentials,Return theSetof private credentials held by thisSubject.
javax.security.auth.Subject.getPrivateCredentials,Return aSetof private credentials associated with thisSubjectthat are instances or subclasses of the specifiedClass.
javax.security.auth.Subject.getPublicCredentials,Return theSetof public credentials held by thisSubject.
javax.security.auth.Subject.getPublicCredentials,Return aSetof public credentials associated with thisSubjectthat are instances or subclasses of the specifiedClass.
javax.security.auth.Subject.getSubject,"Deprecated, for removal: This API element is subject to removal in a future version.This method depends onAccessControlContextwhich, in conjunction withthe Security Manager, is deprecated        and subject to removal in a future release."
javax.security.auth.Subject.hashCode,Returns a hashcode for thisSubject.
javax.security.auth.Subject.isReadOnly,Query whether thisSubjectis read-only.
javax.security.auth.Subject.setReadOnly,Set thisSubjectto be read-only.
javax.security.auth.Subject.toString,Return the String representation of thisSubject.
javax.security.auth.callback.ChoiceCallback.allowMultipleSelections,Get the boolean determining whether multiple selections from  thechoiceslist are allowed.
javax.security.auth.callback.ChoiceCallback.getChoices,Get the list of choices.
javax.security.auth.callback.ChoiceCallback.getDefaultChoice,Get the defaultChoice.
javax.security.auth.callback.ChoiceCallback.getPrompt,Get the prompt.
javax.security.auth.callback.ChoiceCallback.getSelectedIndexes,Get the selected choices.
javax.security.auth.callback.ChoiceCallback.setSelectedIndex,Set the selected choice.
javax.security.auth.callback.ChoiceCallback.setSelectedIndexes,Set the selected choices.
javax.security.auth.callback.ConfirmationCallback.getDefaultOption,Get the default option.
javax.security.auth.callback.ConfirmationCallback.getMessageType,Get the message type.
javax.security.auth.callback.ConfirmationCallback.getOptions,Get the confirmation options.
javax.security.auth.callback.ConfirmationCallback.getOptionType,Get the option type.
javax.security.auth.callback.ConfirmationCallback.getSelectedIndex,Get the selected confirmation option.
javax.security.auth.callback.ConfirmationCallback.setSelectedIndex,Set the selected confirmation option.
javax.security.auth.callback.LanguageCallback.getLocale,Get the retrievedLocale.
javax.security.auth.callback.LanguageCallback.setLocale,Set the retrievedLocale.
javax.security.auth.callback.NameCallback.getDefaultName,Get the default name.
javax.security.auth.callback.NameCallback.getName,Get the retrieved name.
javax.security.auth.callback.NameCallback.setName,Set the retrieved name.
javax.security.auth.callback.PasswordCallback.clearPassword,Clear the retrieved password.
javax.security.auth.callback.PasswordCallback.getPassword,Get the retrieved password.
javax.security.auth.callback.PasswordCallback.isEchoOn,Return whether the password  should be displayed as it is being typed.
javax.security.auth.callback.PasswordCallback.setPassword,Set the retrieved password.
javax.security.auth.callback.TextInputCallback.getDefaultText,Get the default text.
javax.security.auth.callback.TextInputCallback.getText,Get the retrieved text.
javax.security.auth.callback.TextInputCallback.setText,Set the retrieved text.
javax.security.auth.callback.TextOutputCallback.getMessage,Get the message to be displayed.
javax.security.auth.callback.UnsupportedCallbackException.getCallback,Get the unrecognizedCallback.
javax.security.auth.login.AppConfigurationEntry.getControlFlag,"Return the controlFlag  (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)  for thisLoginModule."
javax.security.auth.login.AppConfigurationEntry.getLoginModuleName,Get the class name of the configuredLoginModule.
javax.security.auth.login.AppConfigurationEntry.getOptions,Get the options configured for thisLoginModule.
javax.security.auth.login.AppConfigurationEntry.toString,Return a String representation of this controlFlag.
javax.security.auth.login.Configuration.getAppConfigurationEntry,Retrieve the AppConfigurationEntries for the specifiednamefrom this Configuration.
javax.security.auth.login.Configuration.getConfiguration,Get the installed login Configuration.
javax.security.auth.login.Configuration.getInstance,Returns a Configuration object of the specified type.
javax.security.auth.login.Configuration.getParameters,Return Configuration parameters.
javax.security.auth.login.Configuration.getProvider,Return the Provider of this Configuration.
javax.security.auth.login.Configuration.getType,Return the type of this Configuration.
javax.security.auth.login.Configuration.refresh,Refresh and reload the Configuration.
javax.security.auth.login.Configuration.setConfiguration,Set the loginConfiguration.
javax.security.auth.login.ConfigurationSpi.engineGetAppConfigurationEntry,Retrieve the AppConfigurationEntries for the specifiedname.
javax.security.auth.login.LoginContext.getSubject,Return the authenticated Subject.
javax.security.auth.login.LoginContext.login,Perform the authentication.
javax.security.auth.login.LoginContext.logout,Logout theSubject.
javax.security.auth.x500.X500Principal.equals,Compares the specifiedObjectwith thisX500Principalfor equality.
javax.security.auth.x500.X500Principal.getEncoded,Returns the distinguished name in ASN.1 DER encoded form.
javax.security.auth.x500.X500Principal.getName,Returns a string representation of the X.500 distinguished name using  the format defined in RFC 2253.
javax.security.auth.x500.X500Principal.getName,Returns a string representation of the X.500 distinguished name  using the specified format.
javax.security.auth.x500.X500Principal.hashCode,Return a hash code for thisX500Principal.
javax.security.auth.x500.X500Principal.toString,Return a user-friendly string representation of thisX500Principal.
javax.security.auth.x500.X500PrivateCredential.destroy,"Clears the references to the X.509 certificate, private key and the  KeyStore alias in this object."
javax.security.auth.x500.X500PrivateCredential.getAlias,Returns the KeyStore alias.
javax.security.auth.x500.X500PrivateCredential.getCertificate,Returns the X.509 certificate.
javax.security.auth.x500.X500PrivateCredential.getPrivateKey,Returns the PrivateKey.
javax.security.auth.x500.X500PrivateCredential.isDestroyed,Determines if the references to the X.509 certificate and private key  in this object have been cleared.
javax.annotation.processing.AbstractProcessor.getCompletions,Returns an empty iterable of completions.
javax.annotation.processing.AbstractProcessor.getSupportedAnnotationTypes,"If the processor class is annotated withSupportedAnnotationTypes, return an unmodifiable set with the  same set of strings as the annotation."
javax.annotation.processing.AbstractProcessor.getSupportedOptions,"If the processor class is annotated withSupportedOptions, return an unmodifiable set with the same set  of strings as the annotation."
javax.annotation.processing.AbstractProcessor.getSupportedSourceVersion,"If the processor class is annotated withSupportedSourceVersion, return the source version in the  annotation."
javax.annotation.processing.AbstractProcessor.init,Initializes the processor with the processing environment by  setting theprocessingEnvfield to the value of theprocessingEnvargument.
javax.annotation.processing.AbstractProcessor.isInitialized,"Returnstrueif this object has beeninitialized,falseotherwise."
javax.annotation.processing.Completions.of,Returns a completion of the value and an empty message.
javax.annotation.processing.Completions.of,Returns a completion of the value and message.
javax.lang.model.element.UnknownAnnotationValueException.getArgument,Returns the additional argument.
javax.lang.model.element.UnknownAnnotationValueException.getUnknownAnnotationValue,Returns the unknown annotation value.
javax.lang.model.element.UnknownDirectiveException.getUnknownDirective,Returns the unknown directive.
javax.lang.model.element.UnknownElementException.getUnknownElement,Returns the unknown element.
javax.lang.model.type.MirroredTypeException.getTypeMirror,Returns the type mirror corresponding to the type being accessed.
javax.lang.model.type.MirroredTypesException.getTypeMirrors,Returns the type mirrors corresponding to the types being accessed.
javax.lang.model.type.UnknownTypeException.getUnknownType,Returns the unknown type.
javax.lang.model.util.AbstractAnnotationValueVisitor6.visit,Visits an annotation value as if by passing itself to that  value'sacceptmethod passingnullfor the additional parameter.
javax.lang.model.util.AbstractAnnotationValueVisitor6.visit,Visits any annotation value as if by passing itself to that  value'saccept.
javax.lang.model.util.AbstractAnnotationValueVisitor6.visitUnknown,Visits an unknown kind of annotation value.
javax.lang.model.util.AbstractElementVisitor14.visitRecordComponent,Visits a record component element.
javax.lang.model.util.AbstractElementVisitor6.visit,Visits any program element as if by passing itself to that  element'sacceptmethod and passingnullfor the additional parameter.
javax.lang.model.util.AbstractElementVisitor6.visit,Visits any program element as if by passing itself to that  element'sacceptmethod.
javax.lang.model.util.AbstractElementVisitor6.visitModule,Visits a module element.
javax.lang.model.util.AbstractElementVisitor6.visitUnknown,Visits an unknown kind of element.
javax.lang.model.util.AbstractTypeVisitor6.visit,Visits any type mirror as if by passing itself to that type  mirror'sacceptmethod and passingnullfor the additional parameter.
javax.lang.model.util.AbstractTypeVisitor6.visit,Visits any type mirror as if by passing itself to that type  mirror'sacceptmethod.
javax.lang.model.util.AbstractTypeVisitor6.visitIntersection,Visits an intersection type.
javax.lang.model.util.AbstractTypeVisitor6.visitUnion,Visits a union type.
javax.lang.model.util.AbstractTypeVisitor6.visitUnknown,Visits an unknown kind of type.
javax.lang.model.util.AbstractTypeVisitor7.visitUnion,Visits aUnionTypein a manner defined by a subclass.
javax.lang.model.util.AbstractTypeVisitor8.visitIntersection,Visits anIntersectionTypein a manner defined by a subclass.
javax.lang.model.util.ElementFilter.constructorsIn,Returns a list of constructors inelements.
javax.lang.model.util.ElementFilter.constructorsIn,Returns a set of constructors inelements.
javax.lang.model.util.ElementFilter.exportsIn,Returns a list ofexportsdirectives indirectives.
javax.lang.model.util.ElementFilter.fieldsIn,Returns a list of fields inelements.
javax.lang.model.util.ElementFilter.fieldsIn,Returns a set of fields inelements.
javax.lang.model.util.ElementFilter.methodsIn,Returns a list of methods inelements.
javax.lang.model.util.ElementFilter.methodsIn,Returns a set of methods inelements.
javax.lang.model.util.ElementFilter.modulesIn,Returns a list of modules inelements.
javax.lang.model.util.ElementFilter.modulesIn,Returns a set of modules inelements.
javax.lang.model.util.ElementFilter.opensIn,Returns a list ofopensdirectives indirectives.
javax.lang.model.util.ElementFilter.packagesIn,Returns a list of packages inelements.
javax.lang.model.util.ElementFilter.packagesIn,Returns a set of packages inelements.
javax.lang.model.util.ElementFilter.providesIn,Returns a list ofprovidesdirectives indirectives.
javax.lang.model.util.ElementFilter.recordComponentsIn,Returns a list of record components inelements.
javax.lang.model.util.ElementFilter.recordComponentsIn,Returns a set of record components inelements.
javax.lang.model.util.ElementFilter.requiresIn,Returns a list ofrequiresdirectives indirectives.
javax.lang.model.util.ElementFilter.typesIn,Returns a list of classes and interfaces inelements.
javax.lang.model.util.ElementFilter.typesIn,Returns a set of types inelements.
javax.lang.model.util.ElementFilter.usesIn,Returns a list ofusesdirectives indirectives.
javax.lang.model.util.ElementKindVisitor14.visitTypeAsRecord,Visits aRECORDtype element.
javax.lang.model.util.ElementKindVisitor14.visitVariableAsBindingVariable,Visits aBINDING_VARIABLEvariable element.
javax.lang.model.util.ElementKindVisitor6.visitExecutable,Visits an executable element.
javax.lang.model.util.ElementKindVisitor6.visitExecutableAsConstructor,Visits aCONSTRUCTORexecutable element.
javax.lang.model.util.ElementKindVisitor6.visitExecutableAsInstanceInit,Visits anINSTANCE_INITexecutable element.
javax.lang.model.util.ElementKindVisitor6.visitExecutableAsMethod,Visits aMETHODexecutable element.
javax.lang.model.util.ElementKindVisitor6.visitExecutableAsStaticInit,Visits aSTATIC_INITexecutable element.
javax.lang.model.util.ElementKindVisitor6.visitPackage,Visits a package element.
javax.lang.model.util.ElementKindVisitor6.visitType,Visits a type element.
javax.lang.model.util.ElementKindVisitor6.visitTypeAsAnnotationType,Visits anANNOTATION_TYPEtype element.
javax.lang.model.util.ElementKindVisitor6.visitTypeAsClass,Visits aCLASStype element.
javax.lang.model.util.ElementKindVisitor6.visitTypeAsEnum,Visits anENUMtype element.
javax.lang.model.util.ElementKindVisitor6.visitTypeAsInterface,Visits anINTERFACEtype element.
javax.lang.model.util.ElementKindVisitor6.visitTypeParameter,Visits a type parameter element.
javax.lang.model.util.ElementKindVisitor6.visitVariable,Visits a variable element
javax.lang.model.util.ElementKindVisitor6.visitVariableAsEnumConstant,Visits anENUM_CONSTANTvariable element.
javax.lang.model.util.ElementKindVisitor6.visitVariableAsExceptionParameter,Visits anEXCEPTION_PARAMETERvariable element.
javax.lang.model.util.ElementKindVisitor6.visitVariableAsField,Visits aFIELDvariable element.
javax.lang.model.util.ElementKindVisitor6.visitVariableAsLocalVariable,Visits aLOCAL_VARIABLEvariable element.
javax.lang.model.util.ElementKindVisitor6.visitVariableAsParameter,Visits aPARAMETERvariable element.
javax.lang.model.util.ElementKindVisitor6.visitVariableAsResourceVariable,Visits aRESOURCE_VARIABLEvariable element.
javax.lang.model.util.ElementScanner6.scan,"Iterates over the given elements and callsscan(Element, P)on each one."
javax.lang.model.util.ElementScanner6.scan,"Convenience method equivalent tov.scan(e, null)."
javax.lang.model.util.ElementScanner6.scan,"Processes an element by callinge.accept(this, p);  this method may be overridden by subclasses."
javax.lang.model.util.ElementScanner6.visitVariable,Visits a variable element.
javax.lang.model.util.SimpleAnnotationValueVisitor6.defaultAction,The default action for visit methods.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitAnnotation,Visits an annotation value in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitArray,Visits an array value in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitBoolean,Visits abooleanvalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitByte,Visits abytevalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitChar,Visits acharvalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitDouble,Visits adoublevalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitEnumConstant,Visits anenumvalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitFloat,Visits afloatvalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitInt,Visits anintvalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitLong,Visits alongvalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitShort,Visits ashortvalue in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitString,Visits a string value in an annotation.
javax.lang.model.util.SimpleAnnotationValueVisitor6.visitType,Visits a type value in an annotation.
javax.lang.model.util.SimpleTypeVisitor6.visitArray,Visits an array type.
javax.lang.model.util.SimpleTypeVisitor6.visitDeclared,Visits a declared type.
javax.lang.model.util.SimpleTypeVisitor6.visitError,Visits an error type.
javax.lang.model.util.SimpleTypeVisitor6.visitExecutable,Visits an executable type.
javax.lang.model.util.SimpleTypeVisitor6.visitNoType,Visits aNoTypeinstance.
javax.lang.model.util.SimpleTypeVisitor6.visitNull,Visits the null type.
javax.lang.model.util.SimpleTypeVisitor6.visitPrimitive,Visits a primitive type.
javax.lang.model.util.SimpleTypeVisitor6.visitTypeVariable,Visits a type variable.
javax.lang.model.util.SimpleTypeVisitor6.visitWildcard,Visits a wildcard type.
javax.lang.model.util.TypeKindVisitor6.visitNoTypeAsModule,Visits aMODULEpseudo-type.
javax.lang.model.util.TypeKindVisitor6.visitNoTypeAsNone,Visits aNONEpseudo-type.
javax.lang.model.util.TypeKindVisitor6.visitNoTypeAsPackage,Visits aPACKAGEpseudo-type.
javax.lang.model.util.TypeKindVisitor6.visitNoTypeAsVoid,Visits aVOIDpseudo-type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsBoolean,Visits aBOOLEANprimitive type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsByte,Visits aBYTEprimitive type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsChar,Visits aCHARprimitive type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsDouble,Visits aDOUBLEprimitive type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsFloat,Visits aFLOATprimitive type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsInt,Visits anINTprimitive type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsLong,Visits aLONGprimitive type.
javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsShort,Visits aSHORTprimitive type.
javax.tools.DiagnosticCollector.getDiagnostics,Returns a list view of diagnostics collected by this object.
javax.tools.DiagnosticCollector.report,Invoked when a problem is found.
javax.tools.ForwardingFileObject.delete,Deletes this file object.
javax.tools.ForwardingFileObject.getCharContent,"Returns the character content of this file object, if available."
javax.tools.ForwardingFileObject.getLastModified,Returns the time this file object was last modified.
javax.tools.ForwardingFileObject.getName,Returns a user-friendly name for this file object.
javax.tools.ForwardingFileObject.openInputStream,Returns an InputStream for this file object.
javax.tools.ForwardingFileObject.openOutputStream,Returns an OutputStream for this file object.
javax.tools.ForwardingFileObject.openReader,Returns a reader for this object.
javax.tools.ForwardingFileObject.openWriter,Returns a Writer for this file object.
javax.tools.ForwardingFileObject.toUri,Returns a URI identifying this file object.
javax.tools.ForwardingJavaFileManager.close,Releases any resources opened by this file manager directly or  indirectly.
javax.tools.ForwardingJavaFileManager.contains,"Determines whether or not a given file object is ""contained in"" a specified location."
javax.tools.ForwardingJavaFileManager.flush,Flushes any resources opened for output by this file manager  directly or indirectly.
javax.tools.ForwardingJavaFileManager.getClassLoader,Returns a class loader for loading plug-ins from the given  package-oriented location.
javax.tools.ForwardingJavaFileManager.getFileForInput,Returns afile objectfor input  representing the specifiedrelative  namein the specified package in the given package-oriented location.
javax.tools.ForwardingJavaFileManager.getFileForOutput,Returns afile objectfor output  representing the specifiedrelative  namein the specified package in the given location.
javax.tools.ForwardingJavaFileManager.getJavaFileForInput,Returns afile objectfor input  representing the specified class of the specified kind in the  given package-oriented location.
javax.tools.ForwardingJavaFileManager.getJavaFileForOutput,Returns afile objectfor output  representing the specified class of the specified kind in the  given package-oriented location.
javax.tools.ForwardingJavaFileManager.getLocationForModule,"Gets a location for a named module within a location, which may be either  a module-oriented location or an output location."
javax.tools.ForwardingJavaFileManager.getLocationForModule,"Gets a location for the module containing a specific file  to be found within a location, which may be either  a module-oriented location or an output location."
javax.tools.ForwardingJavaFileManager.getServiceLoader,Get a service loader for a specific service class from a given location.
javax.tools.ForwardingJavaFileManager.handleOption,Handles one option.
javax.tools.ForwardingJavaFileManager.hasLocation,Determines if a location is known to this file manager.
javax.tools.ForwardingJavaFileManager.inferBinaryName,Infers a binary name of a file object based on a package-oriented location.
javax.tools.ForwardingJavaFileManager.inferModuleName,"Infer the name of the module from its location, as returned bygetLocationForModuleorlistModuleLocations."
javax.tools.ForwardingJavaFileManager.isSameFile,Compares two file objects and return true if they represent the  same underlying object.
javax.tools.ForwardingJavaFileManager.isSupportedOption,"Determines if the given option is supported and if so, the  number of arguments the option takes."
javax.tools.ForwardingJavaFileManager.list,Lists all file objects matching the given criteria in the given  package-oriented location.
javax.tools.ForwardingJavaFileManager.listLocationsForModules,Lists the locations for all the modules in a module-oriented location or an output location.
javax.tools.ForwardingJavaFileObject.getAccessLevel,Provides a hint about the access level of the class represented  by this file object.
javax.tools.ForwardingJavaFileObject.getKind,Returns the kind of this file object.
javax.tools.ForwardingJavaFileObject.getNestingKind,Provides a hint about the nesting level of the class  represented by this file object.
javax.tools.ForwardingJavaFileObject.isNameCompatible,Checks if this file object is compatible with the specified  simple name and kind.
javax.tools.SimpleJavaFileObject.delete,This implementation does nothing.
javax.tools.SimpleJavaFileObject.getAccessLevel,This implementation returnsnull.
javax.tools.SimpleJavaFileObject.getCharContent,This implementation always throwsUnsupportedOperationException.
javax.tools.SimpleJavaFileObject.getLastModified,This implementation returns0L.
javax.tools.SimpleJavaFileObject.isNameCompatible,This implementation compares the path of its URI to the given  simple name.
javax.tools.SimpleJavaFileObject.openReader,Wraps the result ofgetCharContent(boolean)in a Reader.
javax.tools.SimpleJavaFileObject.openWriter,Wraps the result of openOutputStream in a Writer.
javax.tools.ToolProvider.getSystemDocumentationTool,Returns the Java programming language documentation tool provided  with this platform.
javax.tools.ToolProvider.getSystemJavaCompiler,Returns the Java programming language compiler provided  with this platform.
javax.tools.ToolProvider.getSystemToolClassLoader,Deprecated.This method is subject to removal in a future version of  Java SE.
java.awt.datatransfer.Clipboard.addFlavorListener,Registers the specifiedFlavorListenerto receiveFlavorEvents from this clipboard.
java.awt.datatransfer.Clipboard.getAvailableDataFlavors,Returns an array ofDataFlavors in which the current contents of  this clipboard can be provided.
java.awt.datatransfer.Clipboard.getContents,Returns a transferable object representing the current contents of the  clipboard.
java.awt.datatransfer.Clipboard.getData,Returns an object representing the current contents of this clipboard in  the specifiedDataFlavor.
java.awt.datatransfer.Clipboard.getFlavorListeners,Returns an array of all theFlavorListeners currently registered  on thisClipboard.
java.awt.datatransfer.Clipboard.getName,Returns the name of this clipboard object.
java.awt.datatransfer.Clipboard.isDataFlavorAvailable,Returns whether or not the current contents of this clipboard can be  provided in the specifiedDataFlavor.
java.awt.datatransfer.Clipboard.removeFlavorListener,Removes the specifiedFlavorListenerso that it no longer  receivesFlavorEvents from thisClipboard.
java.awt.datatransfer.Clipboard.setContents,Sets the current contents of the clipboard to the specified transferable  object and registers the specified clipboard owner as the owner of the  new contents.
java.awt.datatransfer.DataFlavor.clone,Returns a clone of thisDataFlavor.
java.awt.datatransfer.DataFlavor.equals,This method has the same behavior asequals(Object).
java.awt.datatransfer.DataFlavor.equals,"Deprecated.As inconsistent withhashCode()contract, useisMimeTypeEqual(String)instead."
java.awt.datatransfer.DataFlavor.getDefaultRepresentationClass,Returns the default representation class.
java.awt.datatransfer.DataFlavor.getDefaultRepresentationClassAsString,Returns the name of the default representation class.
java.awt.datatransfer.DataFlavor.getHumanPresentableName,Returns the human presentable name for the data format that thisDataFlavorrepresents.
java.awt.datatransfer.DataFlavor.getMimeType,Returns the MIME type string for thisDataFlavor.
java.awt.datatransfer.DataFlavor.getParameter,"Returns the human presentable name for thisDataFlavorifparamNameequals ""humanPresentableName""."
java.awt.datatransfer.DataFlavor.getPrimaryType,Returns the primary MIME type for thisDataFlavor.
java.awt.datatransfer.DataFlavor.getReaderForText,"Gets a Reader for a text flavor, decoded, if necessary, for the expected  charset (encoding)."
java.awt.datatransfer.DataFlavor.getRepresentationClass,Returns theClasswhich objects supporting thisDataFlavorwill return when thisDataFlavoris requested.
java.awt.datatransfer.DataFlavor.getSubType,Returns the sub MIME type of thisDataFlavor.
java.awt.datatransfer.DataFlavor.getTextPlainUnicodeFlavor,"Returns aDataFlavorrepresenting plain text with Unicode  encoding, where:"
java.awt.datatransfer.DataFlavor.hashCode,Returns hash code for thisDataFlavor.
java.awt.datatransfer.DataFlavor.isFlavorJavaFileListType,Returnstrueif theDataFlavorspecified represents a  list of file objects.
java.awt.datatransfer.DataFlavor.isFlavorRemoteObjectType,Returnstrueif theDataFlavorspecified represents a  remote object.
java.awt.datatransfer.DataFlavor.isFlavorSerializedObjectType,Returnstrueif theDataFlavorspecified represents a  serialized object.
java.awt.datatransfer.DataFlavor.isFlavorTextType,Returns whether thisDataFlavoris a valid text flavor for this  implementation of the Java platform.
java.awt.datatransfer.DataFlavor.isMimeTypeEqual,Compares themimeTypeof twoDataFlavorobjects.
java.awt.datatransfer.DataFlavor.isMimeTypeEqual,Returns whether the string representation of the MIME type passed in is  equivalent to the MIME type of thisDataFlavor.
java.awt.datatransfer.DataFlavor.isMimeTypeSerializedObject,Does theDataFlavorrepresent a serialized object?
java.awt.datatransfer.DataFlavor.isRepresentationClassByteBuffer,Returns whether the representation class for thisDataFlavorisjava.nio.ByteBufferor a subclass thereof.
java.awt.datatransfer.DataFlavor.isRepresentationClassCharBuffer,Returns whether the representation class for thisDataFlavorisjava.nio.CharBufferor a subclass thereof.
java.awt.datatransfer.DataFlavor.isRepresentationClassInputStream,Does theDataFlavorrepresent ajava.io.InputStream?
java.awt.datatransfer.DataFlavor.isRepresentationClassReader,Returns whether the representation class for thisDataFlavorisjava.io.Readeror a subclass thereof.
java.awt.datatransfer.DataFlavor.isRepresentationClassRemote,Returnstrueif the representation class isRemote.
java.awt.datatransfer.DataFlavor.isRepresentationClassSerializable,Returnstrueif the representation class can be serialized.
java.awt.datatransfer.DataFlavor.match,Identical toequals(DataFlavor).
java.awt.datatransfer.DataFlavor.normalizeMimeType,Deprecated.This method is never invoked by this implementation from 1.1              onwards
java.awt.datatransfer.DataFlavor.readExternal,Restores thisDataFlavorfrom a Serialized state.
java.awt.datatransfer.DataFlavor.selectBestTextFlavor,Selects the best textDataFlavorfrom an array ofDataFlavors.
java.awt.datatransfer.DataFlavor.setHumanPresentableName,Sets the human presentable name for the data format that thisDataFlavorrepresents.
java.awt.datatransfer.DataFlavor.toString,String representation of thisDataFlavorand its parameters.
java.awt.datatransfer.DataFlavor.tryToLoadClass,"Tries to load a class from: the bootstrap loader, the system loader, the  context loader (if one is present) and finally the loader specified."
java.awt.datatransfer.DataFlavor.writeExternal,Serializes thisDataFlavor.
java.awt.datatransfer.StringSelection.getTransferData,Returns theTransferable's data in the requestedDataFlavorif possible.
java.awt.datatransfer.StringSelection.getTransferDataFlavors,Returns an array of flavors in which thisTransferablecan  provide the data.
java.awt.datatransfer.StringSelection.isDataFlavorSupported,Returns whether the requested flavor is supported by thisTransferable.
java.awt.datatransfer.StringSelection.lostOwnership,Notifies this object that it is no longer the clipboard owner.
java.awt.datatransfer.SystemFlavorMap.addFlavorForUnencodedNative,Adds a mapping from a singleStringnative to a singleDataFlavor.
java.awt.datatransfer.SystemFlavorMap.addUnencodedNativeForFlavor,Adds a mapping from the specifiedDataFlavor(and allDataFlavors equal to the specifiedDataFlavor) to the  specifiedStringnative.
java.awt.datatransfer.SystemFlavorMap.decodeDataFlavor,Decodes aStringnative for use as aDataFlavor.
java.awt.datatransfer.SystemFlavorMap.decodeJavaMIMEType,Decodes aStringnative for use as a Java MIME type.
java.awt.datatransfer.SystemFlavorMap.encodeDataFlavor,Encodes aDataFlavorfor use as aStringnative.
java.awt.datatransfer.SystemFlavorMap.encodeJavaMIMEType,Encodes a MIME type for use as aStringnative.
java.awt.datatransfer.SystemFlavorMap.getDefaultFlavorMap,Returns the default FlavorMap for this thread's ClassLoader.
java.awt.datatransfer.SystemFlavorMap.getFlavorsForNative,Returns aListofDataFlavors to which the specifiedStringnative can be translated by the data transfer subsystem.
java.awt.datatransfer.SystemFlavorMap.getFlavorsForNatives,Returns aMapof the specifiedStringnatives to their  most preferredDataFlavor.
java.awt.datatransfer.SystemFlavorMap.getNativesForFlavor,Returns aListofStringnatives to which the specifiedDataFlavorcan be translated by the data transfer subsystem.
java.awt.datatransfer.SystemFlavorMap.getNativesForFlavors,Returns aMapof the specifiedDataFlavors to their most  preferredStringnative.
java.awt.datatransfer.SystemFlavorMap.isJavaMIMEType,Returns whether the specifiedStringis an encoded Java MIME  type.
java.awt.datatransfer.SystemFlavorMap.setFlavorsForNative,"Discards the current mappings for the specifiedStringnative,  and creates new mappings to the specifiedDataFlavors."
java.awt.datatransfer.SystemFlavorMap.setNativesForFlavor,"Discards the current mappings for the specifiedDataFlavorand  allDataFlavors equal to the specifiedDataFlavor, and  creates new mappings to the specifiedStringnatives."
java.applet.Applet.getAccessibleRole,Get the role of this object.
java.applet.Applet.getAccessibleStateSet,Get the state of this object.
java.awt.AlphaComposite.createContext,Creates a context for the compositing operation.
java.awt.AlphaComposite.derive,Returns a similarAlphaCompositeobject that uses  the specified alpha value.
java.awt.AlphaComposite.derive,Returns a similarAlphaCompositeobject that uses  the specified compositing rule.
java.awt.AlphaComposite.equals,Determines whether the specified object is equal to thisAlphaComposite.
java.awt.AlphaComposite.getAlpha,Returns the alpha value of thisAlphaComposite.
java.awt.AlphaComposite.getInstance,Creates anAlphaCompositeobject with the specified rule.
java.awt.AlphaComposite.getInstance,Creates anAlphaCompositeobject with the specified rule and  the constant alpha to multiply with the alpha of the source.
java.awt.AlphaComposite.getRule,Returns the compositing rule of thisAlphaComposite.
java.awt.AlphaComposite.hashCode,Returns the hashcode for this composite.
java.awt.AWTEvent.consume,"Consumes this event, if this event can be consumed."
java.awt.AWTEvent.getID,Returns the event type.
java.awt.AWTEvent.isConsumed,Returns whether this event has been consumed.
java.awt.AWTEvent.paramString,Returns a string representing the state of thisEvent.
java.awt.AWTEvent.setSource,Retargets an event to a new source.
java.awt.AWTEventMulticaster.actionPerformed,Handles the actionPerformed event by invoking the  actionPerformed methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.add,Adds action-listener-a with action-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds adjustment-listener-a with adjustment-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds component-listener-a with component-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds container-listener-a with container-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds focus-listener-a with focus-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds hierarchy-bounds-listener-a with hierarchy-bounds-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds hierarchy-listener-a with hierarchy-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds input-method-listener-a with input-method-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds item-listener-a with item-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds key-listener-a with key-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds mouse-listener-a with mouse-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds mouse-motion-listener-a with mouse-motion-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds mouse-wheel-listener-a with mouse-wheel-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds text-listener-a with text-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds window-focus-listener-a with window-focus-listener-b  and returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds window-listener-a with window-listener-b and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.add,Adds window-state-listener-a with window-state-listener-b  and returns the resulting multicast listener.
java.awt.AWTEventMulticaster.addInternal,Returns the resulting multicast listener from adding listener-a  and listener-b together.
java.awt.AWTEventMulticaster.adjustmentValueChanged,Handles the adjustmentValueChanged event by invoking the  adjustmentValueChanged methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.ancestorMoved,Handles the ancestorMoved event by invoking the  ancestorMoved methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.ancestorResized,Handles the ancestorResized event by invoking the  ancestorResized methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.caretPositionChanged,Handles the caretPositionChanged event by invoking the  caretPositionChanged methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.componentAdded,Handles the componentAdded container event by invoking the  componentAdded methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.componentHidden,Handles the componentHidden event by invoking the  componentHidden methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.componentMoved,Handles the componentMoved event by invoking the  componentMoved methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.componentRemoved,Handles the componentRemoved container event by invoking the  componentRemoved methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.componentResized,Handles the componentResized event by invoking the  componentResized methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.componentShown,Handles the componentShown event by invoking the  componentShown methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.focusGained,Handles the focusGained event by invoking the  focusGained methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.focusLost,Handles the focusLost event by invoking the  focusLost methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.getListeners,Returns an array of all the objects chained asFooListeners by the specifiedjava.util.EventListener.
java.awt.AWTEventMulticaster.hierarchyChanged,Handles the hierarchyChanged event by invoking the  hierarchyChanged methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.inputMethodTextChanged,Handles the inputMethodTextChanged event by invoking the  inputMethodTextChanged methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.itemStateChanged,Handles the itemStateChanged event by invoking the  itemStateChanged methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.keyPressed,Handles the keyPressed event by invoking the  keyPressed methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.keyReleased,Handles the keyReleased event by invoking the  keyReleased methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.keyTyped,Handles the keyTyped event by invoking the  keyTyped methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mouseClicked,Handles the mouseClicked event by invoking the  mouseClicked methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mouseDragged,Handles the mouseDragged event by invoking the  mouseDragged methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mouseEntered,Handles the mouseEntered event by invoking the  mouseEntered methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mouseExited,Handles the mouseExited event by invoking the  mouseExited methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mouseMoved,Handles the mouseMoved event by invoking the  mouseMoved methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mousePressed,Handles the mousePressed event by invoking the  mousePressed methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mouseReleased,Handles the mouseReleased event by invoking the  mouseReleased methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.mouseWheelMoved,Handles the mouseWheelMoved event by invoking the  mouseWheelMoved methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.remove,Removes the old action-listener from action-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old adjustment-listener from adjustment-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old component-listener from component-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old container-listener from container-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old focus-listener from focus-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old hierarchy-bounds-listener from  hierarchy-bounds-listener-l and returns the resulting multicast  listener.
java.awt.AWTEventMulticaster.remove,Removes the old hierarchy-listener from hierarchy-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old input-method-listener from input-method-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old item-listener from item-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old key-listener from key-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old mouse-listener from mouse-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old mouse-motion-listener from mouse-motion-listener-l  and returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old mouse-wheel-listener from mouse-wheel-listener-l  and returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old text-listener from text-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old window-focus-listener from window-focus-listener-l  and returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old window-listener from window-listener-l and  returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes the old window-state-listener from window-state-listener-l  and returns the resulting multicast listener.
java.awt.AWTEventMulticaster.remove,Removes a listener from this multicaster.
java.awt.AWTEventMulticaster.removeInternal,Returns the resulting multicast listener after removing the  old listener from listener-l.
java.awt.AWTEventMulticaster.save,Saves a Serializable listener chain to a serialization stream.
java.awt.AWTEventMulticaster.saveInternal,Serialization support.
java.awt.AWTEventMulticaster.textValueChanged,Invoked when the value of the text has changed.
java.awt.AWTEventMulticaster.windowActivated,Handles the windowActivated event by invoking the  windowActivated methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowClosed,Handles the windowClosed event by invoking the  windowClosed methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowClosing,Handles the windowClosing event by invoking the  windowClosing methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowDeactivated,Handles the windowDeactivated event by invoking the  windowDeactivated methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowDeiconified,Handles the windowDeiconified event by invoking the  windowDeiconified methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowGainedFocus,Handles the windowGainedFocus event by invoking the windowGainedFocus  methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowIconified,Handles the windowIconified event by invoking the  windowIconified methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowLostFocus,Handles the windowLostFocus event by invoking the windowLostFocus  methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowOpened,Handles the windowOpened event by invoking the  windowOpened methods on listener-a and listener-b.
java.awt.AWTEventMulticaster.windowStateChanged,Handles the windowStateChanged event by invoking the  windowStateChanged methods on listener-a and listener-b.
java.awt.AWTKeyStroke.equals,Returns true if this object is identical to the specified object.
java.awt.AWTKeyStroke.getAWTKeyStroke,Returns a shared instance of anAWTKeyStrokethat represents aKEY_TYPEDevent for the  specified character.
java.awt.AWTKeyStroke.getAWTKeyStroke,"Returns a shared instance of anAWTKeyStroke,  given a numeric key code and a set of modifiers."
java.awt.AWTKeyStroke.getAWTKeyStroke,"Returns a shared instance of anAWTKeyStroke,  given a numeric key code and a set of modifiers, specifying  whether the key is activated when it is pressed or released."
java.awt.AWTKeyStroke.getAWTKeyStroke,Returns a shared instance of anAWTKeyStrokethat represents aKEY_TYPEDevent for the  specified Character object and a set of modifiers.
java.awt.AWTKeyStroke.getAWTKeyStroke,Parses a string and returns anAWTKeyStroke.
java.awt.AWTKeyStroke.getAWTKeyStrokeForEvent,Returns anAWTKeyStrokewhich represents the  stroke which generated a givenKeyEvent.
java.awt.AWTKeyStroke.getKeyChar,Returns the character for thisAWTKeyStroke.
java.awt.AWTKeyStroke.getKeyCode,Returns the numeric key code for thisAWTKeyStroke.
java.awt.AWTKeyStroke.getKeyEventType,Returns the type ofKeyEventwhich corresponds to  thisAWTKeyStroke.
java.awt.AWTKeyStroke.getModifiers,Returns the modifier keys for thisAWTKeyStroke.
java.awt.AWTKeyStroke.hashCode,"Returns a numeric value for this object that is likely to be unique,  making it a good choice as the index value in a hash table."
java.awt.AWTKeyStroke.isOnKeyRelease,Returns whether thisAWTKeyStrokerepresents a key release.
java.awt.AWTKeyStroke.readResolve,Returns a cached instance ofAWTKeyStroke(or a subclass ofAWTKeyStroke) which is equal to this instance.
java.awt.AWTKeyStroke.toString,Returns a string that displays and identifies this object's properties.
java.awt.BasicStroke.createStrokedShape,Returns aShapewhose interior defines the  stroked outline of a specifiedShape.
java.awt.BasicStroke.equals,"Tests if a specified object is equal to thisBasicStrokeby first testing if it is aBasicStrokeand then comparing  its width, join, cap, miter limit, dash, and dash phase attributes with  those of thisBasicStroke."
java.awt.BasicStroke.getDashArray,Returns the array representing the lengths of the dash segments.
java.awt.BasicStroke.getDashPhase,Returns the current dash phase.
java.awt.BasicStroke.getEndCap,Returns the end cap style.
java.awt.BasicStroke.getLineJoin,Returns the line join style.
java.awt.BasicStroke.getLineWidth,Returns the line width.
java.awt.BasicStroke.getMiterLimit,Returns the limit of miter joins.
java.awt.BasicStroke.hashCode,Returns the hashcode for this stroke.
java.awt.BorderLayout.addLayoutComponent,"Adds the specified component to the layout, using the specified  constraint object."
java.awt.BorderLayout.addLayoutComponent,"Deprecated.replaced byaddLayoutComponent(Component, Object)."
java.awt.BorderLayout.getConstraints,Gets the constraints for the specified component
java.awt.BorderLayout.getHgap,Returns the horizontal gap between components.
java.awt.BorderLayout.getLayoutAlignmentX,Returns the alignment along the x axis.
java.awt.BorderLayout.getLayoutAlignmentY,Returns the alignment along the y axis.
java.awt.BorderLayout.getLayoutComponent,Returns the component that corresponds to the given constraint location  based on the targetContainer's component orientation.
java.awt.BorderLayout.getLayoutComponent,Gets the component that was added using the given constraint
java.awt.BorderLayout.getVgap,Returns the vertical gap between components.
java.awt.BorderLayout.invalidateLayout,"Invalidates the layout, indicating that if the layout manager  has cached information it should be discarded."
java.awt.BorderLayout.layoutContainer,Lays out the container argument using this border layout.
java.awt.BorderLayout.maximumLayoutSize,Returns the maximum dimensions for this layout given the components  in the specified target container.
java.awt.BorderLayout.minimumLayoutSize,Determines the minimum size of thetargetcontainer  using this layout manager.
java.awt.BorderLayout.preferredLayoutSize,"Determines the preferred size of thetargetcontainer using this layout manager, based on the components  in the container."
java.awt.BorderLayout.removeLayoutComponent,Removes the specified component from this border layout.
java.awt.BorderLayout.setHgap,Sets the horizontal gap between components.
java.awt.BorderLayout.setVgap,Sets the vertical gap between components.
java.awt.BorderLayout.toString,Returns a string representation of the state of this border layout.
java.awt.Button.doAccessibleAction,Perform the specified Action on the object
java.awt.Button.getAccessibleAction,Get the AccessibleAction associated with this object.
java.awt.Button.getAccessibleActionCount,Returns the number of Actions available in this object.
java.awt.Button.getAccessibleActionDescription,Return a description of the specified action of the object.
java.awt.Button.getAccessibleName,Get the accessible name of this object.
java.awt.Button.getAccessibleValue,Get the AccessibleValue associated with this object.
java.awt.Button.getCurrentAccessibleValue,Get the value of this object as a Number.
java.awt.Button.getMaximumAccessibleValue,Get the maximum value of this object as a Number.
java.awt.Button.getMinimumAccessibleValue,Get the minimum value of this object as a Number.
java.awt.Button.setCurrentAccessibleValue,Set the value of this object as a Number.
java.awt.Button.addActionListener,Adds the specified action listener to receive action events from  this button.
java.awt.Button.addNotify,Creates the peer of the button.
java.awt.Button.getAccessibleContext,Gets theAccessibleContextassociated with  thisButton.
java.awt.Button.getActionCommand,Returns the command name of the action event fired by this button.
java.awt.Button.getActionListeners,Returns an array of all the action listeners  registered on this button.
java.awt.Button.getLabel,Gets the label of this button.
java.awt.Button.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisButton.
java.awt.Button.paramString,Returns a string representing the state of thisButton.
java.awt.Button.processActionEvent,Processes action events occurring on this button  by dispatching them to any registeredActionListenerobjects.
java.awt.Button.processEvent,Processes events on this button.
java.awt.Button.removeActionListener,Removes the specified action listener so that it no longer  receives action events from this button.
java.awt.Button.setActionCommand,Sets the command name for the action event fired  by this button.
java.awt.Button.setLabel,Sets the button's label to be the specified string.
java.awt.Canvas.addNotify,Creates the peer of the canvas.
java.awt.Canvas.createBufferStrategy,Creates a new strategy for multi-buffering on this component.
java.awt.Canvas.createBufferStrategy,Creates a new strategy for multi-buffering on this component with the  required buffer capabilities.
java.awt.Canvas.getAccessibleContext,Gets the AccessibleContext associated with this Canvas.
java.awt.Canvas.getBufferStrategy,Returns theBufferStrategyused by this component.
java.awt.Canvas.paint,Paints this canvas.
java.awt.Canvas.update,Updates this canvas.
java.awt.CardLayout.addLayoutComponent,Adds the specified component to this card layout's internal  table of names.
java.awt.CardLayout.first,Flips to the first card of the container.
java.awt.CardLayout.getHgap,Gets the horizontal gap between components.
java.awt.CardLayout.getVgap,Gets the vertical gap between components.
java.awt.CardLayout.last,Flips to the last card of the container.
java.awt.CardLayout.layoutContainer,Lays out the specified container using this card layout.
java.awt.CardLayout.minimumLayoutSize,Calculates the minimum size for the specified panel.
java.awt.CardLayout.next,Flips to the next card of the specified container.
java.awt.CardLayout.preferredLayoutSize,Determines the preferred size of the container argument using  this card layout.
java.awt.CardLayout.previous,Flips to the previous card of the specified container.
java.awt.CardLayout.removeLayoutComponent,Removes the specified component from the layout.
java.awt.CardLayout.show,"Flips to the component that was added to this layout with the  specifiedname, usingaddLayoutComponent."
java.awt.CardLayout.toString,Returns a string representation of the state of this card layout.
java.awt.Checkbox.getAccessibleStateSet,Get the state set of this object.
java.awt.Checkbox.itemStateChanged,Fire accessible property change events when the state of the  toggle button changes.
java.awt.Checkbox.addItemListener,Adds the specified item listener to receive item events from  this check box.
java.awt.Checkbox.addNotify,Creates the peer of the Checkbox.
java.awt.Checkbox.getAccessibleContext,Gets the AccessibleContext associated with this Checkbox.
java.awt.Checkbox.getCheckboxGroup,Determines this check box's group.
java.awt.Checkbox.getItemListeners,Returns an array of all the item listeners  registered on this checkbox.
java.awt.Checkbox.getLabel,Gets the label of this check box.
java.awt.Checkbox.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisCheckbox.
java.awt.Checkbox.getSelectedObjects,Returns an array (length 1) containing the checkbox  label or null if the checkbox is not selected.
java.awt.Checkbox.getState,"Determines whether this check box is in the ""on"" or ""off"" state."
java.awt.Checkbox.paramString,Returns a string representing the state of thisCheckbox.
java.awt.Checkbox.processEvent,Processes events on this check box.
java.awt.Checkbox.processItemEvent,Processes item events occurring on this check box by  dispatching them to any registeredItemListenerobjects.
java.awt.Checkbox.removeItemListener,Removes the specified item listener so that the item listener  no longer receives item events from this check box.
java.awt.Checkbox.setCheckboxGroup,Sets this check box's group to the specified check box group.
java.awt.Checkbox.setLabel,Sets this check box's label to be the string argument.
java.awt.Checkbox.setState,Sets the state of this check box to the specified state.
java.awt.CheckboxGroup.getCurrent,"Deprecated.As of JDK version 1.1,  replaced bygetSelectedCheckbox()."
java.awt.CheckboxGroup.getSelectedCheckbox,Gets the current choice from this check box group.
java.awt.CheckboxGroup.setCurrent,"Deprecated.As of JDK version 1.1,  replaced bysetSelectedCheckbox(Checkbox)."
java.awt.CheckboxGroup.setSelectedCheckbox,Sets the currently selected check box in this group  to be the specified check box.
java.awt.CheckboxGroup.toString,"Returns a string representation of this check box group,  including the value of its current selection."
java.awt.CheckboxMenuItem.addItemListener,Adds the specified item listener to receive item events from  this check box menu item.
java.awt.CheckboxMenuItem.addNotify,Creates the peer of the checkbox item.
java.awt.CheckboxMenuItem.getAccessibleContext,Gets the AccessibleContext associated with this CheckboxMenuItem.
java.awt.CheckboxMenuItem.getItemListeners,Returns an array of all the item listeners  registered on this checkbox menuitem.
java.awt.CheckboxMenuItem.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisCheckboxMenuItem.
java.awt.CheckboxMenuItem.getSelectedObjects,Returns the an array (length 1) containing the checkbox menu item  label or null if the checkbox is not selected.
java.awt.CheckboxMenuItem.getState,"Determines whether the state of this check box menu item  is ""on"" or ""off."""
java.awt.CheckboxMenuItem.paramString,Returns a string representing the state of thisCheckBoxMenuItem.
java.awt.CheckboxMenuItem.processEvent,Processes events on this check box menu item.
java.awt.CheckboxMenuItem.processItemEvent,Processes item events occurring on this check box menu item by  dispatching them to any registeredItemListenerobjects.
java.awt.CheckboxMenuItem.removeItemListener,Removes the specified item listener so that it no longer receives  item events from this check box menu item.
java.awt.CheckboxMenuItem.setState,Sets this check box menu item to the specified state.
java.awt.Choice.getAccessibleActionCount,"Returns the number of accessible actions available in this object  If there are more than one, the first one is considered the ""default""  action of the object."
java.awt.Choice.getAccessibleActionDescription,Returns a description of the specified action of the object.
java.awt.Choice.add,Adds an item to thisChoicemenu.
java.awt.Choice.addItem,Obsolete as of Java 2 platform v1.1.
java.awt.Choice.addItemListener,Adds the specified item listener to receive item events from  thisChoicemenu.
java.awt.Choice.addNotify,Creates theChoice's peer.
java.awt.Choice.countItems,"Deprecated.As of JDK version 1.1,  replaced bygetItemCount()."
java.awt.Choice.getAccessibleContext,Gets theAccessibleContextassociated with thisChoice.
java.awt.Choice.getItem,Gets the string at the specified index in thisChoicemenu.
java.awt.Choice.getItemCount,Returns the number of items in thisChoicemenu.
java.awt.Choice.getItemListeners,Returns an array of all the item listeners  registered on this choice.
java.awt.Choice.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisChoice.
java.awt.Choice.getSelectedIndex,Returns the index of the currently selected item.
java.awt.Choice.getSelectedItem,Gets a representation of the current choice as a string.
java.awt.Choice.getSelectedObjects,Returns an array (length 1) containing the currently selected  item.
java.awt.Choice.insert,Inserts the item into this choice at the specified position.
java.awt.Choice.paramString,Returns a string representing the state of thisChoicemenu.
java.awt.Choice.processEvent,Processes events on this choice.
java.awt.Choice.processItemEvent,Processes item events occurring on thisChoicemenu by dispatching them to any registeredItemListenerobjects.
java.awt.Choice.remove,Removes an item from the choice menu  at the specified position.
java.awt.Choice.remove,Removes the first occurrence ofitemfrom theChoicemenu.
java.awt.Choice.removeAll,Removes all items from the choice menu.
java.awt.Choice.removeItemListener,Removes the specified item listener so that it no longer receives  item events from thisChoicemenu.
java.awt.Choice.select,Sets the selected item in thisChoicemenu to be the  item at the specified position.
java.awt.Choice.select,Sets the selected item in thisChoicemenu  to be the item whose name is equal to the specified string.
java.awt.Color.brighter,Creates a newColorthat is a brighter version of thisColor.
java.awt.Color.createContext,Creates and returns aPaintContextused to  generate a solid color field pattern.
java.awt.Color.darker,Creates a newColorthat is a darker version of thisColor.
java.awt.Color.decode,Converts aStringto an integer and returns the  specified opaqueColor.
java.awt.Color.equals,Determines whether another object is equal to thisColor.
java.awt.Color.getAlpha,Returns the alpha component in the range 0-255.
java.awt.Color.getBlue,Returns the blue component in the range 0-255 in the default sRGB  space.
java.awt.Color.getColor,Finds a color in the system properties.
java.awt.Color.getColorComponents,"Returns afloatarray containing only the color  components of theColor, in theColorSpaceof theColor."
java.awt.Color.getColorComponents,Returns afloatarray containing only the color  components of theColorin theColorSpacespecified by thecspaceparameter.
java.awt.Color.getColorSpace,Returns theColorSpaceof thisColor.
java.awt.Color.getComponents,"Returns afloatarray containing the color and alpha  components of theColor, in theColorSpaceof theColor."
java.awt.Color.getComponents,"Returns afloatarray containing the color and alpha  components of theColor, in theColorSpacespecified by thecspaceparameter."
java.awt.Color.getGreen,Returns the green component in the range 0-255 in the default sRGB  space.
java.awt.Color.getHSBColor,Creates aColorobject based on the specified values  for the HSB color model.
java.awt.Color.getRed,Returns the red component in the range 0-255 in the default sRGB  space.
java.awt.Color.getRGB,Returns the RGB value representing the color in the default sRGBColorModel.
java.awt.Color.getRGBColorComponents,"Returns afloatarray containing only the color  components of theColor, in the default sRGB color  space."
java.awt.Color.getRGBComponents,"Returns afloatarray containing the color and alpha  components of theColor, as represented in the default  sRGB color space."
java.awt.Color.getTransparency,Returns the transparency mode for thisColor.
java.awt.Color.hashCode,Computes the hash code for thisColor.
java.awt.Color.HSBtoRGB,"Converts the components of a color, as specified by the HSB  model, to an equivalent set of values for the default RGB model."
java.awt.Color.RGBtoHSB,"Converts the components of a color, as specified by the default RGB  model, to an equivalent set of values for hue, saturation, and  brightness that are the three components of the HSB model."
java.awt.Color.toString,Returns a string representation of thisColor.
java.awt.Component.componentHidden,Invoked when the component has been made invisible.
java.awt.Component.componentMoved,Invoked when the component's position changes.
java.awt.Component.componentResized,Invoked when the component's size changes.
java.awt.Component.componentShown,Invoked when the component has been made visible.
java.awt.Component.focusGained,Invoked when a component gains the keyboard focus.
java.awt.Component.focusLost,Invoked when a component loses the keyboard focus.
java.awt.Component.addFocusListener,Adds the specified focus listener to receive focus events from this  component.
java.awt.Component.addPropertyChangeListener,Adds aPropertyChangeListenerto the listener list.
java.awt.Component.contains,"Checks whether the specified point is within this object's bounds,  where the point's x and y coordinates are defined to be relative to  the coordinate system of the object."
java.awt.Component.getAccessibleAt,"Returns theAccessiblechild,  if one exists, contained at the local  coordinatePoint."
java.awt.Component.getAccessibleChild,Returns the nthAccessiblechild of the object.
java.awt.Component.getAccessibleChildrenCount,Returns the number of accessible children in the object.
java.awt.Component.getAccessibleComponent,Gets theAccessibleComponentassociated  with this object if one exists.
java.awt.Component.getAccessibleDescription,Gets the accessible description of this object.
java.awt.Component.getAccessibleIndexInParent,Gets the index of this object in its accessible parent.
java.awt.Component.getAccessibleName,Gets the accessible name of this object.
java.awt.Component.getAccessibleParent,Gets theAccessibleparent of this object.
java.awt.Component.getAccessibleRole,Gets the role of this object.
java.awt.Component.getAccessibleStateSet,Gets the state of this object.
java.awt.Component.getBackground,Gets the background color of this object.
java.awt.Component.getBounds,Gets the bounds of this object in the form of a Rectangle object.
java.awt.Component.getCursor,Gets theCursorof this object.
java.awt.Component.getFont,Gets theFontof this object.
java.awt.Component.getFontMetrics,Gets theFontMetricsof this object.
java.awt.Component.getForeground,Gets the foreground color of this object.
java.awt.Component.getLocale,Returns the locale of this object.
java.awt.Component.getLocation,Gets the location of the object relative to the parent in the form  of a point specifying the object's top-left corner in the screen's  coordinate space.
java.awt.Component.getLocationOnScreen,Returns the location of the object on the screen.
java.awt.Component.getSize,Returns the size of this object in the form of aDimensionobject.
java.awt.Component.isEnabled,Determines if the object is enabled.
java.awt.Component.isFocusTraversable,Returns whether this object can accept focus or not.
java.awt.Component.isShowing,Determines if the object is showing.
java.awt.Component.isVisible,Determines if the object is visible.
java.awt.Component.removeFocusListener,Removes the specified focus listener so it no longer receives focus  events from this component.
java.awt.Component.removePropertyChangeListener,Remove a PropertyChangeListener from the listener list.
java.awt.Component.requestFocus,Requests focus for this object.
java.awt.Component.setBackground,Sets the background color of this object.
java.awt.Component.setBounds,Sets the bounds of this object in the form of aRectangleobject.
java.awt.Component.setCursor,Sets theCursorof this object.
java.awt.Component.setEnabled,Sets the enabled state of the object.
java.awt.Component.setFont,Sets theFontof this object.
java.awt.Component.setForeground,Sets the foreground color of this object.
java.awt.Component.setLocation,Sets the location of the object relative to the parent.
java.awt.Component.setSize,Resizes this object so that it has width and height.
java.awt.Component.setVisible,Sets the visible state of the object.
java.awt.Component.contentsLost,Returns whether the drawing buffer was lost since the last call togetDrawGraphics.
java.awt.Component.contentsRestored,Returns whether the drawing buffer was recently restored from a lost  state and reinitialized to the default background color (white).
java.awt.Component.createBackBuffers,Creates the back buffers
java.awt.Component.dispose,Releases system resources currently consumed by thisBufferStrategyand  removes it from the associated Component.
java.awt.Component.getCapabilities,Returns theBufferCapabilitiesfor thisBufferStrategy.
java.awt.Component.getDrawGraphics,Creates a graphics context for the drawing buffer.
java.awt.Component.revalidate,Restore the drawing buffer if it has been lost
java.awt.Component.show,Makes the next available buffer visible.
java.awt.ComponentOrientation.getOrientation,Returns the orientation that is appropriate for the given locale.
java.awt.ComponentOrientation.getOrientation,"Deprecated.As of J2SE 1.4, usegetOrientation(java.util.Locale)."
java.awt.ComponentOrientation.isHorizontal,Are lines horizontal?
java.awt.ComponentOrientation.isLeftToRight,HorizontalLines: Do items run left-to-right?
java.awt.Container.componentAdded,Invoked when a component has been added to the container.
java.awt.Container.componentRemoved,Invoked when a component has been removed from the container.
java.awt.Container.addPropertyChangeListener,Adds a PropertyChangeListener to the listener list.
java.awt.Container.getAccessibleAt,"Returns theAccessiblechild, if one exists,  contained at the local coordinatePoint."
java.awt.Container.add,Appends the specified component to the end of this container.
java.awt.Container.add,Adds the specified component to this container at the given  position.
java.awt.Container.add,Adds the specified component to the end of this container.
java.awt.Container.add,Adds the specified component to this container with the specified  constraints at the specified index.
java.awt.Container.add,Adds the specified component to this container.
java.awt.Container.addContainerListener,Adds the specified container listener to receive container events  from this container.
java.awt.Container.addImpl,Adds the specified component to this container at the specified  index.
java.awt.Container.addNotify,Makes this Container displayable by connecting it to  a native screen resource.
java.awt.Container.addPropertyChangeListener,Adds a PropertyChangeListener to the listener list for a specific  property.
java.awt.Container.applyComponentOrientation,Sets theComponentOrientationproperty of this container  and all components contained within it.
java.awt.Container.areFocusTraversalKeysSet,Returns whether the Set of focus traversal keys for the given focus  traversal operation has been explicitly defined for this Container.
java.awt.Container.countComponents,"Deprecated.As of JDK version 1.1,  replaced by getComponentCount()."
java.awt.Container.deliverEvent,"Deprecated.As of JDK version 1.1,  replaced bydispatchEvent(AWTEvent e)"
java.awt.Container.doLayout,Causes this container to lay out its components.
java.awt.Container.findComponentAt,Locates the visible child component that contains the specified  position.
java.awt.Container.findComponentAt,Locates the visible child component that contains the specified  point.
java.awt.Container.getComponent,Gets the nth component in this container.
java.awt.Container.getComponentAt,"Locates the component that contains the x,y position."
java.awt.Container.getComponentAt,Gets the component that contains the specified point.
java.awt.Container.getComponentCount,Gets the number of components in this panel.
java.awt.Container.getComponents,Gets all the components in this container.
java.awt.Container.getComponentZOrder,Returns the z-order index of the component inside the container.
java.awt.Container.getContainerListeners,Returns an array of all the container listeners  registered on this container.
java.awt.Container.getFocusTraversalKeys,Returns the Set of focus traversal keys for a given traversal operation  for this Container.
java.awt.Container.getFocusTraversalPolicy,"Returns the focus traversal policy that will manage keyboard traversal  of this Container's children, or null if this Container is not a focus  cycle root."
java.awt.Container.getInsets,"Determines the insets of this container, which indicate the size  of the container's border."
java.awt.Container.getLayout,Gets the layout manager for this container.
java.awt.Container.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisContainer.
java.awt.Container.getMaximumSize,Returns the maximum size of this container.
java.awt.Container.getMinimumSize,Returns the minimum size of this container.
java.awt.Container.getMousePosition,"Returns the position of the mouse pointer in thisContainer's  coordinate space if theContaineris under the mouse pointer,  otherwise returnsnull."
java.awt.Container.getPreferredSize,Returns the preferred size of this container.
java.awt.Container.insets,"Deprecated.As of JDK version 1.1,  replaced bygetInsets()."
java.awt.Container.invalidate,Invalidates the container.
java.awt.Container.isAncestorOf,Checks if the component is contained in the component hierarchy of  this container.
java.awt.Container.isFocusCycleRoot,Returns whether this Container is the root of a focus traversal cycle.
java.awt.Container.isFocusCycleRoot,Returns whether the specified Container is the focus cycle root of this  Container's focus traversal cycle.
java.awt.Container.isFocusTraversalPolicyProvider,Returns whether this container provides focus traversal  policy.
java.awt.Container.isFocusTraversalPolicySet,Returns whether the focus traversal policy has been explicitly set for  this Container.
java.awt.Container.isValidateRoot,Indicates if this container is avalidate root.
java.awt.Container.layout,"Deprecated.As of JDK version 1.1,  replaced bydoLayout()."
java.awt.Container.list,Prints a listing of this container to the specified output  stream.
java.awt.Container.list,"Prints out a list, starting at the specified indentation,  to the specified print writer."
java.awt.Container.locate,"Deprecated.As of JDK version 1.1,  replaced bygetComponentAt(int, int)."
java.awt.Container.minimumSize,"Deprecated.As of JDK version 1.1,  replaced bygetMinimumSize()."
java.awt.Container.paint,Paints the container.
java.awt.Container.paintComponents,Paints each of the components in this container.
java.awt.Container.paramString,Returns a string representing the state of thisContainer.
java.awt.Container.preferredSize,"Deprecated.As of JDK version 1.1,  replaced bygetPreferredSize()."
java.awt.Container.print,Prints the container.
java.awt.Container.printComponents,Prints each of the components in this container.
java.awt.Container.processContainerEvent,Processes container events occurring on this container by  dispatching them to any registered ContainerListener objects.
java.awt.Container.processEvent,Processes events on this container.
java.awt.Container.remove,"Removes the component, specified byindex,  from this container."
java.awt.Container.remove,Removes the specified component from this container.
java.awt.Container.removeAll,Removes all the components from this container.
java.awt.Container.removeContainerListener,Removes the specified container listener so it no longer receives  container events from this container.
java.awt.Container.removeNotify,Makes this Container undisplayable by removing its connection  to its native screen resource.
java.awt.Container.setComponentZOrder,Moves the specified component to the specified z-order index in  the container.
java.awt.Container.setFocusCycleRoot,Sets whether this Container is the root of a focus traversal cycle.
java.awt.Container.setFocusTraversalKeys,Sets the focus traversal keys for a given traversal operation for this  Container.
java.awt.Container.setFocusTraversalPolicy,"Sets the focus traversal policy that will manage keyboard traversal of  this Container's children, if this Container is a focus cycle root."
java.awt.Container.setFocusTraversalPolicyProvider,Sets whether this container will be used to provide focus  traversal policy.
java.awt.Container.setFont,Sets the font of this container.
java.awt.Container.setLayout,Sets the layout manager for this container.
java.awt.Container.transferFocusDownCycle,Transfers the focus down one focus traversal cycle.
java.awt.Container.update,Updates the container.
java.awt.Container.validate,Validates this container and all of its subcomponents.
java.awt.Container.validateTree,Recursively descends the container tree and recomputes the  layout for any subtrees marked as needing it (those marked as  invalid).
java.awt.ContainerOrderFocusTraversalPolicy.accept,Determines whether a Component is an acceptable choice as the new  focus owner.
java.awt.ContainerOrderFocusTraversalPolicy.getComponentAfter,Returns the Component that should receive the focus after aComponent.
java.awt.ContainerOrderFocusTraversalPolicy.getComponentBefore,Returns the Component that should receive the focus before aComponent.
java.awt.ContainerOrderFocusTraversalPolicy.getDefaultComponent,Returns the default Component to focus.
java.awt.ContainerOrderFocusTraversalPolicy.getFirstComponent,Returns the first Component in the traversal cycle.
java.awt.ContainerOrderFocusTraversalPolicy.getImplicitDownCycleTraversal,Returns whether this ContainerOrderFocusTraversalPolicy transfers focus  down-cycle implicitly.
java.awt.ContainerOrderFocusTraversalPolicy.getLastComponent,Returns the last Component in the traversal cycle.
java.awt.ContainerOrderFocusTraversalPolicy.setImplicitDownCycleTraversal,Sets whether this ContainerOrderFocusTraversalPolicy transfers focus  down-cycle implicitly.
java.awt.Cursor.getDefaultCursor,Return the system default cursor.
java.awt.Cursor.getName,Returns the name of this cursor.
java.awt.Cursor.getPredefinedCursor,Returns a cursor object with the specified predefined type.
java.awt.Cursor.getSystemCustomCursor,Returns a system-specific custom cursor object matching the  specified name.
java.awt.Cursor.getType,Returns the type for this cursor.
java.awt.Cursor.toString,Returns a string representation of this cursor.
java.awt.DefaultKeyboardFocusManager.dequeueKeyEvents,Releases for normal dispatching to the current focus owner all  KeyEvents which were enqueued because of a call toenqueueKeyEventswith the same timestamp and Component.
java.awt.DefaultKeyboardFocusManager.discardKeyEvents,"Discards all KeyEvents which were enqueued because of one or more calls  toenqueueKeyEventswith the specified Component, or one of  its descendants."
java.awt.DefaultKeyboardFocusManager.dispatchEvent,This method is called by the AWT event dispatcher requesting that the  current KeyboardFocusManager dispatch the specified event on its behalf.
java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent,"Called bydispatchEventif no other  KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or  if no other KeyEventDispatchers are registered."
java.awt.DefaultKeyboardFocusManager.downFocusCycle,Moves the focus down one focus traversal cycle.
java.awt.DefaultKeyboardFocusManager.enqueueKeyEvents,Delays dispatching of KeyEvents until the specified Component becomes  the focus owner.
java.awt.DefaultKeyboardFocusManager.focusNextComponent,"Focuses the Component after aComponent, typically based on a  FocusTraversalPolicy."
java.awt.DefaultKeyboardFocusManager.focusPreviousComponent,"Focuses the Component before aComponent, typically based on a  FocusTraversalPolicy."
java.awt.DefaultKeyboardFocusManager.postProcessKeyEvent,This method will be called bydispatchKeyEvent.
java.awt.DefaultKeyboardFocusManager.processKeyEvent,This method initiates a focus traversal operation if and only if the  KeyEvent represents a focus traversal key for the specified  focusedComponent.
java.awt.DefaultKeyboardFocusManager.upFocusCycle,Moves the focus up one focus traversal cycle.
java.awt.Desktop.addAppEventListener,Adds sub-types ofSystemEventListenerto listen for notifications  from the native system.
java.awt.Desktop.browse,Launches the default browser to display aURI.
java.awt.Desktop.browseFileDirectory,Opens a folder containing thefileand selects it  in a default system file manager.
java.awt.Desktop.disableSuddenTermination,Prevents this application from being suddenly terminated.
java.awt.Desktop.edit,Launches the associated editor application and opens a file for  editing.
java.awt.Desktop.enableSuddenTermination,Enables this application to be suddenly terminated.
java.awt.Desktop.getDesktop,Returns theDesktopinstance of the current  desktop context.
java.awt.Desktop.isDesktopSupported,Tests whether this class is supported on the current platform.
java.awt.Desktop.isSupported,Tests whether an action is supported on the current platform.
java.awt.Desktop.mail,Launches the mail composing window of the user default mail  client.
java.awt.Desktop.mail,"Launches the mail composing window of the user default mail  client, filling the message fields specified by amailto:URI."
java.awt.Desktop.moveToTrash,Moves the specified file to the trash.
java.awt.Desktop.open,Launches the associated application to open the file.
java.awt.Desktop.openHelpViewer,Opens the native help viewer application.
java.awt.Desktop.print,"Prints a file with the native desktop printing facility, using  the associated application's print command."
java.awt.Desktop.removeAppEventListener,Removes sub-types ofSystemEventListenerto listen for notifications  from the native system.
java.awt.Desktop.requestForeground,Requests this application to move to the foreground.
java.awt.Desktop.setAboutHandler,Installs a handler to show a custom About window for your application.
java.awt.Desktop.setDefaultMenuBar,Sets the default menu bar to use when there are no active frames.
java.awt.Desktop.setOpenFileHandler,Installs the handler which is notified when the application is asked to  open a list of files.
java.awt.Desktop.setOpenURIHandler,Installs the handler which is notified when the application is asked to  open a URL.
java.awt.Desktop.setPreferencesHandler,Installs a handler to show a custom Preferences window for your  application.
java.awt.Desktop.setPrintFileHandler,Installs the handler which is notified when the application is asked to  print a list of files.
java.awt.Desktop.setQuitHandler,Installs the handler which determines if the application should quit.
java.awt.Desktop.setQuitStrategy,Sets the default strategy used to quit this application.
java.awt.Dialog.addNotify,Makes this Dialog displayable by connecting it to  a native screen resource.
java.awt.Dialog.getAccessibleContext,Gets the AccessibleContext associated with this Dialog.
java.awt.Dialog.getModalityType,Returns the modality type of this dialog.
java.awt.Dialog.getTitle,Gets the title of the dialog.
java.awt.Dialog.hide,"Deprecated.As of JDK version 1.5, replaced bysetVisible(boolean)."
java.awt.Dialog.isModal,Indicates whether the dialog is modal.
java.awt.Dialog.isResizable,Indicates whether this dialog is resizable by the user.
java.awt.Dialog.isUndecorated,Indicates whether this dialog is undecorated.
java.awt.Dialog.paramString,Returns a string representing the state of this dialog.
java.awt.Dialog.setModal,Specifies whether this dialog should be modal.
java.awt.Dialog.setModalityType,Sets the modality type for this dialog.
java.awt.Dialog.setResizable,Sets whether this dialog is resizable by the user.
java.awt.Dialog.setTitle,Sets the title of the Dialog.
java.awt.Dialog.setUndecorated,Disables or enables decorations for this dialog.
java.awt.Dialog.setVisible,Shows or hides thisDialogdepending on the value of parameterb.
java.awt.Dialog.toBack,"If this Window is visible, sends this Window to the back and may cause  it to lose focus or activation if it is the focused or active Window."
java.awt.Dimension.equals,Checks whether two dimension objects have equal values.
java.awt.Dimension.getHeight,Returns the height of thisDimensionin double  precision.
java.awt.Dimension.getSize,Gets the size of thisDimensionobject.
java.awt.Dimension.getWidth,Returns the width of thisDimensionin double  precision.
java.awt.Dimension.hashCode,Returns the hash code for thisDimension.
java.awt.Dimension.setSize,Sets the size of thisDimensionobject to  the specified width and height in double precision.
java.awt.Dimension.setSize,Sets the size of thisDimensionobject  to the specified width and height.
java.awt.Dimension.setSize,Sets the size of thisDimensionobject to the specified size.
java.awt.Dimension.toString,Returns a string representation of the values of thisDimensionobject'sheightandwidthfields.
java.awt.DisplayMode.equals,Returns whether the two display modes are equal.
java.awt.DisplayMode.getBitDepth,"Returns the bit depth of the display, in bits per pixel."
java.awt.DisplayMode.getHeight,"Returns the height of the display, in pixels."
java.awt.DisplayMode.getRefreshRate,"Returns the refresh rate of the display, in hertz."
java.awt.DisplayMode.getWidth,"Returns the width of the display, in pixels."
java.awt.EventQueue.createSecondaryLoop,Creates a newsecondary loopassociated with this  event queue.
java.awt.EventQueue.dispatchEvent,Dispatches an event.
java.awt.EventQueue.getCurrentEvent,Returns the event currently being dispatched by theEventQueueassociated with the calling thread.
java.awt.EventQueue.getMostRecentEventTime,"Returns the timestamp of the most recent event that had a timestamp, and  that was dispatched from theEventQueueassociated with the  calling thread."
java.awt.EventQueue.getNextEvent,Removes an event from theEventQueueand  returns it.
java.awt.EventQueue.invokeAndWait,Causesrunnableto have itsrunmethod called in thedispatch threadofthe system EventQueue.
java.awt.EventQueue.isDispatchThread,Returns true if the calling thread isthe current AWT EventQueue's  dispatch thread.
java.awt.EventQueue.peekEvent,Returns the first event on theEventQueuewithout removing it.
java.awt.EventQueue.peekEvent,"Returns the first event with the specified id, if any."
java.awt.EventQueue.pop,Stops dispatching events using thisEventQueue.
java.awt.EventQueue.postEvent,Posts a 1.1-style event to theEventQueue.
java.awt.EventQueue.push,Replaces the existingEventQueuewith the specified one.
java.awt.FileDialog.addNotify,Creates the file dialog's peer.
java.awt.FileDialog.getDirectory,Gets the directory of this file dialog.
java.awt.FileDialog.getFile,Gets the selected file of this file dialog.
java.awt.FileDialog.getFilenameFilter,Determines this file dialog's filename filter.
java.awt.FileDialog.getFiles,Returns files that the user selects.
java.awt.FileDialog.getMode,Indicates whether this file dialog box is for loading from a file  or for saving to a file.
java.awt.FileDialog.isMultipleMode,Returns whether the file dialog allows the multiple file selection.
java.awt.FileDialog.paramString,Returns a string representing the state of thisFileDialogwindow.
java.awt.FileDialog.setDirectory,Sets the directory of this file dialog window to be the  specified directory.
java.awt.FileDialog.setFile,Sets the selected file for this file dialog window to be the  specified file.
java.awt.FileDialog.setFilenameFilter,Sets the filename filter for this file dialog window to the  specified filter.
java.awt.FileDialog.setMode,Sets the mode of the file dialog.
java.awt.FileDialog.setMultipleMode,Enables or disables multiple file selection for the file dialog.
java.awt.FlowLayout.addLayoutComponent,Adds the specified component to the layout.
java.awt.FlowLayout.getAlignment,Gets the alignment for this layout.
java.awt.FlowLayout.getAlignOnBaseline,Returns true if components are to be vertically aligned along  their baseline.
java.awt.FlowLayout.getHgap,Gets the horizontal gap between components  and between the components and the borders  of theContainer
java.awt.FlowLayout.getVgap,Gets the vertical gap between components and  between the components and the borders of theContainer.
java.awt.FlowLayout.layoutContainer,Lays out the container.
java.awt.FlowLayout.minimumLayoutSize,Returns the minimum dimensions needed to layout thevisiblecomponents contained in the specified target container.
java.awt.FlowLayout.preferredLayoutSize,Returns the preferred dimensions for this layout given thevisiblecomponents in the specified target container.
java.awt.FlowLayout.setAlignment,Sets the alignment for this layout.
java.awt.FlowLayout.setAlignOnBaseline,Sets whether or not components should be vertically aligned along their  baseline.
java.awt.FlowLayout.setHgap,Sets the horizontal gap between components and  between the components and the borders of theContainer.
java.awt.FlowLayout.setVgap,Sets the vertical gap between components and between  the components and the borders of theContainer.
java.awt.FlowLayout.toString,Returns a string representation of thisFlowLayoutobject and its values.
java.awt.FocusTraversalPolicy.getInitialComponent,Returns the Component that should receive the focus when a Window is  made visible for the first time.
java.awt.Font.canDisplay,Checks if thisFonthas a glyph for the specified  character.
java.awt.Font.canDisplayUpTo,Indicates whether or not thisFontcan display  the characters in the specifiedtextstarting atstartand ending atlimit.
java.awt.Font.canDisplayUpTo,Indicates whether or not thisFontcan display a  specifiedString.
java.awt.Font.canDisplayUpTo,Indicates whether or not thisFontcan display the  text specified by theiterstarting atstartand ending atlimit.
java.awt.Font.createFont,Returns a newFontusing the specified font type  and the specified font file.
java.awt.Font.createFont,Returns a newFontusing the specified font type  and input data.
java.awt.Font.createFonts,Returns a new array ofFontdecoded from the specified file.
java.awt.Font.createFonts,Returns a new array ofFontdecoded from the specified stream.
java.awt.Font.createGlyphVector,Creates aGlyphVectorby  mapping characters to glyphs one-to-one based on the  Unicode cmap in thisFont.
java.awt.Font.createGlyphVector,Creates aGlyphVectorby  mapping the specified characters to glyphs one-to-one based on the  Unicode cmap in thisFont.
java.awt.Font.decode,Returns theFontthat thestrargument describes.
java.awt.Font.deriveFont,Creates a newFontobject by replicating the currentFontobject and applying a new size to it.
java.awt.Font.deriveFont,Creates a newFontobject by replicating the currentFontobject and applying a new style to it.
java.awt.Font.deriveFont,Creates a newFontobject by replicating thisFontobject and applying a new style and size.
java.awt.Font.deriveFont,Creates a newFontobject by replicating thisFontobject and applying a new style and transform.
java.awt.Font.deriveFont,Creates a newFontobject by replicating the currentFontobject and applying a new transform to it.
java.awt.Font.deriveFont,Creates a newFontobject by replicating the currentFontobject and applying a new set of font attributes  to it.
java.awt.Font.equals,Compares thisFontobject to the specifiedObject.
java.awt.Font.getAttributes,Returns a map of font attributes available in thisFont.
java.awt.Font.getAvailableAttributes,Returns the keys of all the attributes supported by thisFont.
java.awt.Font.getBaselineFor,Returns the baseline appropriate for displaying this character.
java.awt.Font.getFamily,Returns the family name of thisFont.
java.awt.Font.getFamily,"Returns the family name of thisFont, localized for  the specified locale."
java.awt.Font.getFont,Returns aFontobject from the system properties list.
java.awt.Font.getFont,Gets the specifiedFontfrom the system properties  list.
java.awt.Font.getFont,Returns aFontappropriate to the attributes.
java.awt.Font.getFontName,Returns the font face name of thisFont.
java.awt.Font.getFontName,"Returns the font face name of theFont, localized  for the specified locale."
java.awt.Font.getItalicAngle,Returns the italic angle of thisFont.
java.awt.Font.getLineMetrics,Returns aLineMetricsobject created with the  specified arguments.
java.awt.Font.getLineMetrics,Returns aLineMetricsobject created with the specifiedStringandFontRenderContext.
java.awt.Font.getMaxCharBounds,Returns the bounds for the character with the maximum  bounds as defined in the specifiedFontRenderContext.
java.awt.Font.getMissingGlyphCode,Returns the glyphCode which is used when thisFontdoes not have a glyph for a specified unicode code point.
java.awt.Font.getName,Returns the logical name of thisFont.
java.awt.Font.getNumGlyphs,Returns the number of glyphs in thisFont.
java.awt.Font.getPSName,Returns the postscript name of thisFont.
java.awt.Font.getSize,"Returns the point size of thisFont, rounded to  an integer."
java.awt.Font.getSize2D,Returns the point size of thisFontinfloatvalue.
java.awt.Font.getStringBounds,Returns the logical bounds of the specified array of characters  in the specifiedFontRenderContext.
java.awt.Font.getStringBounds,Returns the logical bounds of the specifiedStringin  the specifiedFontRenderContext.
java.awt.Font.getStringBounds,Returns the logical bounds of the characters indexed in the  specifiedCharacterIteratorin the  specifiedFontRenderContext.
java.awt.Font.getStyle,Returns the style of thisFont.
java.awt.Font.getTransform,Returns a copy of the transform associated with thisFont.
java.awt.Font.hashCode,Returns a hashcode for thisFont.
java.awt.Font.hasLayoutAttributes,Return true if this Font contains attributes that require extra  layout processing.
java.awt.Font.hasUniformLineMetrics,Checks whether or not thisFonthas uniform  line metrics.
java.awt.Font.isBold,Indicates whether or not thisFontobject's style is  BOLD.
java.awt.Font.isItalic,Indicates whether or not thisFontobject's style is  ITALIC.
java.awt.Font.isPlain,Indicates whether or not thisFontobject's style is  PLAIN.
java.awt.Font.isTransformed,Indicates whether or not thisFontobject has a  transform that affects its size in addition to the Size  attribute.
java.awt.Font.layoutGlyphVector,"Returns a newGlyphVectorobject, performing full  layout of the text if possible."
java.awt.Font.textRequiresLayout,"Returns true if any part of the specified text is from a  complex script for which the implementation will need to invoke  layout processing in order to render correctly when usingdrawString(String,int,int)and other text rendering methods."
java.awt.Font.toString,Converts thisFontobject to aStringrepresentation.
java.awt.FontMetrics.bytesWidth,Returns the total advance width for showing the specified array  of bytes in thisFont.
java.awt.FontMetrics.charsWidth,Returns the total advance width for showing the specified array  of characters in thisFont.
java.awt.FontMetrics.charWidth,Returns the advance width of the specified character in thisFont.
java.awt.FontMetrics.getAscent,Determines thefont ascentof theFontdescribed by thisFontMetricsobject.
java.awt.FontMetrics.getDescent,Determines thefont descentof theFontdescribed by thisFontMetricsobject.
java.awt.FontMetrics.getFont,Gets theFontdescribed by thisFontMetricsobject.
java.awt.FontMetrics.getFontRenderContext,Gets theFontRenderContextused by thisFontMetricsobject to measure text.
java.awt.FontMetrics.getHeight,Gets the standard height of a line of text in this font.
java.awt.FontMetrics.getLeading,Determines thestandard leadingof theFontdescribed by thisFontMetricsobject.
java.awt.FontMetrics.getLineMetrics,Returns theLineMetricsobject for the specified  character array in the specifiedGraphicscontext.
java.awt.FontMetrics.getLineMetrics,Returns theLineMetricsobject for the specifiedStringin the specifiedGraphicscontext.
java.awt.FontMetrics.getLineMetrics,Returns theLineMetricsobject for the specifiedCharacterIteratorin the specifiedGraphicscontext.
java.awt.FontMetrics.getMaxAdvance,"Returns an estimate of the maximum advance width of any character  in theFontdescribed by thisFontMetricsobject,  with important caveats, enumerated below."
java.awt.FontMetrics.getMaxAscent,Determines the maximum ascent of theFontdescribed by thisFontMetricsobject.
java.awt.FontMetrics.getMaxCharBounds,Returns the bounds for the character with the maximum bounds  in the specifiedGraphicscontext.
java.awt.FontMetrics.getMaxDecent,"Deprecated.As of JDK version 1.1.1,  replaced bygetMaxDescent()."
java.awt.FontMetrics.getMaxDescent,Determines the maximum descent of theFontdescribed by thisFontMetricsobject.
java.awt.FontMetrics.getStringBounds,Returns the bounds of the specified array of characters  in the specifiedGraphicscontext.
java.awt.FontMetrics.getStringBounds,Returns the bounds of the specifiedStringin the  specifiedGraphicscontext.
java.awt.FontMetrics.getStringBounds,Returns the bounds of the characters indexed in the specifiedCharacterIteratorin the  specifiedGraphicscontext.
java.awt.FontMetrics.getWidths,Gets the advance widths of the first 256 characters in theFont.
java.awt.FontMetrics.hasUniformLineMetrics,Checks to see if theFonthas uniform line metrics.
java.awt.FontMetrics.stringWidth,Returns the total advance width for showing the specifiedStringin thisFont.
java.awt.FontMetrics.toString,Returns a representation of thisFontMetricsobject's values as aString.
java.awt.Frame.addNotify,Makes this Frame displayable by connecting it to  a native screen resource.
java.awt.Frame.getAccessibleContext,Gets the AccessibleContext associated with this Frame.
java.awt.Frame.getCursorType,"Deprecated.As of JDK version 1.1,  replaced byComponent.getCursor()."
java.awt.Frame.getExtendedState,Gets the state of this frame.
java.awt.Frame.getFrames,Returns an array of allFrames created by this application.
java.awt.Frame.getIconImage,Returns the image to be displayed as the icon for this frame.
java.awt.Frame.getMaximizedBounds,Gets maximized bounds for this frame.
java.awt.Frame.getMenuBar,Gets the menu bar for this frame.
java.awt.Frame.getState,Gets the state of this frame (obsolete).
java.awt.Frame.getTitle,Gets the title of the frame.
java.awt.Frame.isResizable,Indicates whether this frame is resizable by the user.
java.awt.Frame.isUndecorated,Indicates whether this frame is undecorated.
java.awt.Frame.paramString,Returns a string representing the state of thisFrame.
java.awt.Frame.remove,Removes the specified menu bar from this frame.
java.awt.Frame.removeNotify,Makes this Frame undisplayable by removing its connection  to its native screen resource.
java.awt.Frame.setCursor,"Deprecated.As of JDK version 1.1,  replaced byComponent.setCursor(Cursor)."
java.awt.Frame.setExtendedState,Sets the state of this frame.
java.awt.Frame.setMaximizedBounds,Sets the maximized bounds for this frame.
java.awt.Frame.setMenuBar,Sets the menu bar for this frame to the specified menu bar.
java.awt.Frame.setResizable,Sets whether this frame is resizable by the user.
java.awt.Frame.setState,Sets the state of this frame (obsolete).
java.awt.Frame.setTitle,Sets the title for this frame to the specified string.
java.awt.Frame.setUndecorated,Disables or enables decorations for this frame.
java.awt.GradientPaint.createContext,Creates and returns aPaintContextused to  generate a linear color gradient pattern.
java.awt.GradientPaint.getColor1,Returns the color C1 anchored by the point P1.
java.awt.GradientPaint.getColor2,Returns the color C2 anchored by the point P2.
java.awt.GradientPaint.getPoint1,Returns a copy of the point P1 that anchors the first color.
java.awt.GradientPaint.getPoint2,Returns a copy of the point P2 which anchors the second color.
java.awt.GradientPaint.getTransparency,Returns the transparency mode for thisGradientPaint.
java.awt.GradientPaint.isCyclic,Returnstrueif the gradient cycles repeatedly  between the two colors C1 and C2.
java.awt.Graphics.clearRect,Clears the specified rectangle by filling it with the background  color of the current drawing surface.
java.awt.Graphics.clipRect,Intersects the current clip with the specified rectangle.
java.awt.Graphics.copyArea,Copies an area of the component by a distance specified bydxanddy.
java.awt.Graphics.create,Creates a newGraphicsobject that is  a copy of thisGraphicsobject.
java.awt.Graphics.create,"Creates a newGraphicsobject based on thisGraphicsobject, but with a new translation and clip area."
java.awt.Graphics.dispose,Disposes of this graphics context and releases  any system resources that it is using.
java.awt.Graphics.draw3DRect,Draws a 3-D highlighted outline of the specified rectangle.
java.awt.Graphics.drawArc,Draws the outline of a circular or elliptical arc  covering the specified rectangle.
java.awt.Graphics.drawBytes,"Draws the text given by the specified byte array, using this  graphics context's current font and color."
java.awt.Graphics.drawChars,"Draws the text given by the specified character array, using this  graphics context's current font and color."
java.awt.Graphics.drawImage,"Draws as much of the specified area of the specified image as is  currently available, scaling it on the fly to fit inside the  specified area of the destination drawable surface."
java.awt.Graphics.drawImage,Draws as much of the specified image as has already been scaled  to fit inside the specified rectangle.
java.awt.Graphics.drawImage,Draws as much of the specified image as is currently available.
java.awt.Graphics.drawLine,"Draws a line, using the current color, between the points(x1, y1)and(x2, y2)in this graphics context's coordinate system."
java.awt.Graphics.drawOval,Draws the outline of an oval.
java.awt.Graphics.drawPolygon,Draws a closed polygon defined by  arrays ofxandycoordinates.
java.awt.Graphics.drawPolygon,Draws the outline of a polygon defined by the specifiedPolygonobject.
java.awt.Graphics.drawPolyline,Draws a sequence of connected lines defined by  arrays ofxandycoordinates.
java.awt.Graphics.drawRect,Draws the outline of the specified rectangle.
java.awt.Graphics.drawRoundRect,Draws an outlined round-cornered rectangle using this graphics  context's current color.
java.awt.Graphics.drawString,"Draws the text given by the specified string, using this  graphics context's current font and color."
java.awt.Graphics.drawString,Renders the text of the specified iterator applying its attributes  in accordance with the specification of theTextAttributeclass.
java.awt.Graphics.fill3DRect,Paints a 3-D highlighted rectangle filled with the current color.
java.awt.Graphics.fillArc,Fills a circular or elliptical arc covering the specified rectangle.
java.awt.Graphics.fillOval,Fills an oval bounded by the specified rectangle with the  current color.
java.awt.Graphics.fillPolygon,Fills a closed polygon defined by  arrays ofxandycoordinates.
java.awt.Graphics.fillPolygon,Fills the polygon defined by the specified Polygon object with  the graphics context's current color.
java.awt.Graphics.fillRect,Fills the specified rectangle.
java.awt.Graphics.fillRoundRect,Fills the specified rounded corner rectangle with the current color.
java.awt.Graphics.finalize,Deprecated.Thefinalizemethod has been deprecated.
java.awt.Graphics.getClip,Gets the current clipping area.
java.awt.Graphics.getClipBounds,Returns the bounding rectangle of the current clipping area.
java.awt.Graphics.getClipRect,"Deprecated.As of JDK version 1.1,  replaced bygetClipBounds()."
java.awt.Graphics.getColor,Gets this graphics context's current color.
java.awt.Graphics.getFont,Gets the current font.
java.awt.Graphics.getFontMetrics,Gets the font metrics of the current font.
java.awt.Graphics.getFontMetrics,Gets the font metrics for the specified font.
java.awt.Graphics.hitClip,Returns true if the specified rectangular area might intersect  the current clipping area.
java.awt.Graphics.setClip,Sets the current clip to the rectangle specified by the given  coordinates.
java.awt.Graphics.setClip,Sets the current clipping area to an arbitrary clip shape.
java.awt.Graphics.setColor,Sets this graphics context's current color to the specified  color.
java.awt.Graphics.setFont,Sets this graphics context's font to the specified font.
java.awt.Graphics.setPaintMode,Sets the paint mode of this graphics context to overwrite the  destination with this graphics context's current color.
java.awt.Graphics.setXORMode,Sets the paint mode of this graphics context to alternate between  this graphics context's current color and the new specified color.
java.awt.Graphics.toString,Returns aStringobject representing thisGraphicsobject's value.
java.awt.Graphics.translate,"Translates the origin of the graphics context to the point  (x,y) in the current coordinate system."
java.awt.Graphics2D.addRenderingHints,Sets the values of an arbitrary number of preferences for the  rendering algorithms.
java.awt.Graphics2D.clip,Intersects the currentClipwith the interior of the  specifiedShapeand sets theClipto the  resulting intersection.
java.awt.Graphics2D.draw,Strokes the outline of aShapeusing the settings of the  currentGraphics2Dcontext.
java.awt.Graphics2D.drawGlyphVector,Renders the text of the specifiedGlyphVectorusing  theGraphics2Dcontext's rendering attributes.
java.awt.Graphics2D.drawImage,Renders aBufferedImagethat is  filtered with aBufferedImageOp.
java.awt.Graphics2D.drawImage,"Renders an image, applying a transform from image space into user space  before drawing."
java.awt.Graphics2D.drawRenderableImage,"Renders aRenderableImage,  applying a transform from image space into user space before drawing."
java.awt.Graphics2D.drawRenderedImage,"Renders aRenderedImage,  applying a transform from image  space into user space before drawing."
java.awt.Graphics2D.drawString,"Renders the text specified by the specifiedString,  using the current text attribute state in theGraphics2Dcontext."
java.awt.Graphics2D.drawString,"Renders the text of the specifiedString, using the  current text attribute state in theGraphics2Dcontext."
java.awt.Graphics2D.fill,Fills the interior of aShapeusing the settings of theGraphics2Dcontext.
java.awt.Graphics2D.getBackground,Returns the background color used for clearing a region.
java.awt.Graphics2D.getComposite,Returns the currentCompositein theGraphics2Dcontext.
java.awt.Graphics2D.getDeviceConfiguration,Returns the device configuration associated with thisGraphics2D.
java.awt.Graphics2D.getFontRenderContext,Get the rendering context of theFontwithin thisGraphics2Dcontext.
java.awt.Graphics2D.getPaint,Returns the currentPaintof theGraphics2Dcontext.
java.awt.Graphics2D.getRenderingHint,Returns the value of a single preference for the rendering algorithms.
java.awt.Graphics2D.getRenderingHints,Gets the preferences for the rendering algorithms.
java.awt.Graphics2D.getStroke,Returns the currentStrokein theGraphics2Dcontext.
java.awt.Graphics2D.getTransform,Returns a copy of the currentTransformin theGraphics2Dcontext.
java.awt.Graphics2D.hit,"Checks whether or not the specifiedShapeintersects  the specifiedRectangle, which is in device  space."
java.awt.Graphics2D.rotate,Concatenates the currentGraphics2DTransformwith a rotation transform.
java.awt.Graphics2D.rotate,Concatenates the currentGraphics2DTransformwith a translated rotation  transform.
java.awt.Graphics2D.scale,Concatenates the currentGraphics2DTransformwith a scaling transformation  Subsequent rendering is resized according to the specified scaling  factors relative to the previous scaling.
java.awt.Graphics2D.setBackground,Sets the background color for theGraphics2Dcontext.
java.awt.Graphics2D.setComposite,Sets theCompositefor theGraphics2Dcontext.
java.awt.Graphics2D.setPaint,Sets thePaintattribute for theGraphics2Dcontext.
java.awt.Graphics2D.setRenderingHint,Sets the value of a single preference for the rendering algorithms.
java.awt.Graphics2D.setRenderingHints,Replaces the values of all preferences for the rendering  algorithms with the specifiedhints.
java.awt.Graphics2D.setStroke,Sets theStrokefor theGraphics2Dcontext.
java.awt.Graphics2D.setTransform,Overwrites the Transform in theGraphics2Dcontext.
java.awt.Graphics2D.shear,Concatenates the currentGraphics2DTransformwith a shearing transform.
java.awt.Graphics2D.transform,Composes anAffineTransformobject with theTransformin thisGraphics2Daccording  to the rule last-specified-first-applied.
java.awt.Graphics2D.translate,Concatenates the currentGraphics2D Transformwith a translation transform.
java.awt.Graphics2D.translate,"Translates the origin of theGraphics2Dcontext to the  point (x,y) in the current coordinate system."
java.awt.GraphicsConfigTemplate.getBestConfiguration,"Returns the ""best"" configuration possible that passes the  criteria defined in theGraphicsConfigTemplate."
java.awt.GraphicsConfigTemplate.isGraphicsConfigSupported,Returns abooleanindicating whether or  not the specifiedGraphicsConfigurationcan be  used to create a drawing surface that supports the indicated  features.
java.awt.GraphicsConfiguration.createCompatibleImage,Returns aBufferedImagewith a data layout and color model  compatible with thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.createCompatibleImage,Returns aBufferedImagethat supports the specified  transparency and has a data layout and color model  compatible with thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.createCompatibleVolatileImage,Returns aVolatileImagewith a data layout and color model  compatible with thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.createCompatibleVolatileImage,"Returns aVolatileImagewith a data layout and color model  compatible with thisGraphicsConfiguration, using  the specified image capabilities."
java.awt.GraphicsConfiguration.createCompatibleVolatileImage,"Returns aVolatileImagewith a data layout and color model  compatible with thisGraphicsConfiguration, using  the specified image capabilities and transparency value."
java.awt.GraphicsConfiguration.getBounds,Returns the bounds of theGraphicsConfigurationin the device coordinates.
java.awt.GraphicsConfiguration.getBufferCapabilities,Returns the buffering capabilities of thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.getColorModel,Returns theColorModelassociated with thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.getColorModel,Returns theColorModelassociated with thisGraphicsConfigurationthat supports the specified  transparency.
java.awt.GraphicsConfiguration.getDefaultTransform,Returns the defaultAffineTransformfor thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.getDevice,Returns theGraphicsDeviceassociated with thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.getImageCapabilities,Returns the image capabilities of thisGraphicsConfiguration.
java.awt.GraphicsConfiguration.getNormalizingTransform,Returns anAffineTransformthat can be concatenated  with the defaultAffineTransformof aGraphicsConfigurationso that 72 units in user  space equals 1 inch in device space.
java.awt.GraphicsConfiguration.isTranslucencyCapable,Returns whether thisGraphicsConfigurationsupports  thePERPIXEL_TRANSLUCENTkind of translucency.
java.awt.GraphicsDevice.getAvailableAcceleratedMemory,This method returns the number of bytes available in  accelerated memory on this device.
java.awt.GraphicsDevice.getConfigurations,Returns all of theGraphicsConfigurationobjects associated with thisGraphicsDevice.
java.awt.GraphicsDevice.getDefaultConfiguration,Returns the defaultGraphicsConfigurationassociated with thisGraphicsDevice.
java.awt.GraphicsDevice.getDisplayMode,Returns the current display mode of thisGraphicsDevice.
java.awt.GraphicsDevice.getDisplayModes,Returns all display modes available for thisGraphicsDevice.
java.awt.GraphicsDevice.getFullScreenWindow,Returns theWindowobject representing the  full-screen window if the device is in full-screen mode.
java.awt.GraphicsDevice.getIDstring,Returns the identification string associated with thisGraphicsDevice.
java.awt.GraphicsDevice.getType,Returns the type of thisGraphicsDevice.
java.awt.GraphicsDevice.isDisplayChangeSupported,Returnstrueif thisGraphicsDevicesupports low-level display changes.
java.awt.GraphicsDevice.isFullScreenSupported,Returnstrueif thisGraphicsDevicesupports full-screen exclusive mode.
java.awt.GraphicsDevice.isWindowTranslucencySupported,Returns whether the given level of translucency is supported by  this graphics device.
java.awt.GraphicsDevice.setDisplayMode,Sets the display mode of this graphics device.
java.awt.GraphicsDevice.setFullScreenWindow,"Enter full-screen mode, or return to windowed mode."
java.awt.GraphicsEnvironment.createGraphics,Returns aGraphics2Dobject for rendering into the  specifiedBufferedImage.
java.awt.GraphicsEnvironment.getAllFonts,Returns an array containing a one-point size instance of all fonts  available in thisGraphicsEnvironment.
java.awt.GraphicsEnvironment.getAvailableFontFamilyNames,"Returns an array containing the names of all font families in thisGraphicsEnvironmentlocalized for the default locale,  as returned byLocale.getDefault()."
java.awt.GraphicsEnvironment.getAvailableFontFamilyNames,Returns an array containing the names of all font families in thisGraphicsEnvironmentlocalized for the specified locale.
java.awt.GraphicsEnvironment.getCenterPoint,Returns the Point where Windows should be centered.
java.awt.GraphicsEnvironment.getDefaultScreenDevice,Returns the default screenGraphicsDevice.
java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment,Returns the localGraphicsEnvironment.
java.awt.GraphicsEnvironment.getMaximumWindowBounds,Returns the maximum bounds for centered Windows.
java.awt.GraphicsEnvironment.getScreenDevices,Returns an array of all of the screenGraphicsDeviceobjects.
java.awt.GraphicsEnvironment.isHeadless,"Tests whether or not a display, keyboard, and mouse can be  supported in this environment."
java.awt.GraphicsEnvironment.isHeadlessInstance,"Returns whether or not a display, keyboard, and mouse can be  supported in this graphics environment."
java.awt.GraphicsEnvironment.preferLocaleFonts,Indicates a preference for locale-specific fonts in the mapping of  logical fonts to physical fonts.
java.awt.GraphicsEnvironment.preferProportionalFonts,Indicates a preference for proportional over non-proportional (e.g.
java.awt.GraphicsEnvironment.registerFont,Registers acreatedFontin thisGraphicsEnvironment.
java.awt.GridBagConstraints.clone,Creates a copy of this grid bag constraint.
java.awt.GridBagLayout.addLayoutComponent,"Adds the specified component to the layout, using the specifiedconstraintsobject."
java.awt.GridBagLayout.addLayoutComponent,"Has no effect, since this layout manager does not use a per-component string."
java.awt.GridBagLayout.adjustForGravity,"Adjusts the x, y, width, and height fields to the correct  values depending on the constraint geometry and pads."
java.awt.GridBagLayout.arrangeGrid,Lays out the grid.
java.awt.GridBagLayout.ArrangeGrid,This method is obsolete and supplied for backwards  compatibility only; new code should callarrangeGridinstead.
java.awt.GridBagLayout.getConstraints,Gets the constraints for the specified component.
java.awt.GridBagLayout.getLayoutDimensions,Determines column widths and row heights for the layout grid.
java.awt.GridBagLayout.getLayoutInfo,Fills in an instance ofGridBagLayoutInfofor the  current set of managed children.
java.awt.GridBagLayout.GetLayoutInfo,This method is obsolete and supplied for backwards  compatibility only; new code should callgetLayoutInfoinstead.
java.awt.GridBagLayout.getLayoutOrigin,"Determines the origin of the layout area, in the graphics coordinate  space of the target container."
java.awt.GridBagLayout.getLayoutWeights,Determines the weights of the layout grid's columns and rows.
java.awt.GridBagLayout.getMinSize,Figures out the minimum size of the  parent based on the information fromgetLayoutInfo.
java.awt.GridBagLayout.GetMinSize,This method is obsolete and supplied for backwards  compatibility only; new code should callgetMinSizeinstead.
java.awt.GridBagLayout.layoutContainer,Lays out the specified container using this grid bag layout.
java.awt.GridBagLayout.location,"Determines which cell in the layout grid contains the point  specified by(x, y)."
java.awt.GridBagLayout.lookupConstraints,Retrieves the constraints for the specified component.
java.awt.GridBagLayout.minimumLayoutSize,Determines the minimum size of theparentcontainer  using this grid bag layout.
java.awt.GridBagLayout.preferredLayoutSize,Determines the preferred size of theparentcontainer using this grid bag layout.
java.awt.GridBagLayout.removeLayoutComponent,Removes the specified component from this layout.
java.awt.GridBagLayout.setConstraints,Sets the constraints for the specified component in this layout.
java.awt.GridBagLayout.toString,Returns a string representation of this grid bag layout's values.
java.awt.GridLayout.addLayoutComponent,Adds the specified component with the specified name to the layout.
java.awt.GridLayout.getColumns,Gets the number of columns in this layout.
java.awt.GridLayout.getRows,Gets the number of rows in this layout.
java.awt.GridLayout.layoutContainer,Lays out the specified container using this layout.
java.awt.GridLayout.minimumLayoutSize,Determines the minimum size of the container argument using this  grid layout.
java.awt.GridLayout.preferredLayoutSize,Determines the preferred size of the container argument using  this grid layout.
java.awt.GridLayout.setColumns,Sets the number of columns in this layout to the specified value.
java.awt.GridLayout.setHgap,Sets the horizontal gap between components to the specified value.
java.awt.GridLayout.setRows,Sets the number of rows in this layout to the specified value.
java.awt.GridLayout.setVgap,Sets the vertical gap between components to the specified value.
java.awt.GridLayout.toString,Returns the string representation of this grid layout's values.
java.awt.HeadlessException.getMessage,Returns the detail message string of thisHeadlessException.
java.awt.Image.flush,Flushes all reconstructable resources being used by this Image object.
java.awt.Image.getAccelerationPriority,Returns the current value of the acceleration priority hint.
java.awt.Image.getCapabilities,Returns an ImageCapabilities object which can be  inquired as to the capabilities of this  Image on the specified GraphicsConfiguration.
java.awt.Image.getGraphics,Creates a graphics context for drawing to an off-screen image.
java.awt.Image.getHeight,Determines the height of the image.
java.awt.Image.getProperty,Gets a property of this image by name.
java.awt.Image.getScaledInstance,Creates a scaled version of this image.
java.awt.Image.getSource,Gets the object that produces the pixels for the image.
java.awt.Image.getWidth,Determines the width of the image.
java.awt.Image.setAccelerationPriority,Sets a hint for this image about how important acceleration is.
java.awt.ImageCapabilities.isAccelerated,Returnstrueif the object whose capabilities are  encapsulated in thisImageCapabilitiescan be or is  accelerated.
java.awt.ImageCapabilities.isTrueVolatile,Returnstrueif theVolatileImagedescribed by thisImageCapabilitiescan lose  its surfaces.
java.awt.Insets.clone,Create a copy of this object.
java.awt.Insets.equals,Checks whether two insets objects are equal.
java.awt.Insets.hashCode,Returns the hash code for this Insets.
java.awt.Insets.set,"Set top, left, bottom, and right to the specified values"
java.awt.Insets.toString,Returns a string representation of thisInsetsobject.
java.awt.JobAttributes.clone,Creates and returns a copy of thisJobAttributes.
java.awt.JobAttributes.equals,Determines whether two JobAttributes are equal to each other.
java.awt.JobAttributes.getCopies,Returns the number of copies the application should render for jobs  using these attributes.
java.awt.JobAttributes.getDefaultSelection,"Specifies whether, for jobs using these attributes, the application  should print all pages, the range specified by the return value ofgetPageRanges, or the current selection."
java.awt.JobAttributes.getDestination,Specifies whether output will be to a printer or a file for jobs using  these attributes.
java.awt.JobAttributes.getDialog,"Returns whether, for jobs using these attributes, the user should see  a print dialog in which to modify the print settings, and which type of  print dialog should be displayed."
java.awt.JobAttributes.getFileName,Specifies the file name for the output file for jobs using these  attributes.
java.awt.JobAttributes.getFromPage,"Returns, for jobs using these attributes, the first page to be  printed, if a range of pages is to be printed."
java.awt.JobAttributes.getMaxPage,Specifies the maximum value the user can specify as the last page to  be printed for jobs using these attributes.
java.awt.JobAttributes.getMinPage,Specifies the minimum value the user can specify as the first page to  be printed for jobs using these attributes.
java.awt.JobAttributes.getMultipleDocumentHandling,"Specifies the handling of multiple copies, including collation, for  jobs using these attributes."
java.awt.JobAttributes.getPageRanges,"Specifies, for jobs using these attributes, the ranges of pages to be  printed, if a range of pages is to be printed."
java.awt.JobAttributes.getPrinter,Returns the destination printer for jobs using these attributes.
java.awt.JobAttributes.getSides,Returns how consecutive pages should be imposed upon the sides of the  print medium for jobs using these attributes.
java.awt.JobAttributes.getToPage,"Returns, for jobs using these attributes, the last page (inclusive)  to be printed, if a range of pages is to be printed."
java.awt.JobAttributes.hashCode,Returns a hash code value for this JobAttributes.
java.awt.JobAttributes.set,Sets all of the attributes of thisJobAttributesto  the same values as the attributes of obj.
java.awt.JobAttributes.setCopies,Specifies the number of copies the application should render for jobs  using these attributes.
java.awt.JobAttributes.setCopiesToDefault,Sets the number of copies the application should render for jobs using  these attributes to the default.
java.awt.JobAttributes.setDialog,"Specifies whether, for jobs using these attributes, the user should see  a print dialog in which to modify the print settings, and which type of  print dialog should be displayed."
java.awt.JobAttributes.setFromPage,"Specifies, for jobs using these attributes, the first page to be  printed, if a range of pages is to be printed."
java.awt.JobAttributes.setMultipleDocumentHandlingToDefault,"Sets the handling of multiple copies, including collation, for jobs  using these attributes to the default."
java.awt.JobAttributes.setPrinter,Specifies the destination printer for jobs using these attributes.
java.awt.JobAttributes.setSides,Specifies how consecutive pages should be imposed upon the sides of the  print medium for jobs using these attributes.
java.awt.JobAttributes.setSidesToDefault,Sets how consecutive pages should be imposed upon the sides of the  print medium for jobs using these attributes to the default.
java.awt.JobAttributes.setToPage,"Specifies, for jobs using these attributes, the last page (inclusive)  to be printed, if a range of pages is to be printed."
java.awt.JobAttributes.toString,Returns a string representation of this JobAttributes.
java.awt.KeyboardFocusManager.addKeyEventDispatcher,Adds a KeyEventDispatcher to this KeyboardFocusManager's dispatcher  chain.
java.awt.KeyboardFocusManager.addKeyEventPostProcessor,Adds a KeyEventPostProcessor to this KeyboardFocusManager's post-  processor chain.
java.awt.KeyboardFocusManager.addVetoableChangeListener,Adds a VetoableChangeListener to the listener list.
java.awt.KeyboardFocusManager.addVetoableChangeListener,Adds a VetoableChangeListener to the listener list for a specific  property.
java.awt.KeyboardFocusManager.clearFocusOwner,"Clears the focus owner at both the Java and native levels if the  focus owner exists and resides in the same context as the calling thread,  otherwise the method returns silently."
java.awt.KeyboardFocusManager.clearGlobalFocusOwner,Clears the global focus owner at both the Java and native levels.
java.awt.KeyboardFocusManager.dequeueKeyEvents,Called by the AWT to notify the KeyboardFocusManager that it should  cancel delayed dispatching of KeyEvents.
java.awt.KeyboardFocusManager.dispatchKeyEvent,"Typically this method will be called bydispatchEventif no  other KeyEventDispatcher in the dispatcher chain dispatched the  KeyEvent, or if no other KeyEventDispatchers are registered."
java.awt.KeyboardFocusManager.downFocusCycle,"Moves the focus down one focus traversal cycle from the current focus  owner, if and only if the current focus owner is a Container that is a  focus cycle root."
java.awt.KeyboardFocusManager.enqueueKeyEvents,Called by the AWT to notify the KeyboardFocusManager that it should  delay dispatching of KeyEvents until the specified Component becomes  the focus owner.
java.awt.KeyboardFocusManager.firePropertyChange,Fires a PropertyChangeEvent in response to a change in a bound property.
java.awt.KeyboardFocusManager.fireVetoableChange,Fires a PropertyChangeEvent in response to a change in a vetoable  property.
java.awt.KeyboardFocusManager.focusNextComponent,Focuses the Component after the current focus owner.
java.awt.KeyboardFocusManager.focusPreviousComponent,Focuses the Component before the current focus owner.
java.awt.KeyboardFocusManager.getActiveWindow,"Returns the active Window, if the active Window is in the same context  as the calling thread."
java.awt.KeyboardFocusManager.getCurrentFocusCycleRoot,"Returns the current focus cycle root, if the current focus cycle root is  in the same context as the calling thread."
java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager,Returns the current KeyboardFocusManager instance for the calling  thread's context.
java.awt.KeyboardFocusManager.getDefaultFocusTraversalKeys,Returns a Set of default focus traversal keys for a given traversal  operation.
java.awt.KeyboardFocusManager.getDefaultFocusTraversalPolicy,Returns the default FocusTraversalPolicy.
java.awt.KeyboardFocusManager.getFocusedWindow,"Returns the focused Window, if the focused Window is in the same context  as the calling thread."
java.awt.KeyboardFocusManager.getFocusOwner,"Returns the focus owner, if the focus owner is in the same context as  the calling thread."
java.awt.KeyboardFocusManager.getGlobalActiveWindow,"Returns the active Window, even if the calling thread is in a different  context than the active Window."
java.awt.KeyboardFocusManager.getGlobalCurrentFocusCycleRoot,"Returns the current focus cycle root, even if the calling thread is in a  different context than the current focus cycle root."
java.awt.KeyboardFocusManager.getGlobalFocusedWindow,"Returns the focused Window, even if the calling thread is in a different  context than the focused Window."
java.awt.KeyboardFocusManager.getGlobalFocusOwner,"Returns the focus owner, even if the calling thread is in a different  context than the focus owner."
java.awt.KeyboardFocusManager.getGlobalPermanentFocusOwner,"Returns the permanent focus owner, even if the calling thread is in a  different context than the permanent focus owner."
java.awt.KeyboardFocusManager.getKeyEventDispatchers,Returns this KeyboardFocusManager's KeyEventDispatcher chain as a List.
java.awt.KeyboardFocusManager.getKeyEventPostProcessors,Returns this KeyboardFocusManager's KeyEventPostProcessor chain as a  List.
java.awt.KeyboardFocusManager.getPermanentFocusOwner,"Returns the permanent focus owner, if the permanent focus owner is in  the same context as the calling thread."
java.awt.KeyboardFocusManager.getPropertyChangeListeners,Returns an array of all the property change listeners  registered on this keyboard focus manager.
java.awt.KeyboardFocusManager.getPropertyChangeListeners,Returns an array of all thePropertyChangeListeners  associated with the named property.
java.awt.KeyboardFocusManager.getVetoableChangeListeners,Returns an array of all the vetoable change listeners  registered on this keyboard focus manager.
java.awt.KeyboardFocusManager.getVetoableChangeListeners,Returns an array of all theVetoableChangeListeners  associated with the named property.
java.awt.KeyboardFocusManager.redispatchEvent,"Redispatches an AWTEvent in such a way that the AWT event dispatcher  will not recursively request that the KeyboardFocusManager, or any  installed KeyEventDispatchers, dispatch the event again."
java.awt.KeyboardFocusManager.removeKeyEventDispatcher,Removes a KeyEventDispatcher which was previously added to this  KeyboardFocusManager's dispatcher chain.
java.awt.KeyboardFocusManager.removeKeyEventPostProcessor,Removes a previously added KeyEventPostProcessor from this  KeyboardFocusManager's post-processor chain.
java.awt.KeyboardFocusManager.removePropertyChangeListener,Removes a PropertyChangeListener from the listener list.
java.awt.KeyboardFocusManager.removePropertyChangeListener,Removes a PropertyChangeListener from the listener list for a specific  property.
java.awt.KeyboardFocusManager.removeVetoableChangeListener,Removes a VetoableChangeListener from the listener list.
java.awt.KeyboardFocusManager.removeVetoableChangeListener,Removes a VetoableChangeListener from the listener list for a specific  property.
java.awt.KeyboardFocusManager.setCurrentKeyboardFocusManager,Sets the current KeyboardFocusManager instance for the calling thread's  context.
java.awt.KeyboardFocusManager.setDefaultFocusTraversalKeys,Sets the default focus traversal keys for a given traversal operation.
java.awt.KeyboardFocusManager.setDefaultFocusTraversalPolicy,Sets the default FocusTraversalPolicy.
java.awt.KeyboardFocusManager.setGlobalActiveWindow,Sets the active Window.
java.awt.KeyboardFocusManager.setGlobalCurrentFocusCycleRoot,Sets the current focus cycle root.
java.awt.KeyboardFocusManager.setGlobalFocusedWindow,Sets the focused Window.
java.awt.KeyboardFocusManager.setGlobalFocusOwner,Sets the focus owner.
java.awt.KeyboardFocusManager.setGlobalPermanentFocusOwner,Sets the permanent focus owner.
java.awt.KeyboardFocusManager.upFocusCycle,Moves the focus up one focus traversal cycle from the current focus  owner.
java.awt.Label.addNotify,Creates the peer for this label.
java.awt.Label.getAccessibleContext,Gets the AccessibleContext associated with this Label.
java.awt.Label.getAlignment,Gets the current alignment of this label.
java.awt.Label.getText,Gets the text of this label.
java.awt.Label.paramString,Returns a string representing the state of thisLabel.
java.awt.Label.setAlignment,Sets the alignment for this label to the specified alignment.
java.awt.Label.setText,Sets the text for this label to the specified text.
java.awt.LinearGradientPaint.getEndPoint,Returns a copy of the end point of the gradient axis.
java.awt.LinearGradientPaint.getStartPoint,Returns a copy of the start point of the gradient axis.
java.awt.List.addFocusListener,Adds the specified focus listener to receive focus events from  this component.
java.awt.List.contains,"Checks whether the specified point is within this object's  bounds, where the point's x and y coordinates are defined to  be relative to the coordinate system of the object."
java.awt.List.getAccessibleChild,Return the specified Accessible child of the object.
java.awt.List.getAccessibleChildrenCount,Returns the number of accessible children of the object.
java.awt.List.getAccessibleContext,Gets the AccessibleContext for this object.
java.awt.List.getAccessibleIndexInParent,Get the 0-based index of this object in its accessible parent.
java.awt.List.getBackground,Get the background color of this object.
java.awt.List.getCursor,Get the Cursor of this object.
java.awt.List.getFont,Get the Font of this object.
java.awt.List.getFontMetrics,Get the FontMetrics of this object.
java.awt.List.getForeground,Get the foreground color of this object.
java.awt.List.getLocale,Gets the locale of the component.
java.awt.List.getLocation,Gets the location of the object relative to the parent in the  form of a point specifying the object's top-left corner in the  screen's coordinate space.
java.awt.List.getSize,Returns the size of this object in the form of a Dimension  object.
java.awt.List.isEnabled,Determine if the object is enabled.
java.awt.List.isShowing,Determine if the object is showing.
java.awt.List.isVisible,Determine if the object is visible.
java.awt.List.removeFocusListener,Removes the specified focus listener so it no longer receives  focus events from this component.
java.awt.List.setBackground,Set the background color of this object.
java.awt.List.setBounds,Sets the bounds of this object in the form of a Rectangle  object.
java.awt.List.setCursor,Set the Cursor of this object.
java.awt.List.setEnabled,Set the enabled state of the object.
java.awt.List.setFont,Set the Font of this object.
java.awt.List.setForeground,Set the foreground color of this object.
java.awt.List.setVisible,Set the visible state of the object.
java.awt.List.actionPerformed,Invoked when an action occurs.
java.awt.List.addAccessibleSelection,Adds the specified selected item in the object to the object's  selection.
java.awt.List.clearAccessibleSelection,"Clears the selection in the object, so that nothing in the  object is selected."
java.awt.List.getAccessibleAt,"Returns the Accessible child contained at the local coordinate  Point, if one exists."
java.awt.List.getAccessibleChild,Return the nth Accessible child of the object.
java.awt.List.getAccessibleSelection,Get the AccessibleSelection associated with this object.
java.awt.List.getAccessibleSelection,Returns an Accessible representing the specified selected item  in the object.
java.awt.List.getAccessibleSelectionCount,Returns the number of items currently selected.
java.awt.List.isAccessibleChildSelected,Returns true if the current child of this object is selected.
java.awt.List.itemStateChanged,Invoked when an item has been selected or deselected by the user.
java.awt.List.removeAccessibleSelection,Removes the specified selected item in the object from the object's  selection.
java.awt.List.selectAllAccessibleSelection,Causes every selected item in the object to be selected  if the object supports multiple selections.
java.awt.List.add,Adds the specified item to the end of scrolling list.
java.awt.List.add,Adds the specified item to the scrolling list  at the position indicated by the index.
java.awt.List.addActionListener,Adds the specified action listener to receive action events from  this list.
java.awt.List.addItem,Deprecated.replaced byadd(String).
java.awt.List.addItem,"Deprecated.replaced byadd(String, int)."
java.awt.List.addItemListener,Adds the specified item listener to receive item events from  this list.
java.awt.List.addNotify,Creates the peer for the list.
java.awt.List.allowsMultipleSelections,"Deprecated.As of JDK version 1.1,  replaced byisMultipleMode()."
java.awt.List.clear,"Deprecated.As of JDK version 1.1,  replaced byremoveAll()."
java.awt.List.delItem,Deprecated.replaced byremove(String)andremove(int).
java.awt.List.delItems,"Deprecated.As of JDK version 1.1,  Not for public use in the future."
java.awt.List.deselect,Deselects the item at the specified index.
java.awt.List.getAccessibleContext,Gets theAccessibleContextassociated with thisList.
java.awt.List.getActionListeners,Returns an array of all the action listeners  registered on this list.
java.awt.List.getItem,Gets the item associated with the specified index.
java.awt.List.getItemCount,Gets the number of items in the list.
java.awt.List.getItemListeners,Returns an array of all the item listeners  registered on this list.
java.awt.List.getItems,Gets the items in the list.
java.awt.List.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisList.
java.awt.List.getMinimumSize,Determines the minimum size of this scrolling list.
java.awt.List.getMinimumSize,Gets the minimum dimensions for a list with the specified  number of rows.
java.awt.List.getPreferredSize,Gets the preferred size of this scrolling list.
java.awt.List.getPreferredSize,Gets the preferred dimensions for a list with the specified  number of rows.
java.awt.List.getRows,Gets the number of visible lines in this list.
java.awt.List.getSelectedIndex,"Gets the index of the selected item on the list,"
java.awt.List.getSelectedIndexes,Gets the selected indexes on the list.
java.awt.List.getSelectedItem,Gets the selected item on this scrolling list.
java.awt.List.getSelectedItems,Gets the selected items on this scrolling list.
java.awt.List.getSelectedObjects,Gets the selected items on this scrolling list in an array of Objects.
java.awt.List.getVisibleIndex,Gets the index of the item that was last made visible by  the methodmakeVisible.
java.awt.List.isIndexSelected,Determines if the specified item in this scrolling list is  selected.
java.awt.List.isMultipleMode,Determines whether this list allows multiple selections.
java.awt.List.isSelected,"Deprecated.As of JDK version 1.1,  replaced byisIndexSelected(int)."
java.awt.List.makeVisible,Makes the item at the specified index visible.
java.awt.List.minimumSize,"Deprecated.As of JDK version 1.1,  replaced bygetMinimumSize(int)."
java.awt.List.paramString,Returns the parameter string representing the state of this  scrolling list.
java.awt.List.preferredSize,"Deprecated.As of JDK version 1.1,  replaced bygetPreferredSize(int)."
java.awt.List.processActionEvent,Processes action events occurring on this component  by dispatching them to any registeredActionListenerobjects.
java.awt.List.processEvent,Processes events on this scrolling list.
java.awt.List.processItemEvent,Processes item events occurring on this list by  dispatching them to any registeredItemListenerobjects.
java.awt.List.remove,Removes the item at the specified position  from this scrolling list.
java.awt.List.remove,Removes the first occurrence of an item from the list.
java.awt.List.removeActionListener,Removes the specified action listener so that it no longer  receives action events from this list.
java.awt.List.removeAll,Removes all items from this list.
java.awt.List.removeItemListener,Removes the specified item listener so that it no longer  receives item events from this list.
java.awt.List.removeNotify,Removes the peer for this list.
java.awt.List.replaceItem,Replaces the item at the specified index in the scrolling list  with the new string.
java.awt.List.select,Selects the item at the specified index in the scrolling list.
java.awt.List.setMultipleMode,Sets the flag that determines whether this list  allows multiple selections.
java.awt.List.setMultipleSelections,"Deprecated.As of JDK version 1.1,  replaced bysetMultipleMode(boolean)."
java.awt.MediaTracker.addImage,Adds an image to the list of images being tracked by this media  tracker.
java.awt.MediaTracker.addImage,Adds a scaled image to the list of images being tracked  by this media tracker.
java.awt.MediaTracker.checkAll,Checks to see if all images being tracked by this media tracker  have finished loading.
java.awt.MediaTracker.checkID,Checks to see if all images tracked by this media tracker that  are tagged with the specified identifier have finished loading.
java.awt.MediaTracker.getErrorsAny,Returns a list of all media that have encountered an error.
java.awt.MediaTracker.getErrorsID,Returns a list of media with the specified ID that  have encountered an error.
java.awt.MediaTracker.isErrorAny,Checks the error status of all of the images.
java.awt.MediaTracker.isErrorID,Checks the error status of all of the images tracked by this  media tracker with the specified identifier.
java.awt.MediaTracker.removeImage,Removes the specified image from this media tracker.
java.awt.MediaTracker.removeImage,Removes the specified image from the specified tracking  ID of this media tracker.
java.awt.MediaTracker.removeImage,"Removes the specified image with the specified  width, height, and ID from this media tracker."
java.awt.MediaTracker.statusAll,Calculates and returns the bitwise inclusiveORof the  status of all media that are tracked by this media tracker.
java.awt.MediaTracker.statusID,Calculates and returns the bitwise inclusiveORof the  status of all media with the specified identifier that are  tracked by this media tracker.
java.awt.MediaTracker.waitForAll,Starts loading all images tracked by this media tracker.
java.awt.MediaTracker.waitForID,Starts loading all images tracked by this media tracker with the  specified identifier.
java.awt.Menu.add,Adds the specified menu item to this menu.
java.awt.Menu.add,Adds an item with the specified label to this menu.
java.awt.Menu.addNotify,Creates the menu's peer.
java.awt.Menu.addSeparator,"Adds a separator line, or a hypen, to the menu at the current position."
java.awt.Menu.getAccessibleContext,Gets the AccessibleContext associated with this Menu.
java.awt.Menu.getItem,Gets the item located at the specified index of this menu.
java.awt.Menu.getItemCount,Get the number of items in this menu.
java.awt.Menu.insert,Inserts a menu item into this menu  at the specified position.
java.awt.Menu.insert,Inserts a menu item with the specified label into this menu  at the specified position.
java.awt.Menu.insertSeparator,Inserts a separator at the specified position.
java.awt.Menu.isTearOff,Indicates whether this menu is a tear-off menu.
java.awt.Menu.paramString,Returns a string representing the state of thisMenu.
java.awt.Menu.remove,Removes the menu item at the specified index from this menu.
java.awt.Menu.remove,Removes the specified menu item from this menu.
java.awt.Menu.removeAll,Removes all items from this menu.
java.awt.Menu.removeNotify,Removes the menu's peer.
java.awt.MenuBar.add,Adds the specified menu to the menu bar.
java.awt.MenuBar.addNotify,Creates the menu bar's peer.
java.awt.MenuBar.countMenus,"Deprecated.As of JDK version 1.1,  replaced bygetMenuCount()."
java.awt.MenuBar.deleteShortcut,Deletes the specified menu shortcut.
java.awt.MenuBar.getAccessibleContext,Gets the AccessibleContext associated with this MenuBar.
java.awt.MenuBar.getHelpMenu,Gets the help menu on the menu bar.
java.awt.MenuBar.getMenu,Gets the specified menu.
java.awt.MenuBar.getMenuCount,Gets the number of menus on the menu bar.
java.awt.MenuBar.getShortcutMenuItem,"Gets the instance ofMenuItemassociated  with the specifiedMenuShortcutobject,  ornullif none of the menu items being managed  by this menu bar is associated with the specified menu  shortcut."
java.awt.MenuBar.remove,Removes the menu located at the specified  index from this menu bar.
java.awt.MenuBar.remove,Removes the specified menu component from this menu bar.
java.awt.MenuBar.removeNotify,Removes the menu bar's peer.
java.awt.MenuBar.setHelpMenu,Sets the specified menu to be this menu bar's help menu.
java.awt.MenuBar.shortcuts,Gets an enumeration of all menu shortcuts this menu bar  is managing.
java.awt.MenuComponent.addAccessibleSelection,Adds the specifiedAccessiblechild of the object  to the object's selection.
java.awt.MenuComponent.clearAccessibleSelection,"Clears the selection in the object, so that no children in the  object are selected."
java.awt.MenuComponent.getAccessibleComponent,Gets theAccessibleComponentassociated with  this object if one exists.
java.awt.MenuComponent.getAccessibleSelection,Gets theAccessibleSelectionassociated with this  object which allows itsAccessiblechildren to be selected.
java.awt.MenuComponent.getAccessibleSelection,Returns anAccessiblerepresenting the specified  selected child in the object.
java.awt.MenuComponent.getAccessibleSelectionCount,Returns the number ofAccessiblechildren currently selected.
java.awt.MenuComponent.getBounds,Gets the bounds of this object in the form of aRectangleobject.
java.awt.MenuComponent.isAccessibleChildSelected,Determines if the current child of this object is selected.
java.awt.MenuComponent.removeAccessibleSelection,Removes the specified child of the object from the object's  selection.
java.awt.MenuComponent.selectAllAccessibleSelection,Causes every child of the object to be selected  if the object supports multiple selections.
java.awt.MenuComponent.setSize,Resizes this object.
java.awt.MenuComponent.dispatchEvent,Delivers an event to this component or one of its sub components.
java.awt.MenuComponent.getAccessibleContext,Gets theAccessibleContextassociated with  thisMenuComponent.
java.awt.MenuComponent.getFont,Gets the font used for this menu component.
java.awt.MenuComponent.getName,Gets the name of the menu component.
java.awt.MenuComponent.getParent,Returns the parent container for this menu component.
java.awt.MenuComponent.getTreeLock,Gets this component's locking object (the object that owns the thread  synchronization monitor) for AWT component-tree and layout  operations.
java.awt.MenuComponent.paramString,Returns a string representing the state of thisMenuComponent.
java.awt.MenuComponent.postEvent,"Deprecated.As of JDK version 1.1, replaced bydispatchEvent."
java.awt.MenuComponent.processEvent,Processes events occurring on this menu component.
java.awt.MenuComponent.removeNotify,Removes the menu component's peer.
java.awt.MenuComponent.setFont,Sets the font to be used for this menu component to the specified  font.
java.awt.MenuComponent.setName,Sets the name of the component to the specified string.
java.awt.MenuComponent.toString,Returns a representation of this menu component as a string.
java.awt.MenuItem.addActionListener,Adds the specified action listener to receive action events  from this menu item.
java.awt.MenuItem.addNotify,Creates the menu item's peer.
java.awt.MenuItem.deleteShortcut,Delete anyMenuShortcutobject associated  with this menu item.
java.awt.MenuItem.disable,"Deprecated.As of JDK version 1.1,  replaced bysetEnabled(boolean)."
java.awt.MenuItem.disableEvents,Disables event delivery to this menu item for events  defined by the specified event mask parameter.
java.awt.MenuItem.enableEvents,Enables event delivery to this menu item for events  to be defined by the specified event mask parameter
java.awt.MenuItem.getAccessibleContext,Gets the AccessibleContext associated with this MenuItem.
java.awt.MenuItem.getActionCommand,Gets the command name of the action event that is fired  by this menu item.
java.awt.MenuItem.getActionListeners,Returns an array of all the action listeners  registered on this menu item.
java.awt.MenuItem.getLabel,Gets the label for this menu item.
java.awt.MenuItem.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisMenuItem.
java.awt.MenuItem.getShortcut,"Get theMenuShortcutobject associated with this  menu item,"
java.awt.MenuItem.isEnabled,Checks whether this menu item is enabled.
java.awt.MenuItem.paramString,Returns a string representing the state of thisMenuItem.
java.awt.MenuItem.processActionEvent,"Processes action events occurring on this menu item,  by dispatching them to any registeredActionListenerobjects."
java.awt.MenuItem.processEvent,Processes events on this menu item.
java.awt.MenuItem.removeActionListener,Removes the specified action listener so it no longer receives  action events from this menu item.
java.awt.MenuItem.setActionCommand,Sets the command name of the action event that is fired  by this menu item.
java.awt.MenuItem.setEnabled,Sets whether or not this menu item can be chosen.
java.awt.MenuItem.setLabel,Sets the label for this menu item to the specified label.
java.awt.MenuItem.setShortcut,Set theMenuShortcutobject associated with this  menu item.
java.awt.MenuShortcut.equals,Returns whether this MenuShortcut is the same as another:  equality is defined to mean that both MenuShortcuts use the same key  and both either use or don't use the SHIFT key.
java.awt.MenuShortcut.getKey,Returns the raw keycode of this MenuShortcut.
java.awt.MenuShortcut.hashCode,Returns the hashcode for this MenuShortcut.
java.awt.MenuShortcut.paramString,Returns the parameter string representing the state of this  MenuShortcut.
java.awt.MenuShortcut.toString,Returns an internationalized description of the MenuShortcut.
java.awt.MenuShortcut.usesShiftModifier,Returns whether this MenuShortcut must be invoked using the SHIFT key.
java.awt.MouseInfo.getNumberOfButtons,Returns the number of buttons on the mouse.
java.awt.MouseInfo.getPointerInfo,Returns aPointerInfoinstance that represents the current  location of the mouse pointer.
java.awt.MultipleGradientPaint.getColors,Returns a copy of the array of colors used by this gradient.
java.awt.MultipleGradientPaint.getColorSpace,Returns the enumerated type which specifies color space for  interpolation.
java.awt.MultipleGradientPaint.getCycleMethod,Returns the enumerated type which specifies cycling behavior.
java.awt.MultipleGradientPaint.getFractions,Returns a copy of the array of floats used by this gradient  to calculate color distribution.
java.awt.MultipleGradientPaint.getTransform,Returns a copy of the transform applied to the gradient.
java.awt.MultipleGradientPaint.getTransparency,Returns the transparency mode for thisPaintobject.
java.awt.PageAttributes.clone,Creates and returns a copy of this PageAttributes.
java.awt.PageAttributes.equals,Determines whether two PageAttributes are equal to each other.
java.awt.PageAttributes.getColor,Returns whether pages using these attributes will be rendered in  color or monochrome.
java.awt.PageAttributes.getMedia,Returns the paper size for pages using these attributes.
java.awt.PageAttributes.getOrientationRequested,Returns the print orientation for pages using these attributes.
java.awt.PageAttributes.getOrigin,"Returns whether drawing at (0, 0) to pages using these attributes  draws at the upper-left corner of the physical page, or at the  upper-left corner of the printable area."
java.awt.PageAttributes.getPrinterResolution,Returns the print resolution for pages using these attributes.
java.awt.PageAttributes.getPrintQuality,Returns the print quality for pages using these attributes.
java.awt.PageAttributes.hashCode,Returns a hash code value for this PageAttributes.
java.awt.PageAttributes.set,Sets all of the attributes of this PageAttributes to the same values as  the attributes of obj.
java.awt.PageAttributes.setColor,Specifies whether pages using these attributes will be rendered in  color or monochrome.
java.awt.PageAttributes.setMedia,Specifies the desired paper size for pages using these attributes.
java.awt.PageAttributes.setMediaToDefault,Sets the paper size for pages using these attributes to the default  size for the default locale.
java.awt.PageAttributes.setOrientationRequested,Specifies the print orientation for pages using these attributes.
java.awt.PageAttributes.setOrientationRequestedToDefault,Sets the print orientation for pages using these attributes to the  default.
java.awt.PageAttributes.setOrigin,"Specifies whether drawing at (0, 0) to pages using these attributes  draws at the upper-left corner of the physical page, or at the  upper-left corner of the printable area."
java.awt.PageAttributes.setPrinterResolution,Specifies the desired cross feed and feed print resolutions in dots per  inch for pages using these attributes.
java.awt.PageAttributes.setPrinterResolution,Specifies the desired print resolution for pages using these attributes.
java.awt.PageAttributes.setPrinterResolutionToDefault,Sets the printer resolution for pages using these attributes to the  default.
java.awt.PageAttributes.setPrintQuality,Specifies the print quality for pages using these attributes.
java.awt.PageAttributes.setPrintQualityToDefault,Sets the print quality for pages using these attributes to the default.
java.awt.PageAttributes.toString,Returns a string representation of this PageAttributes.
java.awt.Panel.addNotify,Creates the Panel's peer.
java.awt.Panel.getAccessibleContext,Gets the AccessibleContext associated with this Panel.
java.awt.Point.equals,Determines whether or not two points are equal.
java.awt.Point.getLocation,Returns the location of this point.
java.awt.Point.getX,Returns the X coordinate of thisPoint2Dindoubleprecision.
java.awt.Point.getY,Returns the Y coordinate of thisPoint2Dindoubleprecision.
java.awt.Point.move,"Moves this point to the specified location in the(x,y)coordinate plane."
java.awt.Point.setLocation,Sets the location of this point to the specified double coordinates.
java.awt.Point.setLocation,Changes the point to have the specified location.
java.awt.Point.setLocation,Sets the location of the point to the specified location.
java.awt.Point.toString,"Returns a string representation of this point and its location  in the(x,y)coordinate space."
java.awt.Point.translate,"Translates this point, at location(x,y),  bydxalong thexaxis anddyalong theyaxis so that it now represents the point(x+dx,y+dy)."
java.awt.PointerInfo.getDevice,Returns theGraphicsDevicewhere the mouse pointer was at the  moment thisPointerInfowas created.
java.awt.PointerInfo.getLocation,Returns thePointthat represents the coordinates of the pointer  on the screen.
java.awt.Polygon.addPoint,Appends the specified coordinates to thisPolygon.
java.awt.Polygon.contains,"Tests if the specified coordinates are inside the boundary of theShape, as described by thedefinition of insideness."
java.awt.Polygon.contains,Tests if the interior of theShapeentirely contains  the specified rectangular area.
java.awt.Polygon.contains,Determines whether the specified coordinates are inside thisPolygon.
java.awt.Polygon.contains,"Tests if a specifiedPoint2Dis inside the boundary  of theShape, as described by thedefinition of insideness."
java.awt.Polygon.contains,Tests if the interior of theShapeentirely contains the  specifiedRectangle2D.
java.awt.Polygon.contains,Determines whether the specifiedPointis inside thisPolygon.
java.awt.Polygon.getBoundingBox,"Deprecated.As of JDK version 1.1,  replaced bygetBounds()."
java.awt.Polygon.getBounds,Gets the bounding box of thisPolygon.
java.awt.Polygon.getBounds2D,Returns a high precision and more accurate bounding box of  theShapethan thegetBoundsmethod.
java.awt.Polygon.getPathIterator,Returns an iterator object that iterates along the boundary of thisPolygonand provides access to the geometry  of the outline of thisPolygon.
java.awt.Polygon.getPathIterator,Returns an iterator object that iterates along the boundary of  theShapeand provides access to the geometry of the  outline of theShape.
java.awt.Polygon.inside,"Deprecated.As of JDK version 1.1,  replaced bycontains(int, int)."
java.awt.Polygon.intersects,Tests if the interior of theShapeintersects the  interior of a specified rectangular area.
java.awt.Polygon.intersects,Tests if the interior of theShapeintersects the  interior of a specifiedRectangle2D.
java.awt.Polygon.invalidate,Invalidates or flushes any internally-cached data that depends  on the vertex coordinates of thisPolygon.
java.awt.Polygon.reset,Resets thisPolygonobject to an empty polygon.
java.awt.Polygon.translate,Translates the vertices of thePolygonbydeltaXalong the x axis and bydeltaYalong the y axis.
java.awt.PopupMenu.addNotify,Creates the popup menu's peer.
java.awt.PopupMenu.getAccessibleContext,Gets theAccessibleContextassociated with thisPopupMenu.
java.awt.PopupMenu.show,"Shows the popup menu at the x, y position relative to an origin  component."
java.awt.PrintJob.end,Ends the print job and does any necessary cleanup.
java.awt.PrintJob.getGraphics,Gets a Graphics object that will draw to the next page.
java.awt.PrintJob.getPageDimension,Returns the dimensions of the page in pixels.
java.awt.PrintJob.getPageResolution,Returns the resolution of the page in pixels per inch.
java.awt.PrintJob.lastPageFirst,Returns true if the last page will be printed first.
java.awt.RadialGradientPaint.createContext,Creates and returns aPaintContextused to  generate a circular radial color gradient pattern.
java.awt.RadialGradientPaint.getCenterPoint,Returns a copy of the center point of the radial gradient.
java.awt.RadialGradientPaint.getFocusPoint,Returns a copy of the focus point of the radial gradient.
java.awt.RadialGradientPaint.getRadius,Returns the radius of the circle defining the radial gradient.
java.awt.Rectangle.add,"Adds a point, specified by the integer argumentsnewx,newyto the bounds of thisRectangle."
java.awt.Rectangle.add,Adds the specifiedPointto the bounds of thisRectangle.
java.awt.Rectangle.add,Adds aRectangleto thisRectangle.
java.awt.Rectangle.contains,"Checks whether or not thisRectanglecontains the  point at the specified location(x,y)."
java.awt.Rectangle.contains,"Checks whether thisRectangleentirely contains  theRectangleat the specified location(X,Y)with the  specified dimensions(W,H)."
java.awt.Rectangle.contains,Checks whether or not thisRectanglecontains the  specifiedPoint.
java.awt.Rectangle.contains,Checks whether or not thisRectangleentirely contains  the specifiedRectangle.
java.awt.Rectangle.createIntersection,Returns a newRectangle2Dobject representing the  intersection of thisRectangle2Dwith the specifiedRectangle2D.
java.awt.Rectangle.createUnion,Returns a newRectangle2Dobject representing the  union of thisRectangle2Dwith the specifiedRectangle2D.
java.awt.Rectangle.equals,Checks whether two rectangles are equal.
java.awt.Rectangle.getBounds,Gets the boundingRectangleof thisRectangle.
java.awt.Rectangle.getHeight,Returns the height of the boundingRectangleindoubleprecision.
java.awt.Rectangle.getLocation,Returns the location of thisRectangle.
java.awt.Rectangle.getSize,"Gets the size of thisRectangle, represented by  the returnedDimension."
java.awt.Rectangle.getWidth,Returns the width of the boundingRectangleindoubleprecision.
java.awt.Rectangle.getX,Returns the X coordinate of the boundingRectangleindoubleprecision.
java.awt.Rectangle.getY,Returns the Y coordinate of the boundingRectangleindoubleprecision.
java.awt.Rectangle.grow,Resizes theRectangleboth horizontally and vertically.
java.awt.Rectangle.intersection,Computes the intersection of thisRectanglewith the  specifiedRectangle.
java.awt.Rectangle.intersects,Determines whether or not thisRectangleand the specifiedRectangleintersect.
java.awt.Rectangle.isEmpty,Determines whether theRectangularShapeis empty.
java.awt.Rectangle.move,"Deprecated.As of JDK version 1.1,  replaced bysetLocation(int, int)."
java.awt.Rectangle.outcode,Determines where the specified coordinates lie with respect  to thisRectangle2D.
java.awt.Rectangle.reshape,"Deprecated.As of JDK version 1.1,  replaced bysetBounds(int, int, int, int)."
java.awt.Rectangle.resize,"Deprecated.As of JDK version 1.1,  replaced bysetSize(int, int)."
java.awt.Rectangle.setBounds,"Sets the boundingRectangleof thisRectangleto the specifiedx,y,width,  andheight."
java.awt.Rectangle.setBounds,Sets the boundingRectangleof thisRectangleto match the specifiedRectangle.
java.awt.Rectangle.setLocation,Moves thisRectangleto the specified location.
java.awt.Rectangle.setRect,"Sets the bounds of thisRectangleto the integer bounds  which encompass the specifiedx,y,width,  andheight."
java.awt.Rectangle.setSize,Sets the size of thisRectangleto the specified  width and height.
java.awt.Rectangle.setSize,Sets the size of thisRectangleto match the  specifiedDimension.
java.awt.Rectangle.toString,Returns aStringrepresenting thisRectangleand its values.
java.awt.Rectangle.translate,"Translates thisRectanglethe indicated distance,  to the right along the X coordinate axis, and  downward along the Y coordinate axis."
java.awt.Rectangle.union,Computes the union of thisRectanglewith the  specifiedRectangle.
java.awt.RenderingHints.add,Adds all of the keys and corresponding values from the specifiedRenderingHintsobject to thisRenderingHintsobject.
java.awt.RenderingHints.clear,Clears thisRenderingHintsobject of all key/value  pairs.
java.awt.RenderingHints.clone,Creates a clone of thisRenderingHintsobject  that has the same contents as thisRenderingHintsobject.
java.awt.RenderingHints.containsKey,Returnstrueif thisRenderingHintscontains a mapping for the specified key.
java.awt.RenderingHints.containsValue,Returns true if this RenderingHints maps one or more keys to the  specified value.
java.awt.RenderingHints.entrySet,Returns aSetview of the mappings contained  in thisRenderingHints.
java.awt.RenderingHints.equals,Compares the specifiedObjectwith thisRenderingHintsfor equality.
java.awt.RenderingHints.get,Returns the value to which the specified key is mapped.
java.awt.RenderingHints.hashCode,Returns the hash code value for thisRenderingHints.
java.awt.RenderingHints.isEmpty,Returnstrueif thisRenderingHintscontains no key-value mappings.
java.awt.RenderingHints.keySet,Returns aSetview of the Keys contained in thisRenderingHints.
java.awt.RenderingHints.put,Maps the specifiedkeyto the specifiedvaluein thisRenderingHintsobject.
java.awt.RenderingHints.putAll,Copies all of the mappings from the specifiedMapto thisRenderingHints.
java.awt.RenderingHints.remove,Removes the key and its corresponding value from thisRenderingHintsobject.
java.awt.RenderingHints.size,Returns the number of key-value mappings in thisRenderingHints.
java.awt.RenderingHints.toString,Returns a rather long string representation of the hashmap  which contains the mappings of keys to values for thisRenderingHintsobject.
java.awt.RenderingHints.values,Returns aCollectionview of the values  contained in thisRenderingHints.
java.awt.RenderingHints.equals,The equals method for all Key objects will return the same  result as the equality operator '=='.
java.awt.RenderingHints.hashCode,The hash code for all Key objects will be the same as the  system identity code of the object as defined by the  System.identityHashCode() method.
java.awt.RenderingHints.intKey,Returns the private integer key that the subclass  instantiated this Key with.
java.awt.RenderingHints.isCompatibleValue,Returns true if the specified object is a valid value  for this Key.
java.awt.Robot.createMultiResolutionScreenCapture,Creates an image containing pixels read from the screen.
java.awt.Robot.delay,Sleeps for the specified time.
java.awt.Robot.getAutoDelay,Returns the number of milliseconds this Robot sleeps after generating an event.
java.awt.Robot.getPixelColor,Returns the color of a pixel at the given screen coordinates.
java.awt.Robot.isAutoWaitForIdle,Returns whether this Robot automatically invokeswaitForIdleafter generating an event.
java.awt.Robot.keyPress,Presses a given key.
java.awt.Robot.keyRelease,Releases a given key.
java.awt.Robot.mouseMove,Moves mouse pointer to given screen coordinates.
java.awt.Robot.mousePress,Presses one or more mouse buttons.
java.awt.Robot.mouseRelease,Releases one or more mouse buttons.
java.awt.Robot.mouseWheel,Rotates the scroll wheel on wheel-equipped mice.
java.awt.Robot.setAutoDelay,Sets the number of milliseconds this Robot sleeps after generating an event.
java.awt.Robot.setAutoWaitForIdle,Sets whether this Robot automatically invokeswaitForIdleafter generating an event.
java.awt.Robot.toString,Returns a string representation of this Robot.
java.awt.Robot.waitForIdle,Waits until all events currently on the event queue have been processed.
java.awt.Scrollbar.getAccessibleValue,Get theAccessibleValueassociated with this  object.
java.awt.Scrollbar.getCurrentAccessibleValue,Get the accessible value of this object.
java.awt.Scrollbar.getMaximumAccessibleValue,Get the maximum accessible value of this object.
java.awt.Scrollbar.getMinimumAccessibleValue,Get the minimum accessible value of this object.
java.awt.Scrollbar.addAdjustmentListener,Adds the specified adjustment listener to receive instances ofAdjustmentEventfrom this scroll bar.
java.awt.Scrollbar.addNotify,Creates theScrollbar's peer.
java.awt.Scrollbar.getAccessibleContext,Gets theAccessibleContextassociated with thisScrollbar.
java.awt.Scrollbar.getAdjustmentListeners,Returns an array of all the adjustment listeners  registered on this scrollbar.
java.awt.Scrollbar.getBlockIncrement,Gets the block increment of this scroll bar.
java.awt.Scrollbar.getLineIncrement,"Deprecated.As of JDK version 1.1,  replaced bygetUnitIncrement()."
java.awt.Scrollbar.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisScrollbar.
java.awt.Scrollbar.getMaximum,Gets the maximum value of this scroll bar.
java.awt.Scrollbar.getMinimum,Gets the minimum value of this scroll bar.
java.awt.Scrollbar.getOrientation,Returns the orientation of this scroll bar.
java.awt.Scrollbar.getPageIncrement,"Deprecated.As of JDK version 1.1,  replaced bygetBlockIncrement()."
java.awt.Scrollbar.getUnitIncrement,Gets the unit increment for this scrollbar.
java.awt.Scrollbar.getValue,Gets the current value of this scroll bar.
java.awt.Scrollbar.getValueIsAdjusting,Returns true if the value is in the process of changing as a  result of actions being taken by the user.
java.awt.Scrollbar.getVisible,"Deprecated.As of JDK version 1.1,  replaced bygetVisibleAmount()."
java.awt.Scrollbar.getVisibleAmount,Gets the visible amount of this scroll bar.
java.awt.Scrollbar.paramString,Returns a string representing the state of thisScrollbar.
java.awt.Scrollbar.processAdjustmentEvent,Processes adjustment events occurring on this  scrollbar by dispatching them to any registeredAdjustmentListenerobjects.
java.awt.Scrollbar.processEvent,Processes events on this scroll bar.
java.awt.Scrollbar.removeAdjustmentListener,Removes the specified adjustment listener so that it no longer  receives instances ofAdjustmentEventfrom this scroll bar.
java.awt.Scrollbar.setBlockIncrement,Sets the block increment for this scroll bar.
java.awt.Scrollbar.setLineIncrement,"Deprecated.As of JDK version 1.1,  replaced bysetUnitIncrement(int)."
java.awt.Scrollbar.setMaximum,Sets the maximum value of this scroll bar.
java.awt.Scrollbar.setMinimum,Sets the minimum value of this scroll bar.
java.awt.Scrollbar.setOrientation,Sets the orientation for this scroll bar.
java.awt.Scrollbar.setPageIncrement,"Deprecated.As of JDK version 1.1,  replaced bysetBlockIncrement()."
java.awt.Scrollbar.setUnitIncrement,Sets the unit increment for this scroll bar.
java.awt.Scrollbar.setValue,Sets the value of this scroll bar to the specified value.
java.awt.Scrollbar.setValueIsAdjusting,Sets thevalueIsAdjustingproperty.
java.awt.Scrollbar.setValues,"Sets the values of four properties for this scroll bar:value,visibleAmount,minimum, andmaximum."
java.awt.Scrollbar.setVisibleAmount,Sets the visible amount of this scroll bar.
java.awt.ScrollPane.addImpl,Adds the specified component to this scroll pane container.
java.awt.ScrollPane.addNotify,Creates the scroll pane's peer.
java.awt.ScrollPane.doLayout,Lays out this container by resizing its child to its preferred size.
java.awt.ScrollPane.eventTypeEnabled,"If wheel scrolling is enabled, we return true for MouseWheelEvents"
java.awt.ScrollPane.getAccessibleContext,Gets the AccessibleContext associated with this ScrollPane.
java.awt.ScrollPane.getHAdjustable,Returns theScrollPaneAdjustableobject which  represents the state of the horizontal scrollbar.
java.awt.ScrollPane.getHScrollbarHeight,"Returns the height that would be occupied by a horizontal  scrollbar, which is independent of whether it is currently  displayed by the scroll pane or not."
java.awt.ScrollPane.getScrollbarDisplayPolicy,Returns the display policy for the scrollbars.
java.awt.ScrollPane.getScrollPosition,"Returns the current x,y position within the child which is displayed  at the 0,0 location of the scrolled panel's view port."
java.awt.ScrollPane.getVAdjustable,Returns theScrollPaneAdjustableobject which  represents the state of the vertical scrollbar.
java.awt.ScrollPane.getViewportSize,Returns the current size of the scroll pane's view port.
java.awt.ScrollPane.getVScrollbarWidth,"Returns the width that would be occupied by a vertical  scrollbar, which is independent of whether it is currently  displayed by the scroll pane or not."
java.awt.ScrollPane.isWheelScrollingEnabled,Indicates whether or not scrolling will take place in response to  the mouse wheel.
java.awt.ScrollPane.paramString,Returns a string representing the state of thisScrollPane.
java.awt.ScrollPane.printComponents,Prints the component in this scroll pane.
java.awt.ScrollPane.processMouseWheelEvent,Process mouse wheel events that are delivered to thisScrollPaneby scrolling an appropriate amount.
java.awt.ScrollPane.setScrollPosition,Scrolls to the specified position within the child component.
java.awt.ScrollPane.setWheelScrollingEnabled,Enables/disables scrolling in response to movement of the mouse wheel.
java.awt.ScrollPaneAdjustable.addAdjustmentListener,Adds the specified adjustment listener to receive adjustment  events from thisScrollPaneAdjustable.
java.awt.ScrollPaneAdjustable.getAdjustmentListeners,Returns an array of all the adjustment listeners  registered on thisScrollPaneAdjustable.
java.awt.ScrollPaneAdjustable.getBlockIncrement,Gets the block value increment for the adjustable object.
java.awt.ScrollPaneAdjustable.getMaximum,Gets the maximum value of the adjustable object.
java.awt.ScrollPaneAdjustable.getMinimum,Gets the minimum value of the adjustable object.
java.awt.ScrollPaneAdjustable.getOrientation,Returns the orientation of this scrollbar.
java.awt.ScrollPaneAdjustable.getUnitIncrement,Gets the unit value increment for the adjustable object.
java.awt.ScrollPaneAdjustable.getValue,Gets the current value of the adjustable object.
java.awt.ScrollPaneAdjustable.getVisibleAmount,Gets the length of the proportional indicator.
java.awt.ScrollPaneAdjustable.paramString,Returns a string representing the state of this scrollbar.
java.awt.ScrollPaneAdjustable.removeAdjustmentListener,Removes the specified adjustment listener so that it no longer  receives adjustment events from thisScrollPaneAdjustable.
java.awt.ScrollPaneAdjustable.setBlockIncrement,Sets the block value increment for the adjustable object.
java.awt.ScrollPaneAdjustable.setMaximum,This method shouldNOTbe called by user code.
java.awt.ScrollPaneAdjustable.setUnitIncrement,Sets the unit value increment for the adjustable object.
java.awt.ScrollPaneAdjustable.setValue,Sets the value of this scrollbar to the specified value.
java.awt.ScrollPaneAdjustable.toString,Returns a string representation of this scrollbar and its values.
java.awt.SplashScreen.close,"Hides the splash screen, closes the window, and releases all associated  resources."
java.awt.SplashScreen.createGraphics,"Creates a graphics context (as aGraphics2Dobject) for the splash  screen overlay image, which allows you to draw over the splash screen."
java.awt.SplashScreen.getBounds,Returns the bounds of the splash screen window as aRectangle.
java.awt.SplashScreen.getImageURL,Returns the current splash screen image.
java.awt.SplashScreen.getSize,Returns the size of the splash screen window as aDimension.
java.awt.SplashScreen.getSplashScreen,Returns theSplashScreenobject used for  Java startup splash screen control on systems that support display.
java.awt.SplashScreen.isVisible,Determines whether the splash screen is visible.
java.awt.SplashScreen.setImageURL,Changes the splash screen image.
java.awt.SplashScreen.update,Updates the splash window with current contents of the overlay image.
java.awt.SystemColor.toString,Returns a string representation of thisColor's values.
java.awt.SystemTray.add,Adds aTrayIconto theSystemTray.
java.awt.SystemTray.addPropertyChangeListener,Adds aPropertyChangeListenerto the list of listeners for the  specific property.
java.awt.SystemTray.getPropertyChangeListeners,Returns an array of all the listeners that have been associated  with the named property.
java.awt.SystemTray.getSystemTray,Gets theSystemTrayinstance that represents the  desktop's tray area.
java.awt.SystemTray.getTrayIcons,Returns an array of all icons added to the tray by this  application.
java.awt.SystemTray.getTrayIconSize,"Returns the size, in pixels, of the space that a tray icon will  occupy in the system tray."
java.awt.SystemTray.isSupported,Returns whether the system tray is supported on the current  platform.
java.awt.SystemTray.remove,Removes the specifiedTrayIconfrom theSystemTray.
java.awt.SystemTray.removePropertyChangeListener,Removes aPropertyChangeListenerfrom the listener list  for a specific property.
java.awt.Taskbar.getIconImage,Obtains an image of this application's icon.
java.awt.Taskbar.getMenu,Gets PopupMenu used to add items to this application's icon in system task area.
java.awt.Taskbar.getTaskbar,Returns theTaskbarinstance of the current  taskbar context.
java.awt.Taskbar.isSupported,Tests whether aFeatureis supported on the current platform.
java.awt.Taskbar.requestUserAttention,Requests user attention to this application.
java.awt.Taskbar.requestWindowUserAttention,Requests user attention to the specified window.
java.awt.Taskbar.setIconBadge,Affixes a small system-provided badge to this application's icon.
java.awt.Taskbar.setIconImage,Changes this application's icon to the provided image.
java.awt.Taskbar.setMenu,Attaches the contents of the provided PopupMenu to the application icon  in the task area.
java.awt.Taskbar.setProgressValue,Affixes a small system-provided progress bar to this application's icon.
java.awt.Taskbar.setWindowIconBadge,Affixes a small badge to this application's icon in the task area  for the specified window.
java.awt.Taskbar.setWindowProgressState,Sets a progress state for a specified window.
java.awt.Taskbar.setWindowProgressValue,Displays a determinate progress bar in the task area for the specified  window.
java.awt.TextArea.getAccessibleStateSet,Gets the state set of this object.
java.awt.TextArea.addNotify,Creates theTextArea's peer.
java.awt.TextArea.append,Appends the given text to the text area's current text.
java.awt.TextArea.appendText,"Deprecated.As of JDK version 1.1,  replaced byappend(String)."
java.awt.TextArea.getAccessibleContext,Returns theAccessibleContextassociated with  thisTextArea.
java.awt.TextArea.getColumns,Returns the number of columns in this text area.
java.awt.TextArea.getMinimumSize,Determines the minimum size of this text area.
java.awt.TextArea.getMinimumSize,Determines the minimum size of a text area with the specified  number of rows and columns.
java.awt.TextArea.getPreferredSize,Determines the preferred size of this text area.
java.awt.TextArea.getPreferredSize,Determines the preferred size of a text area with the specified  number of rows and columns.
java.awt.TextArea.getRows,Returns the number of rows in the text area.
java.awt.TextArea.getScrollbarVisibility,Returns an enumerated value that indicates which scroll bars  the text area uses.
java.awt.TextArea.insert,Inserts the specified text at the specified position  in this text area.
java.awt.TextArea.insertText,"Deprecated.As of JDK version 1.1,  replaced byinsert(String, int)."
java.awt.TextArea.minimumSize,"Deprecated.As of JDK version 1.1,  replaced bygetMinimumSize(int, int)."
java.awt.TextArea.paramString,Returns a string representing the state of thisTextArea.
java.awt.TextArea.preferredSize,"Deprecated.As of JDK version 1.1,  replaced bygetPreferredSize(int, int)."
java.awt.TextArea.replaceRange,Replaces text between the indicated start and end positions  with the specified replacement text.
java.awt.TextArea.replaceText,"Deprecated.As of JDK version 1.1,  replaced byreplaceRange(String, int, int)."
java.awt.TextArea.setColumns,Sets the number of columns for this text area.
java.awt.TextArea.setRows,Sets the number of rows for this text area.
java.awt.TextComponent.getAccessibleStateSet,Gets the state set of the TextComponent.
java.awt.TextComponent.getAccessibleText,Get the AccessibleText associated with this object.
java.awt.TextComponent.getAfterIndex,Returns the String after a given index.
java.awt.TextComponent.getAtIndex,Returns the String at a given index.
java.awt.TextComponent.getBeforeIndex,Returns the String before a given index.
java.awt.TextComponent.getCaretPosition,Returns the zero-based offset of the caret.
java.awt.TextComponent.getCharacterAttribute,Returns the AttributeSet for a given character (at a given index).
java.awt.TextComponent.getCharacterBounds,Determines the bounding box of the character at the given  index into the string.
java.awt.TextComponent.getCharCount,Returns the number of characters (valid indices)
java.awt.TextComponent.getIndexAtPoint,"Given a point in local coordinates, return the zero-based index  of the character under that Point."
java.awt.TextComponent.getSelectedText,Returns the portion of the text that is selected.
java.awt.TextComponent.getSelectionEnd,Returns the end offset within the selected text.
java.awt.TextComponent.getSelectionStart,Returns the start offset within the selected text.
java.awt.TextComponent.textValueChanged,TextListener notification of a text value change.
java.awt.TextComponent.addNotify,Makes this Component displayable by connecting it to a  native screen resource.
java.awt.TextComponent.addTextListener,Adds the specified text event listener to receive text events  from this text component.
java.awt.TextComponent.enableInputMethods,Enables or disables input method support for this text component.
java.awt.TextComponent.getAccessibleContext,Gets the AccessibleContext associated with this TextComponent.
java.awt.TextComponent.getBackground,Gets the background color of this text component.
java.awt.TextComponent.getCaretPosition,Returns the position of the text insertion caret.
java.awt.TextComponent.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisTextComponent.
java.awt.TextComponent.getSelectedText,Returns the selected text from the text that is  presented by this text component.
java.awt.TextComponent.getSelectionEnd,Gets the end position of the selected text in  this text component.
java.awt.TextComponent.getSelectionStart,Gets the start position of the selected text in  this text component.
java.awt.TextComponent.getText,Returns the text that is presented by this text component.
java.awt.TextComponent.getTextListeners,Returns an array of all the text listeners  registered on this text component.
java.awt.TextComponent.isEditable,Indicates whether or not this text component is editable.
java.awt.TextComponent.paramString,Returns a string representing the state of thisTextComponent.
java.awt.TextComponent.processEvent,Processes events on this text component.
java.awt.TextComponent.processTextEvent,Processes text events occurring on this text component by  dispatching them to any registeredTextListenerobjects.
java.awt.TextComponent.removeNotify,Removes theTextComponent's peer.
java.awt.TextComponent.removeTextListener,"Removes the specified text event listener so that it no longer  receives text events from this text component  Iflisnull, no exception is  thrown and no action is performed."
java.awt.TextComponent.select,Selects the text between the specified start and end positions.
java.awt.TextComponent.selectAll,Selects all the text in this text component.
java.awt.TextComponent.setBackground,Sets the background color of this text component.
java.awt.TextComponent.setCaretPosition,Sets the position of the text insertion caret.
java.awt.TextComponent.setEditable,Sets the flag that determines whether or not this  text component is editable.
java.awt.TextComponent.setSelectionEnd,Sets the selection end for this text component to  the specified position.
java.awt.TextComponent.setSelectionStart,Sets the selection start for this text component to  the specified position.
java.awt.TextComponent.setText,Sets the text that is presented by this  text component to be the specified text.
java.awt.TextField.addActionListener,Adds the specified action listener to receive  action events from this text field.
java.awt.TextField.addNotify,Creates the TextField's peer.
java.awt.TextField.echoCharIsSet,Indicates whether or not this text field has a  character set for echoing.
java.awt.TextField.getAccessibleContext,Gets the AccessibleContext associated with this TextField.
java.awt.TextField.getActionListeners,Returns an array of all the action listeners  registered on this textfield.
java.awt.TextField.getColumns,Gets the number of columns in this text field.
java.awt.TextField.getEchoChar,Gets the character that is to be used for echoing.
java.awt.TextField.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisTextField.
java.awt.TextField.getMinimumSize,Gets the minimum dimensions for this text field.
java.awt.TextField.getMinimumSize,Gets the minimum dimensions for a text field with  the specified number of columns.
java.awt.TextField.getPreferredSize,Gets the preferred size of this text field.
java.awt.TextField.getPreferredSize,Gets the preferred size of this text field  with the specified number of columns.
java.awt.TextField.paramString,Returns a string representing the state of thisTextField.
java.awt.TextField.processActionEvent,Processes action events occurring on this text field by  dispatching them to any registeredActionListenerobjects.
java.awt.TextField.processEvent,Processes events on this text field.
java.awt.TextField.removeActionListener,Removes the specified action listener so that it no longer  receives action events from this text field.
java.awt.TextField.setColumns,Sets the number of columns in this text field.
java.awt.TextField.setEchoChar,Sets the echo character for this text field.
java.awt.TextField.setEchoCharacter,"Deprecated.As of JDK version 1.1,  replaced bysetEchoChar(char)."
java.awt.TexturePaint.createContext,Creates and returns aPaintContextused to  generate a tiled image pattern.
java.awt.TexturePaint.getAnchorRect,Returns a copy of the anchor rectangle which positions and  sizes the textured image.
java.awt.TexturePaint.getImage,Returns theBufferedImagetexture used to  fill the shapes.
java.awt.TexturePaint.getTransparency,Returns the transparency mode for thisTexturePaint.
java.awt.Toolkit.addAWTEventListener,Adds an AWTEventListener to receive all AWTEvents dispatched  system-wide that conform to the giveneventMask.
java.awt.Toolkit.addPropertyChangeListener,Adds the specified property change listener for the named desktop  property.
java.awt.Toolkit.areExtraMouseButtonsEnabled,Reports whether events from extra mouse buttons are allowed to be processed and posted intoEventQueue.
java.awt.Toolkit.beep,Emits an audio beep depending on native system settings and hardware  capabilities.
java.awt.Toolkit.checkImage,Indicates the construction status of a specified image that is  being prepared for display.
java.awt.Toolkit.createCustomCursor,Creates a new custom cursor object.
java.awt.Toolkit.createDragGestureRecognizer,"Creates a concrete, platform dependent, subclass of the abstract  DragGestureRecognizer class requested, and associates it with the  DragSource, Component and DragGestureListener specified."
java.awt.Toolkit.createImage,Creates an image which decodes the image stored in the specified  byte array.
java.awt.Toolkit.createImage,"Creates an image which decodes the image stored in the specified  byte array, and at the specified offset and length."
java.awt.Toolkit.createImage,Creates an image with the specified image producer.
java.awt.Toolkit.createImage,Returns an image which gets pixel data from the specified file.
java.awt.Toolkit.createImage,Returns an image which gets pixel data from the specified URL.
java.awt.Toolkit.getAWTEventListeners,Returns an array of all theAWTEventListeners  registered on this toolkit.
java.awt.Toolkit.getAWTEventListeners,Returns an array of all theAWTEventListeners  registered on this toolkit which listen to all of the event  types specified in theeventMaskargument.
java.awt.Toolkit.getBestCursorSize,Returns the supported cursor dimension which is closest to the desired  sizes.
java.awt.Toolkit.getColorModel,Determines the color model of this toolkit's screen.
java.awt.Toolkit.getDefaultToolkit,Gets the default toolkit.
java.awt.Toolkit.getDesktopProperty,Obtains a value for the specified desktop property.
java.awt.Toolkit.getFontList,Deprecated.seeGraphicsEnvironment.getAvailableFontFamilyNames()
java.awt.Toolkit.getFontMetrics,"Deprecated.As of JDK version 1.2, replaced by theFontmethodgetLineMetrics."
java.awt.Toolkit.getImage,"Returns an image which gets pixel data from the specified file,  whose format can be either GIF, JPEG or PNG."
java.awt.Toolkit.getLockingKeyState,"Returns whether the given locking key on the keyboard is currently in  its ""on"" state."
java.awt.Toolkit.getMaximumCursorColors,Returns the maximum number of colors the Toolkit supports in a custom cursor  palette.
java.awt.Toolkit.getMenuShortcutKeyMask,Deprecated.It is recommended that extended modifier keys andgetMenuShortcutKeyMaskEx()be used instead
java.awt.Toolkit.getMenuShortcutKeyMaskEx,Determines which extended modifier key is the appropriate accelerator  key for menu shortcuts.
java.awt.Toolkit.getNativeContainer,Give native peers the ability to query the native container  given a native component (eg the direct parent may be lightweight).
java.awt.Toolkit.getPrintJob,Gets aPrintJobobject which is the result of initiating  a print operation on the toolkit's platform.
java.awt.Toolkit.getProperty,Gets a property with the specified key and default.
java.awt.Toolkit.getPropertyChangeListeners,Returns an array of all the property change listeners  registered on this toolkit.
java.awt.Toolkit.getPropertyChangeListeners,Returns an array of all property change listeners  associated with the specified name of a desktop property.
java.awt.Toolkit.getScreenInsets,Gets the insets of the screen.
java.awt.Toolkit.getScreenResolution,Returns the screen resolution in dots-per-inch.
java.awt.Toolkit.getScreenSize,Gets the size of the screen.
java.awt.Toolkit.getSystemClipboard,Gets the singleton instance of the system Clipboard which interfaces  with clipboard facilities provided by the native platform.
java.awt.Toolkit.getSystemEventQueue,Get the application's or applet's EventQueue instance.
java.awt.Toolkit.getSystemEventQueueImpl,"Gets the application's or applet'sEventQueueinstance, without checking access."
java.awt.Toolkit.getSystemSelection,Gets the singleton instance of the system selection as aClipboardobject.
java.awt.Toolkit.initializeDesktopProperties,initializeDesktopProperties
java.awt.Toolkit.isAlwaysOnTopSupported,Returns whether the always-on-top mode is supported by this toolkit.
java.awt.Toolkit.isDynamicLayoutActive,Returns whether dynamic layout of Containers on resize is currently  enabled on the underlying operating system and/or window manager.
java.awt.Toolkit.isDynamicLayoutSet,"Returns whether the layout of Containers is validated dynamically  during resizing, or statically, after resizing is complete."
java.awt.Toolkit.isFrameStateSupported,Returns whether Toolkit supports this state forFrames.
java.awt.Toolkit.isModalExclusionTypeSupported,Returns whether the given modal exclusion type is supported by this  toolkit.
java.awt.Toolkit.isModalityTypeSupported,Returns whether the given modality type is supported by this toolkit.
java.awt.Toolkit.lazilyLoadDesktopProperty,An opportunity to lazily evaluate desktop property values.
java.awt.Toolkit.loadSystemColors,Fills in the integer array that is supplied as an argument  with the current system color values.
java.awt.Toolkit.mapInputMethodHighlight,"Returns a map of visual attributes for the abstract level description  of the given input method highlight, or null if no mapping is found."
java.awt.Toolkit.prepareImage,Prepares an image for rendering.
java.awt.Toolkit.removeAWTEventListener,Removes an AWTEventListener from receiving dispatched AWTEvents.
java.awt.Toolkit.removePropertyChangeListener,Removes the specified property change listener for the named  desktop property.
java.awt.Toolkit.setDesktopProperty,Sets the named desktop property to the specified value and fires a  property change event to notify any listeners that the value has changed.
java.awt.Toolkit.setDynamicLayout,"Controls whether the layout of Containers is validated dynamically  during resizing, or statically, after resizing is complete."
java.awt.Toolkit.setLockingKeyState,Sets the state of the given locking key on the keyboard.
java.awt.Toolkit.sync,Synchronizes this toolkit's graphics state.
java.awt.TrayIcon.addActionListener,Adds the specified action listener to receiveActionEvents from thisTrayIcon.
java.awt.TrayIcon.addMouseListener,Adds the specified mouse listener to receive mouse events from  thisTrayIcon.
java.awt.TrayIcon.addMouseMotionListener,Adds the specified mouse listener to receive mouse-motion  events from thisTrayIcon.
java.awt.TrayIcon.displayMessage,Displays a popup message near the tray icon.
java.awt.TrayIcon.getActionCommand,Returns the command name of the action event fired by this tray icon.
java.awt.TrayIcon.getActionListeners,Returns an array of all the action listeners  registered on thisTrayIcon.
java.awt.TrayIcon.getImage,Returns the current image used for thisTrayIcon.
java.awt.TrayIcon.getMouseListeners,Returns an array of all the mouse listeners  registered on thisTrayIcon.
java.awt.TrayIcon.getMouseMotionListeners,Returns an array of all the mouse-motion listeners  registered on thisTrayIcon.
java.awt.TrayIcon.getPopupMenu,Returns the popup menu associated with thisTrayIcon.
java.awt.TrayIcon.getSize,"Returns the size, in pixels, of the space that the tray icon  occupies in the system tray."
java.awt.TrayIcon.getToolTip,Returns the tooltip string associated with thisTrayIcon.
java.awt.TrayIcon.isImageAutoSize,Returns the value of the auto-size property.
java.awt.TrayIcon.removeActionListener,Removes the specified action listener.
java.awt.TrayIcon.removeMouseListener,Removes the specified mouse listener.
java.awt.TrayIcon.removeMouseMotionListener,Removes the specified mouse-motion listener.
java.awt.TrayIcon.setActionCommand,Sets the command name for the action event fired by this tray  icon.
java.awt.TrayIcon.setImage,Sets the image for thisTrayIcon.
java.awt.TrayIcon.setImageAutoSize,Sets the auto-size property.
java.awt.TrayIcon.setPopupMenu,Sets the popup menu for thisTrayIcon.
java.awt.TrayIcon.setToolTip,Sets the tooltip string for thisTrayIcon.
java.awt.Window.addNotify,Makes this Window displayable by creating the connection to its  native screen resource.
java.awt.Window.addWindowFocusListener,Adds the specified window focus listener to receive window events  from this window.
java.awt.Window.addWindowListener,Adds the specified window listener to receive window events from  this window.
java.awt.Window.addWindowStateListener,Adds the specified window state listener to receive window  events from this window.
java.awt.Window.applyResourceBundle,"Deprecated.As of J2SE 1.4, replaced byComponent.applyComponentOrientation."
java.awt.Window.dispose,"Releases all of the native screen resources used by thisWindow, its subcomponents, and all of its owned  children."
java.awt.Window.getAccessibleContext,Gets the AccessibleContext associated with this Window.
java.awt.Window.getBackground,Gets the background color of this window.
java.awt.Window.getFocusableWindowState,Returns whether this Window can become the focused Window if it meets  the other requirements outlined inisFocusableWindow.
java.awt.Window.getFocusCycleRootAncestor,Always returnsnullbecause Windows have no ancestors; they  represent the top of the Component hierarchy.
java.awt.Window.getFocusOwner,Returns the child Component of this Window that has focus if this Window  is focused; returns null otherwise.
java.awt.Window.getFocusTraversalKeys,Gets a focus traversal key for this Window.
java.awt.Window.getIconImages,Returns the sequence of images to be displayed as the icon for this window.
java.awt.Window.getInputContext,Gets the input context for this window.
java.awt.Window.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisWindow.
java.awt.Window.getLocale,"Gets theLocaleobject that is associated  with this window, if the locale has been set."
java.awt.Window.getModalExclusionType,Returns the modal exclusion type of this window.
java.awt.Window.getMostRecentFocusOwner,Returns the child Component of this Window that will receive the focus  when this Window is focused.
java.awt.Window.getOpacity,Returns the opacity of the window.
java.awt.Window.getOwnedWindows,Return an array containing all the windows this  window currently owns.
java.awt.Window.getOwner,Returns the owner of this window.
java.awt.Window.getOwnerlessWindows,Returns an array of allWindows created by this application  that have no owner.
java.awt.Window.getShape,Returns the shape of the window.
java.awt.Window.getToolkit,Returns the toolkit of this frame.
java.awt.Window.getType,Returns the type of the window.
java.awt.Window.getWarningString,Gets the warning string that is displayed with this window.
java.awt.Window.getWindowFocusListeners,Returns an array of all the window focus listeners  registered on this window.
java.awt.Window.getWindowListeners,Returns an array of all the window listeners  registered on this window.
java.awt.Window.getWindows,"Returns an array of allWindows, both owned and ownerless,  created by this application."
java.awt.Window.getWindowStateListeners,Returns an array of all the window state listeners  registered on this window.
java.awt.Window.isActive,Returns whether this Window is active.
java.awt.Window.isAlwaysOnTop,Returns whether this window is an always-on-top window.
java.awt.Window.isAlwaysOnTopSupported,Returns whether the always-on-top mode is supported for this  window.
java.awt.Window.isAutoRequestFocus,"Returns whether this window should receive focus on subsequently being shown  (with a call tosetVisible(true)), or being moved to the front  (with a call totoFront())."
java.awt.Window.isFocusableWindow,"Returns whether this Window can become the focused Window, that is,  whether this Window or any of its subcomponents can become the focus  owner."
java.awt.Window.isFocusCycleRoot,Always returnstruebecause all Windows must be roots of a  focus traversal cycle.
java.awt.Window.isFocused,Returns whether this Window is focused.
java.awt.Window.isLocationByPlatform,Returnstrueif this Window will appear at the default location  for the native windowing system the next time this Window is made visible.
java.awt.Window.isOpaque,Indicates if the window is currently opaque.
java.awt.Window.isShowing,Checks if this Window is showing on screen.
java.awt.Window.isValidateRoot,Indicates if this container is a validate root.
java.awt.Window.pack,Causes this Window to be sized to fit the preferred size  and layouts of its subcomponents.
java.awt.Window.postEvent,Deprecated.As of JDK version 1.1  replaced bydispatchEvent(AWTEvent).
java.awt.Window.processEvent,Processes events on this window.
java.awt.Window.processWindowEvent,Processes window events occurring on this window by  dispatching them to any registered WindowListener objects.
java.awt.Window.processWindowFocusEvent,Processes window focus event occurring on this window by  dispatching them to any registered WindowFocusListener objects.
java.awt.Window.processWindowStateEvent,Processes window state event occurring on this window by  dispatching them to any registeredWindowStateListenerobjects.
java.awt.Window.removeWindowFocusListener,Removes the specified window focus listener so that it no longer  receives window events from this window.
java.awt.Window.removeWindowListener,Removes the specified window listener so that it no longer  receives window events from this window.
java.awt.Window.removeWindowStateListener,Removes the specified window state listener so that it no  longer receives window events from this window.
java.awt.Window.setAlwaysOnTop,Sets whether this window should always be above other windows.
java.awt.Window.setAutoRequestFocus,"Sets whether this window should receive focus on  subsequently being shown (with a call tosetVisible(true)),  or being moved to the front (with a call totoFront())."
java.awt.Window.setBackground,Sets the background color of this window.
java.awt.Window.setBounds,Moves and resizes this component.
java.awt.Window.setBounds,Moves and resizes this component to conform to the new  bounding rectangler.
java.awt.Window.setCursor,Set the cursor image to a specified cursor.
java.awt.Window.setFocusableWindowState,Sets whether this Window can become the focused Window if it meets  the other requirements outlined inisFocusableWindow.
java.awt.Window.setFocusCycleRoot,Does nothing because Windows must always be roots of a focus traversal  cycle.
java.awt.Window.setIconImage,Sets the image to be displayed as the icon for this window.
java.awt.Window.setIconImages,Sets the sequence of images to be displayed as the icon  for this window.
java.awt.Window.setLocation,Moves this component to a new location.
java.awt.Window.setLocationByPlatform,Sets whether this Window should appear at the default location for the  native windowing system or at the current location (returned bygetLocation) the next time the Window is made visible.
java.awt.Window.setLocationRelativeTo,Sets the location of the window relative to the specified  component according to the following scenarios.
java.awt.Window.setMinimumSize,Sets the minimum size of this window to a constant  value.
java.awt.Window.setModalExclusionType,Specifies the modal exclusion type for this window.
java.awt.Window.setOpacity,Sets the opacity of the window.
java.awt.Window.setShape,Sets the shape of the window.
java.awt.Window.setSize,Resizes this component so that it has widthwidthand heightheight.
java.awt.Window.setSize,Resizes this component so that it has widthd.widthand heightd.height.
java.awt.Window.setType,Sets the type of the window.
java.awt.Window.setVisible,Shows or hides thisWindowdepending on the value of parameterb.
java.awt.Window.toFront,"If this Window is visible, brings this Window to the front and may make  it the focused Window."
java.awt.color.ColorSpace.fromCIEXYZ,Transforms a color value assumed to be in theCS_CIEXYZconversion color space into thisColorSpace.
java.awt.color.ColorSpace.fromRGB,Transforms a color value assumed to be in the defaultCS_sRGBcolor space into thisColorSpace.
java.awt.color.ColorSpace.getInstance,Returns aColorSpacerepresenting one of the specific predefined  color spaces.
java.awt.color.ColorSpace.getMaxValue,Returns the maximum normalized color component value for the specified  component.
java.awt.color.ColorSpace.getMinValue,Returns the minimum normalized color component value for the specified  component.
java.awt.color.ColorSpace.getName,Returns the name of the component given the component index.
java.awt.color.ColorSpace.getNumComponents,Returns the number of components of this ColorSpace.
java.awt.color.ColorSpace.getType,"Returns the color space type of thisColorSpace(for exampleTYPE_RGB,TYPE_XYZ, ...)."
java.awt.color.ColorSpace.isCS_sRGB,Returns true if theColorSpaceisCS_sRGB.
java.awt.color.ColorSpace.toCIEXYZ,Transforms a color value assumed to be in thisColorSpaceinto  theCS_CIEXYZconversion color space.
java.awt.color.ColorSpace.toRGB,Transforms a color value assumed to be in thisColorSpaceinto a  value in the defaultCS_sRGBcolor space.
java.awt.color.ICC_ColorSpace.fromCIEXYZ,Transforms a color value assumed to be in theCS_CIEXYZconversion color space into this ColorSpace.
java.awt.color.ICC_ColorSpace.getProfile,Returns theICC_Profilefor thisICC_ColorSpace.
java.awt.color.ICC_Profile.finalize,"Deprecated, for removal: This API element is subject to removal in a future version.Thefinalizemethod has been deprecated."
java.awt.color.ICC_Profile.getColorSpaceType,Returns the color space type.
java.awt.color.ICC_Profile.getData,Returns a byte array corresponding to the data of thisICC_Profile.
java.awt.color.ICC_Profile.getData,Returns a particular tagged data element from the profile as a byte  array.
java.awt.color.ICC_Profile.getInstance,Constructs anICC_Profileobject corresponding to the data in a  byte array.
java.awt.color.ICC_Profile.getInstance,Constructs anICC_Profilecorresponding to one of the specific  color spaces defined by theColorSpaceclass (for exampleCS_sRGB).
java.awt.color.ICC_Profile.getInstance,Constructs anICC_Profilecorresponding to the data in anInputStream.
java.awt.color.ICC_Profile.getInstance,Constructs anICC_Profilecorresponding to the data in a file.
java.awt.color.ICC_Profile.getMajorVersion,Returns profile major version.
java.awt.color.ICC_Profile.getMinorVersion,Returns profile minor version.
java.awt.color.ICC_Profile.getNumComponents,"Returns the number of color components in the ""input"" color space of this  profile."
java.awt.color.ICC_Profile.getPCSType,Returns the color space type of the Profile Connection Space (PCS).
java.awt.color.ICC_Profile.getProfileClass,Returns the profile class.
java.awt.color.ICC_Profile.readResolve,Resolves instances being deserialized into instances registered with CMM.
java.awt.color.ICC_Profile.setData,Sets a particular tagged data element in the profile from a byte array.
java.awt.color.ICC_Profile.write,Write thisICC_Profileto anOutputStream.
java.awt.color.ICC_Profile.write,Write thisICC_Profileto a file.
java.awt.color.ICC_ProfileGray.getGamma,Returns a gamma value representing the tone reproduction curve (TRC).
java.awt.color.ICC_ProfileGray.getMediaWhitePoint,"Returns a float array of length 3 containing the X, Y, and Z components  of the mediaWhitePointTag in the ICC profile."
java.awt.color.ICC_ProfileGray.getTRC,Returns the TRC as an array of shorts.
java.awt.color.ICC_ProfileRGB.getGamma,Returns a gamma value representing the tone reproduction curve (TRC) for  a particular component.
java.awt.color.ICC_ProfileRGB.getMatrix,"Returns a 3x3floatmatrix constructed from the X, Y, and Z  components of the profile'sredColorantTag,greenColorantTag, andblueColorantTag."
java.awt.color.ICC_ProfileRGB.getMediaWhitePoint,Returns an array that contains the components of the profile'smediaWhitePointTag.
java.awt.color.ICC_ProfileRGB.getTRC,Returns the TRC for a particular component as an array.
java.awt.desktop.FilesEvent.getFiles,Gets the list of files.
java.awt.desktop.OpenFilesEvent.getSearchTerm,Gets the search term.
java.awt.desktop.OpenURIEvent.getURI,Get theURIthe app was asked to open.
java.awt.desktop.UserSessionEvent.getReason,Gets a reason of the user session change.
java.awt.dnd.DragGestureEvent.getComponent,Returns theComponentassociated  with thisDragGestureEvent.
java.awt.dnd.DragGestureEvent.getDragAction,Returns anintrepresenting the  action selected by the user.
java.awt.dnd.DragGestureEvent.getDragOrigin,Returns aPointin the coordinates  of theComponentover which the drag originated.
java.awt.dnd.DragGestureEvent.getDragSource,Returns theDragSource.
java.awt.dnd.DragGestureEvent.getSourceAsDragGestureRecognizer,Returns the source as aDragGestureRecognizer.
java.awt.dnd.DragGestureEvent.getTriggerEvent,Returns the initial event that triggered the gesture.
java.awt.dnd.DragGestureEvent.iterator,Returns anIteratorfor the events  comprising the gesture.
java.awt.dnd.DragGestureEvent.startDrag,Starts the drag operation given theCursorfor this drag  operation and theTransferablerepresenting the source data  for this drag operation.
java.awt.dnd.DragGestureEvent.startDrag,"Starts the drag given the initialCursorto display,  theTransferableobject,  and theDragSourceListenerto use."
java.awt.dnd.DragGestureEvent.startDrag,"Start the drag given the initialCursorto display,  a dragImage, the offset of  theImage,  theTransferableobject, and  theDragSourceListenerto use."
java.awt.dnd.DragGestureEvent.toArray,Returns anObjectarray of the  events comprising the drag gesture.
java.awt.dnd.DragGestureEvent.toArray,Returns an array of the events comprising the drag gesture.
java.awt.dnd.DragGestureRecognizer.addDragGestureListener,Register a newDragGestureListener.
java.awt.dnd.DragGestureRecognizer.appendEvent,Listeners registered on the Component by this Recognizer shall record  all Events that are recognized as part of the series of Events that go  to comprise a Drag and Drop initiating gesture via this API.
java.awt.dnd.DragGestureRecognizer.fireDragGestureRecognized,Notify the DragGestureListener that a Drag and Drop initiating  gesture has occurred.
java.awt.dnd.DragGestureRecognizer.getComponent,"This method returns theComponentthat is to be ""observed"" by theDragGestureRecognizerfor drag initiating gestures."
java.awt.dnd.DragGestureRecognizer.getDragSource,This method returns theDragSourcethisDragGestureRecognizerwill use in order to process the Drag and Drop  operation.
java.awt.dnd.DragGestureRecognizer.getSourceActions,This method returns an int representing the  type of action(s) this Drag and Drop  operation will support.
java.awt.dnd.DragGestureRecognizer.getTriggerEvent,This method returns the first event in the  series of events that initiated  the Drag and Drop operation.
java.awt.dnd.DragGestureRecognizer.registerListeners,register this DragGestureRecognizer's Listeners with the Component   subclasses must override this method
java.awt.dnd.DragGestureRecognizer.removeDragGestureListener,unregister the current DragGestureListener
java.awt.dnd.DragGestureRecognizer.resetRecognizer,"Reset the Recognizer, if its currently recognizing a gesture, ignore  it."
java.awt.dnd.DragGestureRecognizer.setComponent,set the Component that the DragGestureRecognizer is associated with   registerListeners() and unregisterListeners() are called as a side  effect as appropriate.
java.awt.dnd.DragGestureRecognizer.setSourceActions,This method sets the permitted source drag action(s)  for this Drag and Drop operation.
java.awt.dnd.DragGestureRecognizer.unregisterListeners,unregister this DragGestureRecognizer's Listeners with the Component   subclasses must override this method
java.awt.dnd.DragSource.addDragSourceListener,Adds the specifiedDragSourceListenerto thisDragSourceto receive drag source events during drag  operations initiated with thisDragSource.
java.awt.dnd.DragSource.addDragSourceMotionListener,Adds the specifiedDragSourceMotionListenerto thisDragSourceto receive drag motion events during drag  operations initiated with thisDragSource.
java.awt.dnd.DragSource.createDefaultDragGestureRecognizer,"Creates a newDragGestureRecognizerthat implements the default  abstract subclass ofDragGestureRecognizerfor thisDragSource,  and sets the specifiedComponentandDragGestureListeneron the  newly created object."
java.awt.dnd.DragSource.createDragGestureRecognizer,"Creates a newDragGestureRecognizerthat implements the specified  abstract subclass ofDragGestureRecognizer, and  sets the specifiedComponentandDragGestureListeneron  the newly created object."
java.awt.dnd.DragSource.createDragSourceContext,Creates theDragSourceContextto handle the current drag  operation.
java.awt.dnd.DragSource.getDefaultDragSource,Gets theDragSourceobject associated with  the underlying platform.
java.awt.dnd.DragSource.getDragSourceListeners,Gets all theDragSourceListeners  registered with thisDragSource.
java.awt.dnd.DragSource.getDragSourceMotionListeners,Gets all of theDragSourceMotionListeners  registered with thisDragSource.
java.awt.dnd.DragSource.getDragThreshold,Returns the drag gesture motion threshold.
java.awt.dnd.DragSource.getFlavorMap,This method returns theFlavorMapfor thisDragSource.
java.awt.dnd.DragSource.getListeners,Gets all the objects currently registered asFooListeners upon thisDragSource.
java.awt.dnd.DragSource.isDragImageSupported,Reports  whether or not dragImagesupport  is available on the underlying platform.
java.awt.dnd.DragSource.removeDragSourceListener,Removes the specifiedDragSourceListenerfrom thisDragSource.
java.awt.dnd.DragSource.removeDragSourceMotionListener,Removes the specifiedDragSourceMotionListenerfrom thisDragSource.
java.awt.dnd.DragSource.startDrag,"Start a drag, given theDragGestureEventthat initiated the drag, the initialCursorto  use,  theTransferablesubject data  of the drag, and theDragSourceListener."
java.awt.dnd.DragSource.startDrag,"Start a drag, given theDragGestureEventthat initiated the drag, the initialCursorto use,  theTransferablesubject data  of the drag, theDragSourceListener,  and theFlavorMap."
java.awt.dnd.DragSource.startDrag,"Start a drag, given theDragGestureEventthat initiated the drag, the initialCursorto use,  theImageto drag,  the offset of theImageorigin  from the hotspot of theCursorat the instant of the trigger,  the subject data of the drag, and  theDragSourceListener."
java.awt.dnd.DragSource.startDrag,"Start a drag, given theDragGestureEventthat initiated the drag, the initialCursorto use,  theImageto drag,  the offset of theImageorigin  from the hotspot of theCursorat  the instant of the trigger,  theTransferablesubject data  of the drag, theDragSourceListener,  and theFlavorMap."
java.awt.dnd.DragSourceAdapter.dragDropEnd,This method is invoked to signify that the Drag and Drop  operation is complete.
java.awt.dnd.DragSourceAdapter.dragEnter,Called as the cursor's hotspot enters a platform-dependent drop site.
java.awt.dnd.DragSourceAdapter.dragExit,Called as the cursor's hotspot exits a platform-dependent drop site.
java.awt.dnd.DragSourceAdapter.dragMouseMoved,Called whenever the mouse is moved during a drag operation.
java.awt.dnd.DragSourceAdapter.dragOver,Called as the cursor's hotspot moves over a platform-dependent drop site.
java.awt.dnd.DragSourceAdapter.dropActionChanged,Called when the user has modified the drop gesture.
java.awt.dnd.DragSourceContext.addDragSourceListener,Add aDragSourceListenerto thisDragSourceContextif one has not already been added.
java.awt.dnd.DragSourceContext.dragDropEnd,"CallsdragDropEndon theDragSourceListeners registered with thisDragSourceContextand with the associatedDragSource, and passes them the specifiedDragSourceDropEvent."
java.awt.dnd.DragSourceContext.dragEnter,"CallsdragEnteron theDragSourceListeners registered with thisDragSourceContextand with the associatedDragSource, and passes them the specifiedDragSourceDragEvent."
java.awt.dnd.DragSourceContext.dragExit,"CallsdragExiton theDragSourceListeners registered with thisDragSourceContextand with the associatedDragSource, and passes them the specifiedDragSourceEvent."
java.awt.dnd.DragSourceContext.dragMouseMoved,"CallsdragMouseMovedon theDragSourceMotionListeners registered with theDragSourceassociated with thisDragSourceContext, and them passes the specifiedDragSourceDragEvent."
java.awt.dnd.DragSourceContext.dragOver,"CallsdragOveron theDragSourceListeners registered with thisDragSourceContextand with the associatedDragSource, and passes them the specifiedDragSourceDragEvent."
java.awt.dnd.DragSourceContext.dropActionChanged,"CallsdropActionChangedon theDragSourceListeners registered with thisDragSourceContextand with the associatedDragSource, and passes them the specifiedDragSourceDragEvent."
java.awt.dnd.DragSourceContext.getComponent,Returns theComponentassociated with thisDragSourceContext.
java.awt.dnd.DragSourceContext.getCursor,Returns the current custom dragCursor.
java.awt.dnd.DragSourceContext.getDragSource,Returns theDragSourcethat instantiated thisDragSourceContext.
java.awt.dnd.DragSourceContext.getSourceActions,Returns a bitwise mask ofDnDConstantsthat  represent the set of drop actions supported by the drag source for the  drag operation associated with thisDragSourceContext.
java.awt.dnd.DragSourceContext.getTransferable,Returns theTransferableassociated with  thisDragSourceContext.
java.awt.dnd.DragSourceContext.getTrigger,Returns theDragGestureEventthat initially triggered the drag.
java.awt.dnd.DragSourceContext.removeDragSourceListener,Removes the specifiedDragSourceListenerfrom  thisDragSourceContext.
java.awt.dnd.DragSourceContext.setCursor,Sets the custom cursor for this drag operation to the specifiedCursor.
java.awt.dnd.DragSourceContext.transferablesFlavorsChanged,Notifies the peer that theTransferable'sDataFlavors have changed.
java.awt.dnd.DragSourceContext.updateCurrentCursor,"If the default drag cursor behavior is active, this method  sets the default drag cursor for the specified actions  supported by the drag source, the drop target action,  and status, otherwise this method does nothing."
java.awt.dnd.DragSourceDragEvent.getDropAction,This method returns the logical intersection of  the target drop action and the set of drop actions supported by  the drag source.
java.awt.dnd.DragSourceDragEvent.getGestureModifiers,This method returns anintrepresenting  the current state of the input device modifiers  associated with the user's gesture.
java.awt.dnd.DragSourceDragEvent.getGestureModifiersEx,This method returns anintrepresenting  the current state of the input device extended modifiers  associated with the user's gesture.
java.awt.dnd.DragSourceDragEvent.getTargetActions,This method returns the target drop action.
java.awt.dnd.DragSourceDragEvent.getUserAction,This method returns the user drop action.
java.awt.dnd.DragSourceDropEvent.getDropAction,This method returns anintrepresenting  the action performed by the target on the subject of the drop.
java.awt.dnd.DragSourceDropEvent.getDropSuccess,This method returns abooleanindicating  if the drop was successful.
java.awt.dnd.DragSourceEvent.getDragSourceContext,This method returns theDragSourceContextthat  originated the event.
java.awt.dnd.DragSourceEvent.getLocation,"This method returns aPointindicating the cursor  location in screen coordinates at the moment this event occurred, ornullif the cursor location is not specified for this  event."
java.awt.dnd.DragSourceEvent.getX,"This method returns the horizontal coordinate of the cursor location in  screen coordinates at the moment this event occurred, or zero if the  cursor location is not specified for this event."
java.awt.dnd.DragSourceEvent.getY,"This method returns the vertical coordinate of the cursor location in  screen coordinates at the moment this event occurred, or zero if the  cursor location is not specified for this event."
java.awt.dnd.DropTarget.actionPerformed,cause autoscroll to occur
java.awt.dnd.DropTarget.stop,cause autoscrolling to stop
java.awt.dnd.DropTarget.addDropTargetListener,Adds a newDropTargetListener(UNICAST SOURCE).
java.awt.dnd.DropTarget.addNotify,Notify the DropTarget that it has been associated with a Component    This method is usually called from java.awt.Component.addNotify() of  the Component associated with this DropTarget to notify the DropTarget  that a ComponentPeer has been associated with that Component.
java.awt.dnd.DropTarget.clearAutoscroll,clear autoscrolling
java.awt.dnd.DropTarget.createDropTargetAutoScroller,create an embedded autoscroller
java.awt.dnd.DropTarget.createDropTargetContext,Creates the DropTargetContext associated with this DropTarget.
java.awt.dnd.DropTarget.dragEnter,CallsdragEnteron the registeredDropTargetListenerand passes it  the specifiedDropTargetDragEvent.
java.awt.dnd.DropTarget.dragExit,CallsdragExiton the registeredDropTargetListenerand passes it  the specifiedDropTargetEvent.
java.awt.dnd.DropTarget.dragOver,CallsdragOveron the registeredDropTargetListenerand passes it  the specifiedDropTargetDragEvent.
java.awt.dnd.DropTarget.drop,Callsdropon the registeredDropTargetListenerand passes it  the specifiedDropTargetDropEventif thisDropTargetis active.
java.awt.dnd.DropTarget.dropActionChanged,CallsdropActionChangedon the registeredDropTargetListenerand passes it  the specifiedDropTargetDragEvent.
java.awt.dnd.DropTarget.getComponent,Gets theComponentassociated  with thisDropTarget.
java.awt.dnd.DropTarget.getDefaultActions,Gets anintrepresenting the  current action(s) supported by thisDropTarget.
java.awt.dnd.DropTarget.getDropTargetContext,Gets theDropTargetContextassociated  with thisDropTarget.
java.awt.dnd.DropTarget.getFlavorMap,Gets theFlavorMapassociated with thisDropTarget.
java.awt.dnd.DropTarget.initializeAutoscrolling,initialize autoscrolling
java.awt.dnd.DropTarget.isActive,Reports whether or not  thisDropTargetis currently active (ready to accept drops).
java.awt.dnd.DropTarget.removeDropTargetListener,Removes the currentDropTargetListener(UNICAST SOURCE).
java.awt.dnd.DropTarget.removeNotify,Notify the DropTarget that it has been disassociated from a Component    This method is usually called from java.awt.Component.removeNotify() of  the Component associated with this DropTarget to notify the DropTarget  that a ComponentPeer has been disassociated with that Component.
java.awt.dnd.DropTarget.setActive,"Sets the DropTarget active iftrue,  inactive iffalse."
java.awt.dnd.DropTarget.setComponent,"Note: this interface is required to permit the safe association  of a DropTarget with a Component in one of two ways, either:component.setDropTarget(droptarget);ordroptarget.setComponent(component);"
java.awt.dnd.DropTarget.setDefaultActions,Sets the default acceptable actions for thisDropTarget
java.awt.dnd.DropTarget.setFlavorMap,Sets theFlavorMapassociated  with thisDropTarget.
java.awt.dnd.DropTarget.updateAutoscroll,update autoscrolling with current cursor location
java.awt.dnd.DropTargetAdapter.dragEnter,"Called while a drag operation is ongoing, when the mouse pointer enters  the operable part of the drop site for theDropTargetregistered with this listener."
java.awt.dnd.DropTargetAdapter.dragExit,"Called while a drag operation is ongoing, when the mouse pointer has  exited the operable part of the drop site for theDropTargetregistered with this listener."
java.awt.dnd.DropTargetAdapter.dragOver,"Called when a drag operation is ongoing, while the mouse pointer is still  over the operable part of the drop site for theDropTargetregistered with this listener."
java.awt.dnd.DropTargetAdapter.dropActionChanged,Called if the user has modified  the current drop gesture.
java.awt.dnd.DropTargetContext.acceptDrag,accept the Drag.
java.awt.dnd.DropTargetContext.acceptDrop,called to signal that the drop is acceptable  using the specified operation.
java.awt.dnd.DropTargetContext.createTransferableProxy,Creates a TransferableProxy to proxy for the specified  Transferable.
java.awt.dnd.DropTargetContext.dropComplete,This method signals that the drop is completed and  if it was successful or not.
java.awt.dnd.DropTargetContext.getComponent,This method returns theComponentassociated with  thisDropTargetContext.
java.awt.dnd.DropTargetContext.getCurrentDataFlavors,get the available DataFlavors of theTransferableoperand of this operation.
java.awt.dnd.DropTargetContext.getCurrentDataFlavorsAsList,This method returns a the currently available DataFlavors  of theTransferableoperand  as ajava.util.List.
java.awt.dnd.DropTargetContext.getDropTarget,This method returns theDropTargetassociated with thisDropTargetContext.
java.awt.dnd.DropTargetContext.getTargetActions,This method returns anintrepresenting the  current actions thisDropTargetwill accept.
java.awt.dnd.DropTargetContext.getTransferable,get the Transferable (proxy) operand of this operation
java.awt.dnd.DropTargetContext.isDataFlavorSupported,This method returns abooleanindicating if the givenDataFlavoris  supported by thisDropTargetContext.
java.awt.dnd.DropTargetContext.rejectDrag,reject the Drag.
java.awt.dnd.DropTargetContext.rejectDrop,called to signal that the drop is unacceptable.
java.awt.dnd.DropTargetContext.setTargetActions,This method sets the current actions acceptable to  thisDropTarget.
java.awt.dnd.DropTargetContext.getTransferData,Returns an object which represents the data provided by  the encapsulated transferable for the requested data flavor.
java.awt.dnd.DropTargetContext.getTransferDataFlavors,Returns an array of DataFlavor objects indicating the flavors  the data can be provided in by the encapsulated transferable.
java.awt.dnd.DropTargetContext.isDataFlavorSupported,Returns whether or not the specified data flavor is supported by  the encapsulated transferable.
java.awt.dnd.DropTargetDragEvent.acceptDrag,Accepts the drag.
java.awt.dnd.DropTargetDragEvent.getCurrentDataFlavors,This method returns the currentDataFlavors from theDropTargetContext.
java.awt.dnd.DropTargetDragEvent.getCurrentDataFlavorsAsList,This method returns the currentDataFlavors  as ajava.util.List
java.awt.dnd.DropTargetDragEvent.getLocation,This method returns aPointindicating theCursor's current  location within theComponent's  coordinates.
java.awt.dnd.DropTargetDragEvent.getSourceActions,This method returns the source drop actions.
java.awt.dnd.DropTargetDragEvent.getTransferable,This method returns the Transferable object that represents  the data associated with the current drag operation.
java.awt.dnd.DropTargetDragEvent.isDataFlavorSupported,This method returns abooleanindicating  if the specifiedDataFlavoris supported.
java.awt.dnd.DropTargetDragEvent.rejectDrag,Rejects the drag as a result of examining either thedropActionor the availableDataFlavortypes.
java.awt.dnd.DropTargetDropEvent.acceptDrop,"accept the drop, using the specified action."
java.awt.dnd.DropTargetDropEvent.dropComplete,This method notifies theDragSourcethat the drop transfer(s) are completed.
java.awt.dnd.DropTargetDropEvent.getCurrentDataFlavors,This method returns the current DataFlavors.
java.awt.dnd.DropTargetDropEvent.getCurrentDataFlavorsAsList,This method returns the currently availableDataFlavors as ajava.util.List.
java.awt.dnd.DropTargetDropEvent.getLocation,This method returns aPointindicating theCursor's current  location in theComponent's coordinates.
java.awt.dnd.DropTargetDropEvent.getTransferable,This method returns theTransferableobject  associated with the drop.
java.awt.dnd.DropTargetDropEvent.isDataFlavorSupported,This method returns abooleanindicating if the  specifiedDataFlavoris available  from the source.
java.awt.dnd.DropTargetDropEvent.isLocalTransfer,This method returns anintindicating if  the source is in the same JVM as the target.
java.awt.dnd.DropTargetDropEvent.rejectDrop,reject the Drop.
java.awt.dnd.DropTargetEvent.getDropTargetContext,This method returns theDropTargetContextassociated with thisDropTargetEvent.
java.awt.dnd.MouseDragGestureRecognizer.mouseClicked,Invoked when the mouse has been clicked on a component.
java.awt.dnd.MouseDragGestureRecognizer.mouseDragged,Invoked when a mouse button is pressed on a component.
java.awt.dnd.MouseDragGestureRecognizer.mouseEntered,Invoked when the mouse enters a component.
java.awt.dnd.MouseDragGestureRecognizer.mouseExited,Invoked when the mouse exits a component.
java.awt.dnd.MouseDragGestureRecognizer.mouseMoved,Invoked when the mouse button has been moved on a component  (with no buttons no down).
java.awt.dnd.MouseDragGestureRecognizer.mousePressed,Invoked when a mouse button has been  pressed on aComponent.
java.awt.dnd.MouseDragGestureRecognizer.mouseReleased,Invoked when a mouse button has been released on a component.
java.awt.dnd.MouseDragGestureRecognizer.registerListeners,register this DragGestureRecognizer's Listeners with the Component
java.awt.event.ActionEvent.getActionCommand,Returns the command string associated with this action.
java.awt.event.ActionEvent.getModifiers,Returns the modifier keys held down during this action event.
java.awt.event.ActionEvent.getWhen,Returns the timestamp of when this event occurred.
java.awt.event.ActionEvent.paramString,Returns a parameter string identifying this action event.
java.awt.event.AdjustmentEvent.getAdjustable,Returns theAdjustableobject where this event originated.
java.awt.event.AdjustmentEvent.getAdjustmentType,Returns the type of adjustment which caused the value changed  event.
java.awt.event.AdjustmentEvent.getValue,Returns the current value in the adjustment event.
java.awt.event.AdjustmentEvent.getValueIsAdjusting,Returnstrueif this is one of multiple  adjustment events.
java.awt.event.AWTEventListenerProxy.eventDispatched,Forwards the AWT event to the listener delegate.
java.awt.event.AWTEventListenerProxy.getEventMask,Returns the event mask associated with the listener.
java.awt.event.ComponentEvent.getComponent,Returns the originator of the event.
java.awt.event.ComponentEvent.paramString,Returns a parameter string identifying this event.
java.awt.event.ContainerEvent.getChild,Returns the component that was affected by the event.
java.awt.event.FocusEvent.getCause,Returns the event cause.
java.awt.event.FocusEvent.getOppositeComponent,Returns the other Component involved in this focus change.
java.awt.event.FocusEvent.isTemporary,Identifies the focus change event as temporary or permanent.
java.awt.event.HierarchyBoundsAdapter.ancestorMoved,Called when an ancestor of the source is moved.
java.awt.event.HierarchyBoundsAdapter.ancestorResized,Called when an ancestor of the source is resized.
java.awt.event.HierarchyEvent.getChanged,Returns the Component at the top of the hierarchy which was  changed.
java.awt.event.HierarchyEvent.getChangedParent,Returns the parent of the Component returned bygetChanged().
java.awt.event.HierarchyEvent.getChangeFlags,Returns a bitmask which indicates the type(s) of  HIERARCHY_CHANGED events represented in this event object.
java.awt.event.InputEvent.consume,Consumes this event so that it will not be processed  in the default manner by the source which originated it.
java.awt.event.InputEvent.getMaskForButton,A method to obtain a mask for any existing mouse button.
java.awt.event.InputEvent.getModifiers,Deprecated.It is recommended that extended modifier keys andgetModifiersEx()be used instead
java.awt.event.InputEvent.getModifiersEx,Returns the extended modifier mask for this event.
java.awt.event.InputEvent.getModifiersExText,"Returns a String describing the extended modifier keys and  mouse buttons, such as ""Shift"", ""Button1"", or ""Ctrl+Shift""."
java.awt.event.InputEvent.getWhen,"Returns the difference in milliseconds between the timestamp of when this event occurred and  midnight, January 1, 1970 UTC."
java.awt.event.InputEvent.isAltDown,Returns whether or not the Alt modifier is down on this event.
java.awt.event.InputEvent.isAltGraphDown,Returns whether or not the AltGraph modifier is down on this event.
java.awt.event.InputEvent.isConsumed,Returns whether or not this event has been consumed.
java.awt.event.InputEvent.isControlDown,Returns whether or not the Control modifier is down on this event.
java.awt.event.InputEvent.isMetaDown,Returns whether or not the Meta modifier is down on this event.
java.awt.event.InputEvent.isShiftDown,Returns whether or not the Shift modifier is down on this event.
java.awt.event.InputMethodEvent.getCaret,Gets the caret.
java.awt.event.InputMethodEvent.getCommittedCharacterCount,Gets the number of committed characters in the text.
java.awt.event.InputMethodEvent.getText,Gets the combined committed and composed text.
java.awt.event.InputMethodEvent.getVisiblePosition,Gets the position that's most important to be visible.
java.awt.event.InputMethodEvent.getWhen,Returns the time stamp of when this event occurred.
java.awt.event.InvocationEvent.dispatch,Executes the Runnable'srun()method and notifies the  notifier (if any) whenrun()has returned or thrown an exception.
java.awt.event.InvocationEvent.getException,Returns any Exception caught while executing  the Runnable'srun()method.
java.awt.event.InvocationEvent.getThrowable,Returns any Throwable caught while executing  the Runnable'srun()method.
java.awt.event.InvocationEvent.isDispatched,"Returnstrueif the event is dispatched or any exception is  thrown while dispatching,falseotherwise."
java.awt.event.ItemEvent.getItem,Returns the item affected by the event.
java.awt.event.ItemEvent.getStateChange,Returns the type of state change (selected or deselected).
java.awt.event.ItemEvent.paramString,Returns a parameter string identifying this item event.
java.awt.event.KeyAdapter.keyPressed,Invoked when a key has been pressed.
java.awt.event.KeyAdapter.keyReleased,Invoked when a key has been released.
java.awt.event.KeyAdapter.keyTyped,Invoked when a key has been typed.
java.awt.event.KeyEvent.getExtendedKeyCode,Returns an extended key code for the event.
java.awt.event.KeyEvent.getExtendedKeyCodeForChar,Returns an extended key code for a unicode character.
java.awt.event.KeyEvent.getKeyChar,Returns the character associated with the key in this event.
java.awt.event.KeyEvent.getKeyCode,Returns the integer keyCode associated with the key in this event.
java.awt.event.KeyEvent.getKeyLocation,Returns the location of the key that originated this key event.
java.awt.event.KeyEvent.getKeyModifiersText,Deprecated.It is recommended that extended modifier keys andInputEvent.getModifiersExText(int)be used instead
java.awt.event.KeyEvent.getKeyText,"Returns a String describing the keyCode, such as ""HOME"", ""F1"" or ""A""."
java.awt.event.KeyEvent.isActionKey,"Returns whether the key in this event is an ""action"" key."
java.awt.event.KeyEvent.setKeyChar,Set the keyChar value to indicate a logical character.
java.awt.event.KeyEvent.setKeyCode,Set the keyCode value to indicate a physical key.
java.awt.event.KeyEvent.setModifiers,Deprecated.as of JDK1.1.4
java.awt.event.MouseAdapter.mouseClicked,Invoked when the mouse button has been clicked (pressed  and released) on a component.
java.awt.event.MouseAdapter.mouseDragged,Invoked when a mouse button is pressed on a component and then  dragged.
java.awt.event.MouseAdapter.mouseMoved,Invoked when the mouse cursor has been moved onto a component  but no buttons have been pushed.
java.awt.event.MouseAdapter.mousePressed,Invoked when a mouse button has been pressed on a component.
java.awt.event.MouseAdapter.mouseWheelMoved,Invoked when the mouse wheel is rotated.
java.awt.event.MouseEvent.getButton,"Returns which, if any, of the mouse buttons has changed state."
java.awt.event.MouseEvent.getClickCount,Returns the number of mouse clicks associated with this event.
java.awt.event.MouseEvent.getLocationOnScreen,"Returns the absolute x, y position of the event."
java.awt.event.MouseEvent.getMouseModifiersText,"Returns aStringinstance describing the modifier keys and  mouse buttons that were down during the event, such as ""Shift"",  or ""Ctrl+Shift""."
java.awt.event.MouseEvent.getPoint,"Returns the x,y position of the event relative to the source component."
java.awt.event.MouseEvent.getX,Returns the horizontal x position of the event relative to the  source component.
java.awt.event.MouseEvent.getXOnScreen,Returns the absolute horizontal x position of the event.
java.awt.event.MouseEvent.getY,Returns the vertical y position of the event relative to the  source component.
java.awt.event.MouseEvent.getYOnScreen,Returns the absolute vertical y position of the event.
java.awt.event.MouseEvent.isPopupTrigger,Returns whether or not this mouse event is the popup menu  trigger event for the platform.
java.awt.event.MouseEvent.translatePoint,Translates the event's coordinates to a new position  by adding specifiedx(horizontal) andy(vertical) offsets.
java.awt.event.MouseWheelEvent.getPreciseWheelRotation,"Returns the number of ""clicks"" the mouse wheel was rotated, as a double."
java.awt.event.MouseWheelEvent.getScrollAmount,Returns the number of units that should be scrolled per  click of mouse wheel rotation.
java.awt.event.MouseWheelEvent.getScrollType,Returns the type of scrolling that should take place in response to this  event.
java.awt.event.MouseWheelEvent.getUnitsToScroll,This is a convenience method to aid in the implementation of  the common-case MouseWheelListener - to scroll a ScrollPane or  JScrollPane by an amount which conforms to the platform settings.
java.awt.event.MouseWheelEvent.getWheelRotation,"Returns the number of ""clicks"" the mouse wheel was rotated, as an integer."
java.awt.event.PaintEvent.getUpdateRect,Returns the rectangle representing the area which needs to be  repainted in response to this event.
java.awt.event.PaintEvent.setUpdateRect,Sets the rectangle representing the area which needs to be  repainted in response to this event.
java.awt.event.TextEvent.paramString,Returns a parameter string identifying this text event.
java.awt.event.WindowAdapter.windowActivated,Invoked when a window is activated.
java.awt.event.WindowAdapter.windowClosed,Invoked when a window has been closed.
java.awt.event.WindowAdapter.windowClosing,Invoked when a window is in the process of being closed.
java.awt.event.WindowAdapter.windowDeactivated,Invoked when a window is de-activated.
java.awt.event.WindowAdapter.windowDeiconified,Invoked when a window is de-iconified.
java.awt.event.WindowAdapter.windowGainedFocus,"Invoked when the Window is set to be the focused Window, which means  that the Window, or one of its subcomponents, will receive keyboard  events."
java.awt.event.WindowAdapter.windowIconified,Invoked when a window is iconified.
java.awt.event.WindowAdapter.windowLostFocus,"Invoked when the Window is no longer the focused Window, which means  that keyboard events will no longer be delivered to the Window or any of  its subcomponents."
java.awt.event.WindowAdapter.windowOpened,Invoked when a window has been opened.
java.awt.event.WindowAdapter.windowStateChanged,Invoked when a window state is changed.
java.awt.event.WindowEvent.getNewState,ForWINDOW_STATE_CHANGEDevents returns the  new state of the window.
java.awt.event.WindowEvent.getOldState,ForWINDOW_STATE_CHANGEDevents returns the  previous state of the window.
java.awt.event.WindowEvent.getOppositeWindow,Returns the other Window involved in this focus or activation change.
java.awt.font.FontRenderContext.equals,"Return true if rhs has the same transform, antialiasing,  and fractional metrics values as this."
java.awt.font.FontRenderContext.equals,"Return true if obj is an instance of FontRenderContext and has the same  transform, antialiasing, and fractional metrics values as this."
java.awt.font.FontRenderContext.getAntiAliasingHint,Return the text anti-aliasing rendering mode hint used in thisFontRenderContext.
java.awt.font.FontRenderContext.getFractionalMetricsHint,Return the text fractional metrics rendering mode hint used in thisFontRenderContext.
java.awt.font.FontRenderContext.getTransform,Gets the transform that is used to scale typographical points    to pixels in thisFontRenderContext.
java.awt.font.FontRenderContext.getTransformType,Returns the integer type of the affine transform for thisFontRenderContextas specified byAffineTransform.getType()
java.awt.font.FontRenderContext.hashCode,Return a hashcode for this FontRenderContext.
java.awt.font.FontRenderContext.isAntiAliased,Returns a boolean which indicates whether or not some form of  antialiasing is specified by thisFontRenderContext.
java.awt.font.FontRenderContext.isTransformed,Indicates whether or not thisFontRenderContextobject  measures text in a transformed render context.
java.awt.font.FontRenderContext.usesFractionalMetrics,Returns a boolean which whether text fractional metrics mode  is used in thisFontRenderContext.
java.awt.font.GlyphMetrics.getAdvance,Returns the advance of the glyph along the baseline (either  horizontal or vertical).
java.awt.font.GlyphMetrics.getAdvanceX,Returns the x-component of the advance of the glyph.
java.awt.font.GlyphMetrics.getAdvanceY,Returns the y-component of the advance of the glyph.
java.awt.font.GlyphMetrics.getBounds2D,Returns the bounds of the glyph.
java.awt.font.GlyphMetrics.getLSB,Returns the left (top) side bearing of the glyph.
java.awt.font.GlyphMetrics.getRSB,Returns the right (bottom) side bearing of the glyph.
java.awt.font.GlyphMetrics.getType,Returns the raw glyph type code.
java.awt.font.GlyphMetrics.isCombining,Returnstrueif this is a combining glyph.
java.awt.font.GlyphMetrics.isComponent,Returnstrueif this is a component glyph.
java.awt.font.GlyphMetrics.isLigature,Returnstrueif this is a ligature glyph.
java.awt.font.GlyphMetrics.isStandard,Returnstrueif this is a standard glyph.
java.awt.font.GlyphMetrics.isWhitespace,Returnstrueif this is a whitespace glyph.
java.awt.font.GlyphVector.equals,Tests if the specifiedGlyphVectorexactly  equals thisGlyphVector.
java.awt.font.GlyphVector.getFont,Returns theFontassociated with thisGlyphVector.
java.awt.font.GlyphVector.getFontRenderContext,Returns theFontRenderContextassociated with thisGlyphVector.
java.awt.font.GlyphVector.getGlyphCharIndex,Returns the character index of the specified glyph.
java.awt.font.GlyphVector.getGlyphCharIndices,Returns the character indices of the specified glyphs.
java.awt.font.GlyphVector.getGlyphCode,Returns the glyphcode of the specified glyph.
java.awt.font.GlyphVector.getGlyphCodes,Returns an array of glyphcodes for the specified glyphs.
java.awt.font.GlyphVector.getGlyphJustificationInfo,Returns the justification information for the glyph at  the specified index into thisGlyphVector.
java.awt.font.GlyphVector.getGlyphLogicalBounds,Returns the logical bounds of the specified glyph within thisGlyphVector.
java.awt.font.GlyphVector.getGlyphMetrics,Returns the metrics of the glyph at the specified index into  thisGlyphVector.
java.awt.font.GlyphVector.getGlyphOutline,Returns aShapewhose interior corresponds to the  visual representation of the specified glyph  within thisGlyphVector.
java.awt.font.GlyphVector.getGlyphOutline,"Returns aShapewhose interior corresponds to the  visual representation of the specified glyph  within thisGlyphVector, offset to x, y."
java.awt.font.GlyphVector.getGlyphPixelBounds,Returns the pixel bounds of the glyph at index when thisGlyphVectoris rendered in aGraphicswith the  givenFontRenderContextat the given location.
java.awt.font.GlyphVector.getGlyphPosition,Returns the position of the specified glyph relative to the  origin of thisGlyphVector.
java.awt.font.GlyphVector.getGlyphPositions,Returns an array of glyph positions for the specified glyphs.
java.awt.font.GlyphVector.getGlyphTransform,Returns the transform of the specified glyph within thisGlyphVector.
java.awt.font.GlyphVector.getGlyphVisualBounds,Returns the visual bounds of the specified glyph within theGlyphVector.
java.awt.font.GlyphVector.getLayoutFlags,Returns flags describing the global state of the GlyphVector.
java.awt.font.GlyphVector.getLogicalBounds,Returns the logical bounds of thisGlyphVector.
java.awt.font.GlyphVector.getNumGlyphs,Returns the number of glyphs in thisGlyphVector.
java.awt.font.GlyphVector.getOutline,Returns aShapewhose interior corresponds to the  visual representation of thisGlyphVector.
java.awt.font.GlyphVector.getOutline,"Returns aShapewhose interior corresponds to the  visual representation of thisGlyphVectorwhen  rendered at x, y."
java.awt.font.GlyphVector.getPixelBounds,Returns the pixel bounds of thisGlyphVectorwhen  rendered in a graphics with the givenFontRenderContextat the given location.
java.awt.font.GlyphVector.getVisualBounds,Returns the visual bounds of thisGlyphVectorThe visual bounds is the bounding box of the outline of thisGlyphVector.
java.awt.font.GlyphVector.performDefaultLayout,Assigns default positions to each glyph in thisGlyphVector.
java.awt.font.GlyphVector.setGlyphPosition,Sets the position of the specified glyph within thisGlyphVector.
java.awt.font.GlyphVector.setGlyphTransform,Sets the transform of the specified glyph within thisGlyphVector.
java.awt.font.GraphicAttribute.draw,Renders thisGraphicAttributeat the specified  location.
java.awt.font.GraphicAttribute.getAdvance,Returns the advance of thisGraphicAttribute.
java.awt.font.GraphicAttribute.getAlignment,Returns the alignment of thisGraphicAttribute.
java.awt.font.GraphicAttribute.getAscent,Returns the ascent of thisGraphicAttribute.
java.awt.font.GraphicAttribute.getBounds,Returns aRectangle2Dthat encloses all of the  bits drawn by thisGraphicAttributerelative to the  rendering position.
java.awt.font.GraphicAttribute.getDescent,Returns the descent of thisGraphicAttribute.
java.awt.font.GraphicAttribute.getJustificationInfo,Returns the justification information for thisGraphicAttribute.
java.awt.font.GraphicAttribute.getOutline,Return aShapethat represents the region that  thisGraphicAttributerenders.
java.awt.font.ImageGraphicAttribute.equals,Compares thisImageGraphicAttributeto the specifiedImageGraphicAttribute.
java.awt.font.ImageGraphicAttribute.equals,Compares thisImageGraphicAttributeto the specifiedObject.
java.awt.font.ImageGraphicAttribute.getAdvance,Returns the advance of thisImageGraphicAttribute.
java.awt.font.ImageGraphicAttribute.getAscent,Returns the ascent of thisImageGraphicAttribute.
java.awt.font.ImageGraphicAttribute.getBounds,"Returns aRectangle2Dthat encloses all of the  bits rendered by thisImageGraphicAttribute, relative  to the rendering position."
java.awt.font.ImageGraphicAttribute.getDescent,Returns the descent of thisImageGraphicAttribute.
java.awt.font.ImageGraphicAttribute.hashCode,Returns a hashcode for thisImageGraphicAttribute.
java.awt.font.LayoutPath.pathToPoint,Convert a location relative to the path to a point in user  coordinates.
java.awt.font.LayoutPath.pointToPath,Convert a point in user space to a location relative to the  path.
java.awt.font.LineBreakMeasurer.deleteChar,"Updates thisLineBreakMeasurerafter a single  character is deleted from the text, and sets the current  position to the beginning of the paragraph."
java.awt.font.LineBreakMeasurer.getPosition,Returns the current position of thisLineBreakMeasurer.
java.awt.font.LineBreakMeasurer.insertChar,"Updates thisLineBreakMeasurerafter a single  character is inserted into the text, and sets the current  position to the beginning of the paragraph."
java.awt.font.LineBreakMeasurer.nextLayout,"Returns the next layout, and updates the current position."
java.awt.font.LineBreakMeasurer.nextOffset,Returns the position at the end of the next layout.
java.awt.font.LineBreakMeasurer.setPosition,Sets the current position of thisLineBreakMeasurer.
java.awt.font.LineMetrics.getAscent,Returns the ascent of the text.
java.awt.font.LineMetrics.getBaselineIndex,Returns the baseline index of the text.
java.awt.font.LineMetrics.getBaselineOffsets,"Returns the baseline offsets of the text,  relative to the baseline of the text."
java.awt.font.LineMetrics.getDescent,Returns the descent of the text.
java.awt.font.LineMetrics.getHeight,Returns the height of the text.
java.awt.font.LineMetrics.getLeading,Returns the leading of the text.
java.awt.font.LineMetrics.getNumChars,Returns the number of characters (charvalues) in the text whose  metrics are encapsulated by thisLineMetricsobject.
java.awt.font.LineMetrics.getStrikethroughOffset,Returns the position of the strike-through line  relative to the baseline.
java.awt.font.LineMetrics.getStrikethroughThickness,Returns the thickness of the strike-through line.
java.awt.font.LineMetrics.getUnderlineOffset,Returns the position of the underline relative to  the baseline.
java.awt.font.LineMetrics.getUnderlineThickness,Returns the thickness of the underline.
java.awt.font.NumericShaper.equals,"Returnstrueif the specified object is an instance ofNumericShaperand shapes identically to this one,  regardless of the range representations, the bit mask or the  enum."
java.awt.font.NumericShaper.getContextualShaper,Returns a contextual shaper for the provided unicode range(s).
java.awt.font.NumericShaper.getContextualShaper,Returns a contextual shaper for the provided Unicode  range(s).
java.awt.font.NumericShaper.getContextualShaper,Returns a contextual shaper for the provided Unicode range(s).
java.awt.font.NumericShaper.getRanges,Returns anintthat ORs together the values for  all the ranges that will be shaped.
java.awt.font.NumericShaper.getRangeSet,Returns aSetrepresenting all the Unicode ranges in  thisNumericShaperthat will be shaped.
java.awt.font.NumericShaper.getShaper,Returns a shaper for the provided unicode range.
java.awt.font.NumericShaper.getShaper,Returns a shaper for the provided Unicode  range.
java.awt.font.NumericShaper.hashCode,Returns a hash code for this shaper.
java.awt.font.NumericShaper.isContextual,Returns abooleanindicating whether or not  this shaper shapes contextually.
java.awt.font.NumericShaper.shape,Converts the digits in the text that occur between start and  start + count.
java.awt.font.NumericShaper.shape,"Converts the digits in the text that occur between start and  start + count, using the provided context."
java.awt.font.NumericShaper.shape,"Converts the digits in the text that occur betweenstartandstart + count, using the providedcontext."
java.awt.font.NumericShaper.toString,Returns aStringthat describes this shaper.
java.awt.font.ShapeGraphicAttribute.equals,Compares thisShapeGraphicAttributeto the specifiedShapeGraphicAttribute.
java.awt.font.ShapeGraphicAttribute.equals,Compares thisShapeGraphicAttributeto the specifiedObject.
java.awt.font.ShapeGraphicAttribute.getAdvance,Returns the advance of thisShapeGraphicAttribute.
java.awt.font.ShapeGraphicAttribute.getAscent,Returns the ascent of thisShapeGraphicAttribute.
java.awt.font.ShapeGraphicAttribute.getBounds,Returns aRectangle2Dthat encloses all of the  bits drawn by thisShapeGraphicAttributerelative to  the rendering position.
java.awt.font.ShapeGraphicAttribute.getDescent,Returns the descent of thisShapeGraphicAttribute.
java.awt.font.ShapeGraphicAttribute.getOutline,Return aShapethat represents the region that  thisShapeGraphicAttributerenders.
java.awt.font.ShapeGraphicAttribute.hashCode,Returns a hashcode for thisShapeGraphicAttribute.
java.awt.font.TextHitInfo.afterOffset,"Creates aTextHitInfoat the specified offset,  associated with the character after the offset."
java.awt.font.TextHitInfo.beforeOffset,"Creates aTextHitInfoat the specified offset,  associated with the character before the offset."
java.awt.font.TextHitInfo.equals,Returnstrueif the specifiedTextHitInfohas the samecharIndexandisLeadingEdgeas thisTextHitInfo.
java.awt.font.TextHitInfo.equals,Returnstrueif the specifiedObjectis aTextHitInfoand equals thisTextHitInfo.
java.awt.font.TextHitInfo.getCharIndex,Returns the index of the character hit.
java.awt.font.TextHitInfo.getInsertionIndex,Returns the insertion index.
java.awt.font.TextHitInfo.getOffsetHit,Creates aTextHitInfowhose character index is offset  bydeltafrom thecharIndexof thisTextHitInfo.
java.awt.font.TextHitInfo.getOtherHit,Creates aTextHitInfoon the other side of the  insertion point.
java.awt.font.TextHitInfo.hashCode,Returns the hash code.
java.awt.font.TextHitInfo.isLeadingEdge,Returnstrueif the leading edge of the character was  hit.
java.awt.font.TextHitInfo.leading,Creates aTextHitInfoon the leading edge of the  character at the specifiedcharIndex.
java.awt.font.TextHitInfo.toString,Returns aStringrepresenting the hit for debugging  use only.
java.awt.font.TextHitInfo.trailing,Creates a hit on the trailing edge of the character at  the specifiedcharIndex.
java.awt.font.TextLayout.getStrongCaret,Chooses one of the specifiedTextHitInfoinstances as  a strong caret in the specifiedTextLayout.
java.awt.font.TextLayout.clone,Creates a copy of thisTextLayout.
java.awt.font.TextLayout.draw,Renders thisTextLayoutat the specified location in  the specifiedGraphics2Dcontext.
java.awt.font.TextLayout.equals,Returnstrueif the two layouts are equal.
java.awt.font.TextLayout.getAdvance,Returns the advance of thisTextLayout.
java.awt.font.TextLayout.getAscent,Returns the ascent of thisTextLayout.
java.awt.font.TextLayout.getBaseline,Returns the baseline for thisTextLayout.
java.awt.font.TextLayout.getBaselineOffsets,Returns the offsets array for the baselines used for thisTextLayout.
java.awt.font.TextLayout.getBlackBoxBounds,Returns the black box bounds of the characters in the specified range.
java.awt.font.TextLayout.getBounds,Returns the bounds of thisTextLayout.
java.awt.font.TextLayout.getCaretInfo,Returns information about the caret corresponding tohit.
java.awt.font.TextLayout.getCaretShape,Returns aShaperepresenting the caret at the specified  hit inside the natural bounds of thisTextLayout.
java.awt.font.TextLayout.getCaretShape,Returns aShaperepresenting the caret at the specified  hit inside the specified bounds.
java.awt.font.TextLayout.getCaretShapes,Returns two paths corresponding to the strong and weak caret.
java.awt.font.TextLayout.getCharacterCount,Returns the number of characters represented by thisTextLayout.
java.awt.font.TextLayout.getCharacterLevel,Returns the level of the character atindex.
java.awt.font.TextLayout.getDescent,Returns the descent of thisTextLayout.
java.awt.font.TextLayout.getJustifiedLayout,Creates a copy of thisTextLayoutjustified to the  specified width.
java.awt.font.TextLayout.getLayoutPath,"Return the LayoutPath, or null if the layout path is the  default path (x maps to advance, y maps to offset)."
java.awt.font.TextLayout.getLeading,Returns the leading of theTextLayout.
java.awt.font.TextLayout.getLogicalHighlightShape,"Returns aShapeenclosing the logical selection in the  specified range, extended to the natural bounds of thisTextLayout."
java.awt.font.TextLayout.getLogicalHighlightShape,"Returns aShapeenclosing the logical selection in the  specified range, extended to the specifiedbounds."
java.awt.font.TextLayout.getLogicalRangesForVisualSelection,Returns the logical ranges of text corresponding to a visual selection.
java.awt.font.TextLayout.getNextLeftHit,"Returns the hit for the next caret to the left (top); if no  such hit, returnsnull."
java.awt.font.TextLayout.getNextLeftHit,"Returns the hit for the next caret to the left (top); if no such  hit, returnsnull."
java.awt.font.TextLayout.getNextRightHit,"Returns the hit for the next caret to the right (bottom); if no  such hit, returnsnull."
java.awt.font.TextLayout.getNextRightHit,"Returns the hit for the next caret to the right (bottom); if there  is no such hit, returnsnull."
java.awt.font.TextLayout.getOutline,Returns aShaperepresenting the outline of thisTextLayout.
java.awt.font.TextLayout.getPixelBounds,Returns the pixel bounds of thisTextLayoutwhen  rendered in a graphics with the givenFontRenderContextat the given location.
java.awt.font.TextLayout.getVisibleAdvance,"Returns the advance of thisTextLayout, minus trailing  whitespace."
java.awt.font.TextLayout.getVisualHighlightShape,"Returns aShapeenclosing the visual selection in the  specified range, extended to the bounds."
java.awt.font.TextLayout.getVisualHighlightShape,"Returns a path enclosing the visual selection in the specified range,  extended tobounds."
java.awt.font.TextLayout.getVisualOtherHit,Returns the hit on the opposite side of the specified hit's caret.
java.awt.font.TextLayout.handleJustify,Justify this layout.
java.awt.font.TextLayout.hitTestChar,Returns aTextHitInfocorresponding to the  specified point.
java.awt.font.TextLayout.hitToPoint,Convert a hit to a point in standard coordinates.
java.awt.font.TextLayout.isLeftToRight,Returnstrueif thisTextLayouthas  a left-to-right base direction orfalseif it has  a right-to-left base direction.
java.awt.font.TextLayout.isVertical,Returnstrueif thisTextLayoutis vertical.
java.awt.font.TextLayout.toString,Returns debugging information for thisTextLayout.
java.awt.font.TextMeasurer.deleteChar,Updates theTextMeasurerafter a single character has  been deleted  from the paragraph currently represented by thisTextMeasurer.
java.awt.font.TextMeasurer.getAdvanceBetween,Returns the graphical width of a line beginning atstartand including characters up tolimit.
java.awt.font.TextMeasurer.getLayout,Returns aTextLayouton the given character range.
java.awt.font.TextMeasurer.getLineBreakIndex,Returns the index of the first character which will not fit on  on a line beginning atstartand possible  measuring up tomaxAdvancein graphical width.
java.awt.font.TextMeasurer.insertChar,Updates theTextMeasurerafter a single character has  been inserted  into the paragraph currently represented by thisTextMeasurer.
java.awt.font.TransformAttribute.equals,Returnstrueif rhs is aTransformAttributewhose transform is equal to thisTransformAttribute's  transform.
java.awt.font.TransformAttribute.getTransform,Returns a copy of the wrapped transform.
java.awt.font.TransformAttribute.isIdentity,Returnstrueif the wrapped transform is  an identity transform.
java.awt.geom.AffineTransform.clone,Returns a copy of thisAffineTransformobject.
java.awt.geom.AffineTransform.concatenate,Concatenates anAffineTransform Txto  thisAffineTransformCx in the most commonly useful  way to provide a new user space  that is mapped to the former user space byTx.
java.awt.geom.AffineTransform.createInverse,Returns anAffineTransformobject representing the  inverse transformation.
java.awt.geom.AffineTransform.createTransformedShape,Returns a newShapeobject defined by the geometry of the  specifiedShapeafter it has been transformed by  this transform.
java.awt.geom.AffineTransform.deltaTransform,Transforms an array of relative distance vectors by this  transform.
java.awt.geom.AffineTransform.deltaTransform,Transforms the relative distance vector specified byptSrcand stores the result inptDst.
java.awt.geom.AffineTransform.equals,Returnstrueif thisAffineTransformrepresents the same affine coordinate transform as the specified  argument.
java.awt.geom.AffineTransform.getDeterminant,Returns the determinant of the matrix representation of the transform.
java.awt.geom.AffineTransform.getMatrix,Retrieves the 6 specifiable values in the 3x3 affine transformation  matrix and places them into an array of double precisions values.
java.awt.geom.AffineTransform.getQuadrantRotateInstance,Returns a transform that rotates coordinates by the specified  number of quadrants.
java.awt.geom.AffineTransform.getQuadrantRotateInstance,Returns a transform that rotates coordinates by the specified  number of quadrants around the specified anchor point.
java.awt.geom.AffineTransform.getRotateInstance,Returns a transform representing a rotation transformation.
java.awt.geom.AffineTransform.getRotateInstance,Returns a transform that rotates coordinates according to  a rotation vector.
java.awt.geom.AffineTransform.getRotateInstance,Returns a transform that rotates coordinates around an anchor point.
java.awt.geom.AffineTransform.getRotateInstance,Returns a transform that rotates coordinates around an anchor  point according to a rotation vector.
java.awt.geom.AffineTransform.getScaleInstance,Returns a transform representing a scaling transformation.
java.awt.geom.AffineTransform.getScaleX,Returns them00element of the 3x3 affine transformation matrix.
java.awt.geom.AffineTransform.getScaleY,Returns them11element of the 3x3 affine transformation matrix.
java.awt.geom.AffineTransform.getShearInstance,Returns a transform representing a shearing transformation.
java.awt.geom.AffineTransform.getShearX,Returns the X coordinate shearing element (m01) of the 3x3  affine transformation matrix.
java.awt.geom.AffineTransform.getShearY,Returns the Y coordinate shearing element (m10) of the 3x3  affine transformation matrix.
java.awt.geom.AffineTransform.getTranslateInstance,Returns a transform representing a translation transformation.
java.awt.geom.AffineTransform.getTranslateX,Returns the X coordinate of the translation element (m02) of the  3x3 affine transformation matrix.
java.awt.geom.AffineTransform.getTranslateY,Returns the Y coordinate of the translation element (m12) of the  3x3 affine transformation matrix.
java.awt.geom.AffineTransform.getType,Retrieves the flag bits describing the conversion properties of  this transform.
java.awt.geom.AffineTransform.hashCode,Returns the hashcode for this transform.
java.awt.geom.AffineTransform.inverseTransform,Inverse transforms an array of double precision coordinates by  this transform.
java.awt.geom.AffineTransform.inverseTransform,Inverse transforms the specifiedptSrcand stores the  result inptDst.
java.awt.geom.AffineTransform.invert,Sets this transform to the inverse of itself.
java.awt.geom.AffineTransform.isIdentity,Returnstrueif thisAffineTransformis  an identity transform.
java.awt.geom.AffineTransform.preConcatenate,Concatenates anAffineTransform Txto  thisAffineTransformCx  in a less commonly used way such thatTxmodifies the  coordinate transformation relative to the absolute pixel  space rather than relative to the existing user space.
java.awt.geom.AffineTransform.quadrantRotate,Concatenates this transform with a transform that rotates  coordinates by the specified number of quadrants.
java.awt.geom.AffineTransform.quadrantRotate,Concatenates this transform with a transform that rotates  coordinates by the specified number of quadrants around  the specified anchor point.
java.awt.geom.AffineTransform.rotate,Concatenates this transform with a rotation transformation.
java.awt.geom.AffineTransform.rotate,Concatenates this transform with a transform that rotates  coordinates according to a rotation vector.
java.awt.geom.AffineTransform.rotate,Concatenates this transform with a transform that rotates  coordinates around an anchor point.
java.awt.geom.AffineTransform.rotate,Concatenates this transform with a transform that rotates  coordinates around an anchor point according to a rotation  vector.
java.awt.geom.AffineTransform.scale,Concatenates this transform with a scaling transformation.
java.awt.geom.AffineTransform.setToIdentity,Resets this transform to the Identity transform.
java.awt.geom.AffineTransform.setToQuadrantRotation,Sets this transform to a rotation transformation that rotates  coordinates by the specified number of quadrants.
java.awt.geom.AffineTransform.setToQuadrantRotation,Sets this transform to a translated rotation transformation  that rotates coordinates by the specified number of quadrants  around the specified anchor point.
java.awt.geom.AffineTransform.setToRotation,Sets this transform to a rotation transformation.
java.awt.geom.AffineTransform.setToRotation,Sets this transform to a rotation transformation that rotates  coordinates according to a rotation vector.
java.awt.geom.AffineTransform.setToRotation,Sets this transform to a translated rotation transformation.
java.awt.geom.AffineTransform.setToRotation,Sets this transform to a rotation transformation that rotates  coordinates around an anchor point according to a rotation  vector.
java.awt.geom.AffineTransform.setToScale,Sets this transform to a scaling transformation.
java.awt.geom.AffineTransform.setToShear,Sets this transform to a shearing transformation.
java.awt.geom.AffineTransform.setToTranslation,Sets this transform to a translation transformation.
java.awt.geom.AffineTransform.setTransform,Sets this transform to the matrix specified by the 6  double precision values.
java.awt.geom.AffineTransform.setTransform,Sets this transform to a copy of the transform in the specifiedAffineTransformobject.
java.awt.geom.AffineTransform.shear,Concatenates this transform with a shearing transformation.
java.awt.geom.AffineTransform.toString,Returns aStringthat represents the value of thisObject.
java.awt.geom.AffineTransform.transform,Transforms an array of double precision coordinates by this transform.
java.awt.geom.AffineTransform.transform,Transforms an array of double precision coordinates by this transform  and stores the results into an array of floats.
java.awt.geom.AffineTransform.transform,Transforms an array of floating point coordinates by this transform  and stores the results into an array of doubles.
java.awt.geom.AffineTransform.transform,Transforms an array of floating point coordinates by this transform.
java.awt.geom.AffineTransform.transform,Transforms an array of point objects by this transform.
java.awt.geom.AffineTransform.transform,Transforms the specifiedptSrcand stores the result  inptDst.
java.awt.geom.AffineTransform.translate,Concatenates this transform with a translation transformation.
java.awt.geom.Arc2D.getAngleExtent,Returns the angular extent of the arc.
java.awt.geom.Arc2D.getAngleStart,Returns the starting angle of the arc.
java.awt.geom.Arc2D.getHeight,Returns the height of the framing rectangle  indoubleprecision.
java.awt.geom.Arc2D.getWidth,Returns the width of the framing rectangle indoubleprecision.
java.awt.geom.Arc2D.getX,Returns the X coordinate of the upper-left corner of  the framing rectangle indoubleprecision.
java.awt.geom.Arc2D.getY,Returns the Y coordinate of the upper-left corner of  the framing rectangle indoubleprecision.
java.awt.geom.Arc2D.makeBounds,Constructs aRectangle2Dof the appropriate precision  to hold the parameters calculated to be the framing rectangle  of this arc.
java.awt.geom.Arc2D.setAngleExtent,Sets the angular extent of this arc to the specified double  value.
java.awt.geom.Arc2D.setAngleStart,Sets the starting angle of this arc to the specified double  value.
java.awt.geom.Arc2D.setArc,"Sets the location, size, angular extents, and closure type of  this arc to the specified double values."
java.awt.geom.Arc2D.contains,Determines whether or not the specified point is inside the boundary  of the arc.
java.awt.geom.Arc2D.contains,Determines whether or not the interior of the arc entirely contains  the specified rectangle.
java.awt.geom.Arc2D.containsAngle,Determines whether or not the specified angle is within the  angular extents of the arc.
java.awt.geom.Arc2D.equals,Determines whether or not the specifiedObjectis  equal to thisArc2D.
java.awt.geom.Arc2D.getArcType,"Returns the arc closure type of the arc:OPEN,CHORD, orPIE."
java.awt.geom.Arc2D.getBounds2D,Returns the high-precision framing rectangle of the arc.
java.awt.geom.Arc2D.getEndPoint,Returns the ending point of the arc.
java.awt.geom.Arc2D.getPathIterator,Returns an iteration object that defines the boundary of the  arc.
java.awt.geom.Arc2D.getStartPoint,Returns the starting point of the arc.
java.awt.geom.Arc2D.hashCode,Returns the hashcode for thisArc2D.
java.awt.geom.Arc2D.intersects,Determines whether or not the interior of the arc intersects  the interior of the specified rectangle.
java.awt.geom.Arc2D.setAngles,Sets the starting angle and angular extent of this arc using two  sets of coordinates.
java.awt.geom.Arc2D.setAngles,Sets the starting angle and angular extent of this arc using  two points.
java.awt.geom.Arc2D.setAngleStart,Sets the starting angle of this arc to the angle that the  specified point defines relative to the center of this arc.
java.awt.geom.Arc2D.setArc,Sets this arc to be the same as the specified arc.
java.awt.geom.Arc2D.setArc,"Sets the location, size, angular extents, and closure type of  this arc to the specified values."
java.awt.geom.Arc2D.setArcByCenter,"Sets the position, bounds, angular extents, and closure type of  this arc to the specified values."
java.awt.geom.Arc2D.setArcByTangent,"Sets the position, bounds, and angular extents of this arc to the  specified value."
java.awt.geom.Arc2D.setArcType,"Sets the closure type of this arc to the specified value:OPEN,CHORD, orPIE."
java.awt.geom.Arc2D.setFrame,Sets the location and size of the framing rectangle of thisShapeto the specified rectangular values.
java.awt.geom.Area.add,Adds the shape of the specifiedAreato the  shape of thisArea.
java.awt.geom.Area.clone,Returns an exact copy of thisAreaobject.
java.awt.geom.Area.createTransformedArea,Creates a newAreaobject that contains the same  geometry as thisAreatransformed by the specifiedAffineTransform.
java.awt.geom.Area.equals,Tests whether the geometries of the twoAreaobjects  are equal.
java.awt.geom.Area.exclusiveOr,"Sets the shape of thisAreato be the combined area  of its current shape and the shape of the specifiedArea,  minus their intersection."
java.awt.geom.Area.getBounds,Returns a boundingRectanglethat completely encloses  thisArea.
java.awt.geom.Area.getBounds2D,Returns a high precision boundingRectangle2Dthat  completely encloses thisArea.
java.awt.geom.Area.getPathIterator,Creates aPathIteratorfor the outline of thisAreaobject.
java.awt.geom.Area.getPathIterator,Creates aPathIteratorfor the flattened outline of  thisAreaobject.
java.awt.geom.Area.intersect,Sets the shape of thisAreato the intersection of  its current shape and the shape of the specifiedArea.
java.awt.geom.Area.isEmpty,Tests whether thisAreaobject encloses any area.
java.awt.geom.Area.isPolygonal,Tests whether thisAreaconsists entirely of  straight edged polygonal geometry.
java.awt.geom.Area.isRectangular,Tests whether thisAreais rectangular in shape.
java.awt.geom.Area.isSingular,Tests whether thisAreais comprised of a single  closed subpath.
java.awt.geom.Area.reset,Removes all of the geometry from thisAreaand  restores it to an empty area.
java.awt.geom.Area.subtract,Subtracts the shape of the specifiedAreafrom the  shape of thisArea.
java.awt.geom.Area.transform,Transforms the geometry of thisAreausing the specifiedAffineTransform.
java.awt.geom.CubicCurve2D.getCtrlP1,Returns the first control point.
java.awt.geom.CubicCurve2D.getCtrlP2,Returns the second control point.
java.awt.geom.CubicCurve2D.getCtrlX1,Returns the X coordinate of the first control point in double precision.
java.awt.geom.CubicCurve2D.getCtrlX2,Returns the X coordinate of the second control point  in double precision.
java.awt.geom.CubicCurve2D.getCtrlY1,Returns the Y coordinate of the first control point in double precision.
java.awt.geom.CubicCurve2D.getCtrlY2,Returns the Y coordinate of the second control point  in double precision.
java.awt.geom.CubicCurve2D.getP1,Returns the start point.
java.awt.geom.CubicCurve2D.getP2,Returns the end point.
java.awt.geom.CubicCurve2D.getX1,Returns the X coordinate of the start point in double precision.
java.awt.geom.CubicCurve2D.getX2,Returns the X coordinate of the end point in double precision.
java.awt.geom.CubicCurve2D.getY1,Returns the Y coordinate of the start point in double precision.
java.awt.geom.CubicCurve2D.getY2,Returns the Y coordinate of the end point in double precision.
java.awt.geom.CubicCurve2D.setCurve,Sets the location of the end points and control points of this curve  to the specified double coordinates.
java.awt.geom.CubicCurve2D.setCurve,Sets the location of the end points and control points  of this curve to the specifiedfloatcoordinates.
java.awt.geom.CubicCurve2D.clone,Creates a new object of the same class as this object.
java.awt.geom.CubicCurve2D.getBounds,Returns an integerRectanglethat completely encloses theShape.
java.awt.geom.CubicCurve2D.getFlatness,Returns the flatness of this curve.
java.awt.geom.CubicCurve2D.getFlatness,Returns the flatness of the cubic curve specified  by the control points stored in the indicated array at the  indicated index.
java.awt.geom.CubicCurve2D.getFlatness,Returns the flatness of the cubic curve specified  by the indicated control points.
java.awt.geom.CubicCurve2D.getFlatnessSq,Returns the square of the flatness of this curve.
java.awt.geom.CubicCurve2D.getFlatnessSq,Returns the square of the flatness of the cubic curve specified  by the control points stored in the indicated array at the  indicated index.
java.awt.geom.CubicCurve2D.getFlatnessSq,Returns the square of the flatness of the cubic curve specified  by the indicated control points.
java.awt.geom.CubicCurve2D.getPathIterator,Returns an iteration object that defines the boundary of the  shape.
java.awt.geom.CubicCurve2D.getPathIterator,Return an iteration object that defines the boundary of the  flattened shape.
java.awt.geom.CubicCurve2D.setCurve,Sets the location of the end points and control points of this curve  to the double coordinates at the specified offset in the specified  array.
java.awt.geom.CubicCurve2D.setCurve,Sets the location of the end points and control points of this curve  to the same as those in the specifiedCubicCurve2D.
java.awt.geom.CubicCurve2D.setCurve,Sets the location of the end points and control points of this curve  to the coordinates of thePoint2Dobjects at the specified  offset in the specified array.
java.awt.geom.CubicCurve2D.setCurve,Sets the location of the end points and control points of this curve  to the specifiedPoint2Dcoordinates.
java.awt.geom.CubicCurve2D.solveCubic,"Solves the cubic whose coefficients are in theeqnarray and places the non-complex roots back into the same array,  returning the number of roots."
java.awt.geom.CubicCurve2D.solveCubic,"Solve the cubic whose coefficients are in theeqnarray and place the non-complex roots into theresarray, returning the number of roots."
java.awt.geom.CubicCurve2D.subdivide,Subdivides the cubic curve specified by the coordinates  stored in thesrcarray at indicessrcoffthrough (srcoff+ 7) and stores the  resulting two subdivided curves into the two result arrays at the  corresponding indices.
java.awt.geom.CubicCurve2D.subdivide,Subdivides this cubic curve and stores the resulting two  subdivided curves into the left and right curve parameters.
java.awt.geom.CubicCurve2D.subdivide,Subdivides the cubic curve specified by thesrcparameter  and stores the resulting two subdivided curves into theleftandrightcurve parameters.
java.awt.geom.Dimension2D.setSize,Sets the size of thisDimensionobject to the  specified width and height.
java.awt.geom.Dimension2D.setSize,Sets the size of thisDimension2Dobject to  match the specified size.
java.awt.geom.Ellipse2D.equals,Determines whether or not the specifiedObjectis  equal to thisEllipse2D.
java.awt.geom.Ellipse2D.getPathIterator,Returns an iteration object that defines the boundary of thisEllipse2D.
java.awt.geom.Ellipse2D.hashCode,Returns the hashcode for thisEllipse2D.
java.awt.geom.FlatteningPathIterator.currentSegment,Returns the coordinates and type of the current path segment in  the iteration.
java.awt.geom.FlatteningPathIterator.getFlatness,Returns the flatness of this iterator.
java.awt.geom.FlatteningPathIterator.getRecursionLimit,Returns the recursion limit of this iterator.
java.awt.geom.FlatteningPathIterator.getWindingRule,Returns the winding rule for determining the interior of the  path.
java.awt.geom.FlatteningPathIterator.isDone,Tests if the iteration is complete.
java.awt.geom.FlatteningPathIterator.next,Moves the iterator to the next segment of the path forwards  along the primary direction of traversal as long as there are  more points in that direction.
java.awt.geom.Line2D.getP1,Returns the startPoint2Dof thisLine2D.
java.awt.geom.Line2D.getP2,Returns the endPoint2Dof thisLine2D.
java.awt.geom.Line2D.setLine,Sets the location of the end points of thisLine2Dto  the specified double coordinates.
java.awt.geom.Line2D.setLine,Sets the location of the end points of thisLine2Dto the specified float coordinates.
java.awt.geom.Line2D.contains,Tests if a specified coordinate is inside the boundary of thisLine2D.
java.awt.geom.Line2D.contains,Tests if the interior of thisLine2Dentirely contains  the specified set of rectangular coordinates.
java.awt.geom.Line2D.contains,Tests if a givenPoint2Dis inside the boundary of  thisLine2D.
java.awt.geom.Line2D.contains,Tests if the interior of thisLine2Dentirely contains  the specifiedRectangle2D.
java.awt.geom.Line2D.getPathIterator,Returns an iteration object that defines the boundary of thisLine2D.
java.awt.geom.Line2D.getPathIterator,Returns an iteration object that defines the boundary of this  flattenedLine2D.
java.awt.geom.Line2D.intersectsLine,"Tests if the line segment from(x1,y1)to(x2,y2)intersects this line segment."
java.awt.geom.Line2D.intersectsLine,Tests if the specified line segment intersects this line segment.
java.awt.geom.Line2D.linesIntersect,"Tests if the line segment from(x1,y1)to(x2,y2)intersects the line segment from(x3,y3)to(x4,y4)."
java.awt.geom.Line2D.ptLineDist,Returns the distance from a point to this line.
java.awt.geom.Line2D.ptLineDist,Returns the distance from a point to a line.
java.awt.geom.Line2D.ptLineDist,Returns the distance from aPoint2Dto this line.
java.awt.geom.Line2D.ptLineDistSq,Returns the square of the distance from a point to this line.
java.awt.geom.Line2D.ptLineDistSq,Returns the square of the distance from a point to a line.
java.awt.geom.Line2D.ptLineDistSq,Returns the square of the distance from a specifiedPoint2Dto this line.
java.awt.geom.Line2D.ptSegDist,Returns the distance from a point to this line segment.
java.awt.geom.Line2D.ptSegDist,Returns the distance from a point to a line segment.
java.awt.geom.Line2D.ptSegDist,Returns the distance from aPoint2Dto this line  segment.
java.awt.geom.Line2D.ptSegDistSq,Returns the square of the distance from a point to this line segment.
java.awt.geom.Line2D.ptSegDistSq,Returns the square of the distance from a point to a line segment.
java.awt.geom.Line2D.ptSegDistSq,Returns the square of the distance from aPoint2Dto  this line segment.
java.awt.geom.Line2D.relativeCCW,"Returns an indicator of where the specified point(px,py)lies with respect to this line segment."
java.awt.geom.Line2D.relativeCCW,"Returns an indicator of where the specified point(px,py)lies with respect to the line segment from(x1,y1)to(x2,y2)."
java.awt.geom.Line2D.relativeCCW,Returns an indicator of where the specifiedPoint2Dlies with respect to this line segment.
java.awt.geom.Line2D.setLine,Sets the location of the end points of thisLine2Dto  the same as those end points of the specifiedLine2D.
java.awt.geom.Line2D.setLine,Sets the location of the end points of thisLine2Dto  the specifiedPoint2Dcoordinates.
java.awt.geom.Path2D.append,"Appends the geometry of the specifiedPathIteratorobject  to the path, possibly connecting the new geometry to the existing  path segments with a line segment."
java.awt.geom.Path2D.curveTo,"Adds a curved segment, defined by three new points, to the path by  drawing a Bézier curve that intersects both the current  coordinates and the specified coordinates(x3,y3),  using the specified points(x1,y1)and(x2,y2)as  Bézier control points."
java.awt.geom.Path2D.getPathIterator,Returns an iterator object that iterates along theShapeboundary and provides access to the geometry of theShapeoutline.
java.awt.geom.Path2D.lineTo,Adds a point to the path by drawing a straight line from the  current coordinates to the new specified coordinates  specified in double precision.
java.awt.geom.Path2D.moveTo,Adds a point to the path by moving to the specified  coordinates specified in double precision.
java.awt.geom.Path2D.quadTo,"Adds a curved segment, defined by two new points, to the path by  drawing a Quadratic curve that intersects both the current  coordinates and the specified coordinates(x2,y2),  using the specified point(x1,y1)as a quadratic  parametric control point."
java.awt.geom.Path2D.transform,Transforms the geometry of this path using the specifiedAffineTransform.
java.awt.geom.Path2D.trimToSize,Trims the capacity of this Path2D instance to its current  size.
java.awt.geom.Path2D.lineTo,Adds a point to the path by drawing a straight line from the  current coordinates to the new specified coordinates  specified in float precision.
java.awt.geom.Path2D.moveTo,Adds a point to the path by moving to the specified  coordinates specified in float precision.
java.awt.geom.Path2D.append,"Appends the geometry of the specifiedShapeobject to the  path, possibly connecting the new geometry to the existing path  segments with a line segment."
java.awt.geom.Path2D.closePath,Closes the current subpath by drawing a straight line back to  the coordinates of the lastmoveTo.
java.awt.geom.Path2D.contains,Tests if the specified coordinates are inside the closed  boundary of the specifiedPathIterator.
java.awt.geom.Path2D.contains,Tests if the specified rectangular area is entirely inside the  closed boundary of the specifiedPathIterator.
java.awt.geom.Path2D.contains,Tests if the specifiedPoint2Dis inside the closed  boundary of the specifiedPathIterator.
java.awt.geom.Path2D.contains,Tests if the specifiedRectangle2Dis entirely inside the  closed boundary of the specifiedPathIterator.
java.awt.geom.Path2D.createTransformedShape,Returns a newShaperepresenting a transformed version  of thisPath2D.
java.awt.geom.Path2D.getCurrentPoint,Returns the coordinates most recently added to the end of the path  as aPoint2Dobject.
java.awt.geom.Path2D.getPathIterator,Returns an iterator object that iterates along theShapeboundary and provides access to a flattened view of theShapeoutline geometry.
java.awt.geom.Path2D.getWindingRule,Returns the fill style winding rule.
java.awt.geom.Path2D.intersects,Tests if the interior of the specifiedPathIteratorintersects the interior of a specified set of rectangular  coordinates.
java.awt.geom.Path2D.intersects,Tests if the interior of the specifiedPathIteratorintersects the interior of a specifiedRectangle2D.
java.awt.geom.Path2D.reset,Resets the path to empty.
java.awt.geom.Path2D.setWindingRule,Sets the winding rule for this path to the specified value.
java.awt.geom.Point2D.setLocation,Sets the location of thisPoint2Dto the  specifieddoublecoordinates.
java.awt.geom.Point2D.toString,Returns aStringthat represents the value  of thisPoint2D.
java.awt.geom.Point2D.setLocation,Sets the location of thisPoint2Dto the  specifiedfloatcoordinates.
java.awt.geom.Point2D.clone,Creates a new object of the same class and with the  same contents as this object.
java.awt.geom.Point2D.distance,Returns the distance from thisPoint2Dto  a specified point.
java.awt.geom.Point2D.distance,Returns the distance between two points.
java.awt.geom.Point2D.distance,Returns the distance from thisPoint2Dto a  specifiedPoint2D.
java.awt.geom.Point2D.distanceSq,Returns the square of the distance from thisPoint2Dto a specified point.
java.awt.geom.Point2D.distanceSq,Returns the square of the distance between two points.
java.awt.geom.Point2D.distanceSq,Returns the square of the distance from thisPoint2Dto a specifiedPoint2D.
java.awt.geom.Point2D.hashCode,Returns the hashcode for thisPoint2D.
java.awt.geom.Point2D.setLocation,Sets the location of thisPoint2Dto the same  coordinates as the specifiedPoint2Dobject.
java.awt.geom.QuadCurve2D.getCtrlPt,Returns the control point.
java.awt.geom.QuadCurve2D.getCtrlX,Returns the X coordinate of the control point indoubleprecision.
java.awt.geom.QuadCurve2D.getCtrlY,Returns the Y coordinate of the control point indoubleprecision.
java.awt.geom.QuadCurve2D.getX1,Returns the X coordinate of the start point indoublein precision.
java.awt.geom.QuadCurve2D.getX2,Returns the X coordinate of the end point indoubleprecision.
java.awt.geom.QuadCurve2D.getY1,Returns the Y coordinate of the start point indoubleprecision.
java.awt.geom.QuadCurve2D.getY2,Returns the Y coordinate of the end point indoubleprecision.
java.awt.geom.QuadCurve2D.setCurve,Sets the location of the end points and control point of this curve  to the specifieddoublecoordinates.
java.awt.geom.QuadCurve2D.setCurve,Sets the location of the end points and control point of this curve  to the specifiedfloatcoordinates.
java.awt.geom.QuadCurve2D.clone,Creates a new object of the same class and with the same contents  as this object.
java.awt.geom.QuadCurve2D.getFlatness,"Returns the flatness, or maximum distance of a  control point from the line connecting the end points, of thisQuadCurve2D."
java.awt.geom.QuadCurve2D.getFlatness,"Returns the flatness, or maximum distance of a  control point from the line connecting the end points, of the  quadratic curve specified by the control points stored in the  indicated array at the indicated index."
java.awt.geom.QuadCurve2D.getFlatness,"Returns the flatness, or maximum distance of a  control point from the line connecting the end points, of the  quadratic curve specified by the indicated control points."
java.awt.geom.QuadCurve2D.getFlatnessSq,"Returns the square of the flatness, or maximum distance of a  control point from the line connecting the end points, of thisQuadCurve2D."
java.awt.geom.QuadCurve2D.getFlatnessSq,"Returns the square of the flatness, or maximum distance of a  control point from the line connecting the end points, of the  quadratic curve specified by the control points stored in the  indicated array at the indicated index."
java.awt.geom.QuadCurve2D.getFlatnessSq,"Returns the square of the flatness, or maximum distance of a  control point from the line connecting the end points, of the  quadratic curve specified by the indicated control points."
java.awt.geom.QuadCurve2D.getPathIterator,Returns an iteration object that defines the boundary of the  shape of thisQuadCurve2D.
java.awt.geom.QuadCurve2D.getPathIterator,Returns an iteration object that defines the boundary of the  flattened shape of thisQuadCurve2D.
java.awt.geom.QuadCurve2D.setCurve,Sets the location of the end points and control points of thisQuadCurve2Dto thedoublecoordinates at  the specified offset in the specified array.
java.awt.geom.QuadCurve2D.setCurve,Sets the location of the end points and control points of thisQuadCurve2Dto the coordinates of thePoint2Dobjects at the specified offset in  the specified array.
java.awt.geom.QuadCurve2D.setCurve,Sets the location of the end points and control point of thisQuadCurve2Dto the specifiedPoint2Dcoordinates.
java.awt.geom.QuadCurve2D.setCurve,Sets the location of the end points and control point of thisQuadCurve2Dto the same as those in the specifiedQuadCurve2D.
java.awt.geom.QuadCurve2D.solveQuadratic,"Solves the quadratic whose coefficients are in theeqnarray and places the non-complex roots back into the same array,  returning the number of roots."
java.awt.geom.QuadCurve2D.solveQuadratic,"Solves the quadratic whose coefficients are in theeqnarray and places the non-complex roots into theresarray, returning the number of roots."
java.awt.geom.QuadCurve2D.subdivide,Subdivides the quadratic curve specified by the coordinates  stored in thesrcarray at indicessrcoffthroughsrcoff+ 5  and stores the resulting two subdivided curves into the two  result arrays at the corresponding indices.
java.awt.geom.QuadCurve2D.subdivide,Subdivides thisQuadCurve2Dand stores the resulting  two subdivided curves into theleftandrightcurve parameters.
java.awt.geom.QuadCurve2D.subdivide,Subdivides the quadratic curve specified by thesrcparameter and stores the resulting two subdivided curves into theleftandrightcurve parameters.
java.awt.geom.Rectangle2D.setRect,Sets the location and size of thisRectangle2Dto the specifieddoublevalues.
java.awt.geom.Rectangle2D.setRect,Sets thisRectangle2Dto be the same as the specifiedRectangle2D.
java.awt.geom.Rectangle2D.toString,Returns theStringrepresentation of thisRectangle2D.
java.awt.geom.Rectangle2D.setRect,Sets the location and size of thisRectangle2Dto the specifiedfloatvalues.
java.awt.geom.Rectangle2D.add,"Adds a point, specified by the double precision argumentsnewxandnewy, to thisRectangle2D."
java.awt.geom.Rectangle2D.add,Adds thePoint2Dobjectptto thisRectangle2D.
java.awt.geom.Rectangle2D.add,Adds aRectangle2Dobject to thisRectangle2D.
java.awt.geom.Rectangle2D.equals,Determines whether or not the specifiedObjectis  equal to thisRectangle2D.
java.awt.geom.Rectangle2D.getPathIterator,Returns an iteration object that defines the boundary of thisRectangle2D.
java.awt.geom.Rectangle2D.getPathIterator,Returns an iteration object that defines the boundary of the  flattenedRectangle2D.
java.awt.geom.Rectangle2D.hashCode,Returns the hashcode for thisRectangle2D.
java.awt.geom.Rectangle2D.intersect,Intersects the pair of specified sourceRectangle2Dobjects and puts the result into the specified destinationRectangle2Dobject.
java.awt.geom.Rectangle2D.intersectsLine,Tests if the specified line segment intersects the interior of thisRectangle2D.
java.awt.geom.Rectangle2D.outcode,Determines where the specifiedPoint2Dlies with  respect to thisRectangle2D.
java.awt.geom.Rectangle2D.setFrame,Sets the location and size of the outer bounds of thisRectangle2Dto the specified rectangular values.
java.awt.geom.Rectangle2D.union,Unions the pair of sourceRectangle2Dobjects  and puts the result into the specified destinationRectangle2Dobject.
java.awt.geom.RectangularShape.clone,Creates a new object of the same class and with the same  contents as this object.
java.awt.geom.RectangularShape.getCenterX,Returns the X coordinate of the center of the framing  rectangle of theShapeindoubleprecision.
java.awt.geom.RectangularShape.getCenterY,Returns the Y coordinate of the center of the framing  rectangle of theShapeindoubleprecision.
java.awt.geom.RectangularShape.getFrame,Returns the framingRectangle2Dthat defines the overall shape of this object.
java.awt.geom.RectangularShape.getMaxX,Returns the largest X coordinate of the framing  rectangle of theShapeindoubleprecision.
java.awt.geom.RectangularShape.getMaxY,Returns the largest Y coordinate of the framing  rectangle of theShapeindoubleprecision.
java.awt.geom.RectangularShape.getMinX,Returns the smallest X coordinate of the framing  rectangle of theShapeindoubleprecision.
java.awt.geom.RectangularShape.getMinY,Returns the smallest Y coordinate of the framing  rectangle of theShapeindoubleprecision.
java.awt.geom.RectangularShape.getPathIterator,Returns an iterator object that iterates along theShapeobject's boundary and provides access to a  flattened view of the outline of theShapeobject's geometry.
java.awt.geom.RectangularShape.setFrame,"Sets the location and size of the framing rectangle of thisShapeto the specifiedPoint2DandDimension2D, respectively."
java.awt.geom.RectangularShape.setFrame,Sets the framing rectangle of thisShapeto  be the specifiedRectangle2D.
java.awt.geom.RectangularShape.setFrameFromCenter,Sets the framing rectangle of thisShapebased on the specified center point coordinates and corner point  coordinates.
java.awt.geom.RectangularShape.setFrameFromCenter,Sets the framing rectangle of thisShapebased on a  specified centerPoint2Dand cornerPoint2D.
java.awt.geom.RectangularShape.setFrameFromDiagonal,Sets the diagonal of the framing rectangle of thisShapebased on the two specified coordinates.
java.awt.geom.RectangularShape.setFrameFromDiagonal,Sets the diagonal of the framing rectangle of thisShapebased on two specifiedPoint2Dobjects.
java.awt.geom.RoundRectangle2D.getArcHeight,Gets the height of the arc that rounds off the corners.
java.awt.geom.RoundRectangle2D.getArcWidth,Gets the width of the arc that rounds off the corners.
java.awt.geom.RoundRectangle2D.setRoundRect,"Sets the location, size, and corner radii of thisRoundRectangle2Dto the specifieddoublevalues."
java.awt.geom.RoundRectangle2D.setRoundRect,Sets thisRoundRectangle2Dto be the same as the  specifiedRoundRectangle2D.
java.awt.geom.RoundRectangle2D.setRoundRect,"Sets the location, size, and corner radii of thisRoundRectangle2Dto the specifiedfloatvalues."
java.awt.geom.RoundRectangle2D.equals,Determines whether or not the specifiedObjectis  equal to thisRoundRectangle2D.
java.awt.geom.RoundRectangle2D.getPathIterator,Returns an iteration object that defines the boundary of thisRoundRectangle2D.
java.awt.geom.RoundRectangle2D.hashCode,Returns the hashcode for thisRoundRectangle2D.
java.awt.im.InputContext.dispatchEvent,Dispatches an event to the active input method.
java.awt.im.InputContext.dispose,Releases the resources used by this input context.
java.awt.im.InputContext.endComposition,Ends any input composition that may currently be going on in this  context.
java.awt.im.InputContext.getInputMethodControlObject,"Returns a control object from the current input method, or null."
java.awt.im.InputContext.getInstance,Returns a new InputContext instance.
java.awt.im.InputContext.getLocale,Returns the current locale of the current input method or keyboard  layout.
java.awt.im.InputContext.isCompositionEnabled,Determines whether the current input method is enabled for composition.
java.awt.im.InputContext.reconvert,Asks the current input method to reconvert text from the  current client component.
java.awt.im.InputContext.removeNotify,"Notifies the input context that a client component has been  removed from its containment hierarchy, or that input method  support has been disabled for the component."
java.awt.im.InputContext.selectInputMethod,"Attempts to select an input method or keyboard layout that  supports the given locale, and returns a value indicating whether such  an input method or keyboard layout has been successfully selected."
java.awt.im.InputContext.setCharacterSubsets,Sets the subsets of the Unicode character set that input methods of this input  context should be allowed to input.
java.awt.im.InputContext.setCompositionEnabled,"Enables or disables the current input method for composition,  depending on the value of the parameterenable."
java.awt.im.InputMethodHighlight.getState,Returns the conversion state of the text range.
java.awt.im.InputMethodHighlight.getStyle,"Returns the rendering style attributes for the text range, or null."
java.awt.im.InputMethodHighlight.getVariation,Returns the variation of the text range.
java.awt.im.InputMethodHighlight.isSelected,Returns whether the text range is selected.
java.awt.image.AbstractMultiResolutionImage.getBaseImage,Return the base image representing the best version of the image for  rendering at the default width and height.
java.awt.image.AbstractMultiResolutionImage.getGraphics,"As per the contract of the baseImage#getGraphics()method,  this implementation will always throwUnsupportedOperationExceptionsince only off-screen images can return aGraphicsobject."
java.awt.image.AbstractMultiResolutionImage.getHeight,This method simply delegates to the same method on the base image and  it is equivalent to:getBaseImage().getHeight(observer).
java.awt.image.AbstractMultiResolutionImage.getProperty,"This method simply delegates to the same method on the base image and  it is equivalent to:getBaseImage().getProperty(name, observer)."
java.awt.image.AbstractMultiResolutionImage.getSource,This method simply delegates to the same method on the base image and  it is equivalent to:getBaseImage().getSource().
java.awt.image.AbstractMultiResolutionImage.getWidth,This method simply delegates to the same method on the base image and  it is equivalent to:getBaseImage().getWidth(observer).
java.awt.image.AffineTransformOp.createCompatibleDestImage,Creates a zeroed destination image with the correct size and number of  bands.
java.awt.image.AffineTransformOp.createCompatibleDestRaster,Creates a zeroed destinationRasterwith the correct size  and number of bands.
java.awt.image.AffineTransformOp.filter,Transforms the sourceBufferedImageand stores the results  in the destinationBufferedImage.
java.awt.image.AffineTransformOp.filter,Transforms the sourceRasterand stores the results in  the destinationRaster.
java.awt.image.AffineTransformOp.getBounds2D,Returns the bounding box of the transformed destination.
java.awt.image.AffineTransformOp.getInterpolationType,Returns the interpolation type used by this op.
java.awt.image.AffineTransformOp.getPoint2D,Returns the location of the corresponding destination point given a  point in the source.
java.awt.image.AffineTransformOp.getRenderingHints,Returns the rendering hints used by this transform operation.
java.awt.image.AffineTransformOp.getTransform,Returns the affine transform used by this transform operation.
java.awt.image.AreaAveragingScaleFilter.setHints,Detect if the data is being delivered with the necessary hints  to allow the averaging algorithm to do its work.
java.awt.image.AreaAveragingScaleFilter.setPixels,Combine the components for the delivered byte pixels into the  accumulation arrays and send on any averaged data for rows of  pixels that are complete.
java.awt.image.AreaAveragingScaleFilter.setPixels,Combine the components for the delivered int pixels into the  accumulation arrays and send on any averaged data for rows of  pixels that are complete.
java.awt.image.BandCombineOp.filter,Transforms theRasterusing the matrix specified in the  constructor.
java.awt.image.BandCombineOp.getMatrix,Returns a copy of the linear combination matrix.
java.awt.image.BandCombineOp.getPoint2D,Returns the location of the corresponding destination point given a  point in the sourceRaster.
java.awt.image.BandCombineOp.getRenderingHints,Returns the rendering hints for this operation.
java.awt.image.BandedSampleModel.createCompatibleSampleModel,Creates a new BandedSampleModel with the specified  width and height.
java.awt.image.BandedSampleModel.createDataBuffer,"Creates a DataBuffer that corresponds to this BandedSampleModel,  The DataBuffer's data type, number of banks, and size  will be consistent with this BandedSampleModel."
java.awt.image.BandedSampleModel.createSubsetSampleModel,Creates a new BandedSampleModel with a subset of the bands of this  BandedSampleModel.
java.awt.image.BandedSampleModel.getDataElements,Returns data for a single pixel in a primitive array of type  TransferType.
java.awt.image.BandedSampleModel.getPixel,Returns all samples for the specified pixel in an int array.
java.awt.image.BandedSampleModel.getPixels,"Returns all samples for the specified rectangle of pixels in  an int array, one sample per data array element."
java.awt.image.BandedSampleModel.getSample,"Returns as int the sample in a specified band for the pixel  located at (x,y)."
java.awt.image.BandedSampleModel.getSampleDouble,"Returns the sample in a specified band  for a pixel located at (x,y) as a double."
java.awt.image.BandedSampleModel.getSampleFloat,"Returns the sample in a specified band  for the pixel located at (x,y) as a float."
java.awt.image.BandedSampleModel.getSamples,"Returns the samples in a specified band for the specified rectangle  of pixels in an int array, one sample per data array element."
java.awt.image.BandedSampleModel.setDataElements,Sets the data for a single pixel in the specified DataBuffer from a  primitive array of type TransferType.
java.awt.image.BandedSampleModel.setPixel,Sets a pixel in the DataBuffer using an int array of samples for input.
java.awt.image.BandedSampleModel.setPixels,Sets all samples for a rectangle of pixels from an int array containing  one sample per array element.
java.awt.image.BandedSampleModel.setSample,"Sets a sample in the specified band for the pixel located at (x,y)  in the DataBuffer using a double for input."
java.awt.image.BandedSampleModel.setSample,"Sets a sample in the specified band for the pixel located at (x,y)  in the DataBuffer using a float for input."
java.awt.image.BandedSampleModel.setSample,"Sets a sample in the specified band for the pixel located at (x,y)  in the DataBuffer using an int for input."
java.awt.image.BandedSampleModel.setSamples,Sets the samples in the specified band for the specified rectangle  of pixels from an int array containing one sample per data array element.
java.awt.image.BaseMultiResolutionImage.getResolutionVariant,Gets a specific image that is the best variant to represent  this logical image at the indicated size.
java.awt.image.BaseMultiResolutionImage.getResolutionVariants,Gets a readable list of all resolution variants.
java.awt.image.BufferedImage.addTileObserver,Adds a tile observer.
java.awt.image.BufferedImage.coerceData,Forces the data to match the state specified in theisAlphaPremultipliedvariable.
java.awt.image.BufferedImage.copyData,Computes an arbitrary rectangular region of theBufferedImageand copies it into a specifiedWritableRaster.
java.awt.image.BufferedImage.createGraphics,"Creates aGraphics2D, which can be used to draw into  thisBufferedImage."
java.awt.image.BufferedImage.getAlphaRaster,"Returns aWritableRasterrepresenting the alpha  channel forBufferedImageobjects  withColorModelobjects that support a separate  spatial alpha channel, such asComponentColorModelandDirectColorModel."
java.awt.image.BufferedImage.getColorModel,Returns theColorModel.
java.awt.image.BufferedImage.getData,Returns the image as one large tile.
java.awt.image.BufferedImage.getData,Computes and returns an arbitrary region of theBufferedImage.
java.awt.image.BufferedImage.getGraphics,"This method returns aGraphics2D, but is here  for backwards compatibility."
java.awt.image.BufferedImage.getHeight,Returns the height of theBufferedImage.
java.awt.image.BufferedImage.getMinTileX,Returns the minimum tile index in the x direction.
java.awt.image.BufferedImage.getMinTileY,Returns the minimum tile index in the y direction.
java.awt.image.BufferedImage.getMinX,Returns the minimum x coordinate of thisBufferedImage.
java.awt.image.BufferedImage.getMinY,Returns the minimum y coordinate of thisBufferedImage.
java.awt.image.BufferedImage.getNumXTiles,Returns the number of tiles in the x direction.
java.awt.image.BufferedImage.getNumYTiles,Returns the number of tiles in the y direction.
java.awt.image.BufferedImage.getProperty,Returns a property of the image by name.
java.awt.image.BufferedImage.getPropertyNames,"Returns an array of names recognized bygetProperty(String)ornull, if no property names are recognized."
java.awt.image.BufferedImage.getRaster,Returns theWritableRaster.
java.awt.image.BufferedImage.getRGB,Returns an integer pixel in the default RGB color model  (TYPE_INT_ARGB) and default sRGB colorspace.
java.awt.image.BufferedImage.getRGB,"Returns an array of integer pixels in the default RGB color model  (TYPE_INT_ARGB) and default sRGB color space,  from a portion of the image data."
java.awt.image.BufferedImage.getSampleModel,Returns theSampleModelassociated with thisBufferedImage.
java.awt.image.BufferedImage.getSource,Returns the object that produces the pixels for the image.
java.awt.image.BufferedImage.getSources,"Returns aVectorofRenderedImageobjects that are  the immediate sources, not the sources of these immediate sources,  of image data for thisBufferedImage."
java.awt.image.BufferedImage.getSubimage,Returns a subimage defined by a specified rectangular region.
java.awt.image.BufferedImage.getTile,"Returns tile (tileX,tileY)."
java.awt.image.BufferedImage.getTileGridXOffset,"Returns the x offset of the tile grid relative to the origin,  For example, the x coordinate of the location of tile  (0, 0)."
java.awt.image.BufferedImage.getTileGridYOffset,"Returns the y offset of the tile grid relative to the origin,  For example, the y coordinate of the location of tile  (0, 0)."
java.awt.image.BufferedImage.getTileHeight,Returns the tile height in pixels.
java.awt.image.BufferedImage.getTileWidth,Returns the tile width in pixels.
java.awt.image.BufferedImage.getTransparency,Returns the transparency.
java.awt.image.BufferedImage.getType,Returns the image type.
java.awt.image.BufferedImage.getWidth,Returns the width of theBufferedImage.
java.awt.image.BufferedImage.getWritableTile,Checks out a tile for writing.
java.awt.image.BufferedImage.getWritableTileIndices,Returns an array ofPointobjects indicating which tiles  are checked out for writing.
java.awt.image.BufferedImage.hasTileWriters,Returns whether or not any tile is checked out for writing.
java.awt.image.BufferedImage.isAlphaPremultiplied,Returns whether or not the alpha has been premultiplied.
java.awt.image.BufferedImage.isTileWritable,Returns whether or not a tile is currently checked out for writing.
java.awt.image.BufferedImage.releaseWritableTile,Relinquishes permission to write to a tile.
java.awt.image.BufferedImage.removeTileObserver,Removes a tile observer.
java.awt.image.BufferedImage.setData,"Sets a rectangular region of the image to the contents of the  specifiedRaster r, which is  assumed to be in the same coordinate space as theBufferedImage."
java.awt.image.BufferedImage.setRGB,Sets a pixel in thisBufferedImageto the specified  RGB value.
java.awt.image.BufferedImage.setRGB,"Sets an array of integer pixels in the default RGB color model  (TYPE_INT_ARGB) and default sRGB color space,  into a portion of the image data."
java.awt.image.BufferedImage.toString,Returns aStringrepresentation of thisBufferedImageobject and its values.
java.awt.image.BufferedImageFilter.getBufferedImageOp,Returns theBufferedImageOp.
java.awt.image.BufferedImageFilter.imageComplete,Filters the information provided in theimageCompletemethod of theImageConsumerinterface.
java.awt.image.BufferedImageFilter.setColorModel,Filters the information provided in thesetColorModelmethod  of theImageConsumerinterface.
java.awt.image.BufferedImageFilter.setDimensions,Filters the information provided in thesetDimensionsmethod  of theImageConsumerinterface.
java.awt.image.BufferedImageFilter.setPixels,Filters the information provided in thesetPixelsmethod of theImageConsumerinterface which takes  an array of bytes.
java.awt.image.BufferedImageFilter.setPixels,Filters the information provided in thesetPixelsmethod of theImageConsumerinterface which takes  an array of integers.
java.awt.image.BufferStrategy.show,Makes the next available buffer visible by either copying the memory  (blitting) or changing the display pointer (flipping).
java.awt.image.ByteLookupTable.getTable,Returns the lookup table data by reference.
java.awt.image.ByteLookupTable.lookupPixel,"Returns an array of samples of a pixel, translated with the lookup  table."
java.awt.image.ColorConvertOp.createCompatibleDestImage,"Creates a zeroed destination image with the correct size and number of  bands, given this source."
java.awt.image.ColorConvertOp.createCompatibleDestRaster,"Creates a zeroed destination Raster with the correct size and number of  bands, given this source."
java.awt.image.ColorConvertOp.filter,ColorConverts the source BufferedImage.
java.awt.image.ColorConvertOp.filter,ColorConverts the image data in the source Raster.
java.awt.image.ColorConvertOp.getBounds2D,"Returns the bounding box of the destination, given this source."
java.awt.image.ColorConvertOp.getICC_Profiles,Returns the array of ICC_Profiles used to construct this ColorConvertOp.
java.awt.image.ColorConvertOp.getPoint2D,Returns the location of the destination point given a  point in the source.
java.awt.image.ColorConvertOp.getRenderingHints,Returns the rendering hints used by this op.
java.awt.image.ColorModel.coerceData,"Forces the raster data to match the state specified in theisAlphaPremultipliedvariable, assuming the data is  currently correctly described by thisColorModel."
java.awt.image.ColorModel.createCompatibleSampleModel,Creates aSampleModelwith the specified width and  height that has a data layout compatible with thisColorModel.
java.awt.image.ColorModel.createCompatibleWritableRaster,Creates aWritableRasterwith the specified width and  height that has a data layout (SampleModel) compatible  with thisColorModel.
java.awt.image.ColorModel.equals,This method simply delegates to the default implementation inObjectwhich is identical to an==test since this class cannot enforce the  issues of a proper equality test among multiple independent subclass  branches.
java.awt.image.ColorModel.getAlpha,"Returns the alpha component for the specified pixel, scaled  from 0 to 255."
java.awt.image.ColorModel.getAlphaRaster,"Returns aRasterrepresenting the alpha channel of an  image, extracted from the inputRaster, provided that  pixel values of thisColorModelrepresent color and  alpha information as separate spatial bands (e.g."
java.awt.image.ColorModel.getBlue,"Returns the blue color component for the specified pixel, scaled  from 0 to 255 in the default RGB ColorSpace, sRGB."
java.awt.image.ColorModel.getBlue,"Returns the blue color component for the specified pixel, scaled  from 0 to 255 in the default RGBColorSpace, sRGB."
java.awt.image.ColorModel.getColorSpace,Returns theColorSpaceassociated with thisColorModel.
java.awt.image.ColorModel.getComponents,Returns an array of unnormalized color/alpha components given a pixel  in thisColorModel.
java.awt.image.ColorModel.getComponentSize,Returns an array of the number of bits per color/alpha component.
java.awt.image.ColorModel.getComponentSize,Returns the number of bits for the specified color/alpha component.
java.awt.image.ColorModel.getDataElement,"Returns a pixel value represented as anintin thisColorModel, given an array of normalized color/alpha  components."
java.awt.image.ColorModel.getDataElement,"Returns a pixel value represented as anintin thisColorModel, given an array of unnormalized color/alpha  components."
java.awt.image.ColorModel.getDataElements,"Returns a data element array representation of a pixel in thisColorModel, given an array of normalized color/alpha  components."
java.awt.image.ColorModel.getDataElements,"Returns a data element array representation of a pixel in thisColorModel, given an array of unnormalized color/alpha  components."
java.awt.image.ColorModel.getDataElements,"Returns a data element array representation of a pixel in thisColorModel, given an integer pixel representation in  the default RGB color model."
java.awt.image.ColorModel.getGreen,"Returns the green color component for the specified pixel, scaled  from 0 to 255 in the default RGB ColorSpace, sRGB."
java.awt.image.ColorModel.getGreen,"Returns the green color component for the specified pixel, scaled  from 0 to 255 in the default RGBColorSpace, sRGB."
java.awt.image.ColorModel.getNormalizedComponents,"Returns an array of all of the color/alpha components in normalized  form, given an unnormalized component array."
java.awt.image.ColorModel.getNormalizedComponents,"Returns an array of all of the color/alpha components in normalized  form, given a pixel in thisColorModel."
java.awt.image.ColorModel.getNumColorComponents,Returns the number of color components in thisColorModel.
java.awt.image.ColorModel.getNumComponents,"Returns the number of components, including alpha, in thisColorModel."
java.awt.image.ColorModel.getPixelSize,Returns the number of bits per pixel described by thisColorModel.
java.awt.image.ColorModel.getRed,"Returns the red color component for the specified pixel, scaled  from 0 to 255 in the default RGB ColorSpace, sRGB."
java.awt.image.ColorModel.getRed,"Returns the red color component for the specified pixel, scaled  from 0 to 255 in the default RGBColorSpace, sRGB."
java.awt.image.ColorModel.getRGB,Returns the color/alpha components of the pixel in the default  RGB color model format.
java.awt.image.ColorModel.getRGB,Returns the color/alpha components for the specified pixel in the  default RGB color model format.
java.awt.image.ColorModel.getRGBdefault,Returns aDirectColorModelthat describes the default  format for integer RGB values used in many of the methods in the  AWT image interfaces for the convenience of the programmer.
java.awt.image.ColorModel.getTransferType,Returns the transfer type of thisColorModel.
java.awt.image.ColorModel.getUnnormalizedComponents,"Returns an array of all of the color/alpha components in unnormalized  form, given a normalized component array."
java.awt.image.ColorModel.hasAlpha,Returns whether or not alpha is supported in thisColorModel.
java.awt.image.ColorModel.hashCode,This method simply delegates to the default implementation inObjectwhich returns the system ID for the class.
java.awt.image.ColorModel.isAlphaPremultiplied,Returns whether or not the alpha has been premultiplied in the  pixel values to be translated by thisColorModel.
java.awt.image.ColorModel.isCompatibleRaster,Returnstrueifrasteris compatible  with thisColorModelandfalseif it is  not.
java.awt.image.ColorModel.isCompatibleSampleModel,Checks if theSampleModelis compatible with thisColorModel.
java.awt.image.ColorModel.toString,Returns theStringrepresentation of the contents of  thisColorModelobject.
java.awt.image.ComponentColorModel.coerceData,"Forces the raster data to match the state specified in theisAlphaPremultipliedvariable, assuming the data  is currently correctly described by thisColorModel."
java.awt.image.ComponentColorModel.createCompatibleSampleModel,"Creates aSampleModelwith the specified width and height,  that  has a data layout compatible with thisColorModel."
java.awt.image.ComponentColorModel.createCompatibleWritableRaster,"Creates aWritableRasterwith the specified width and height,  that  has a data layout (SampleModel) compatible with  thisColorModel."
java.awt.image.ComponentColorModel.equals,Tests if the specifiedObjectis an instance  ofComponentColorModeland equals thisComponentColorModel.
java.awt.image.ComponentColorModel.getAlpha,"Returns the alpha component for the specified pixel, scaled from  0 to 255."
java.awt.image.ComponentColorModel.getAlphaRaster,"Returns aRasterrepresenting the alpha channel of an image,  extracted from the inputRaster."
java.awt.image.ComponentColorModel.getDataElement,"Returns a pixel value represented as an int in thisColorModel,  given an array of unnormalized color/alpha components."
java.awt.image.ComponentColorModel.getDataElements,"Returns a data element array representation of a pixel in thisColorModel, given an integer pixel representation  in the default RGB color model."
java.awt.image.ComponentColorModel.hashCode,Returns the hash code for this ComponentColorModel.
java.awt.image.ComponentColorModel.isCompatibleRaster,Returns true ifrasteris compatible with thisColorModel; false if it is not.
java.awt.image.ComponentColorModel.isCompatibleSampleModel,Checks whether or not the specifiedSampleModelis compatible with thisColorModel.
java.awt.image.ComponentSampleModel.createCompatibleSampleModel,Creates a newComponentSampleModelwith the specified  width and height.
java.awt.image.ComponentSampleModel.createDataBuffer,Creates aDataBufferthat corresponds to thisComponentSampleModel.
java.awt.image.ComponentSampleModel.createSubsetSampleModel,Creates a new ComponentSampleModel with a subset of the bands  of this ComponentSampleModel.
java.awt.image.ComponentSampleModel.getBandOffsets,Returns the band offset for all bands.
java.awt.image.ComponentSampleModel.getBankIndices,Returns the bank indices for all bands.
java.awt.image.ComponentSampleModel.getDataElements,Returns data for a single pixel in a primitive array of typeTransferType.
java.awt.image.ComponentSampleModel.getNumDataElements,"Returns the number of data elements needed to transfer a pixel  with thegetDataElements(int, int, Object, DataBuffer)andsetDataElements(int, int, Object, DataBuffer)methods."
java.awt.image.ComponentSampleModel.getOffset,"Gets the offset for the first band of pixel (x,y)."
java.awt.image.ComponentSampleModel.getOffset,"Gets the offset for band b of pixel (x,y)."
java.awt.image.ComponentSampleModel.getPixel,"Returns all samples for the specified pixel in an int array,  one sample per array element."
java.awt.image.ComponentSampleModel.getPixels,"Returns all samples for the specified rectangle of pixels in  an int array, one sample per array element."
java.awt.image.ComponentSampleModel.getPixelStride,Returns the pixel stride of this ComponentSampleModel.
java.awt.image.ComponentSampleModel.getSampleSize,Returns the number of bits per sample for all bands.
java.awt.image.ComponentSampleModel.getSampleSize,Returns the number of bits per sample for the specified band.
java.awt.image.ComponentSampleModel.getScanlineStride,Returns the scanline stride of this ComponentSampleModel.
java.awt.image.ComponentSampleModel.setDataElements,Sets the data for a single pixel in the specifiedDataBufferfrom a primitive array of typeTransferType.
java.awt.image.ComponentSampleModel.setPixel,Sets a pixel in theDataBufferusing an int array of  samples for input.
java.awt.image.ComponentSampleModel.setSample,"Sets a sample in the specified band for the pixel located at (x,y)  in theDataBufferusing a double for input."
java.awt.image.ComponentSampleModel.setSample,"Sets a sample in the specified band for the pixel located at (x,y)  in theDataBufferusing a float for input."
java.awt.image.ComponentSampleModel.setSample,"Sets a sample in the specified band for the pixel located at (x,y)  in theDataBufferusing an int for input."
java.awt.image.ConvolveOp.createCompatibleDestImage,Creates a zeroed destination image with the correct size and number  of bands.
java.awt.image.ConvolveOp.createCompatibleDestRaster,"Creates a zeroed destination Raster with the correct size and number  of bands, given this source."
java.awt.image.ConvolveOp.filter,Performs a convolution on BufferedImages.
java.awt.image.ConvolveOp.filter,Performs a convolution on Rasters.
java.awt.image.ConvolveOp.getBounds2D,Returns the bounding box of the filtered destination image.
java.awt.image.ConvolveOp.getBounds2D,Returns the bounding box of the filtered destination Raster.
java.awt.image.ConvolveOp.getEdgeCondition,Returns the edge condition.
java.awt.image.ConvolveOp.getKernel,Returns the Kernel.
java.awt.image.ConvolveOp.getRenderingHints,Returns the rendering hints for this op.
java.awt.image.CropImageFilter.setDimensions,Override the source image's dimensions and pass the dimensions  of the rectangular cropped region to the ImageConsumer.
java.awt.image.CropImageFilter.setPixels,Determine whether the delivered byte pixels intersect the region to  be extracted and passes through only that subset of pixels that  appear in the output region.
java.awt.image.CropImageFilter.setPixels,Determine if the delivered int pixels intersect the region to  be extracted and pass through only that subset of pixels that  appear in the output region.
java.awt.image.CropImageFilter.setProperties,Passes along  the properties from the source object after adding a  property indicating the cropped region.
java.awt.image.DataBuffer.getDataType,Returns the data type of this DataBuffer.
java.awt.image.DataBuffer.getDataTypeSize,"Returns the size (in bits) of the data type, given a datatype tag."
java.awt.image.DataBuffer.getElem,Returns the requested data array element from the first (default) bank  as an integer.
java.awt.image.DataBuffer.getElem,Returns the requested data array element from the specified bank  as an integer.
java.awt.image.DataBuffer.getElemDouble,Returns the requested data array element from the first (default) bank  as a double.
java.awt.image.DataBuffer.getElemDouble,Returns the requested data array element from the specified bank as  a double.
java.awt.image.DataBuffer.getElemFloat,Returns the requested data array element from the first (default) bank  as a float.
java.awt.image.DataBuffer.getElemFloat,Returns the requested data array element from the specified bank  as a float.
java.awt.image.DataBuffer.getNumBanks,Returns the number of banks in this DataBuffer.
java.awt.image.DataBuffer.getOffset,Returns the offset of the default bank in array elements.
java.awt.image.DataBuffer.getOffsets,Returns the offsets (in array elements) of all the banks.
java.awt.image.DataBuffer.getSize,Returns the size (in array elements) of all banks.
java.awt.image.DataBuffer.setElem,Sets the requested data array element in the first (default) bank  from the given integer.
java.awt.image.DataBuffer.setElem,Sets the requested data array element in the specified bank  from the given integer.
java.awt.image.DataBuffer.setElemDouble,Sets the requested data array element in the first (default) bank  from the given double.
java.awt.image.DataBuffer.setElemDouble,Sets the requested data array element in the specified bank  from the given double.
java.awt.image.DataBuffer.setElemFloat,Sets the requested data array element in the first (default) bank  from the given float.
java.awt.image.DataBuffer.setElemFloat,Sets the requested data array element in the specified bank  from the given float.
java.awt.image.DataBufferByte.getBankData,Returns the data arrays for all banks.
java.awt.image.DataBufferByte.getData,Returns the default (first) byte data array.
java.awt.image.DataBufferByte.getData,Returns the data array for the specified bank.
java.awt.image.DataBufferByte.getElem,Returns the requested data array element from the first (default) bank.
java.awt.image.DataBufferByte.getElem,Returns the requested data array element from the specified bank.
java.awt.image.DataBufferByte.setElem,Sets the requested data array element in the first (default) bank  to the specified value.
java.awt.image.DataBufferDouble.getBankData,Returns the data array for all banks.
java.awt.image.DataBufferDouble.getData,Returns the default (first)doubledata array.
java.awt.image.DataBufferDouble.getElem,Returns the requested data array element from the first  (default) bank as anint.
java.awt.image.DataBufferDouble.getElem,Returns the requested data array element from the specified  bank as anint.
java.awt.image.DataBufferDouble.getElemDouble,Returns the requested data array element from the first  (default) bank as adouble.
java.awt.image.DataBufferDouble.getElemDouble,Returns the requested data array element from the specified  bank as adouble.
java.awt.image.DataBufferDouble.getElemFloat,Returns the requested data array element from the first  (default) bank as afloat.
java.awt.image.DataBufferDouble.getElemFloat,Returns the requested data array element from the specified  bank as afloat.
java.awt.image.DataBufferDouble.setElem,Sets the requested data array element in the first (default)  bank to the givenint.
java.awt.image.DataBufferDouble.setElem,Sets the requested data array element in the specified bank  to the givenint.
java.awt.image.DataBufferDouble.setElemDouble,Sets the requested data array element in the first (default)  bank to the givendouble.
java.awt.image.DataBufferDouble.setElemDouble,Sets the requested data array element in the specified bank to  the givendouble.
java.awt.image.DataBufferDouble.setElemFloat,Sets the requested data array element in the first (default)  bank to the givenfloat.
java.awt.image.DataBufferDouble.setElemFloat,Sets the requested data array element in the specified bank to  the givenfloat.
java.awt.image.DataBufferFloat.getData,Returns the default (first)floatdata array.
java.awt.image.DataBufferFloat.setElem,Sets the requested data array element in the specified bank to  the givenint.
java.awt.image.DataBufferInt.getData,Returns the default (first) int data array inDataBuffer.
java.awt.image.DataBufferInt.setElem,Sets the requested data array element in the specified bank  to the integer valuei.
java.awt.image.DataBufferUShort.getData,Returns the default (first) unsigned-short data array.
java.awt.image.DirectColorModel.getAlphaMask,Returns the mask indicating which bits in anintpixel  representation contain the alpha component.
java.awt.image.DirectColorModel.getBlueMask,Returns the mask indicating which bits in anintpixel  representation contain the blue color component.
java.awt.image.DirectColorModel.getDataElements,"Returns a data element array representation of a pixel in thisColorModel, given an integer pixel representation in the  default RGB color model."
java.awt.image.DirectColorModel.getGreenMask,Returns the mask indicating which bits in anintpixel  representation contain the green color component.
java.awt.image.DirectColorModel.getRedMask,Returns the mask indicating which bits in anintpixel  representation contain the red color component.
java.awt.image.DirectColorModel.toString,Returns aStringthat represents thisDirectColorModel.
java.awt.image.FilteredImageSource.addConsumer,Adds the specifiedImageConsumerto the list of consumers interested in data for the filtered image.
java.awt.image.FilteredImageSource.isConsumer,Determines whether an ImageConsumer is on the list of consumers  currently interested in data for this image.
java.awt.image.FilteredImageSource.removeConsumer,Removes an ImageConsumer from the list of consumers interested in  data for this image.
java.awt.image.FilteredImageSource.requestTopDownLeftRightResend,"Requests that a given ImageConsumer have the image data delivered  one more time in top-down, left-right order."
java.awt.image.FilteredImageSource.startProduction,Starts production of the filtered image.
java.awt.image.ImageFilter.clone,Clones this object.
java.awt.image.ImageFilter.getFilterInstance,Returns a unique instance of an ImageFilter object which will  actually perform the filtering for the specified ImageConsumer.
java.awt.image.ImageFilter.imageComplete,Filters the information provided in the imageComplete method of  the ImageConsumer interface.
java.awt.image.ImageFilter.resendTopDownLeftRight,Responds to a request for a TopDownLeftRight (TDLR) ordered resend  of the pixel data from anImageConsumer.
java.awt.image.ImageFilter.setColorModel,Filter the information provided in the setColorModel method  of the ImageConsumer interface.
java.awt.image.ImageFilter.setDimensions,Filters the information provided in the setDimensions method  of the ImageConsumer interface.
java.awt.image.ImageFilter.setHints,Filters the information provided in the setHints method  of the ImageConsumer interface.
java.awt.image.ImageFilter.setPixels,Filters the information provided in the setPixels method of the  ImageConsumer interface which takes an array of bytes.
java.awt.image.ImageFilter.setPixels,Filters the information provided in the setPixels method of the  ImageConsumer interface which takes an array of integers.
java.awt.image.ImageFilter.setProperties,Passes the properties from the source object along after adding a  property indicating the stream of filters it has been run through.
java.awt.image.IndexColorModel.convertToIntDiscrete,Returns a newBufferedImageof TYPE_INT_ARGB or  TYPE_INT_RGB that has aRasterwith pixel data  computed by expanding the indices in the sourceRasterusing the color/alpha component arrays of thisColorModel.
java.awt.image.IndexColorModel.createCompatibleSampleModel,Creates aSampleModelwith the specified  width and height that has a data layout compatible with  thisColorModel.
java.awt.image.IndexColorModel.createCompatibleWritableRaster,Creates aWritableRasterwith the specified width  and height that has a data layout (SampleModel)  compatible with thisColorModel.
java.awt.image.IndexColorModel.equals,Tests if the specifiedObjectis an  instance ofIndexColorModeland if it equals thisIndexColorModel
java.awt.image.IndexColorModel.getAlphas,Copies the array of alpha transparency components into the  specified array.
java.awt.image.IndexColorModel.getBlues,Copies the array of blue color components into the specified array.
java.awt.image.IndexColorModel.getComponents,Returns an array of unnormalized color/alpha components for a  specified pixel in thisColorModel.
java.awt.image.IndexColorModel.getComponents,Returns an array of unnormalized color/alpha components for  a specified pixel in thisColorModel.
java.awt.image.IndexColorModel.getComponentSize,Returns an array of the number of bits for each color/alpha component.
java.awt.image.IndexColorModel.getDataElement,Returns a pixel value represented as an int in thisColorModelgiven an array of unnormalized  color/alpha components.
java.awt.image.IndexColorModel.getDataElements,Returns a data element array representation of a pixel in thisColorModelgiven an array of unnormalized color/alpha  components.
java.awt.image.IndexColorModel.getDataElements,"Returns a data element array representation of a pixel in this  ColorModel, given an integer pixel representation in the  default RGB color model."
java.awt.image.IndexColorModel.getGreens,Copies the array of green color components into the specified array.
java.awt.image.IndexColorModel.getMapSize,Returns the size of the color/alpha component arrays in thisIndexColorModel.
java.awt.image.IndexColorModel.getReds,Copies the array of red color components into the specified array.
java.awt.image.IndexColorModel.getRGBs,Converts data for each index from the color and alpha component  arrays to an int in the default RGB ColorModel format and copies  the resulting 32-bit ARGB values into the specified array.
java.awt.image.IndexColorModel.getTransparentPixel,Returns the index of a transparent pixel in thisIndexColorModelor -1 if there is no pixel  with an alpha value of 0.
java.awt.image.IndexColorModel.getValidPixels,Returns aBigIntegerthat indicates the valid/invalid  pixels in the colormap.
java.awt.image.IndexColorModel.hashCode,Returns the hash code for IndexColorModel.
java.awt.image.IndexColorModel.isCompatibleRaster,Returnstrueifrasteris compatible  with thisColorModelorfalseif it  is not compatible with thisColorModel.
java.awt.image.IndexColorModel.isCompatibleSampleModel,Checks if the specifiedSampleModelis compatible  with thisColorModel.
java.awt.image.IndexColorModel.isValid,Returns whether or not all of the pixels are valid.
java.awt.image.IndexColorModel.isValid,Returns whether or not the pixel is valid.
java.awt.image.Kernel.getHeight,Returns the height of thisKernel.
java.awt.image.Kernel.getKernelData,Returns the kernel data in row major order.
java.awt.image.Kernel.getWidth,Returns the width of thisKernel.
java.awt.image.Kernel.getXOrigin,Returns the X origin of thisKernel.
java.awt.image.Kernel.getYOrigin,Returns the Y origin of thisKernel.
java.awt.image.LookupOp.createCompatibleDestRaster,"Creates a zeroed-destinationRasterwith the  correct size and number of bands, given this source."
java.awt.image.LookupOp.filter,Performs a lookup operation on aBufferedImage.
java.awt.image.LookupOp.filter,Performs a lookup operation on aRaster.
java.awt.image.LookupOp.getTable,Returns theLookupTable.
java.awt.image.LookupTable.getNumComponents,Returns the number of components in the lookup table.
java.awt.image.LookupTable.getOffset,Returns the offset.
java.awt.image.LookupTable.lookupPixel,Returns anintarray of components for  one pixel.
java.awt.image.MemoryImageSource.addConsumer,Adds an ImageConsumer to the list of consumers interested in  data for this image.
java.awt.image.MemoryImageSource.isConsumer,Determines if an ImageConsumer is on the list of consumers currently  interested in data for this image.
java.awt.image.MemoryImageSource.newPixels,Sends a whole new buffer of pixels to any ImageConsumers that  are currently interested in the data for this image and notify  them that an animation frame is complete.
java.awt.image.MemoryImageSource.newPixels,Changes to a new byte array to hold the pixels for this image.
java.awt.image.MemoryImageSource.newPixels,Changes to a new int array to hold the pixels for this image.
java.awt.image.MemoryImageSource.newPixels,Sends a rectangular region of the buffer of pixels to any  ImageConsumers that are currently interested in the data for  this image and notify them that an animation frame is complete.
java.awt.image.MemoryImageSource.newPixels,Sends a rectangular region of the buffer of pixels to any  ImageConsumers that are currently interested in the data for  this image.
java.awt.image.MemoryImageSource.setAnimated,Changes this memory image into a multi-frame animation or a  single-frame static image depending on the animated parameter.
java.awt.image.MemoryImageSource.setFullBufferUpdates,Specifies whether this animated memory image should always be  updated by sending the complete buffer of pixels whenever  there is a change.
java.awt.image.MemoryImageSource.startProduction,Adds an ImageConsumer to the list of consumers interested in  data for this image and immediately starts delivery of the  image data through the ImageConsumer interface.
java.awt.image.MultiPixelPackedSampleModel.createCompatibleSampleModel,Creates a newMultiPixelPackedSampleModelwith the  specified width and height.
java.awt.image.MultiPixelPackedSampleModel.createDataBuffer,Creates aDataBufferthat corresponds to thisMultiPixelPackedSampleModel.
java.awt.image.MultiPixelPackedSampleModel.createSubsetSampleModel,Creates a newMultiPixelPackedSampleModelwith a  subset of the bands of thisMultiPixelPackedSampleModel.
java.awt.image.MultiPixelPackedSampleModel.getBitOffset,"Returns the offset, in bits, into the data element in which it is   stored for thexth pixel of a scanline."
java.awt.image.MultiPixelPackedSampleModel.getDataBitOffset,Returns the data bit offset in bits.
java.awt.image.MultiPixelPackedSampleModel.getNumDataElements,"Returns the number of data elements needed to transfer one pixel  via thegetDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer)andsetDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer)methods."
java.awt.image.MultiPixelPackedSampleModel.getOffset,"Returns the offset of pixel (x, y) in data array elements."
java.awt.image.MultiPixelPackedSampleModel.getPixel,Returns the specified single band pixel in the first element  of anintarray.
java.awt.image.MultiPixelPackedSampleModel.getPixelBitStride,Returns the pixel bit stride in bits.
java.awt.image.MultiPixelPackedSampleModel.getSample,"Returns asintthe sample in a specified band for the  pixel located at (x, y)."
java.awt.image.MultiPixelPackedSampleModel.getScanlineStride,Returns the scanline stride.
java.awt.image.MultiPixelPackedSampleModel.getTransferType,Returns the TransferType used to transfer pixels by way of thegetDataElementsandsetDataElementsmethods.
java.awt.image.MultiPixelPackedSampleModel.setDataElements,Sets the data for a single pixel in the specifiedDataBufferfrom a primitive array of type  TransferType.
java.awt.image.MultiPixelPackedSampleModel.setPixel,Sets a pixel in theDataBufferusing anintarray for input.
java.awt.image.MultiPixelPackedSampleModel.setSample,"Sets a sample in the specified band for the pixel located at  (x, y) in theDataBufferusing anintfor input."
java.awt.image.PackedColorModel.equals,Tests if the specifiedObjectis an instance  ofPackedColorModeland equals thisPackedColorModel.
java.awt.image.PackedColorModel.getAlphaRaster,"Returns aWritableRasterrepresenting the alpha channel of  an image, extracted from the inputWritableRaster."
java.awt.image.PackedColorModel.getMask,Returns the mask indicating which bits in a pixel  contain the specified color/alpha sample.
java.awt.image.PackedColorModel.getMasks,Returns a mask array indicating which bits in a pixel  contain the color and alpha samples.
java.awt.image.PackedColorModel.hashCode,Returns the hash code for this PackedColorModel.
java.awt.image.PixelGrabber.abortGrabbing,Request the PixelGrabber to abort the image fetch.
java.awt.image.PixelGrabber.getColorModel,Get the ColorModel for the pixels stored in the array.
java.awt.image.PixelGrabber.getHeight,Get the height of the pixel buffer (after adjusting for image height).
java.awt.image.PixelGrabber.getPixels,Get the pixel buffer.
java.awt.image.PixelGrabber.getStatus,Return the status of the pixels.
java.awt.image.PixelGrabber.getWidth,Get the width of the pixel buffer (after adjusting for image width).
java.awt.image.PixelGrabber.grabPixels,Request the Image or ImageProducer to start delivering pixels and  wait for all of the pixels in the rectangle of interest to be  delivered.
java.awt.image.PixelGrabber.grabPixels,Request the Image or ImageProducer to start delivering pixels and  wait for all of the pixels in the rectangle of interest to be  delivered or until the specified timeout has elapsed.
java.awt.image.PixelGrabber.imageComplete,The imageComplete method is part of the ImageConsumer API which  this class must implement to retrieve the pixels.
java.awt.image.PixelGrabber.setColorModel,The setColorModel method is part of the ImageConsumer API which  this class must implement to retrieve the pixels.
java.awt.image.PixelGrabber.setDimensions,The setDimensions method is part of the ImageConsumer API which  this class must implement to retrieve the pixels.
java.awt.image.PixelGrabber.setHints,The setHints method is part of the ImageConsumer API which  this class must implement to retrieve the pixels.
java.awt.image.PixelGrabber.setPixels,The setPixels method is part of the ImageConsumer API which  this class must implement to retrieve the pixels.
java.awt.image.PixelGrabber.setProperties,The setProperties method is part of the ImageConsumer API which  this class must implement to retrieve the pixels.
java.awt.image.PixelGrabber.startGrabbing,Request the PixelGrabber to start fetching the pixels.
java.awt.image.PixelGrabber.status,Returns the status of the pixels.
java.awt.image.PixelInterleavedSampleModel.createCompatibleSampleModel,Creates a new PixelInterleavedSampleModel with the specified  width and height.
java.awt.image.PixelInterleavedSampleModel.createSubsetSampleModel,Creates a new PixelInterleavedSampleModel with a subset of the  bands of this PixelInterleavedSampleModel.
java.awt.image.Raster.createBandedRaster,"Creates a Raster based on a BandedSampleModel with the  specified data type, width, height, scanline stride, bank  indices and band offsets."
java.awt.image.Raster.createBandedRaster,"Creates a Raster based on a BandedSampleModel with the  specified data type, width, height, and number of bands."
java.awt.image.Raster.createBandedRaster,"Creates a Raster based on a BandedSampleModel with the  specified DataBuffer, width, height, scanline stride, bank  indices, and band offsets."
java.awt.image.Raster.createChild,Returns a new Raster which shares all or part of this Raster's  DataBuffer.
java.awt.image.Raster.createCompatibleWritableRaster,Create a compatible WritableRaster the same size as this Raster with  the same SampleModel and a new initialized DataBuffer.
java.awt.image.Raster.createCompatibleWritableRaster,"Create a compatible WritableRaster with the specified size, a new  SampleModel, and a new initialized DataBuffer."
java.awt.image.Raster.createCompatibleWritableRaster,"Create a compatible WritableRaster with the specified  location (minX, minY) and size (width, height), a  new SampleModel, and a new initialized DataBuffer."
java.awt.image.Raster.createCompatibleWritableRaster,"Create a compatible WritableRaster with location (minX, minY)  and size (width, height) specified by rect, a  new SampleModel, and a new initialized DataBuffer."
java.awt.image.Raster.createInterleavedRaster,"Creates a Raster based on a PixelInterleavedSampleModel with the  specified data type, width, height, scanline stride, pixel  stride, and band offsets."
java.awt.image.Raster.createInterleavedRaster,"Creates a Raster based on a PixelInterleavedSampleModel with the  specified data type, width, height, and number of bands."
java.awt.image.Raster.createInterleavedRaster,"Creates a Raster based on a PixelInterleavedSampleModel with the  specified DataBuffer, width, height, scanline stride, pixel  stride, and band offsets."
java.awt.image.Raster.createPackedRaster,"Creates a Raster based on a SinglePixelPackedSampleModel with  the specified data type, width, height, and band masks."
java.awt.image.Raster.createPackedRaster,"Creates a Raster based on a packed SampleModel with the  specified data type, width, height, number of bands, and bits  per band."
java.awt.image.Raster.createPackedRaster,"Creates a Raster based on a SinglePixelPackedSampleModel with  the specified DataBuffer, width, height, scanline stride, and  band masks."
java.awt.image.Raster.createPackedRaster,"Creates a Raster based on a MultiPixelPackedSampleModel with the  specified DataBuffer, width, height, and bits per pixel."
java.awt.image.Raster.createRaster,Creates a Raster with the specified SampleModel and DataBuffer.
java.awt.image.Raster.createTranslatedChild,"Create a Raster with the same size, SampleModel and DataBuffer  as this one, but with a different location."
java.awt.image.Raster.createWritableRaster,Creates a WritableRaster with the specified SampleModel and DataBuffer.
java.awt.image.Raster.createWritableRaster,Creates a WritableRaster with the specified SampleModel.
java.awt.image.Raster.getBounds,Returns the bounding Rectangle of this Raster.
java.awt.image.Raster.getDataBuffer,Returns the DataBuffer associated with this Raster.
java.awt.image.Raster.getDataElements,Returns the pixel data for the specified rectangle of pixels in a  primitive array of type TransferType.
java.awt.image.Raster.getHeight,Returns the height in pixels of the Raster.
java.awt.image.Raster.getMinX,Returns the minimum valid X coordinate of the Raster.
java.awt.image.Raster.getMinY,Returns the minimum valid Y coordinate of the Raster.
java.awt.image.Raster.getNumBands,Returns the number of bands (samples per pixel) in this Raster.
java.awt.image.Raster.getNumDataElements,Returns the number of data elements needed to transfer one pixel   via the getDataElements and setDataElements methods.
java.awt.image.Raster.getParent,Returns the parent Raster (if any) of this Raster or null.
java.awt.image.Raster.getPixel,Returns the samples in an array of double for the specified pixel.
java.awt.image.Raster.getPixel,Returns the samples in an array of float for the  specified pixel.
java.awt.image.Raster.getPixel,Returns the samples in an array of int for the specified pixel.
java.awt.image.Raster.getPixels,"Returns a double array containing all samples for a rectangle of pixels,  one sample per array element."
java.awt.image.Raster.getPixels,"Returns a float array containing all samples for a rectangle of pixels,  one sample per array element."
java.awt.image.Raster.getPixels,"Returns an int array containing all samples for a rectangle of pixels,  one sample per array element."
java.awt.image.Raster.getSample,"Returns the sample in a specified band for the pixel located  at (x,y) as an int."
java.awt.image.Raster.getSampleModel,Returns the SampleModel that describes the layout of the image data.
java.awt.image.Raster.getSampleModelTranslateX,Returns the X translation from the coordinate system of the  SampleModel to that of the Raster.
java.awt.image.Raster.getSampleModelTranslateY,Returns the Y translation from the coordinate system of the  SampleModel to that of the Raster.
java.awt.image.Raster.getSamples,"Returns the samples for a specified band for a specified rectangle  of pixels in a double array, one sample per array element."
java.awt.image.Raster.getSamples,"Returns the samples for a specified band for the specified rectangle  of pixels in a float array, one sample per array element."
java.awt.image.Raster.getSamples,"Returns the samples for a specified band for the specified rectangle  of pixels in an int array, one sample per array element."
java.awt.image.Raster.getTransferType,Returns the TransferType used to transfer pixels via the   getDataElements and setDataElements methods.
java.awt.image.Raster.getWidth,Returns the width in pixels of the Raster.
java.awt.image.ReplicateScaleFilter.setDimensions,Override the dimensions of the source image and pass the dimensions  of the new scaled size to the ImageConsumer.
java.awt.image.ReplicateScaleFilter.setPixels,"Choose which rows and columns of the delivered byte pixels are  needed for the destination scaled image and pass through just  those rows and columns that are needed, replicated as necessary."
java.awt.image.ReplicateScaleFilter.setPixels,"Choose which rows and columns of the delivered int pixels are  needed for the destination scaled image and pass through just  those rows and columns that are needed, replicated as necessary."
java.awt.image.ReplicateScaleFilter.setProperties,Passes along the properties from the source object after adding a  property indicating the scale applied.
java.awt.image.RescaleOp.createCompatibleDestRaster,"Creates a zeroed-destinationRasterwith the correct  size and number of bands, given this source."
java.awt.image.RescaleOp.filter,Rescales the source BufferedImage.
java.awt.image.RescaleOp.filter,Rescales the pixel data in the source Raster.
java.awt.image.RescaleOp.getBounds2D,Returns the bounding box of the rescaled destination image.
java.awt.image.RescaleOp.getBounds2D,Returns the bounding box of the rescaled destination Raster.
java.awt.image.RescaleOp.getNumFactors,Returns the number of scaling factors and offsets used in this  RescaleOp.
java.awt.image.RescaleOp.getOffsets,Returns the offsets in the given array.
java.awt.image.RescaleOp.getScaleFactors,Returns the scale factors in the given array.
java.awt.image.RGBImageFilter.filterIndexColorModel,Filters an IndexColorModel object by running each entry in its  color tables through the filterRGB function that RGBImageFilter  subclasses must provide.
java.awt.image.RGBImageFilter.filterRGB,Subclasses must specify a method to convert a single input pixel  in the default RGB ColorModel to a single output pixel.
java.awt.image.RGBImageFilter.filterRGBPixels,Filters a buffer of pixels in the default RGB ColorModel by passing  them one by one through the filterRGB method.
java.awt.image.RGBImageFilter.setColorModel,"If the ColorModel is an IndexColorModel and the subclass has  set the canFilterIndexColorModel flag to true, we substitute  a filtered version of the color model here and wherever  that original ColorModel object appears in the setPixels methods."
java.awt.image.RGBImageFilter.setPixels,"If the ColorModel object is the same one that has already  been converted, then simply passes the pixels through with the  converted ColorModel."
java.awt.image.RGBImageFilter.setPixels,"If the ColorModel object is the same one that has already  been converted, then simply passes the pixels through with the  converted ColorModel, otherwise converts the buffer of integer  pixels to the default RGB ColorModel and passes the converted  buffer to the filterRGBPixels method to be converted one by one."
java.awt.image.RGBImageFilter.substituteColorModel,Registers two ColorModel objects for substitution.
java.awt.image.SampleModel.createCompatibleSampleModel,"Creates a SampleModel which describes data in this SampleModel's   format, but with a different width and height."
java.awt.image.SampleModel.createDataBuffer,Creates a DataBuffer that corresponds to this SampleModel.
java.awt.image.SampleModel.createSubsetSampleModel,Creates a new SampleModel  with a subset of the bands of this  SampleModel.
java.awt.image.SampleModel.getDataType,Returns the data type of the DataBuffer storing the pixel data.
java.awt.image.SampleModel.getHeight,Returns the height in pixels.
java.awt.image.SampleModel.getNumBands,Returns the total number of bands of image data.
java.awt.image.SampleModel.getNumDataElements,Returns the number of data elements needed to transfer a pixel   via the getDataElements and setDataElements methods.
java.awt.image.SampleModel.getPixel,Returns the samples for the specified pixel in an array of double.
java.awt.image.SampleModel.getPixel,Returns the samples for the specified pixel in an array of float.
java.awt.image.SampleModel.getPixel,"Returns the samples for a specified pixel in an int array,  one sample per array element."
java.awt.image.SampleModel.getPixels,"Returns all samples for a rectangle of pixels in a double  array, one sample per array element."
java.awt.image.SampleModel.getPixels,"Returns all samples for a rectangle of pixels in a float  array, one sample per array element."
java.awt.image.SampleModel.getPixels,"Returns all samples for a rectangle of pixels in an  int array, one sample per array element."
java.awt.image.SampleModel.getSampleSize,Returns the size in bits of samples for all bands.
java.awt.image.SampleModel.getSampleSize,Returns the size in bits of samples for the specified band.
java.awt.image.SampleModel.getWidth,Returns the width in pixels.
java.awt.image.SampleModel.setDataElements,Sets the data for a rectangle of pixels in the specified DataBuffer  from a primitive array of type TransferType.
java.awt.image.SampleModel.setPixel,Sets a pixel in the DataBuffer using a double array of samples  for input.
java.awt.image.SampleModel.setPixel,Sets a pixel in the DataBuffer using a float array of samples for input.
java.awt.image.SampleModel.setPixel,Sets a pixel in  the DataBuffer using an int array of samples for input.
java.awt.image.SampleModel.setPixels,Sets all samples for a rectangle of pixels from a double array  containing one sample per array element.
java.awt.image.SampleModel.setPixels,Sets all samples for a rectangle of pixels from a float array containing  one sample per array element.
java.awt.image.SampleModel.setSamples,Sets the samples in the specified band for the specified rectangle  of pixels from a double array containing one sample per array element.
java.awt.image.SampleModel.setSamples,Sets the samples in the specified band for the specified rectangle  of pixels from a float array containing one sample per array element.
java.awt.image.SampleModel.setSamples,Sets the samples in the specified band for the specified rectangle  of pixels from an int array containing one sample per array element.
java.awt.image.SinglePixelPackedSampleModel.createCompatibleSampleModel,Creates a new SinglePixelPackedSampleModel with the specified  width and height.
java.awt.image.SinglePixelPackedSampleModel.createDataBuffer,Creates a DataBuffer that corresponds to this  SinglePixelPackedSampleModel.
java.awt.image.SinglePixelPackedSampleModel.createSubsetSampleModel,This creates a new SinglePixelPackedSampleModel with a subset of the  bands of this SinglePixelPackedSampleModel.
java.awt.image.SinglePixelPackedSampleModel.getBitMasks,Returns the bit masks for all bands.
java.awt.image.SinglePixelPackedSampleModel.getBitOffsets,Returns the bit offsets into the data array element representing   a pixel for all bands.
java.awt.image.SinglePixelPackedSampleModel.getNumDataElements,Returns the number of data elements needed to transfer one pixel  via the getDataElements and setDataElements methods.
java.awt.image.SinglePixelPackedSampleModel.getOffset,"Returns the offset (in data array elements) of pixel (x,y)."
java.awt.image.SinglePixelPackedSampleModel.getPixel,Returns all samples in for the specified pixel in an int array.
java.awt.image.SinglePixelPackedSampleModel.getScanlineStride,Returns the scanline stride of this SinglePixelPackedSampleModel.
java.awt.image.VolatileImage.contentsLost,Returnstrueif rendering data was lost since lastvalidatecall.
java.awt.image.VolatileImage.createGraphics,"Creates aGraphics2D, which can be used to draw into  thisVolatileImage."
java.awt.image.VolatileImage.getCapabilities,Returns an ImageCapabilities object which can be  inquired as to the specific capabilities of this  VolatileImage.
java.awt.image.VolatileImage.getHeight,Returns the height of theVolatileImage.
java.awt.image.VolatileImage.getSnapshot,Returns a static snapshot image of this object.
java.awt.image.VolatileImage.getSource,This returns an ImageProducer for this VolatileImage.
java.awt.image.VolatileImage.getWidth,Returns the width of theVolatileImage.
java.awt.image.VolatileImage.validate,Attempts to restore the drawing surface of the image if the surface  had been lost since the lastvalidatecall.
java.awt.image.WritableRaster.createWritableChild,Returns a new WritableRaster which shares all or part of this  WritableRaster's DataBuffer.
java.awt.image.WritableRaster.createWritableTranslatedChild,"Create a WritableRaster with the same size, SampleModel and DataBuffer  as this one, but with a different location."
java.awt.image.WritableRaster.getWritableParent,"Returns the parent WritableRaster (if any) of this WritableRaster,   or else null."
java.awt.image.WritableRaster.setDataElements,Sets the data for a rectangle of pixels from a  primitive array of type TransferType.
java.awt.image.WritableRaster.setDataElements,Sets the data for a rectangle of pixels from an input Raster.
java.awt.image.WritableRaster.setDataElements,Sets the data for a single pixel from a  primitive array of type TransferType.
java.awt.image.WritableRaster.setPixel,Sets a pixel in the DataBuffer using a double array of samples for input.
java.awt.image.WritableRaster.setPixels,Sets all samples for a rectangle of pixels from a double array containing  one sample per array element.
java.awt.image.WritableRaster.setRect,Copies pixels from Raster srcRaster to this WritableRaster.
java.awt.image.renderable.ParameterBlock.add,Adds a Byte to the list of parameters.
java.awt.image.renderable.ParameterBlock.add,Adds a Character to the list of parameters.
java.awt.image.renderable.ParameterBlock.add,Adds a Double to the list of parameters.
java.awt.image.renderable.ParameterBlock.add,Adds a Float to the list of parameters.
java.awt.image.renderable.ParameterBlock.add,Adds a Integer to the list of parameters.
java.awt.image.renderable.ParameterBlock.add,Adds a Long to the list of parameters.
java.awt.image.renderable.ParameterBlock.add,Adds a Short to the list of parameters.
java.awt.image.renderable.ParameterBlock.add,Adds an object to the list of parameters.
java.awt.image.renderable.ParameterBlock.addSource,Adds an image to end of the list of sources.
java.awt.image.renderable.ParameterBlock.clone,Creates a copy of aParameterBlock.
java.awt.image.renderable.ParameterBlock.getByteParameter,A convenience method to return a parameter as a byte.
java.awt.image.renderable.ParameterBlock.getCharParameter,A convenience method to return a parameter as a char.
java.awt.image.renderable.ParameterBlock.getDoubleParameter,A convenience method to return a parameter as a double.
java.awt.image.renderable.ParameterBlock.getFloatParameter,A convenience method to return a parameter as a float.
java.awt.image.renderable.ParameterBlock.getIntParameter,A convenience method to return a parameter as an int.
java.awt.image.renderable.ParameterBlock.getLongParameter,A convenience method to return a parameter as a long.
java.awt.image.renderable.ParameterBlock.getNumParameters,Returns the number of parameters (not including source images).
java.awt.image.renderable.ParameterBlock.getNumSources,Returns the number of source images.
java.awt.image.renderable.ParameterBlock.getObjectParameter,Gets a parameter as an object.
java.awt.image.renderable.ParameterBlock.getParamClasses,Returns an array of Class objects describing the types  of the parameters.
java.awt.image.renderable.ParameterBlock.getParameters,Returns the entire Vector of parameters.
java.awt.image.renderable.ParameterBlock.getRenderableSource,Returns a source as a RenderableImage.
java.awt.image.renderable.ParameterBlock.getRenderedSource,Returns a source as aRenderedImage.
java.awt.image.renderable.ParameterBlock.getShortParameter,A convenience method to return a parameter as a short.
java.awt.image.renderable.ParameterBlock.getSource,Returns a source as a general Object.
java.awt.image.renderable.ParameterBlock.getSources,Returns the entire Vector of sources.
java.awt.image.renderable.ParameterBlock.removeParameters,Clears the list of parameters.
java.awt.image.renderable.ParameterBlock.removeSources,Clears the list of source images.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters with a Byte.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters with a Character.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters with a Double.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters with a Float.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters with an Integer.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters with a Long.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters with a Short.
java.awt.image.renderable.ParameterBlock.set,Replaces an Object in the list of parameters.
java.awt.image.renderable.ParameterBlock.setParameters,Sets the entire Vector of parameters to a given Vector.
java.awt.image.renderable.ParameterBlock.setSource,Replaces an entry in the list of source with a new source.
java.awt.image.renderable.ParameterBlock.setSources,Sets the entire Vector of sources to a given Vector.
java.awt.image.renderable.ParameterBlock.shallowClone,Creates a shallow copy of aParameterBlock.
java.awt.image.renderable.RenderableImageOp.createDefaultRendering,Gets a RenderedImage instance of this image with a default  width and height in pixels.
java.awt.image.renderable.RenderableImageOp.createRendering,Creates a RenderedImage which represents this  RenderableImageOp (including its Renderable sources) rendered  according to the given RenderContext.
java.awt.image.renderable.RenderableImageOp.createScaledRendering,"Creates a RenderedImage instance of this image with width w, and  height h in pixels."
java.awt.image.renderable.RenderableImageOp.getHeight,Gets the height in user coordinate space.
java.awt.image.renderable.RenderableImageOp.getMinX,Gets the minimum X coordinate of the rendering-independent image data.
java.awt.image.renderable.RenderableImageOp.getMinY,Gets the minimum Y coordinate of the rendering-independent image data.
java.awt.image.renderable.RenderableImageOp.getParameterBlock,Returns a reference to the current parameter block.
java.awt.image.renderable.RenderableImageOp.getProperty,Gets a property from the property set of this image.
java.awt.image.renderable.RenderableImageOp.getPropertyNames,Return a list of names recognized by getProperty.
java.awt.image.renderable.RenderableImageOp.getSources,Returns a vector of RenderableImages that are the sources of  image data for this RenderableImage.
java.awt.image.renderable.RenderableImageOp.getWidth,Gets the width in user coordinate space.
java.awt.image.renderable.RenderableImageOp.isDynamic,"Returns true if successive renderings (that is, calls to  createRendering() or createScaledRendering()) with the same arguments  may produce different results."
java.awt.image.renderable.RenderableImageOp.setParameterBlock,"Change the current ParameterBlock of the operation, allowing  editing of image rendering chains."
java.awt.image.renderable.RenderableImageProducer.isConsumer,Determine if an ImageConsumer is on the list of consumers  currently interested in data for this image.
java.awt.image.renderable.RenderableImageProducer.removeConsumer,Remove an ImageConsumer from the list of consumers interested in  data for this image.
java.awt.image.renderable.RenderableImageProducer.run,The runnable method for this class.
java.awt.image.renderable.RenderableImageProducer.setRenderContext,Sets a new RenderContext to use for the next startProduction() call.
java.awt.image.renderable.RenderableImageProducer.startProduction,"Adds an ImageConsumer to the list of consumers interested in  data for this image, and immediately starts delivery of the  image data through the ImageConsumer interface."
java.awt.image.renderable.RenderContext.clone,Makes a copy of a RenderContext.
java.awt.image.renderable.RenderContext.concatenateTransform,Modifies the current user-to-device transform by appending another  transform.
java.awt.image.renderable.RenderContext.concetenateTransform,Deprecated.replaced byconcatenateTransform(AffineTransform).
java.awt.image.renderable.RenderContext.getAreaOfInterest,Gets the ares of interest currently contained in the  RenderContext.
java.awt.image.renderable.RenderContext.getRenderingHints,Gets the rendering hints of thisRenderContext.
java.awt.image.renderable.RenderContext.getTransform,Gets the current user-to-device AffineTransform.
java.awt.image.renderable.RenderContext.preConcatenateTransform,Modifies the current user-to-device transform by prepending another  transform.
java.awt.image.renderable.RenderContext.preConcetenateTransform,Deprecated.replaced bypreConcatenateTransform(AffineTransform).
java.awt.image.renderable.RenderContext.setAreaOfInterest,Sets the current area of interest.
java.awt.image.renderable.RenderContext.setRenderingHints,Sets the rendering hints of thisRenderContext.
java.awt.image.renderable.RenderContext.setTransform,Sets the current user-to-device AffineTransform contained  in the RenderContext to a given transform.
java.awt.print.Book.append,Appends a single page to the end of thisBook.
java.awt.print.Book.append,AppendsnumPagespages to the end of thisBook.
java.awt.print.Book.getNumberOfPages,Returns the number of pages in thisBook.
java.awt.print.Book.getPageFormat,Returns thePageFormatof the page specified bypageIndex.
java.awt.print.Book.getPrintable,Returns thePrintableinstance responsible for rendering  the page specified bypageIndex.
java.awt.print.Book.setPage,Sets thePageFormatand thePainterfor a  specified page number.
java.awt.print.PageFormat.clone,Makes a copy of thisPageFormatwith the same  contents as thisPageFormat.
java.awt.print.PageFormat.getHeight,"Returns the height, in 1/72nds of an inch, of the page."
java.awt.print.PageFormat.getImageableHeight,"Return the height, in 1/72nds of an inch, of the imageable  area of the page."
java.awt.print.PageFormat.getImageableWidth,"Returns the width, in 1/72nds of an inch, of the imageable  area of the page."
java.awt.print.PageFormat.getImageableX,Returns the x coordinate of the upper left point of the  imageable area of thePaperobject  associated with thisPageFormat.
java.awt.print.PageFormat.getImageableY,Returns the y coordinate of the upper left point of the  imageable area of thePaperobject  associated with thisPageFormat.
java.awt.print.PageFormat.getMatrix,Returns a transformation matrix that translates user  space rendering to the requested orientation  of the page.
java.awt.print.PageFormat.getOrientation,Returns the orientation of thisPageFormat.
java.awt.print.PageFormat.getPaper,Returns a copy of thePaperobject associated  with thisPageFormat.
java.awt.print.PageFormat.getWidth,"Returns the width, in 1/72nds of an inch, of the page."
java.awt.print.PageFormat.setOrientation,Sets the page orientation.
java.awt.print.PageFormat.setPaper,Sets thePaperobject for thisPageFormat.
java.awt.print.Paper.clone,Creates a copy of thisPaperwith the same contents  as thisPaper.
java.awt.print.Paper.getHeight,Returns the height of the page in 1/72nds of an inch.
java.awt.print.Paper.getImageableHeight,Returns the height of thisPaperobject's imageable  area.
java.awt.print.Paper.getImageableWidth,Returns the width of thisPaperobject's imageable  area.
java.awt.print.Paper.getImageableX,Returns the x coordinate of the upper-left corner of thisPaperobject's imageable area.
java.awt.print.Paper.getImageableY,Returns the y coordinate of the upper-left corner of thisPaperobject's imageable area.
java.awt.print.Paper.getWidth,Returns the width of the page in 1/72nds  of an inch.
java.awt.print.Paper.setImageableArea,Sets the imageable area of thisPaper.
java.awt.print.Paper.setSize,"Sets the width and height of thisPaperobject, which represents the properties of the page onto  which printing occurs."
java.awt.print.PrinterIOException.getCause,Returns the cause of this exception (theIOExceptionthat terminated the print job).
java.awt.print.PrinterIOException.getIOException,Returns theIOExceptionthat terminated  the print job.
java.awt.print.PrinterJob.cancel,Cancels a print job that is in progress.
java.awt.print.PrinterJob.defaultPage,Creates a newPageFormatinstance and  sets it to a default size and orientation.
java.awt.print.PrinterJob.defaultPage,Clones thePageFormatargument and alters the  clone to describe a default page size and orientation.
java.awt.print.PrinterJob.getCopies,Gets the number of copies to be printed.
java.awt.print.PrinterJob.getJobName,Gets the name of the document to be printed.
java.awt.print.PrinterJob.getPageFormat,"Calculates aPageFormatwith values consistent with those  supported by the currentPrintServicefor this job  (ie the value returned bygetPrintService()) and media,  printable area and orientation contained inattributes."
java.awt.print.PrinterJob.getPrinterJob,Creates and returns aPrinterJobwhich is initially  associated with the default printer.
java.awt.print.PrinterJob.getPrintService,Returns the service (printer) for this printer job.
java.awt.print.PrinterJob.getUserName,Gets the name of the printing user.
java.awt.print.PrinterJob.isCancelled,"Returnstrueif a print job is  in progress, but is going to be cancelled  at the next opportunity; otherwise returnsfalse."
java.awt.print.PrinterJob.lookupPrintServices,A convenience method which looks up 2D print services.
java.awt.print.PrinterJob.lookupStreamPrintServices,A convenience method which locates factories for stream print  services which can image 2D graphics.
java.awt.print.PrinterJob.pageDialog,Displays a dialog that allows modification of aPageFormatinstance.
java.awt.print.PrinterJob.pageDialog,A convenience method which displays a cross-platform page setup dialog.
java.awt.print.PrinterJob.print,Prints a set of pages.
java.awt.print.PrinterJob.print,Prints a set of pages using the settings in the attribute  set.
java.awt.print.PrinterJob.printDialog,Presents a dialog to the user for changing the properties of  the print job.
java.awt.print.PrinterJob.printDialog,A convenience method which displays a cross-platform print dialog  for all services which are capable of printing 2D graphics using thePageableinterface.
java.awt.print.PrinterJob.setCopies,Sets the number of copies to be printed.
java.awt.print.PrinterJob.setJobName,Sets the name of the document to be printed.
java.awt.print.PrinterJob.setPageable,"Queriesdocumentfor the number of pages and  thePageFormatandPrintablefor each  page held in thePageableinstance,document."
java.awt.print.PrinterJob.setPrintable,Callspainterto render the pages.
java.awt.print.PrinterJob.setPrintable,Callspainterto render the pages in the specifiedformat.
java.awt.print.PrinterJob.setPrintService,Associate this PrinterJob with a new PrintService.
java.awt.print.PrinterJob.validatePage,Returns the clone ofpagewith its settings  adjusted to be compatible with the current printer of thisPrinterJob.
java.beans.BeanDescriptor.getBeanClass,Gets the bean's Class object.
java.beans.BeanDescriptor.getCustomizerClass,Gets the Class object for the bean's customizer.
java.beans.Beans.getInstanceOf,"From a given bean, obtain an object representing a specified  type view of that source object."
java.beans.Beans.instantiate,Instantiate a JavaBean.
java.beans.Beans.instantiate,"Deprecated, for removal: This API element is subject to removal in a future version.It is recommended to useinstantiate(ClassLoader, String, BeanContext),  because the Applet API is deprecated."
java.beans.Beans.isDesignTime,Test if we are in design-mode.
java.beans.Beans.isGuiAvailable,Determines whether beans can assume a GUI is available.
java.beans.Beans.isInstanceOf,Check if a bean can be viewed as a given target type.
java.beans.Beans.setDesignTime,Used to indicate whether of not we are running in an application  builder environment.
java.beans.Beans.setGuiAvailable,Used to indicate whether of not we are running in an environment  where GUI interaction is available.
java.beans.DefaultPersistenceDelegate.initialize,"This default implementation of theinitializemethod assumes  all state held in objects of this type is exposed via the  matching pairs of ""setter"" and ""getter"" methods in the order  they are returned by the Introspector."
java.beans.DefaultPersistenceDelegate.instantiate,"This default implementation of theinstantiatemethod returns  an expression containing the predefined method name ""new"" which denotes a  call to a constructor with the arguments as specified in  theDefaultPersistenceDelegate's constructor."
java.beans.DefaultPersistenceDelegate.mutatesTo,"If the number of arguments in the specified constructor is non-zero and  the class ofoldInstanceexplicitly declares an ""equals"" method  this method returns the value ofoldInstance.equals(newInstance)."
java.beans.Encoder.get,Returns a tentative value foroldInstancein  the environment created by this stream.
java.beans.Encoder.getExceptionListener,Gets the exception handler for this stream.
java.beans.Encoder.getPersistenceDelegate,Returns the persistence delegate for the given type.
java.beans.Encoder.remove,"Removes the entry for this instance, returning the old entry."
java.beans.Encoder.setExceptionListener,Sets the exception handler for this stream toexceptionListener.
java.beans.Encoder.setPersistenceDelegate,Associates the specified persistence delegate with the given type.
java.beans.Encoder.writeExpression,The implementation first checks to see if an  expression with this value has already been written.
java.beans.Encoder.writeObject,Write the specified object to the output stream.
java.beans.Encoder.writeStatement,Writes statementoldStmto the stream.
java.beans.EventHandler.create,Creates an implementation oflistenerInterfacein whichallof the methods in the listener interface apply  the handler'sactionto thetarget.
java.beans.EventHandler.create,"/**  Creates an implementation oflistenerInterfacein whichallof the methods pass the value of the event  expression,eventPropertyName, to the final method in the  statement,action, which is applied to thetarget."
java.beans.EventHandler.create,"Creates an implementation oflistenerInterfacein which  the method namedlistenerMethodNamepasses the value of the event expression,eventPropertyName,  to the final method in the statement,action, which  is applied to thetarget."
java.beans.EventHandler.getAction,"Returns the name of the target's writable property  that this event handler will set,  or the name of the method that this event handler  will invoke on the target."
java.beans.EventHandler.getEventPropertyName,Returns the property of the event that should be  used in the action applied to the target.
java.beans.EventHandler.getListenerMethodName,Returns the name of the method that will trigger the action.
java.beans.EventHandler.getTarget,Returns the object to which this event handler will send a message.
java.beans.EventHandler.invoke,Extract the appropriate property value from the event and  pass it to the action associated with  thisEventHandler.
java.beans.EventSetDescriptor.getAddListenerMethod,Gets the method used to add event listeners.
java.beans.EventSetDescriptor.getGetListenerMethod,Gets the method used to access the registered event listeners.
java.beans.EventSetDescriptor.getListenerMethodDescriptors,Gets theMethodDescriptors of the target listener interface.
java.beans.EventSetDescriptor.getListenerMethods,Gets the methods of the target listener interface.
java.beans.EventSetDescriptor.getListenerType,Gets theClassobject for the target interface.
java.beans.EventSetDescriptor.getRemoveListenerMethod,Gets the method used to remove event listeners.
java.beans.EventSetDescriptor.isInDefaultEventSet,"Reports if an event set is in the ""default"" set."
java.beans.EventSetDescriptor.isUnicast,Normally event sources are multicast.
java.beans.EventSetDescriptor.setInDefaultEventSet,"Marks an event set as being in the ""default"" set (or not)."
java.beans.EventSetDescriptor.setUnicast,Mark an event set as unicast (or not).
java.beans.Expression.execute,"Theexecutemethod finds a method whose name is the same  as themethodNameproperty, and invokes the method on  the target."
java.beans.Expression.getValue,"If the value property of this instance is not already set,  this method dynamically finds the method with the specified  methodName on this target with these arguments and calls it."
java.beans.Expression.setValue,Sets the value of this expression tovalue.
java.beans.Expression.toString,Prints the value of this expression using a Java-style syntax.
java.beans.FeatureDescriptor.attributeNames,Gets an enumeration of the locale-independent names of this  feature.
java.beans.FeatureDescriptor.getDisplayName,Gets the localized display name of this feature.
java.beans.FeatureDescriptor.getName,Gets the programmatic name of this feature.
java.beans.FeatureDescriptor.getShortDescription,Gets the short description of this feature.
java.beans.FeatureDescriptor.getValue,Retrieve a named attribute with this feature.
java.beans.FeatureDescriptor.isExpert,"The ""expert"" flag is used to distinguish between those features that are  intended for expert users from those that are intended for normal users."
java.beans.FeatureDescriptor.isHidden,"The ""hidden"" flag is used to identify features that are intended only  for tool use, and which should not be exposed to humans."
java.beans.FeatureDescriptor.isPreferred,"The ""preferred"" flag is used to identify features that are particularly  important for presenting to humans."
java.beans.FeatureDescriptor.setDisplayName,Sets the localized display name of this feature.
java.beans.FeatureDescriptor.setExpert,"The ""expert"" flag is used to distinguish between features that are  intended for expert users from those that are intended for normal users."
java.beans.FeatureDescriptor.setName,Sets the programmatic name of this feature.
java.beans.FeatureDescriptor.setShortDescription,You can associate a short descriptive string with a feature.
java.beans.FeatureDescriptor.setValue,Associate a named attribute with this feature.
java.beans.IndexedPropertyChangeEvent.getIndex,Gets the index of the property that was changed.
java.beans.IndexedPropertyDescriptor.equals,Compares thisPropertyDescriptoragainst the specified object.
java.beans.IndexedPropertyDescriptor.getIndexedPropertyType,Returns the Java type info for the indexed property.
java.beans.IndexedPropertyDescriptor.getIndexedReadMethod,Gets the method that should be used to read an indexed  property value.
java.beans.IndexedPropertyDescriptor.getIndexedWriteMethod,Gets the method that should be used to write an indexed property value.
java.beans.IndexedPropertyDescriptor.setIndexedReadMethod,Sets the method that should be used to read an indexed property value.
java.beans.IndexedPropertyDescriptor.setIndexedWriteMethod,Sets the method that should be used to write an indexed property value.
java.beans.Introspector.decapitalize,Utility method to take a string and convert it to normal Java variable  name capitalization.
java.beans.Introspector.flushCaches,Flush all of the Introspector's internal caches.
java.beans.Introspector.flushFromCaches,Flush the Introspector's internal cached information for a given class.
java.beans.Introspector.getBeanInfo,"Introspect on a Java Bean and learn about all its properties, exposed  methods, and events."
java.beans.Introspector.getBeanInfo,"Introspect on a Java bean and learn about all its properties, exposed  methods, and events, subject to some control flags."
java.beans.Introspector.getBeanInfo,"Introspect on a Java bean and learn all about its properties, exposed  methods, below a given ""stop"" point."
java.beans.Introspector.getBeanInfo,"Introspect on a Java Bean and learn about all its properties,  exposed methods and events, below a givenstopClasspoint  subject to some controlflags."
java.beans.Introspector.getBeanInfoSearchPath,Gets the list of package names that will be used for           finding BeanInfo classes.
java.beans.Introspector.setBeanInfoSearchPath,Change the list of package names that will be used for           finding BeanInfo classes.
java.beans.MethodDescriptor.getMethod,Gets the method that this MethodDescriptor encapsulates.
java.beans.MethodDescriptor.getParameterDescriptors,Gets the ParameterDescriptor for each of this MethodDescriptor's  method's parameters.
java.beans.PersistenceDelegate.initialize,Produce a series of statements with side effects onnewInstanceso that the new instance becomesequivalenttooldInstance.
java.beans.PersistenceDelegate.instantiate,Returns an expression whose value isoldInstance.
java.beans.PersistenceDelegate.mutatesTo,Returns true if anequivalentcopy ofoldInstancemay be  created by applying a series of statements tonewInstance.
java.beans.PersistenceDelegate.writeObject,ThewriteObjectis a single entry point to the persistence  and is used by anEncoderin the traditional  mode of delegation.
java.beans.PropertyChangeEvent.getNewValue,"Gets the new value for the property, expressed as an Object."
java.beans.PropertyChangeEvent.getOldValue,"Gets the old value for the property, expressed as an Object."
java.beans.PropertyChangeEvent.getPropagationId,"The ""propagationId"" field is reserved for future use."
java.beans.PropertyChangeEvent.getPropertyName,Gets the programmatic name of the property that was changed.
java.beans.PropertyChangeEvent.setPropagationId,Sets the propagationId object for the event.
java.beans.PropertyChangeListenerProxy.getPropertyName,Returns the name of the named property associated with the listener.
java.beans.PropertyChangeListenerProxy.propertyChange,Forwards the property change event to the listener delegate.
java.beans.PropertyChangeSupport.addPropertyChangeListener,Add a PropertyChangeListener to the listener list.
java.beans.PropertyChangeSupport.addPropertyChangeListener,Add a PropertyChangeListener for a specific property.
java.beans.PropertyChangeSupport.fireIndexedPropertyChange,Reports a boolean bound indexed property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.PropertyChangeSupport.fireIndexedPropertyChange,Reports an integer bound indexed property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.PropertyChangeSupport.fireIndexedPropertyChange,Reports a bound indexed property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.PropertyChangeSupport.firePropertyChange,Fires a property change event to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.PropertyChangeSupport.firePropertyChange,Reports a boolean bound property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.PropertyChangeSupport.firePropertyChange,Reports an integer bound property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.PropertyChangeSupport.firePropertyChange,Reports a bound property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.PropertyChangeSupport.getPropertyChangeListeners,Returns an array of all the listeners that were added to the  PropertyChangeSupport object with addPropertyChangeListener().
java.beans.PropertyChangeSupport.getPropertyChangeListeners,Returns an array of all the listeners which have been associated  with the named property.
java.beans.PropertyChangeSupport.hasListeners,"Check if there are any listeners for a specific property, including  those registered on all properties."
java.beans.PropertyChangeSupport.removePropertyChangeListener,Remove a PropertyChangeListener for a specific property.
java.beans.PropertyDescriptor.createPropertyEditor,Constructs an instance of a property editor using the current  property editor class.
java.beans.PropertyDescriptor.getPropertyEditorClass,Gets any explicit PropertyEditor Class that has been registered  for this property.
java.beans.PropertyDescriptor.getPropertyType,Returns the Java type info for the property.
java.beans.PropertyDescriptor.getReadMethod,Gets the method that should be used to read the property value.
java.beans.PropertyDescriptor.getWriteMethod,Gets the method that should be used to write the property value.
java.beans.PropertyDescriptor.isBound,"Updates to ""bound"" properties will cause a ""PropertyChange"" event to  get fired when the property is changed."
java.beans.PropertyDescriptor.isConstrained,"Attempted updates to ""Constrained"" properties will cause a ""VetoableChange""  event to get fired when the property is changed."
java.beans.PropertyDescriptor.setPropertyEditorClass,Normally PropertyEditors will be found using the PropertyEditorManager.
java.beans.PropertyDescriptor.setReadMethod,Sets the method that should be used to read the property value.
java.beans.PropertyDescriptor.setWriteMethod,Sets the method that should be used to write the property value.
java.beans.PropertyEditorManager.findEditor,Locate a value editor for a given target type.
java.beans.PropertyEditorManager.getEditorSearchPath,Gets the package names that will be searched for property editors.
java.beans.PropertyEditorManager.registerEditor,Registers an editor class to edit values of the given target class.
java.beans.PropertyEditorManager.setEditorSearchPath,Change the list of package names that will be used for           finding property editors.
java.beans.PropertyEditorSupport.addPropertyChangeListener,Adds a listener for the value change.
java.beans.PropertyEditorSupport.firePropertyChange,Report that we have been modified to any interested listeners.
java.beans.PropertyEditorSupport.getAsText,Gets the property value as a string suitable for presentation  to a human to edit.
java.beans.PropertyEditorSupport.getCustomEditor,A PropertyEditor may chose to make available a full custom Component  that edits its property value.
java.beans.PropertyEditorSupport.getJavaInitializationString,This method is intended for use when generating Java code to set  the value of the property.
java.beans.PropertyEditorSupport.getSource,Returns the bean that is used as the  source of events.
java.beans.PropertyEditorSupport.getTags,"If the property value must be one of a set of known tagged values,  then this method should return an array of the tag values."
java.beans.PropertyEditorSupport.getValue,Gets the value of the property.
java.beans.PropertyEditorSupport.isPaintable,Determines whether the class will honor the paintValue method.
java.beans.PropertyEditorSupport.paintValue,Paint a representation of the value into a given area of screen  real estate.
java.beans.PropertyEditorSupport.removePropertyChangeListener,Removes a listener for the value change.
java.beans.PropertyEditorSupport.setAsText,Sets the property value by parsing a given String.
java.beans.PropertyEditorSupport.setSource,Sets the source bean.
java.beans.PropertyEditorSupport.setValue,Set (or change) the object that is to be edited.
java.beans.PropertyEditorSupport.supportsCustomEditor,Determines whether the propertyEditor can provide a custom editor.
java.beans.PropertyVetoException.getPropertyChangeEvent,Gets the vetoedPropertyChangeEvent.
java.beans.SimpleBeanInfo.getAdditionalBeanInfo,Claim there are no other relevant BeanInfo objects.
java.beans.SimpleBeanInfo.getBeanDescriptor,Deny knowledge about the class and customizer of the bean.
java.beans.SimpleBeanInfo.getDefaultEventIndex,Deny knowledge of a default event.
java.beans.SimpleBeanInfo.getDefaultPropertyIndex,Deny knowledge of a default property.
java.beans.SimpleBeanInfo.getEventSetDescriptors,Deny knowledge of event sets.
java.beans.SimpleBeanInfo.getIcon,Claim there are no icons available.
java.beans.SimpleBeanInfo.getMethodDescriptors,Deny knowledge of methods.
java.beans.SimpleBeanInfo.getPropertyDescriptors,Deny knowledge of properties.
java.beans.SimpleBeanInfo.loadImage,This is a utility method to help in loading icon images.
java.beans.Statement.getArguments,Returns the arguments for the method to invoke.
java.beans.Statement.getMethodName,Returns the name of the method to invoke.
java.beans.Statement.getTarget,Returns the target object of this statement.
java.beans.Statement.toString,Prints the value of this statement using a Java-style syntax.
java.beans.VetoableChangeSupport.addVetoableChangeListener,Add a VetoableChangeListener to the listener list.
java.beans.VetoableChangeSupport.addVetoableChangeListener,Add a VetoableChangeListener for a specific property.
java.beans.VetoableChangeSupport.fireVetoableChange,Reports a boolean constrained property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.VetoableChangeSupport.fireVetoableChange,Reports an integer constrained property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.VetoableChangeSupport.fireVetoableChange,Reports a constrained property update to listeners  that have been registered to track updates of  all properties or a property with the specified name.
java.beans.VetoableChangeSupport.getVetoableChangeListeners,Returns an array of all the listeners that were added to the  VetoableChangeSupport object with addVetoableChangeListener().
java.beans.VetoableChangeSupport.removeVetoableChangeListener,Remove a VetoableChangeListener from the listener list.
java.beans.VetoableChangeSupport.removeVetoableChangeListener,Remove a VetoableChangeListener for a specific property.
java.beans.XMLDecoder.close,This method closes the input stream associated  with this stream.
java.beans.XMLDecoder.createHandler,Creates a new handler for SAX parser  that can be used to parse embedded XML archives  created by theXMLEncoderclass.
java.beans.XMLDecoder.getOwner,Gets the owner of this decoder.
java.beans.XMLDecoder.readObject,Reads the next object from the underlying input stream.
java.beans.XMLDecoder.setOwner,Sets the owner of this decoder toowner.
java.beans.XMLEncoder.close,"This method callsflush, writes the closing  postamble and then closes the output stream associated  with this stream."
java.beans.XMLEncoder.flush,This method writes out the preamble associated with the  XML encoding if it has not been written already and  then writes out all of the values that been  written to the stream since the last timeflushwas called.
java.beans.XMLEncoder.getOwner,Gets the owner of this encoder.
java.beans.XMLEncoder.setOwner,Sets the owner of this encoder toowner.
java.beans.XMLEncoder.writeExpression,Records the Expression so that the Encoder will  produce the actual output when the stream is flushed.
java.beans.XMLEncoder.writeObject,Write an XML representation of the specified object to the output.
java.beans.XMLEncoder.writeStatement,Records the Statement so that the Encoder will  produce the actual output when the stream is flushed.
java.beans.beancontext.BeanContextChildSupport.firePropertyChange,Report a bound property update to any registered listeners.
java.beans.beancontext.BeanContextChildSupport.fireVetoableChange,Report a vetoable property update to any registered listeners.
java.beans.beancontext.BeanContextChildSupport.getBeanContext,Gets the nestingBeanContextfor thisBeanContextChildSupport.
java.beans.beancontext.BeanContextChildSupport.getBeanContextChildPeer,Gets theBeanContextChildassociated with thisBeanContextChildSupport.
java.beans.beancontext.BeanContextChildSupport.initializeBeanContextResources,This method may be overridden by subclasses to provide their own  initialization behaviors.
java.beans.beancontext.BeanContextChildSupport.isDelegated,Reports whether or not this class is a delegate of another.
java.beans.beancontext.BeanContextChildSupport.releaseBeanContextResources,This method may be overridden by subclasses to provide their own  release behaviors.
java.beans.beancontext.BeanContextChildSupport.removeVetoableChangeListener,Removes aVetoableChangeListener.
java.beans.beancontext.BeanContextChildSupport.serviceAvailable,A new service is available from the nesting BeanContext.
java.beans.beancontext.BeanContextChildSupport.serviceRevoked,A service provided by the nesting BeanContext has been revoked.
java.beans.beancontext.BeanContextChildSupport.setBeanContext,Sets theBeanContextfor  thisBeanContextChildSupport.
java.beans.beancontext.BeanContextChildSupport.validatePendingSetBeanContext,Called from setBeanContext to validate (or otherwise) the  pending change in the nesting BeanContext property value.
java.beans.beancontext.BeanContextEvent.getBeanContext,Gets theBeanContextassociated with this event.
java.beans.beancontext.BeanContextEvent.getPropagatedFrom,Gets theBeanContextfrom which this event was propagated.
java.beans.beancontext.BeanContextEvent.isPropagated,Reports whether or not this event is  propagated from some otherBeanContext.
java.beans.beancontext.BeanContextEvent.setPropagatedFrom,Sets theBeanContextfrom which this event was propagated.
java.beans.beancontext.BeanContextMembershipEvent.contains,Is the child specified affected by the event?
java.beans.beancontext.BeanContextMembershipEvent.iterator,Gets the array of children affected by this event.
java.beans.beancontext.BeanContextMembershipEvent.size,Gets the number of children affected by the notification.
java.beans.beancontext.BeanContextServiceAvailableEvent.getCurrentServiceSelectors,Gets the list of service dependent selectors.
java.beans.beancontext.BeanContextServiceAvailableEvent.getServiceClass,Gets the service class that is the subject of this notification.
java.beans.beancontext.BeanContextServiceAvailableEvent.getSourceAsBeanContextServices,Gets the source as a reference of typeBeanContextServices.
java.beans.beancontext.BeanContextServiceRevokedEvent.getServiceClass,Gets the service class that is the subject of this notification
java.beans.beancontext.BeanContextServiceRevokedEvent.getSourceAsBeanContextServices,Gets the source as a reference of typeBeanContextServices
java.beans.beancontext.BeanContextServiceRevokedEvent.isCurrentServiceInvalidNow,"Reports if the current service is being forcibly revoked,  in which case the references are now invalidated and unusable."
java.beans.beancontext.BeanContextServiceRevokedEvent.isServiceClass,Checks this event to determine whether or not  the service being revoked is of a particular class.
java.beans.beancontext.BeanContextServicesSupport.getCurrentServiceSelectors,"Invoked byBeanContextServices, this method  gets the current service selectors for the specified service."
java.beans.beancontext.BeanContextServicesSupport.getService,"Invoked byBeanContextServices, this method  requests an instance of a  service from thisBeanContextServiceProvider."
java.beans.beancontext.BeanContextServicesSupport.releaseService,"Invoked byBeanContextServices,  this method releases a nestedBeanContextChild's  (or any arbitrary object associated with aBeanContextChild) reference to the specified service."
java.beans.beancontext.BeanContextServicesSupport.serviceRevoked,The service named has been revoked. getService requests for  this service will no longer be satisfied.
java.beans.beancontext.BeanContextServicesSupport.getServiceProvider,Returns the service provider.
java.beans.beancontext.BeanContextServicesSupport.addBeanContextServicesListener,add a BeanContextServicesListener
java.beans.beancontext.BeanContextServicesSupport.addService,add a service
java.beans.beancontext.BeanContextServicesSupport.bcsPreDeserializationHook,called from BeanContextSupport readObject before it deserializes the  children ...
java.beans.beancontext.BeanContextServicesSupport.bcsPreSerializationHook,called from BeanContextSupport writeObject before it serializes the  children ...
java.beans.beancontext.BeanContextServicesSupport.childJustRemovedHook,called from superclass child removal operations after a child  has been successfully removed. called with child synchronized.
java.beans.beancontext.BeanContextServicesSupport.createBCSChild,Subclasses can override this method to insert their own subclass  of Child without having to override add() or the other Collection  methods that add children to the set.
java.beans.beancontext.BeanContextServicesSupport.createBCSSServiceProvider,subclasses can override this method to create new subclasses of  BCSSServiceProvider without having to override addService() in  order to instantiate.
java.beans.beancontext.BeanContextServicesSupport.fireServiceAdded,Fires aBeanContextServiceAvailableEventindicating that a new  service has become available.
java.beans.beancontext.BeanContextServicesSupport.fireServiceAdded,Fires aBeanContextServiceEventnotifying of a new service.
java.beans.beancontext.BeanContextServicesSupport.fireServiceRevoked,Fires aBeanContextServiceEventnotifying of a service being revoked.
java.beans.beancontext.BeanContextServicesSupport.fireServiceRevoked,Fires aBeanContextServiceRevokedEventindicating that a particular service is  no longer available.
java.beans.beancontext.BeanContextServicesSupport.getBeanContextServicesPeer,Gets theBeanContextServicesassociated with thisBeanContextServicesSupport.
java.beans.beancontext.BeanContextServicesSupport.getChildBeanContextServicesListener,Gets theBeanContextServicesListener(if any) of the specified  child.
java.beans.beancontext.BeanContextServicesSupport.getCurrentServiceClasses,Gets the currently available services for this context.
java.beans.beancontext.BeanContextServicesSupport.getCurrentServiceSelectors,"Gets the list of service dependent service parameters  (Service Selectors) for the specified service, by  calling getCurrentServiceSelectors() on the  underlying BeanContextServiceProvider."
java.beans.beancontext.BeanContextServicesSupport.getService,obtain a service which may be delegated
java.beans.beancontext.BeanContextServicesSupport.hasService,"has a service, which may be delegated"
java.beans.beancontext.BeanContextServicesSupport.initialize,called by BeanContextSupport superclass during construction and  deserialization to initialize subclass transient state.
java.beans.beancontext.BeanContextServicesSupport.initializeBeanContextResources,called from setBeanContext to notify a BeanContextChild  to allocate resources obtained from the nesting BeanContext.
java.beans.beancontext.BeanContextServicesSupport.releaseBeanContextResources,called from setBeanContext to notify a BeanContextChild  to release resources obtained from the nesting BeanContext.
java.beans.beancontext.BeanContextServicesSupport.releaseService,release a service
java.beans.beancontext.BeanContextServicesSupport.removeBeanContextServicesListener,remove a BeanContextServicesListener
java.beans.beancontext.BeanContextServicesSupport.revokeService,remove a service
java.beans.beancontext.BeanContextServicesSupport.serviceAvailable,"BeanContextServicesListener callback, propagates event to all  currently registered listeners and BeanContextServices children,  if this BeanContextService does not already implement this service  itself."
java.beans.beancontext.BeanContextSupport.hasNext,Returnstrueif the iteration has more elements.
java.beans.beancontext.BeanContextSupport.next,Returns the next element in the iteration.
java.beans.beancontext.BeanContextSupport.add,Adds/nests a child within thisBeanContext.
java.beans.beancontext.BeanContextSupport.addAll,"add Collection to set of Children (Unsupported)  implementations must synchronized on the hierarchy lock and ""children"" protected field"
java.beans.beancontext.BeanContextSupport.addBeanContextMembershipListener,Adds a BeanContextMembershipListener
java.beans.beancontext.BeanContextSupport.avoidingGui,Used to determine if theBeanContextchild is avoiding using its GUI.
java.beans.beancontext.BeanContextSupport.bcsChildren,Returns an iterator of all children  of thisBeanContext.
java.beans.beancontext.BeanContextSupport.bcsPreDeserializationHook,called by readObject after defaultReadObject() but prior to  deserialization of any children.
java.beans.beancontext.BeanContextSupport.bcsPreSerializationHook,called by writeObject after defaultWriteObject() but prior to  serialization of currently serializable children.
java.beans.beancontext.BeanContextSupport.childDeserializedHook,Called by readObject with the newly deserialized child and BCSChild.
java.beans.beancontext.BeanContextSupport.childJustAddedHook,subclasses may override this method to simply extend add() semantics  after the child has been added and before the event notification has  occurred.
java.beans.beancontext.BeanContextSupport.childJustRemovedHook,subclasses may override this method to simply extend remove() semantics  after the child has been removed and before the event notification has  occurred.
java.beans.beancontext.BeanContextSupport.classEquals,"Tests to see if two class objects,  or their names are equal."
java.beans.beancontext.BeanContextSupport.clear,"clear the children (Unsupported)  implementations must synchronized on the hierarchy lock and ""children"" protected field"
java.beans.beancontext.BeanContextSupport.contains,Determines whether or not the specified object  is currently a child of thisBeanContext.
java.beans.beancontext.BeanContextSupport.containsAll,Tests to see if all objects in the  specifiedCollectionare children of  thisBeanContext.
java.beans.beancontext.BeanContextSupport.copyChildren,Gets a copy of the this BeanContext's children.
java.beans.beancontext.BeanContextSupport.deserialize,used by readObject to deserialize a collection.
java.beans.beancontext.BeanContextSupport.dontUseGui,notify this instance that it may no longer render a GUI.
java.beans.beancontext.BeanContextSupport.fireChildrenAdded,Fire a BeanContextshipEvent on the BeanContextMembershipListener interface
java.beans.beancontext.BeanContextSupport.getBeanContextPeer,Gets the instance ofBeanContextthat  this object is providing the implementation for.
java.beans.beancontext.BeanContextSupport.getChildBeanContextChild,Gets the BeanContextChild (if any) of the specified child
java.beans.beancontext.BeanContextSupport.getChildBeanContextMembershipListener,Gets the BeanContextMembershipListener  (if any) of the specified child
java.beans.beancontext.BeanContextSupport.getChildPropertyChangeListener,Gets the PropertyChangeListener  (if any) of the specified child
java.beans.beancontext.BeanContextSupport.getChildSerializable,Gets the Serializable (if any) associated with the specified Child
java.beans.beancontext.BeanContextSupport.getChildVetoableChangeListener,Gets the VetoableChangeListener  (if any) of the specified child
java.beans.beancontext.BeanContextSupport.getChildVisibility,Gets the Component (if any) associated with the specified child.
java.beans.beancontext.BeanContextSupport.getLocale,Gets the locale for thisBeanContext.
java.beans.beancontext.BeanContextSupport.getResource,"Analagous tojava.lang.ClassLoader.getResource(), this  method allows aBeanContextimplementation to interpose  behavior between the childComponentand underlyingClassLoader."
java.beans.beancontext.BeanContextSupport.getResourceAsStream,"Analagous tojava.lang.ClassLoader.getResourceAsStream(),  this method allows aBeanContextimplementation  to interpose behavior between the childComponentand underlyingClassLoader."
java.beans.beancontext.BeanContextSupport.initialize,protected method called from constructor and readObject to initialize  transient state of BeanContextSupport instance.
java.beans.beancontext.BeanContextSupport.instantiateChild,"The instantiateChild method is a convenience hook  in BeanContext to simplify  the task of instantiating a Bean, nested,  into aBeanContext."
java.beans.beancontext.BeanContextSupport.isDesignTime,Reports whether or not this object is in  currently in design time mode.
java.beans.beancontext.BeanContextSupport.isEmpty,Reports whether or not thisBeanContextis empty.
java.beans.beancontext.BeanContextSupport.isSerializing,Is thisBeanContextin the  process of being serialized?
java.beans.beancontext.BeanContextSupport.iterator,Gets all JavaBean orBeanContextinstances  currently nested in thisBeanContext.
java.beans.beancontext.BeanContextSupport.needsGui,"This method is typically called from the environment in order to determine  if the implementor ""needs"" a GUI."
java.beans.beancontext.BeanContextSupport.okToUseGui,Notify this instance that it may now render a GUI
java.beans.beancontext.BeanContextSupport.propertyChange,subclasses may envelope to monitor child property changes.
java.beans.beancontext.BeanContextSupport.readChildren,When an instance of this class is used as a delegate for the  implementation of the BeanContext protocols (and its subprotocols)  there exists a 'chicken and egg' problem during deserialization
java.beans.beancontext.BeanContextSupport.remove,Removes a child from this BeanContext.
java.beans.beancontext.BeanContextSupport.remove,internal remove used when removal caused by  unexpectedsetBeanContextor  byremove()invocation.
java.beans.beancontext.BeanContextSupport.removeAll,"remove all specified children (Unsupported)  implementations must synchronized on the hierarchy lock and ""children"" protected field"
java.beans.beancontext.BeanContextSupport.removeBeanContextMembershipListener,Removes a BeanContextMembershipListener
java.beans.beancontext.BeanContextSupport.retainAll,"retain only specified children (Unsupported)  implementations must synchronized on the hierarchy lock and ""children"" protected field"
java.beans.beancontext.BeanContextSupport.serialize,Used by writeObject to serialize a Collection.
java.beans.beancontext.BeanContextSupport.setDesignTime,Sets the new design time value for thisBeanContext.
java.beans.beancontext.BeanContextSupport.setLocale,Sets the locale of this BeanContext.
java.beans.beancontext.BeanContextSupport.size,Gets the number of children currently nested in  this BeanContext.
java.beans.beancontext.BeanContextSupport.toArray,Gets all JavaBean orBeanContextinstances currently nested in this BeanContext.
java.beans.beancontext.BeanContextSupport.toArray,Gets an array containing all children of  thisBeanContextthat match  the types contained in arry.
java.beans.beancontext.BeanContextSupport.validatePendingAdd,"Subclasses of this class may override, or envelope, this method to  add validation behavior for the BeanContext to examine child objects  immediately prior to their being added to the BeanContext."
java.beans.beancontext.BeanContextSupport.validatePendingRemove,"Subclasses of this class may override, or envelope, this method to  add validation behavior for the BeanContext to examine child objects  immediately prior to their being removed from the BeanContext."
java.beans.beancontext.BeanContextSupport.vetoableChange,subclasses may envelope to monitor veto child property changes.
java.beans.beancontext.BeanContextSupport.writeChildren,Used to serialize all children of  thisBeanContext.
javax.accessibility.AccessibilityProvider.activate,Activates the support provided by this service provider.
javax.accessibility.AccessibilityProvider.getName,Returns the name of this service provider.
javax.accessibility.AccessibleBundle.toDisplayString,Gets localized string describing the key using the default locale.
javax.accessibility.AccessibleBundle.toDisplayString,Obtains the key as a localized string.
javax.accessibility.AccessibleContext.firePropertyChange,Support for reporting bound property changes.
javax.accessibility.AccessibleContext.getAccessibleAction,Gets theAccessibleActionassociated with this object that  supports one or more actions.
javax.accessibility.AccessibleContext.getAccessibleChild,Returns the specifiedAccessiblechild of the object.
javax.accessibility.AccessibleContext.getAccessibleComponent,Gets theAccessibleComponentassociated with this object that has  a graphical representation.
javax.accessibility.AccessibleContext.getAccessibleDescription,Gets theaccessibleDescriptionproperty of this object.
javax.accessibility.AccessibleContext.getAccessibleEditableText,Gets theAccessibleEditableTextassociated with this object  presenting editable text on the display.
javax.accessibility.AccessibleContext.getAccessibleIcon,Gets theAccessibleIconsassociated with an object that has one  or more associated icons.
javax.accessibility.AccessibleContext.getAccessibleIndexInParent,Gets the 0-based index of this object in its accessible parent.
javax.accessibility.AccessibleContext.getAccessibleName,Gets theaccessibleNameproperty of this object.
javax.accessibility.AccessibleContext.getAccessibleRelationSet,Gets theAccessibleRelationSetassociated with an object.
javax.accessibility.AccessibleContext.getAccessibleSelection,Gets theAccessibleSelectionassociated with this object which  allows itsAccessiblechildren to be selected.
javax.accessibility.AccessibleContext.getAccessibleTable,Gets theAccessibleTableassociated with an object.
javax.accessibility.AccessibleContext.getAccessibleText,Gets theAccessibleTextassociated with this object presenting  text on the display.
javax.accessibility.AccessibleContext.getAccessibleValue,Gets theAccessibleValueassociated with this object that  supports aNumericalvalue.
javax.accessibility.AccessibleContext.removePropertyChangeListener,Removes aPropertyChangeListenerfrom the listener list.
javax.accessibility.AccessibleContext.setAccessibleDescription,Sets the accessible description of this object.
javax.accessibility.AccessibleContext.setAccessibleName,Sets the localized accessible name of this object.
javax.accessibility.AccessibleContext.setAccessibleParent,Sets theAccessibleparent of this object.
javax.accessibility.AccessibleHyperlink.doAccessibleAction,Performs the specified action on the object.
javax.accessibility.AccessibleHyperlink.getAccessibleActionAnchor,"Returns an object that represents the link anchor, as appropriate for  that link."
javax.accessibility.AccessibleHyperlink.getAccessibleActionCount,"Returns the number of accessible actions available in this Link If there  are more than one, the first one is NOT considered the ""default"" action  of this LINK object (e.g. in an HTML imagemap)."
javax.accessibility.AccessibleHyperlink.getAccessibleActionDescription,Returns a string description of this particular link action.
javax.accessibility.AccessibleHyperlink.getAccessibleActionObject,"Returns an object that represents the link action, as appropriate for  that link."
javax.accessibility.AccessibleHyperlink.getEndIndex,Gets the index with the hypertext document at which this link ends.
javax.accessibility.AccessibleHyperlink.getStartIndex,Gets the index with the hypertext document at which this link begins.
javax.accessibility.AccessibleHyperlink.isValid,"Since the document a link is associated with may have changed, this  method returns whether or not this Link is still valid (with respect to  the document it references)."
javax.accessibility.AccessibleRelation.getKey,Returns the key for this relation.
javax.accessibility.AccessibleRelation.getTarget,Returns the target objects for this relation.
javax.accessibility.AccessibleRelation.setTarget,Sets the target object for this relation.
javax.accessibility.AccessibleRelation.setTarget,Sets the target objects for this relation.
javax.accessibility.AccessibleRelationSet.add,Adds a new relation to the current relation set.
javax.accessibility.AccessibleRelationSet.addAll,Adds all of the relations to the existing relation set.
javax.accessibility.AccessibleRelationSet.clear,Removes all the relations from the current relation set.
javax.accessibility.AccessibleRelationSet.contains,Returns whether the relation set contains a relation that matches the  specified key.
javax.accessibility.AccessibleRelationSet.get,Returns the relation that matches the specified key.
javax.accessibility.AccessibleRelationSet.remove,Removes a relation from the current relation set.
javax.accessibility.AccessibleRelationSet.size,Returns the number of relations in the relation set.
javax.accessibility.AccessibleRelationSet.toArray,Returns the current relation set as an array ofAccessibleRelation.
javax.accessibility.AccessibleRelationSet.toString,Creates a localized string representing all the relations in the set  using the default locale.
javax.accessibility.AccessibleStateSet.add,Adds a new state to the current state set if it is not already present.
javax.accessibility.AccessibleStateSet.addAll,Adds all of the states to the existing state set.
javax.accessibility.AccessibleStateSet.clear,Removes all the states from the current state set.
javax.accessibility.AccessibleStateSet.contains,Checks if the current state is in the state set.
javax.accessibility.AccessibleStateSet.remove,Removes a state from the current state set.
javax.accessibility.AccessibleStateSet.toArray,Returns the current state set as an array ofAccessibleState.
javax.accessibility.AccessibleStateSet.toString,Creates a localized string representing all the states in the set using  the default locale.
javax.imageio.IIOImage.getMetadata,"Returns a reference to the currentIIOMetadataobject, ornullis none is set."
javax.imageio.IIOImage.getNumThumbnails,Returns the number of thumbnails stored in thisIIOImage.
javax.imageio.IIOImage.getRaster,"Returns the currently setRaster, ornullif only aRenderedImageis  available."
javax.imageio.IIOImage.getRenderedImage,"Returns the currently setRenderedImage, ornullif only aRasteris available."
javax.imageio.IIOImage.getThumbnail,Returns a thumbnail associated with the main image.
javax.imageio.IIOImage.getThumbnails,"Returns the currentListof thumbnailBufferedImages, ornullif none is  set."
javax.imageio.IIOImage.hasRaster,Returnstrueif thisIIOImagestores  aRasterrather than aRenderedImage.
javax.imageio.IIOImage.setMetadata,"Sets theIIOMetadatato a new object, ornull."
javax.imageio.IIOImage.setRaster,Sets the currentRaster.
javax.imageio.IIOImage.setRenderedImage,Sets the currentRenderedImage.
javax.imageio.IIOImage.setThumbnails,"Sets the list of thumbnails to a newListofBufferedImages, or tonull."
javax.imageio.IIOParam.activateController,Activates the installedIIOParamControllerfor  thisIIOParamobject and returns the resulting  value.
javax.imageio.IIOParam.getController,Returns whateverIIOParamControlleris currently  installed.
javax.imageio.IIOParam.getDefaultController,"Returns the defaultIIOParamController, if there  is one, regardless of the currently installed controller."
javax.imageio.IIOParam.getDestinationOffset,Returns the offset in the destination image at which pixels are  to be placed.
javax.imageio.IIOParam.getDestinationType,"Returns the type of image to be returned by the read, if one  was set by a call tosetDestination(ImageTypeSpecifier), as anImageTypeSpecifier."
javax.imageio.IIOParam.getSourceBands,Returns the set of source bands to be used.
javax.imageio.IIOParam.getSourceRegion,Returns the source region to be used.
javax.imageio.IIOParam.getSourceXSubsampling,Returns the number of source columns to advance for each pixel.
javax.imageio.IIOParam.getSourceYSubsampling,Returns the number of rows to advance for each pixel.
javax.imageio.IIOParam.getSubsamplingXOffset,Returns the horizontal offset of the subsampling grid.
javax.imageio.IIOParam.getSubsamplingYOffset,Returns the vertical offset of the subsampling grid.
javax.imageio.IIOParam.hasController,Returnstrueif there is a controller installed  for thisIIOParamobject.
javax.imageio.IIOParam.setController,"Sets theIIOParamControllerto be used  to provide settings for thisIIOParamobject when theactivateControllermethod  is called, overriding any default controller."
javax.imageio.IIOParam.setDestinationOffset,"Specifies the offset in the destination image at which future  decoded pixels are to be placed, when reading, or where a  region will be written, when writing."
javax.imageio.IIOParam.setDestinationType,"Sets the desired image type for the destination image, using anImageTypeSpecifier."
javax.imageio.IIOParam.setSourceBands,Sets the indices of the source bands to be used.
javax.imageio.IIOParam.setSourceRegion,Sets the source region of interest.
javax.imageio.IIOParam.setSourceSubsampling,Specifies a decimation subsampling to apply on I/O.
javax.imageio.ImageIO.createImageInputStream,Returns anImageInputStreamthat will take its  input from the givenObject.
javax.imageio.ImageIO.createImageOutputStream,Returns anImageOutputStreamthat will send its  output to the givenObject.
javax.imageio.ImageIO.getCacheDirectory,"Returns the current value set bysetCacheDirectory, ornullif no  explicit setting has been made."
javax.imageio.ImageIO.getImageReader,"Returns anImageReadercorresponding to the givenImageWriter, if there is one, ornullif the plug-in for thisImageWriterdoes not  specify a correspondingImageReader, or if the  givenImageWriteris not registered."
javax.imageio.ImageIO.getImageReaders,"Returns anIteratorcontaining all currently  registeredImageReaders that claim to be able to  decode the suppliedObject, typically anImageInputStream."
javax.imageio.ImageIO.getImageReadersByFormatName,Returns anIteratorcontaining all currently  registeredImageReaders that claim to be able to  decode the named format.
javax.imageio.ImageIO.getImageReadersByMIMEType,Returns anIteratorcontaining all currently  registeredImageReaders that claim to be able to  decode files with the given MIME type.
javax.imageio.ImageIO.getImageReadersBySuffix,Returns anIteratorcontaining all currently  registeredImageReaders that claim to be able to  decode files with the given suffix.
javax.imageio.ImageIO.getImageTranscoders,Returns anIteratorcontaining all currently  registeredImageTranscoders that claim to be  able to transcode between the metadata of the givenImageReaderandImageWriter.
javax.imageio.ImageIO.getImageWriter,"Returns anImageWritercorresponding to the givenImageReader, if there is one, ornullif the plug-in for thisImageReaderdoes not  specify a correspondingImageWriter, or if the  givenImageReaderis not registered."
javax.imageio.ImageIO.getImageWriters,Returns anIteratorcontaining all currently  registeredImageWriters that claim to be able to  encode images of the given layout (specified using anImageTypeSpecifier) in the given format.
javax.imageio.ImageIO.getImageWritersByFormatName,Returns anIteratorcontaining all currently  registeredImageWriters that claim to be able to  encode the named format.
javax.imageio.ImageIO.getImageWritersByMIMEType,Returns anIteratorcontaining all currently  registeredImageWriters that claim to be able to  encode files with the given MIME type.
javax.imageio.ImageIO.getImageWritersBySuffix,Returns anIteratorcontaining all currently  registeredImageWriters that claim to be able to  encode files with the given suffix.
javax.imageio.ImageIO.getReaderFileSuffixes,Returns an array ofStrings listing all of the  file suffixes associated with the formats understood  by the current set of registered readers.
javax.imageio.ImageIO.getReaderFormatNames,Returns an array ofStrings listing all of the  informal format names understood by the current set of registered  readers.
javax.imageio.ImageIO.getReaderMIMETypes,Returns an array ofStrings listing all of the  MIME types understood by the current set of registered  readers.
javax.imageio.ImageIO.getUseCache,"Returns the current value set bysetUseCache, ortrueif no explicit setting has been made."
javax.imageio.ImageIO.getWriterFileSuffixes,Returns an array ofStrings listing all of the  file suffixes associated with the formats understood  by the current set of registered writers.
javax.imageio.ImageIO.getWriterFormatNames,Returns an array ofStrings listing all of the  informal format names understood by the current set of registered  writers.
javax.imageio.ImageIO.getWriterMIMETypes,Returns an array ofStrings listing all of the  MIME types understood by the current set of registered  writers.
javax.imageio.ImageIO.read,Returns aBufferedImageas the result of decoding  a suppliedFilewith anImageReaderchosen automatically from among those currently registered.
javax.imageio.ImageIO.read,Returns aBufferedImageas the result of decoding  a suppliedInputStreamwith anImageReaderchosen automatically from among those currently registered.
javax.imageio.ImageIO.read,Returns aBufferedImageas the result of decoding  a suppliedURLwith anImageReaderchosen automatically from among those currently registered.
javax.imageio.ImageIO.read,Returns aBufferedImageas the result of decoding  a suppliedImageInputStreamwith anImageReaderchosen automatically from among those  currently registered.
javax.imageio.ImageIO.scanForPlugins,"Scans for plug-ins on the application class path,  loads their service provider classes, and registers a service  provider instance for each one found with theIIORegistry."
javax.imageio.ImageIO.setCacheDirectory,Sets the directory where cache files are to be created.
javax.imageio.ImageIO.setUseCache,Sets a flag indicating whether a disk-based cache file should  be used when creatingImageInputStreams andImageOutputStreams.
javax.imageio.ImageIO.write,Writes an image using an arbitraryImageWriterthat supports the given format to aFile.
javax.imageio.ImageIO.write,Writes an image using an arbitraryImageWriterthat supports the given format to anOutputStream.
javax.imageio.ImageIO.write,Writes an image using the an arbitraryImageWriterthat supports the given format to anImageOutputStream.
javax.imageio.ImageReader.abort,Requests that any current read operation be aborted.
javax.imageio.ImageReader.abortRequested,Returnstrueif a request to abort the current  read operation has been made since the reader was instantiated orclearAbortRequestwas called.
javax.imageio.ImageReader.addIIOReadProgressListener,Adds anIIOReadProgressListenerto the list of  registered progress listeners.
javax.imageio.ImageReader.addIIOReadUpdateListener,Adds anIIOReadUpdateListenerto the list of  registered update listeners.
javax.imageio.ImageReader.addIIOReadWarningListener,Adds anIIOReadWarningListenerto the list of  registered warning listeners.
javax.imageio.ImageReader.canReadRaster,Returnstrueif this plug-in supports reading  just aRasterof pixel data.
javax.imageio.ImageReader.checkReadParamBandSettings,A utility method that may be used by readers to test the  validity of the source and destination band settings of anImageReadParam.
javax.imageio.ImageReader.clearAbortRequest,Clears any previous abort request.
javax.imageio.ImageReader.computeRegions,"Computes the source region of interest and the destination  region of interest, taking the width and height of the source  image, an optional destination image, and an optionalImageReadParaminto account."
javax.imageio.ImageReader.dispose,Allows any resources held by this object to be released.
javax.imageio.ImageReader.getAspectRatio,"Returns the aspect ratio of the given image (that is, its width  divided by its height) as afloat."
javax.imageio.ImageReader.getAvailableLocales,Returns an array ofLocales that may be used to  localize warning listeners and compression settings.
javax.imageio.ImageReader.getDefaultReadParam,Returns a defaultImageReadParamobject  appropriate for this format.
javax.imageio.ImageReader.getDestination,Returns theBufferedImageto which decoded pixel  data should be written.
javax.imageio.ImageReader.getFormatName,Returns aStringidentifying the format of the  input source.
javax.imageio.ImageReader.getHeight,Returns the height in pixels of the given image within the  input source.
javax.imageio.ImageReader.getImageMetadata,"Returns anIIOMetadataobject containing metadata  associated with the given image, ornullif the  reader does not support reading metadata, is set to ignore  metadata, or if no metadata is available."
javax.imageio.ImageReader.getImageMetadata,"Returns anIIOMetadataobject representing the  metadata associated with the given image, ornullif the reader does not support reading metadata or none  is available."
javax.imageio.ImageReader.getImageTypes,"Returns anIteratorcontaining possible image  types to which the given image may be decoded, in the form ofImageTypeSpecifierss."
javax.imageio.ImageReader.getInput,Returns theImageInputStreamor otherObjectpreviously set as the input source.
javax.imageio.ImageReader.getLocale,"Returns the currently setLocale, ornullif none has been set."
javax.imageio.ImageReader.getMinIndex,"Returns the lowest valid index for reading an image, thumbnail,  or image metadata."
javax.imageio.ImageReader.getNumImages,"Returns the number of images, not including thumbnails, available  from the current input source."
javax.imageio.ImageReader.getNumThumbnails,Returns the number of thumbnail preview images associated with  the given image.
javax.imageio.ImageReader.getOriginatingProvider,Returns theImageReaderSpithat was passed in on  the constructor.
javax.imageio.ImageReader.getRawImageType,"Returns anImageTypeSpecifierindicating theSampleModelandColorModelwhich most  closely represents the ""raw"" internal format of the image."
javax.imageio.ImageReader.getSourceRegion,"A utility method that may be used by readers to compute the  region of the source image that should be read, taking into  account any source region and subsampling offset settings in  the suppliedImageReadParam."
javax.imageio.ImageReader.getStreamMetadata,"Returns anIIOMetadataobject representing the  metadata associated with the input source as a whole (i.e., not  associated with any particular image), ornullif  the reader does not support reading metadata, is set to ignore  metadata, or if no metadata is available."
javax.imageio.ImageReader.getStreamMetadata,"Returns anIIOMetadataobject representing the  metadata associated with the input source as a whole (i.e.,  not associated with any particular image)."
javax.imageio.ImageReader.getThumbnailHeight,"Returns the height of the thumbnail preview image indexed bythumbnailIndex, associated with the image indexed  byImageIndex."
javax.imageio.ImageReader.getThumbnailWidth,"Returns the width of the thumbnail preview image indexed bythumbnailIndex, associated with the image indexed  byImageIndex."
javax.imageio.ImageReader.getTileGridXOffset,"Returns the X coordinate of the upper-left corner of tile (0,  0) in the given image."
javax.imageio.ImageReader.getTileGridYOffset,"Returns the Y coordinate of the upper-left corner of tile (0,  0) in the given image."
javax.imageio.ImageReader.getTileHeight,Returns the height of a tile in the given image.
javax.imageio.ImageReader.getTileWidth,Returns the width of a tile in the given image.
javax.imageio.ImageReader.getWidth,Returns the width in pixels of the given image within the input  source.
javax.imageio.ImageReader.hasThumbnails,Returnstrueif the given image has thumbnail  preview images associated with it.
javax.imageio.ImageReader.isIgnoringMetadata,Returnstrueif the current input source has been  marked as allowing metadata to be ignored by passingtrueas theignoreMetadataargument  to thesetInputmethod.
javax.imageio.ImageReader.isImageTiled,"Returnstrueif the image is organized intotiles, that is, equal-sized non-overlapping rectangles."
javax.imageio.ImageReader.isRandomAccessEasy,Returnstrueif the storage format of the given  image places no inherent impediment on random access to pixels.
javax.imageio.ImageReader.isSeekForwardOnly,Returnstrueif the current input source has been  marked as seek forward only by passingtrueas theseekForwardOnlyargument to thesetInputmethod.
javax.imageio.ImageReader.processImageComplete,Broadcasts the completion of an image read to all registeredIIOReadProgressListeners by calling theirimageCompletemethod.
javax.imageio.ImageReader.processImageProgress,Broadcasts the current percentage of image completion to all  registeredIIOReadProgressListeners by calling  theirimageProgressmethod.
javax.imageio.ImageReader.processImageStarted,Broadcasts the start of an image read to all registeredIIOReadProgressListeners by calling theirimageStartedmethod.
javax.imageio.ImageReader.processImageUpdate,Broadcasts the update of a set of samples to all registeredIIOReadUpdateListeners by calling theirimageUpdatemethod.
javax.imageio.ImageReader.processPassComplete,Broadcasts the end of a progressive pass to all  registeredIIOReadUpdateListeners by calling theirpassCompletemethod.
javax.imageio.ImageReader.processPassStarted,Broadcasts the beginning of a progressive pass to all  registeredIIOReadUpdateListeners by calling theirpassStartedmethod.
javax.imageio.ImageReader.processReadAborted,Broadcasts that the read has been aborted to all registeredIIOReadProgressListeners by calling theirreadAbortedmethod.
javax.imageio.ImageReader.processSequenceComplete,Broadcasts the completion of an sequence of image reads to all  registeredIIOReadProgressListeners by calling  theirsequenceCompletemethod.
javax.imageio.ImageReader.processSequenceStarted,Broadcasts the start of an sequence of image reads to all  registeredIIOReadProgressListeners by calling  theirsequenceStartedmethod.
javax.imageio.ImageReader.processThumbnailComplete,Broadcasts the completion of a thumbnail read to all registeredIIOReadProgressListeners by calling theirthumbnailCompletemethod.
javax.imageio.ImageReader.processThumbnailPassComplete,Broadcasts the end of a thumbnail progressive pass to all  registeredIIOReadUpdateListeners by calling theirthumbnailPassCompletemethod.
javax.imageio.ImageReader.processThumbnailPassStarted,Broadcasts the beginning of a thumbnail progressive pass to all  registeredIIOReadUpdateListeners by calling theirthumbnailPassStartedmethod.
javax.imageio.ImageReader.processThumbnailProgress,Broadcasts the current percentage of thumbnail completion to  all registeredIIOReadProgressListeners by calling  theirthumbnailProgressmethod.
javax.imageio.ImageReader.processThumbnailStarted,Broadcasts the start of a thumbnail read to all registeredIIOReadProgressListeners by calling theirthumbnailStartedmethod.
javax.imageio.ImageReader.processThumbnailUpdate,Broadcasts the update of a set of samples in a thumbnail image  to all registeredIIOReadUpdateListeners by  calling theirthumbnailUpdatemethod.
javax.imageio.ImageReader.processWarningOccurred,Broadcasts a warning message to all registeredIIOReadWarningListeners by calling theirwarningOccurredmethod.
javax.imageio.ImageReader.processWarningOccurred,Broadcasts a localized warning message to all registeredIIOReadWarningListeners by calling theirwarningOccurredmethod with a string taken  from aResourceBundle.
javax.imageio.ImageReader.read,"Reads the image indexed byimageIndexand returns  it as a completeBufferedImage, using a defaultImageReadParam."
javax.imageio.ImageReader.read,"Reads the image indexed byimageIndexand returns  it as a completeBufferedImage, using a suppliedImageReadParam."
javax.imageio.ImageReader.readAll,"Reads the image indexed byimageIndexand returns  anIIOImagecontaining the image, thumbnails, and  associated image metadata, using a suppliedImageReadParam."
javax.imageio.ImageReader.readAll,"Returns anIteratorcontaining all the images,  thumbnails, and metadata, starting at the index given bygetMinIndex, from the input source in the form ofIIOImageobjects."
javax.imageio.ImageReader.readAsRenderedImage,Returns aRenderedImageobject that contains the  contents of the image indexed byimageIndex.
javax.imageio.ImageReader.readerSupportsThumbnails,Returnstrueif the image format understood by  this reader supports thumbnail preview images associated with  it.
javax.imageio.ImageReader.readRaster,"Returns a newRasterobject containing the raw pixel data  from the image stream, without any color conversion applied."
javax.imageio.ImageReader.readThumbnail,"Returns the thumbnail preview image indexed bythumbnailIndex, associated with the image indexed  byImageIndexas aBufferedImage."
javax.imageio.ImageReader.readTile,"Reads the tile indicated by thetileXandtileYarguments, returning it as aBufferedImage."
javax.imageio.ImageReader.readTileRaster,"Returns a newRasterobject containing the raw  pixel data from the tile, without any color conversion applied."
javax.imageio.ImageReader.removeAllIIOReadProgressListeners,Removes all currently registeredIIOReadProgressListenerobjects.
javax.imageio.ImageReader.removeAllIIOReadUpdateListeners,Removes all currently registeredIIOReadUpdateListenerobjects.
javax.imageio.ImageReader.removeAllIIOReadWarningListeners,Removes all currently registeredIIOReadWarningListenerobjects.
javax.imageio.ImageReader.removeIIOReadProgressListener,Removes anIIOReadProgressListenerfrom the list  of registered progress listeners.
javax.imageio.ImageReader.removeIIOReadUpdateListener,Removes anIIOReadUpdateListenerfrom the list of  registered update listeners.
javax.imageio.ImageReader.removeIIOReadWarningListener,Removes anIIOReadWarningListenerfrom the list of  registered error listeners.
javax.imageio.ImageReader.reset,Restores theImageReaderto its initial state.
javax.imageio.ImageReader.setInput,Sets the input source to use to the givenImageInputStreamor otherObject.
javax.imageio.ImageReader.setLocale,Sets the currentLocaleof thisImageReaderto the given value.
javax.imageio.ImageReadParam.canSetSourceRenderSize,"Returnstrueif this reader allows the source  image to be rendered at an arbitrary size as part of the  decoding process, by means of thesetSourceRenderSizemethod."
javax.imageio.ImageReadParam.getDestination,"Returns theBufferedImagecurrently set by thesetDestinationmethod, ornullif none is set."
javax.imageio.ImageReadParam.getDestinationBands,Returns the set of band indices where data will be placed.
javax.imageio.ImageReadParam.getSourceMaxProgressivePass,"IfgetSourceNumProgressivePassesis equal toInteger.MAX_VALUE, returnsInteger.MAX_VALUE."
javax.imageio.ImageReadParam.getSourceMinProgressivePass,Returns the index of the first progressive pass that will be  decoded.
javax.imageio.ImageReadParam.getSourceNumProgressivePasses,Returns the number of the progressive passes that will be  decoded.
javax.imageio.ImageReadParam.getSourceRenderSize,"Returns the width and height of the source image as it  will be rendered during decoding, if they have been set via thesetSourceRenderSizemethod."
javax.imageio.ImageReadParam.setDestination,Supplies aBufferedImageto be used as the  destination for decoded pixel data.
javax.imageio.ImageReadParam.setDestinationBands,Sets the indices of the destination bands where data  will be placed.
javax.imageio.ImageReadParam.setSourceProgressivePasses,Sets the range of progressive passes that will be decoded.
javax.imageio.ImageReadParam.setSourceRenderSize,"If the image is able to be rendered at an arbitrary size, sets  the source width and height to the supplied values."
javax.imageio.ImageTypeSpecifier.createBanded,Returns a specifier for a banded image format that will use aComponentColorModeland aBandedSampleModelto store each channel in a  separate array.
javax.imageio.ImageTypeSpecifier.createBufferedImage,Creates aBufferedImagewith a given width and  height according to the specification embodied in this object.
javax.imageio.ImageTypeSpecifier.createFromBufferedImageType,Returns anImageTypeSpecifierthat encodes  one of the standardBufferedImagetypes  (other thanTYPE_CUSTOM).
javax.imageio.ImageTypeSpecifier.createFromRenderedImage,Returns anImageTypeSpecifierthat encodes the  layout of aRenderedImage(which may be aBufferedImage).
javax.imageio.ImageTypeSpecifier.createGrayscale,Returns a specifier for a grayscale image format that will pack  pixels of the given bit depth into array elements of  the specified data type.
javax.imageio.ImageTypeSpecifier.createGrayscale,Returns a specifier for a grayscale plus alpha image format  that will pack pixels of the given bit depth into array  elements of the specified data type.
javax.imageio.ImageTypeSpecifier.createIndexed,Returns a specifier for an indexed-color image format that will pack  index values of the given bit depth into array elements of  the specified data type.
javax.imageio.ImageTypeSpecifier.createInterleaved,"Returns a specifier for an interleaved image format that will  use aComponentColorModeland aPixelInterleavedSampleModelto store each pixel  component in a separate byte, short, or int."
javax.imageio.ImageTypeSpecifier.createPacked,"Returns a specifier for a packed image format that will use aDirectColorModeland a packedSampleModelto store each pixel packed into in a  single byte, short, or int."
javax.imageio.ImageTypeSpecifier.equals,Returnstrueif the givenObjectis  anImageTypeSpecifierand has aSampleModelandColorModelthat are  equal to those of this object.
javax.imageio.ImageTypeSpecifier.getBitsPerBand,Return the number of bits used to represent samples of the given band.
javax.imageio.ImageTypeSpecifier.getBufferedImageType,Returns an int containing one of the enumerated constant values  describing image formats fromBufferedImage.
javax.imageio.ImageTypeSpecifier.getColorModel,Returns theColorModelspecified by this object.
javax.imageio.ImageTypeSpecifier.getNumBands,Return the number of bands  specified by this object.
javax.imageio.ImageTypeSpecifier.getNumComponents,Return the number of color components  specified by this object.
javax.imageio.ImageTypeSpecifier.getSampleModel,Returns aSampleModelbased on the settings  encapsulated within this object.
javax.imageio.ImageTypeSpecifier.hashCode,Returns the hash code for this ImageTypeSpecifier.
javax.imageio.ImageWriteParam.canOffsetTiles,Returnstrueif the writer can perform tiling with  non-zero grid offsets while writing.
javax.imageio.ImageWriteParam.canWriteCompressed,Returnstrueif this writer supports compression.
javax.imageio.ImageWriteParam.canWriteProgressive,Returnstrueif the writer can write out images  as a series of passes of progressively increasing quality.
javax.imageio.ImageWriteParam.canWriteTiles,Returnstrueif the writer can perform tiling  while writing.
javax.imageio.ImageWriteParam.getBitRate,Returns afloatindicating an estimate of the  number of bits of output data for each bit of input image data  at the given quality level.
javax.imageio.ImageWriteParam.getCompressionMode,"Returns the current compression mode, if compression is  supported."
javax.imageio.ImageWriteParam.getCompressionQuality,Returns the current compression quality setting.
javax.imageio.ImageWriteParam.getCompressionQualityDescriptions,Returns an array ofStrings that may be used along  withgetCompressionQualityValuesas part of a user  interface for setting or displaying the compression quality  level.
javax.imageio.ImageWriteParam.getCompressionQualityValues,Returns an array offloats that may be used along  withgetCompressionQualityDescriptionsas part of a user  interface for setting or displaying the compression quality  level.
javax.imageio.ImageWriteParam.getCompressionType,"Returns the currently set compression type, ornullif none has been set."
javax.imageio.ImageWriteParam.getCompressionTypes,"Returns a list of available compression types, as an array orStrings, ornullif a compression  type may not be chosen using these interfaces."
javax.imageio.ImageWriteParam.getLocale,"Returns the currently setLocale, ornullif only a defaultLocaleis  supported."
javax.imageio.ImageWriteParam.getLocalizedCompressionTypeName,"Returns a localized version of the name of the current  compression type, using theLocalereturned bygetLocale."
javax.imageio.ImageWriteParam.getPreferredTileSizes,Returns an array ofDimensions indicating the  legal size ranges for tiles as they will be encoded in the  output file or stream.
javax.imageio.ImageWriteParam.getProgressiveMode,Returns the current mode for writing the stream in a  progressive manner.
javax.imageio.ImageWriteParam.getTileGridXOffset,Returns the horizontal tile grid offset of an image as it will  be written to the output stream.
javax.imageio.ImageWriteParam.getTileGridYOffset,Returns the vertical tile grid offset of an image as it will  be written to the output stream.
javax.imageio.ImageWriteParam.getTileHeight,Returns the height of each tile in an image as it will be written to  the output stream.
javax.imageio.ImageWriteParam.getTileWidth,Returns the width of each tile in an image as it will be  written to the output stream.
javax.imageio.ImageWriteParam.getTilingMode,"Returns the current tiling mode, if tiling is supported."
javax.imageio.ImageWriteParam.isCompressionLossless,Returnstrueif the current compression type  provides lossless compression.
javax.imageio.ImageWriteParam.setCompressionMode,"Specifies whether compression is to be performed, and if so how  compression parameters are to be determined."
javax.imageio.ImageWriteParam.setCompressionQuality,Sets the compression quality to a value between0and1.
javax.imageio.ImageWriteParam.setCompressionType,Sets the compression type to one of the values indicated bygetCompressionTypes.
javax.imageio.ImageWriteParam.setProgressiveMode,Specifies that the writer is to write the image out in a  progressive mode such that the stream will contain a series of  scans of increasing quality.
javax.imageio.ImageWriteParam.setTiling,Specifies that the image should be tiled in the output stream.
javax.imageio.ImageWriteParam.setTilingMode,"Determines whether the image will be tiled in the output  stream and, if it will, how the tiling parameters will be  determined."
javax.imageio.ImageWriteParam.unsetCompression,Removes any previous compression type and quality settings.
javax.imageio.ImageWriteParam.unsetTiling,Removes any previous tile grid parameters specified by calls tosetTiling.
javax.imageio.ImageWriter.abort,Requests that any current write operation be aborted.
javax.imageio.ImageWriter.abortRequested,Returnstrueif a request to abort the current  write operation has been made since the writer was instantiated orclearAbortRequestwas called.
javax.imageio.ImageWriter.addIIOWriteProgressListener,Adds anIIOWriteProgressListenerto the list of  registered progress listeners.
javax.imageio.ImageWriter.addIIOWriteWarningListener,Adds anIIOWriteWarningListenerto the list of  registered warning listeners.
javax.imageio.ImageWriter.canInsertEmpty,"Returnstrueif the writer supports the insertion  of a new, empty image at the given index."
javax.imageio.ImageWriter.canInsertImage,Returnstrueif the writer supports the insertion  of a new image at the given index.
javax.imageio.ImageWriter.canRemoveImage,Returnstrueif the writer supports the removal  of an existing image at the given index.
javax.imageio.ImageWriter.canReplaceImageMetadata,Returnstrueif it is possible to replace the  image metadata associated with an existing image with indeximageIndex.
javax.imageio.ImageWriter.canReplacePixels,Returnstrueif the writer allows pixels of the  given image to be replaced using thereplacePixelsmethods.
javax.imageio.ImageWriter.canReplaceStreamMetadata,Returnstrueif it is possible to replace the  stream metadata already present in the output.
javax.imageio.ImageWriter.canWriteEmpty,Returnstrueif the writer supports the writing of  a complete image stream consisting of a single image with  undefined pixel values and associated metadata and thumbnails  to the output.
javax.imageio.ImageWriter.canWriteRasters,Returnstrueif the methods that take anIIOImageparameter are capable of dealing with aRaster(as opposed toRenderedImage)  source image.
javax.imageio.ImageWriter.canWriteSequence,Returnstrueif the writer is able to append an  image to an image stream that already contains header  information and possibly prior images.
javax.imageio.ImageWriter.endInsertEmpty,Completes the insertion of a new image that was begun with a  prior call toprepareInsertEmpty.
javax.imageio.ImageWriter.endReplacePixels,Terminates a sequence of calls toreplacePixels.
javax.imageio.ImageWriter.endWriteEmpty,Completes the writing of a new image that was begun with a  prior call toprepareWriteEmpty.
javax.imageio.ImageWriter.endWriteSequence,Completes the writing of a sequence of images begun withprepareWriteSequence.
javax.imageio.ImageWriter.getDefaultImageMetadata,Returns anIIOMetadataobject containing default  values for encoding an image of the given type.
javax.imageio.ImageWriter.getDefaultStreamMetadata,Returns anIIOMetadataobject containing default  values for encoding a stream of images.
javax.imageio.ImageWriter.getDefaultWriteParam,"Returns a newImageWriteParamobject of the  appropriate type for this file format containing default  values, that is, those values that would be used  if noImageWriteParamobject were specified."
javax.imageio.ImageWriter.getNumThumbnailsSupported,"Returns the number of thumbnails supported by the format being  written, given the image type and any additional write  parameters and metadata objects that will be used during  encoding."
javax.imageio.ImageWriter.getOriginatingProvider,"Returns theImageWriterSpiobject that created  thisImageWriter, ornullif this  object was not created through theIIORegistry."
javax.imageio.ImageWriter.getOutput,Returns theImageOutputStreamor otherObjectset by the most recent call to thesetOutputmethod.
javax.imageio.ImageWriter.getPreferredThumbnailSizes,Returns an array ofDimensions indicating the  legal size ranges for thumbnail images as they will be encoded  in the output file or stream.
javax.imageio.ImageWriter.prepareInsertEmpty,Begins the insertion of a new image with undefined pixel values  into an existing image stream.
javax.imageio.ImageWriter.prepareReplacePixels,Prepares the writer to handle a series of calls to thereplacePixelsmethods.
javax.imageio.ImageWriter.prepareWriteEmpty,"Begins the writing of a complete image stream, consisting of a  single image with undefined pixel values and associated  metadata and thumbnails, to the output."
javax.imageio.ImageWriter.prepareWriteSequence,"Prepares a stream to accept a series of subsequentwriteToSequencecalls, using the provided stream  metadata object."
javax.imageio.ImageWriter.processImageComplete,Broadcasts the completion of an image write to all registeredIIOWriteProgressListeners by calling theirimageCompletemethod.
javax.imageio.ImageWriter.processImageProgress,Broadcasts the current percentage of image completion to all  registeredIIOWriteProgressListeners by calling  theirimageProgressmethod.
javax.imageio.ImageWriter.processImageStarted,Broadcasts the start of an image write to all registeredIIOWriteProgressListeners by calling theirimageStartedmethod.
javax.imageio.ImageWriter.processThumbnailComplete,Broadcasts the completion of a thumbnail write to all registeredIIOWriteProgressListeners by calling theirthumbnailCompletemethod.
javax.imageio.ImageWriter.processThumbnailProgress,Broadcasts the current percentage of thumbnail completion to  all registeredIIOWriteProgressListeners by calling  theirthumbnailProgressmethod.
javax.imageio.ImageWriter.processThumbnailStarted,Broadcasts the start of a thumbnail write to all registeredIIOWriteProgressListeners by calling theirthumbnailStartedmethod.
javax.imageio.ImageWriter.processWarningOccurred,Broadcasts a warning message to all registeredIIOWriteWarningListeners by calling theirwarningOccurredmethod.
javax.imageio.ImageWriter.processWarningOccurred,Broadcasts a localized warning message to all registeredIIOWriteWarningListeners by calling theirwarningOccurredmethod with a string taken  from aResourceBundle.
javax.imageio.ImageWriter.processWriteAborted,Broadcasts that the write has been aborted to all registeredIIOWriteProgressListeners by calling theirwriteAbortedmethod.
javax.imageio.ImageWriter.removeAllIIOWriteProgressListeners,Removes all currently registeredIIOWriteProgressListenerobjects.
javax.imageio.ImageWriter.removeAllIIOWriteWarningListeners,Removes all currently registeredIIOWriteWarningListenerobjects.
javax.imageio.ImageWriter.removeIIOWriteProgressListener,Removes anIIOWriteProgressListenerfrom the list  of registered progress listeners.
javax.imageio.ImageWriter.removeIIOWriteWarningListener,Removes anIIOWriteWarningListenerfrom the list  of registered warning listeners.
javax.imageio.ImageWriter.removeImage,Removes an image from the stream.
javax.imageio.ImageWriter.replaceImageMetadata,Replaces the image metadata associated with an existing image.
javax.imageio.ImageWriter.replacePixels,Replaces a portion of an image already present in the output  with a portion of the givenRaster.
javax.imageio.ImageWriter.replacePixels,Replaces a portion of an image already present in the output  with a portion of the given image.
javax.imageio.ImageWriter.replaceStreamMetadata,Replaces the stream metadata in the output with new  information.
javax.imageio.ImageWriter.reset,Restores theImageWriterto its initial state.
javax.imageio.ImageWriter.setLocale,Sets the currentLocaleof thisImageWriterto the given value.
javax.imageio.ImageWriter.setOutput,Sets the destination to the givenImageOutputStreamor otherObject.
javax.imageio.ImageWriter.write,Appends a complete image stream consisting of a single image  with default metadata and thumbnails to the output.
javax.imageio.ImageWriter.write,Appends a complete image stream containing a single image with  default metadata and thumbnails to the output.
javax.imageio.ImageWriter.write,Appends a complete image stream containing a single image and  associated stream and image metadata and thumbnails to the  output.
javax.imageio.ImageWriter.writeInsert,Inserts a new image into an existing image stream.
javax.imageio.ImageWriter.writeToSequence,"Appends a single image and possibly associated metadata and  thumbnails, to the output."
javax.imageio.metadata.IIOInvalidTreeException.getOffendingNode,Returns theNodethat caused the error in parsing.
javax.imageio.metadata.IIOMetadata.activateController,Activates the installedIIOMetadataControllerfor  thisIIOMetadataobject and returns the resulting  value.
javax.imageio.metadata.IIOMetadata.getAsTree,Returns an XML DOMNodeobject that represents the  root of a tree of metadata contained within this object  according to the conventions defined by a given metadata  format.
javax.imageio.metadata.IIOMetadata.getController,Returns whateverIIOMetadataControlleris currently  installed.
javax.imageio.metadata.IIOMetadata.getDefaultController,"Returns the defaultIIOMetadataController, if there  is one, regardless of the currently installed controller."
javax.imageio.metadata.IIOMetadata.getExtraMetadataFormatNames,"Returns an array ofStrings containing the names  of additional metadata formats, other than the native and standard  formats, recognized by this plug-in'sgetAsTree,setFromTree, andmergeTreemethods."
javax.imageio.metadata.IIOMetadata.getMetadataFormat,"Returns anIIOMetadataFormatobject describing the  given metadata format, ornullif no description  is available."
javax.imageio.metadata.IIOMetadata.getMetadataFormatNames,"Returns an array ofStrings containing the names  of all metadata formats, including the native and standard  formats, recognized by this plug-in'sgetAsTree,setFromTree, andmergeTreemethods."
javax.imageio.metadata.IIOMetadata.getNativeMetadataFormatName,"Returns the name of the ""native"" metadata format for this  plug-in, which typically allows for lossless encoding and  transmission of the metadata stored in the format handled by  this plug-in."
javax.imageio.metadata.IIOMetadata.getStandardChromaNode,"Returns anIIOMetadataNoderepresenting the chroma  information of the standardjavax_imageio_1.0metadata format, ornullif no such information is  available."
javax.imageio.metadata.IIOMetadata.getStandardCompressionNode,"Returns anIIOMetadataNoderepresenting the  compression information of the standardjavax_imageio_1.0metadata format, ornullif no such information is available."
javax.imageio.metadata.IIOMetadata.getStandardDataNode,"Returns anIIOMetadataNoderepresenting the data  format information of the standardjavax_imageio_1.0metadata format, ornullif no such information is available."
javax.imageio.metadata.IIOMetadata.getStandardDimensionNode,"Returns anIIOMetadataNoderepresenting the  dimension information of the standardjavax_imageio_1.0metadata format, ornullif no such information is available."
javax.imageio.metadata.IIOMetadata.getStandardDocumentNode,"Returns anIIOMetadataNoderepresenting the document  information of the standardjavax_imageio_1.0metadata format, ornullif no such information is  available."
javax.imageio.metadata.IIOMetadata.getStandardTextNode,"Returns anIIOMetadataNoderepresenting the textual  information of the standardjavax_imageio_1.0metadata format, ornullif no such information is  available."
javax.imageio.metadata.IIOMetadata.getStandardTileNode,"Returns anIIOMetadataNoderepresenting the tiling  information of the standardjavax_imageio_1.0metadata format, ornullif no such information is  available."
javax.imageio.metadata.IIOMetadata.getStandardTransparencyNode,"Returns anIIOMetadataNoderepresenting the  transparency information of the standardjavax_imageio_1.0metadata format, ornullif no such information is available."
javax.imageio.metadata.IIOMetadata.getStandardTree,A utility method to return a tree ofIIOMetadataNodes representing the metadata  contained within this object according to the conventions of  the standardjavax_imageio_1.0metadata format.
javax.imageio.metadata.IIOMetadata.hasController,Returnstrueif there is a controller installed  for thisIIOMetadataobject.
javax.imageio.metadata.IIOMetadata.isReadOnly,"Returnstrueif this object does not support themergeTree,setFromTree, andresetmethods."
javax.imageio.metadata.IIOMetadata.isStandardMetadataFormatSupported,"Returnstrueif the standard metadata format is  supported bygetMetadataFormat,getAsTree,setFromTree, andmergeTree."
javax.imageio.metadata.IIOMetadata.mergeTree,Alters the internal state of thisIIOMetadataobject from a tree of XML DOMNodes whose syntax  is defined by the given metadata format.
javax.imageio.metadata.IIOMetadata.reset,"Resets all the data stored in this object to default values,  usually to the state this object was in immediately after  construction, though the precise semantics are plug-in specific."
javax.imageio.metadata.IIOMetadata.setController,"Sets theIIOMetadataControllerto be used  to provide settings for thisIIOMetadataobject when theactivateControllermethod  is called, overriding any default controller."
javax.imageio.metadata.IIOMetadata.setFromTree,Sets the internal state of thisIIOMetadataobject  from a tree of XML DOMNodes whose syntax is  defined by the given metadata format.
javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute,Adds a new attribute to a previously defined element that will  be defined by a list of values.
javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute,Adds a new attribute to a previously defined element that may  be set to an arbitrary value.
javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute,Adds a new attribute to a previously defined element that will  be defined by a range of values.
javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute,Adds a new attribute to a previously defined element that will  be defined by a set of enumerated values.
javax.imageio.metadata.IIOMetadataFormatImpl.addBooleanAttribute,"Adds a new attribute to a previously defined element that will  be defined by the enumerated valuesTRUEandFALSE, with a datatype ofDATATYPE_BOOLEAN."
javax.imageio.metadata.IIOMetadataFormatImpl.addChildElement,Adds an existing element to the list of legal children for a  given parent node type.
javax.imageio.metadata.IIOMetadataFormatImpl.addElement,Adds a new element type to this metadata document format with a  child policy other thanCHILD_POLICY_REPEAT.
javax.imageio.metadata.IIOMetadataFormatImpl.addElement,Adds a new element type to this metadata document format with a  child policy ofCHILD_POLICY_REPEAT.
javax.imageio.metadata.IIOMetadataFormatImpl.addObjectValue,Allows anObjectreference of a given class type  to be stored in nodes implementing the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeDataType,"Returns one of the constants starting withDATATYPE_, indicating the format and  interpretation of the value of the given attribute within the  named element."
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeDefaultValue,"Returns the default value of the named attribute, if it is not  explicitly present within the named element, as aString, ornullif no default value  is available."
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeDescription,"Returns aStringcontaining a description of the  named attribute, ornull."
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeEnumerations,Returns an array ofStrings containing the legal  enumerated values for the given attribute within the named  element.
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeListMaxLength,Returns the maximum number of list items that may be used to  define this attribute.
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeListMinLength,Returns the minimum number of list items that may be used to  define this attribute.
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeMaxValue,Returns the maximum legal value for the attribute.
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeMinValue,Returns the minimum legal value for the attribute.
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeNames,Returns an array ofStrings listing the names of  the attributes that may be associated with the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeValueType,"Returns one of the constants starting withVALUE_,  indicating whether the values of the given attribute within the  named element are arbitrary, constrained to lie within a  specified range, constrained to be one of a set of enumerated  values, or are a whitespace-separated list of arbitrary values."
javax.imageio.metadata.IIOMetadataFormatImpl.getChildNames,"Returns an array ofStrings indicating the names  of the element which are allowed to be children of the named  element, in the order in which they should appear."
javax.imageio.metadata.IIOMetadataFormatImpl.getChildPolicy,"Returns one of the constants starting withCHILD_POLICY_, indicating the legal pattern of  children for the named element."
javax.imageio.metadata.IIOMetadataFormatImpl.getElementDescription,"Returns aStringcontaining a description of the  named element, ornull."
javax.imageio.metadata.IIOMetadataFormatImpl.getElementMaxChildren,Returns the maximum number of children of the named element  with child policyCHILD_POLICY_REPEAT.
javax.imageio.metadata.IIOMetadataFormatImpl.getElementMinChildren,Returns the minimum number of children of the named element  with child policyCHILD_POLICY_REPEAT.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectArrayMaxLength,Returns the maximum number of array elements that may be used  to define theObjectreference within the named  element.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectArrayMinLength,Returns the minimum number of array elements that may be used  to define theObjectreference within the named  element.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectClass,Returns theClasstype of theObjectreference stored within the element.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectDefaultValue,Returns anObjects containing the default  value for theObjectreference within  the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectEnumerations,Returns an array ofObjects containing the legal  enumerated values for theObjectreference within  the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectMaxValue,Returns the maximum legal value for theObjectreference within the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectMinValue,Returns the minimum legal value for theObjectreference within the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.getObjectValueType,"Returns one of the enumerated values starting withVALUE_, indicating the type of values  (enumeration, range, or array) that are allowed for theObjectreference."
javax.imageio.metadata.IIOMetadataFormatImpl.getResourceBaseName,Returns the currently set base name for locatingResourceBundles.
javax.imageio.metadata.IIOMetadataFormatImpl.getRootName,Returns the name of the root element of the format.
javax.imageio.metadata.IIOMetadataFormatImpl.getStandardFormatInstance,"Returns anIIOMetadataFormatobject describing the  standard, plug-in neutraljavax.imageio_1.0metadata document format described in the comment of thejavax.imageio.metadatapackage."
javax.imageio.metadata.IIOMetadataFormatImpl.isAttributeRequired,Returnstrueif the named attribute must be  present within the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.removeAttribute,Removes an attribute from a previously defined element.
javax.imageio.metadata.IIOMetadataFormatImpl.removeElement,Removes an element from the format.
javax.imageio.metadata.IIOMetadataFormatImpl.removeObjectValue,Disallows anObjectreference from being stored in  nodes implementing the named element.
javax.imageio.metadata.IIOMetadataFormatImpl.setResourceBaseName,Sets a new base name for locatingResourceBundles  containing descriptions of elements and attributes for this  format.
javax.imageio.metadata.IIOMetadataNode.appendChild,Adds the nodenewChildto the end of the list of  children of this node.
javax.imageio.metadata.IIOMetadataNode.cloneNode,Returns a duplicate of this node.
javax.imageio.metadata.IIOMetadataNode.compareDocumentPosition,This DOM Level 3 method is not supported forIIOMetadataNodeand will throw aDOMException.
javax.imageio.metadata.IIOMetadataNode.getAttribute,Retrieves an attribute value by name.
javax.imageio.metadata.IIOMetadataNode.getAttributeNode,Retrieves an attribute node by name.
javax.imageio.metadata.IIOMetadataNode.getAttributeNodeNS,Equivalent togetAttributeNode(localName).
javax.imageio.metadata.IIOMetadataNode.getAttributeNS,Equivalent togetAttribute(localName).
javax.imageio.metadata.IIOMetadataNode.getAttributes,Returns aNamedNodeMapcontaining the attributes of  this node.
javax.imageio.metadata.IIOMetadataNode.getChildNodes,Returns aNodeListthat contains all children of this node.
javax.imageio.metadata.IIOMetadataNode.getElementsByTagName,"Returns aNodeListof all descendantElementswith a given tag name, in document order."
javax.imageio.metadata.IIOMetadataNode.getElementsByTagNameNS,Equivalent togetElementsByTagName(localName).
javax.imageio.metadata.IIOMetadataNode.getFirstChild,"Returns the first child of this node, ornullif  the node has no children."
javax.imageio.metadata.IIOMetadataNode.getLastChild,"Returns the last child of this node, ornullif  the node has no children."
javax.imageio.metadata.IIOMetadataNode.getLength,The number of nodes in the list.
javax.imageio.metadata.IIOMetadataNode.getLocalName,Equivalent togetNodeName.
javax.imageio.metadata.IIOMetadataNode.getNamespaceURI,"Returnsnull, since namespaces are not supported."
javax.imageio.metadata.IIOMetadataNode.getNextSibling,"Returns the next sibling of this node, ornullif  the node has no next sibling."
javax.imageio.metadata.IIOMetadataNode.getNodeName,Returns the node name associated with this node.
javax.imageio.metadata.IIOMetadataNode.getNodeType,"Returns the node type, which is alwaysELEMENT_NODE."
javax.imageio.metadata.IIOMetadataNode.getNodeValue,Returns the value associated with this node.
javax.imageio.metadata.IIOMetadataNode.getOwnerDocument,"Returnsnull, sinceIIOMetadataNodes  do not belong to anyDocument."
javax.imageio.metadata.IIOMetadataNode.getParentNode,Returns the parent of this node.
javax.imageio.metadata.IIOMetadataNode.getPreviousSibling,"Returns the previous sibling of this node, ornullif this node has no previous sibling."
javax.imageio.metadata.IIOMetadataNode.getUserObject,Returns theObjectvalue associated with this node.
javax.imageio.metadata.IIOMetadataNode.hasAttribute,"Returnstruewhen an attribute with a given name is  specified on this element or has a default value,falseotherwise."
javax.imageio.metadata.IIOMetadataNode.hasAttributeNS,Equivalent tohasAttribute(localName).
javax.imageio.metadata.IIOMetadataNode.hasAttributes,Returns whether this node (if it is an element) has any attributes.
javax.imageio.metadata.IIOMetadataNode.hasChildNodes,Returnstrueif this node has child nodes.
javax.imageio.metadata.IIOMetadataNode.insertBefore,Inserts the nodenewChildbefore the existing  child noderefChild.
javax.imageio.metadata.IIOMetadataNode.isSupported,Returnsfalsesince DOM features are not  supported.
javax.imageio.metadata.IIOMetadataNode.item,Returns theindexth item in the collection.
javax.imageio.metadata.IIOMetadataNode.normalize,"Does nothing, sinceIIOMetadataNodes do not  containTextchildren."
javax.imageio.metadata.IIOMetadataNode.removeAttribute,Removes an attribute by name.
javax.imageio.metadata.IIOMetadataNode.removeAttributeNode,Removes the specified attribute node.
javax.imageio.metadata.IIOMetadataNode.removeAttributeNS,Equivalent toremoveAttribute(localName).
javax.imageio.metadata.IIOMetadataNode.removeChild,"Removes the child node indicated byoldChildfrom  the list of children, and returns it."
javax.imageio.metadata.IIOMetadataNode.replaceChild,"Replaces the child nodeoldChildwithnewChildin the list of children, and returns theoldChildnode."
javax.imageio.metadata.IIOMetadataNode.setAttribute,Adds a new attribute.
javax.imageio.metadata.IIOMetadataNode.setAttributeNode,Adds a new attribute node.
javax.imageio.metadata.IIOMetadataNode.setAttributeNodeNS,Equivalent tosetAttributeNode(newAttr).
javax.imageio.metadata.IIOMetadataNode.setAttributeNS,"Equivalent tosetAttribute(qualifiedName, value)."
javax.imageio.metadata.IIOMetadataNode.setNodeValue,Sets theStringvalue associated with this node.
javax.imageio.metadata.IIOMetadataNode.setPrefix,"Does nothing, since namespaces are not supported."
javax.imageio.metadata.IIOMetadataNode.setUserObject,Sets the value associated with this node.
javax.imageio.plugins.bmp.BMPImageWriteParam.isTopDown,Returns the value of thetopDownparameter.
javax.imageio.plugins.bmp.BMPImageWriteParam.setTopDown,"If set, the data will be written out in a top-down manner, the first  scanline being written first."
javax.imageio.plugins.jpeg.JPEGHuffmanTable.getLengths,Returns an array ofshorts containing the number of values  for each length in the Huffman table.
javax.imageio.plugins.jpeg.JPEGHuffmanTable.getValues,Returns an array ofshorts containing the values arranged  by increasing length of their corresponding codes.
javax.imageio.plugins.jpeg.JPEGHuffmanTable.toString,Returns aStringrepresenting this Huffman table.
javax.imageio.plugins.jpeg.JPEGImageReadParam.areTablesSet,Returnstrueif tables are currently set.
javax.imageio.plugins.jpeg.JPEGImageReadParam.getACHuffmanTables,"Returns a copy of the array of AC Huffman tables set on the  most recent call tosetDecodeTables, ornullif tables are not currently set."
javax.imageio.plugins.jpeg.JPEGImageReadParam.getDCHuffmanTables,"Returns a copy of the array of DC Huffman tables set on the  most recent call tosetDecodeTables, ornullif tables are not currently set."
javax.imageio.plugins.jpeg.JPEGImageReadParam.getQTables,"Returns a copy of the array of quantization tables set on the  most recent call tosetDecodeTables, ornullif tables are not currently set."
javax.imageio.plugins.jpeg.JPEGImageReadParam.setDecodeTables,Sets the quantization and Huffman tables to use in decoding  abbreviated streams.
javax.imageio.plugins.jpeg.JPEGImageReadParam.unsetDecodeTables,Removes any quantization and Huffman tables that are currently  set.
javax.imageio.plugins.jpeg.JPEGImageWriteParam.getACHuffmanTables,"Returns a copy of the array of AC Huffman tables set on the  most recent call tosetEncodeTables, ornullif tables are not currently set."
javax.imageio.plugins.jpeg.JPEGImageWriteParam.getDCHuffmanTables,"Returns a copy of the array of DC Huffman tables set on the  most recent call tosetEncodeTables, ornullif tables are not currently set."
javax.imageio.plugins.jpeg.JPEGImageWriteParam.getOptimizeHuffmanTables,"Returns the value passed into the most recent call  tosetOptimizeHuffmanTables, orfalseifsetOptimizeHuffmanTableshas never been called."
javax.imageio.plugins.jpeg.JPEGImageWriteParam.getQTables,"Returns a copy of the array of quantization tables set on the  most recent call tosetEncodeTables, ornullif tables are not currently set."
javax.imageio.plugins.jpeg.JPEGImageWriteParam.isCompressionLossless,Returnsfalsesince the JPEG plug-in only supports  lossy compression.
javax.imageio.plugins.jpeg.JPEGImageWriteParam.setEncodeTables,Sets the quantization and Huffman tables to use in encoding  abbreviated streams.
javax.imageio.plugins.jpeg.JPEGImageWriteParam.setOptimizeHuffmanTables,Tells the writer to generate optimized Huffman tables  for the image as part of the writing process.
javax.imageio.plugins.jpeg.JPEGImageWriteParam.unsetCompression,Removes any previous compression quality setting.
javax.imageio.plugins.jpeg.JPEGQTable.getScaledInstance,Returns a new quantization table where the values are multiplied  byscaleFactorand then clamped to the range 1..32767  (or to 1..255 ifforceBaselineis true).
javax.imageio.plugins.jpeg.JPEGQTable.getTable,Returns a copy of the current quantization table as an array  ofints in natural (not zig-zag) order.
javax.imageio.plugins.jpeg.JPEGQTable.toString,Returns aStringrepresenting this quantization table.
javax.imageio.plugins.tiff.BaselineTIFFTagSet.getInstance,Returns a shared instance of aBaselineTIFFTagSet.
javax.imageio.plugins.tiff.ExifGPSTagSet.getInstance,Returns a shared instance of anExifGPSTagSet.
javax.imageio.plugins.tiff.ExifInteroperabilityTagSet.getInstance,Returns the shared instance ofExifInteroperabilityTagSet.
javax.imageio.plugins.tiff.ExifParentTIFFTagSet.getInstance,Returns a shared instance of anExifParentTIFFTagSet.
javax.imageio.plugins.tiff.ExifTIFFTagSet.getInstance,Returns a shared instance of anExifTIFFTagSet.
javax.imageio.plugins.tiff.FaxTIFFTagSet.getInstance,Returns a shared instance of aFaxTIFFTagSet.
javax.imageio.plugins.tiff.GeoTIFFTagSet.getInstance,Returns a shared instance of aGeoTIFFTagSet.
javax.imageio.plugins.tiff.TIFFDirectory.addTagSet,Adds an element to the group ofTIFFTagSets of which this  directory is aware.
javax.imageio.plugins.tiff.TIFFDirectory.addTIFFField,Adds a TIFF field to the directory.
javax.imageio.plugins.tiff.TIFFDirectory.clone,Clones the directory and all the fields contained therein.
javax.imageio.plugins.tiff.TIFFDirectory.containsTIFFField,Determines whether a TIFF field with the given tag number is  contained in this directory.
javax.imageio.plugins.tiff.TIFFDirectory.createFromMetadata,Creates aTIFFDirectoryinstance from the contents of  an image metadata object.
javax.imageio.plugins.tiff.TIFFDirectory.getAsMetadata,Converts the directory to a metadata object.
javax.imageio.plugins.tiff.TIFFDirectory.getNumTIFFFields,Returns the number ofTIFFFields in this directory.
javax.imageio.plugins.tiff.TIFFDirectory.getParentTag,Returns the parentTIFFTagof this directory if one  has been defined ornullotherwise.
javax.imageio.plugins.tiff.TIFFDirectory.getTag,Returns theTIFFTagwhich has tag number equal totagNumberornullif no such tag  exists in theTIFFTagSets associated with this  directory.
javax.imageio.plugins.tiff.TIFFDirectory.getTagSets,Returns theTIFFTagSets of which this directory is aware.
javax.imageio.plugins.tiff.TIFFDirectory.getTIFFField,Retrieves a TIFF field from the directory.
javax.imageio.plugins.tiff.TIFFDirectory.getTIFFFields,Retrieves all TIFF fields from the directory.
javax.imageio.plugins.tiff.TIFFDirectory.removeTagSet,Removes an element from the group ofTIFFTagSets of which this  directory is aware.
javax.imageio.plugins.tiff.TIFFDirectory.removeTIFFField,Removes a TIFF field from the directory.
javax.imageio.plugins.tiff.TIFFDirectory.removeTIFFFields,Removes all TIFF fields from the directory.
javax.imageio.plugins.tiff.TIFFField.clone,Clones the field and all the information contained therein.
javax.imageio.plugins.tiff.TIFFField.createArrayForType,Creates an array appropriate for the indicated data type.
javax.imageio.plugins.tiff.TIFFField.createFromMetadataNode,Creates aTIFFFieldfrom a TIFF native image  metadata node.
javax.imageio.plugins.tiff.TIFFField.getAsBytes,Returns the data as an uninterpreted array ofbytes.
javax.imageio.plugins.tiff.TIFFField.getAsChars,ReturnsTIFFTag.TIFF_SHORTdata as an array ofchars (unsigned 16-bit integers).
javax.imageio.plugins.tiff.TIFFField.getAsDouble,Returns data in any format as adouble.
javax.imageio.plugins.tiff.TIFFField.getAsDoubles,ReturnsTIFFTag.TIFF_DOUBLEdata as an array ofdoubles (64-bit floating-point values).
javax.imageio.plugins.tiff.TIFFField.getAsFloat,Returns data in any format as afloat.
javax.imageio.plugins.tiff.TIFFField.getAsFloats,ReturnsTIFFTag.TIFF_FLOATdata as an array offloats (32-bit floating-point values).
javax.imageio.plugins.tiff.TIFFField.getAsInt,Returns data in any format as anint.
javax.imageio.plugins.tiff.TIFFField.getAsInts,ReturnsTIFFTag.TIFF_SLONGdata as an array ofints (signed 32-bit integers).
javax.imageio.plugins.tiff.TIFFField.getAsLong,Returns data in any format as along.
javax.imageio.plugins.tiff.TIFFField.getAsLongs,ReturnsTIFFTag.TIFF_LONGorTIFF_IFD_POINTERdata as an array oflongs (signed 64-bit integers).
javax.imageio.plugins.tiff.TIFFField.getAsNativeNode,"Returns theTIFFFieldas a node named either""TIFFField""or""TIFFIFD""as described in the  TIFF native image metadata specification."
javax.imageio.plugins.tiff.TIFFField.getAsRational,Returns a TIFFTag.TIFF_RATIONAL data item as a two-element array  of ints.
javax.imageio.plugins.tiff.TIFFField.getAsRationals,ReturnsTIFFTag.TIFF_RATIONALdata as an array of  2-element arrays oflongs.
javax.imageio.plugins.tiff.TIFFField.getAsShorts,ReturnsTIFFTag.TIFF_SSHORTdata as an array ofshorts (signed 16-bit integers).
javax.imageio.plugins.tiff.TIFFField.getAsSRational,Returns aTIFFTag.TIFF_SRATIONALdata item as a  two-element array ofints.
javax.imageio.plugins.tiff.TIFFField.getAsSRationals,ReturnsTIFFTag.TIFF_SRATIONALdata as an array of  2-element arrays ofints.
javax.imageio.plugins.tiff.TIFFField.getAsString,Returns aTIFFTag.TIFF_ASCIIvalue as aString.
javax.imageio.plugins.tiff.TIFFField.getCount,Returns the number of data items present in the field.
javax.imageio.plugins.tiff.TIFFField.getData,Returns a reference to the data object associated with the field.
javax.imageio.plugins.tiff.TIFFField.getDirectory,"Returns the associatedTIFFDirectory, if available."
javax.imageio.plugins.tiff.TIFFField.getTag,Retrieves the tag associated with this field.
javax.imageio.plugins.tiff.TIFFField.getTagNumber,"Retrieves the tag number in the range[0,65535]."
javax.imageio.plugins.tiff.TIFFField.getType,Returns the type of the data stored in the field.
javax.imageio.plugins.tiff.TIFFField.getTypeByName,Returns the data type constant corresponding to the supplied data  type name.
javax.imageio.plugins.tiff.TIFFField.getTypeName,Returns the name of the supplied data type constant.
javax.imageio.plugins.tiff.TIFFField.getValueAsString,Returns aStringcontaining a human-readable  version of the data item.
javax.imageio.plugins.tiff.TIFFField.hasDirectory,Returns whether the field has aTIFFDirectory.
javax.imageio.plugins.tiff.TIFFField.isIntegral,Indicates whether the value associated with the field is of  integral data type.
javax.imageio.plugins.tiff.TIFFImageReadParam.addAllowedTagSet,Adds aTIFFTagSetobject to the list of allowed  tag sets.
javax.imageio.plugins.tiff.TIFFImageReadParam.getAllowedTagSets,Returns aListcontaining the allowedTIFFTagSetobjects.
javax.imageio.plugins.tiff.TIFFImageReadParam.getReadUnknownTags,Retrieve the setting of whether to read fields corresponding to unknownTIFFTags.
javax.imageio.plugins.tiff.TIFFImageReadParam.removeAllowedTagSet,Removes aTIFFTagSetobject from the list of  allowed tag sets.
javax.imageio.plugins.tiff.TIFFImageReadParam.setReadUnknownTags,Set whether to read fields corresponding toTIFFTags not in  the allowedTIFFTagSets.
javax.imageio.plugins.tiff.TIFFTag.addValueName,Adds a mnemonic name for a particular value that this tag's data may take  on.
javax.imageio.plugins.tiff.TIFFTag.getCount,Returns the value count of this tag.
javax.imageio.plugins.tiff.TIFFTag.getDataTypes,Returns a bit mask indicating the set of data types that may  be used to store the data associated with the tag.
javax.imageio.plugins.tiff.TIFFTag.getName,"Returns the name of the tag, as it will appear in image metadata."
javax.imageio.plugins.tiff.TIFFTag.getNamedValues,Returns an array of values for which mnemonic names are defined.
javax.imageio.plugins.tiff.TIFFTag.getNumber,Returns the integer used to represent the tag.
javax.imageio.plugins.tiff.TIFFTag.getSizeOfType,Returns the number of bytes used to store a value of the given  data type.
javax.imageio.plugins.tiff.TIFFTag.getTagSet,Returns theTIFFTagSetof which this tag is a part.
javax.imageio.plugins.tiff.TIFFTag.getValueName,"Returns the mnemonic name associated with a particular value  that this tag's data may take on, ornullif  no name is present."
javax.imageio.plugins.tiff.TIFFTag.hasValueNames,Returnstrueif there are mnemonic names associated with  the set of legal values for the data associated with this tag.
javax.imageio.plugins.tiff.TIFFTag.isDataTypeOK,Returnstrueif the given data type  may be used for the data associated with this tag.
javax.imageio.plugins.tiff.TIFFTag.isIFDPointer,Returnstrueif this tag is used to point to an IFD  structure containing additional tags.
javax.imageio.plugins.tiff.TIFFTagSet.getTag,"Returns theTIFFTagfrom this set that is  associated with the given tag number, ornullif  no tag exists for that number."
javax.imageio.plugins.tiff.TIFFTagSet.getTag,"Returns theTIFFTaghaving the given tag name, ornullif the named tag does not belong to this tag set."
javax.imageio.plugins.tiff.TIFFTagSet.getTagNames,Retrieves an unmodifiable lexicographically increasing set of tag names.
javax.imageio.plugins.tiff.TIFFTagSet.getTagNumbers,Retrieves an unmodifiable numerically increasing set of tag numbers.
javax.imageio.spi.IIORegistry.getDefaultInstance,Returns the defaultIIORegistryinstance used by  the Image I/O API.
javax.imageio.spi.IIORegistry.registerApplicationClasspathSpis,"Registers all available service providers found on the  application class path, using the defaultClassLoader."
javax.imageio.spi.IIOServiceProvider.getDescription,"Returns a brief, human-readable description of this service  provider and its associated implementation."
javax.imageio.spi.IIOServiceProvider.getVendorName,Returns the name of the vendor responsible for creating this  service provider and its associated implementation.
javax.imageio.spi.IIOServiceProvider.getVersion,Returns a string describing the version  number of this service provider and its associated  implementation.
javax.imageio.spi.IIOServiceProvider.onDeregistration,A callback that will be whenever the Spi class has been  deregistered from aServiceRegistry.
javax.imageio.spi.IIOServiceProvider.onRegistration,A callback that will be called exactly once after the Spi class  has been instantiated and registered in aServiceRegistry.
javax.imageio.spi.ImageInputStreamSpi.canUseCacheFile,Returnstrueif theImageInputStreamimplementation associated with this service provider can  optionally make use of a cache file for improved performance  and/or memory footrprint.
javax.imageio.spi.ImageInputStreamSpi.createInputStreamInstance,Returns an instance of theImageInputStreamimplementation associated with this service provider.
javax.imageio.spi.ImageInputStreamSpi.getInputClass,"Returns aClassobject representing the class or  interface type that must be implemented by an input source in  order to be ""wrapped"" in anImageInputStreamvia  thecreateInputStreamInstancemethod."
javax.imageio.spi.ImageInputStreamSpi.needsCacheFile,Returnstrueif theImageInputStreamimplementation associated with this service provider requires  the use of a cacheFile.
javax.imageio.spi.ImageOutputStreamSpi.canUseCacheFile,Returnstrueif theImageOutputStreamimplementation associated with this service provider can  optionally make use of a cacheFilefor improved  performance and/or memory footrprint.
javax.imageio.spi.ImageOutputStreamSpi.createOutputStreamInstance,Returns an instance of theImageOutputStreamimplementation associated with this service provider.
javax.imageio.spi.ImageOutputStreamSpi.getOutputClass,"Returns aClassobject representing the class or  interface type that must be implemented by an output  destination in order to be ""wrapped"" in anImageOutputStreamvia thecreateOutputStreamInstancemethod."
javax.imageio.spi.ImageOutputStreamSpi.needsCacheFile,Returnstrueif theImageOutputStreamimplementation associated with this service provider requires  the use of a cacheFile.
javax.imageio.spi.ImageReaderSpi.canDecodeInput,Returnstrueif the supplied source object appears  to be of the format supported by this reader.
javax.imageio.spi.ImageReaderSpi.createReaderInstance,Returns an instance of theImageReaderimplementation associated with this service provider.
javax.imageio.spi.ImageReaderSpi.getImageWriterSpiNames,"Returns an array ofStrings containing the fully  qualified names of all theImageWriterSpiclasses  that can understand the internal metadata representation used  by theImageReaderassociated with this service  provider, ornullif there are no suchImageWriters specified."
javax.imageio.spi.ImageReaderSpi.getInputTypes,Returns an array ofClassobjects indicating what  types of objects may be used as arguments to the reader'ssetInputmethod.
javax.imageio.spi.ImageReaderSpi.isOwnReader,Returnstrueif theImageReaderobject  passed in is an instance of theImageReaderassociated with this service provider.
javax.imageio.spi.ImageReaderWriterSpi.getExtraImageMetadataFormatNames,"Returns an array ofStrings containing the names  of additional document formats, other than the native and  standard formats, recognized by thegetAsTreeandsetFromTreemethods on  the image metadata objects produced or consumed by this  plug-in."
javax.imageio.spi.ImageReaderWriterSpi.getExtraStreamMetadataFormatNames,"Returns an array ofStrings containing the names  of additional document formats, other than the native and  standard formats, recognized by thegetAsTreeandsetFromTreemethods on  the stream metadata objects produced or consumed by this  plug-in."
javax.imageio.spi.ImageReaderWriterSpi.getFileSuffixes,Returns an array ofStrings containing a list of  file suffixes associated with the formats that are generally  usable by theImageReaderorImageWriterimplementation associated with this  service provider.
javax.imageio.spi.ImageReaderWriterSpi.getFormatNames,Returns an array ofStrings containing  human-readable names for the formats that are generally usable  by theImageReaderorImageWriterimplementation associated with this service provider.
javax.imageio.spi.ImageReaderWriterSpi.getImageMetadataFormat,"Returns anIIOMetadataFormatobject describing the  given image metadata format, ornullif no  description is available."
javax.imageio.spi.ImageReaderWriterSpi.getMIMETypes,Returns an array ofStrings containing a list of  MIME types associated with the formats that are generally  usable by theImageReaderorImageWriterimplementation associated with this  service provider.
javax.imageio.spi.ImageReaderWriterSpi.getNativeImageMetadataFormatName,"Returns the name of the ""native"" image metadata format for  this plug-in, which typically allows for lossless encoding and  transmission of the image metadata stored in the format handled by  this plug-in."
javax.imageio.spi.ImageReaderWriterSpi.getNativeStreamMetadataFormatName,"Returns the name of the ""native"" stream metadata format for  this plug-in, which typically allows for lossless encoding and  transmission of the stream metadata stored in the format handled by  this plug-in."
javax.imageio.spi.ImageReaderWriterSpi.getPluginClassName,Returns the fully-qualified class name of theImageReaderorImageWriterplug-in  associated with this service provider.
javax.imageio.spi.ImageReaderWriterSpi.getStreamMetadataFormat,"Returns anIIOMetadataFormatobject describing the  given stream metadata format, ornullif no  description is available."
javax.imageio.spi.ImageReaderWriterSpi.isStandardImageMetadataFormatSupported,Returnstrueif the standard metadata format is  among the document formats recognized by thegetAsTreeandsetFromTreemethods on  the image metadata objects produced or consumed by this  plug-in.
javax.imageio.spi.ImageReaderWriterSpi.isStandardStreamMetadataFormatSupported,Returnstrueif the standard metadata format is  among the document formats recognized by thegetAsTreeandsetFromTreemethods on  the stream metadata objects produced or consumed by this  plug-in.
javax.imageio.spi.ImageTranscoderSpi.createTranscoderInstance,Returns an instance of theImageTranscoderimplementation associated with this service provider.
javax.imageio.spi.ImageTranscoderSpi.getReaderServiceProviderName,Returns the fully qualified class name of anImageReaderSpiclass that generatesIIOMetadataobjects that may be used as input to  this transcoder.
javax.imageio.spi.ImageTranscoderSpi.getWriterServiceProviderName,Returns the fully qualified class name of anImageWriterSpiclass that generatesIIOMetadataobjects that may be used as input to  this transcoder.
javax.imageio.spi.ImageWriterSpi.canEncodeImage,Returnstrueif theImageWriterimplementation associated with this service provider is able to  encode the givenRenderedImageinstance.
javax.imageio.spi.ImageWriterSpi.canEncodeImage,Returnstrueif theImageWriterimplementation associated with this service provider is able to  encode an image with the given layout.
javax.imageio.spi.ImageWriterSpi.createWriterInstance,Returns an instance of theImageWriterimplementation associated with this service provider.
javax.imageio.spi.ImageWriterSpi.getImageReaderSpiNames,"Returns an array ofStrings containing all the  fully qualified names of all theImageReaderSpiclasses that can understand the internal metadata  representation used by theImageWriterassociated  with this service provider, ornullif there are  no suchImageReadersspecified."
javax.imageio.spi.ImageWriterSpi.getOutputTypes,Returns an array ofClassobjects indicating what  types of objects may be used as arguments to the writer'ssetOutputmethod.
javax.imageio.spi.ImageWriterSpi.isFormatLossless,Returnstrueif the format that this writer  outputs preserves pixel data bit-accurately.
javax.imageio.spi.ImageWriterSpi.isOwnWriter,Returnstrueif theImageWriterobject  passed in is an instance of theImageWriterassociated with this service provider.
javax.imageio.spi.ServiceRegistry.filter,Returnstrueif the givenproviderobject matches the criterion defined  by thisFilter.
javax.imageio.spi.ServiceRegistry.contains,Returnstrueifprovideris currently  registered.
javax.imageio.spi.ServiceRegistry.deregisterAll,Deregisters all currently registered service providers from all  categories.
javax.imageio.spi.ServiceRegistry.deregisterAll,Deregisters all service provider object currently registered  under the given category.
javax.imageio.spi.ServiceRegistry.deregisterServiceProvider,Removes a service provider object from all categories that  contain it.
javax.imageio.spi.ServiceRegistry.deregisterServiceProvider,Removes a service provider object from the given category.
javax.imageio.spi.ServiceRegistry.getCategories,Returns anIteratorofClassobjects  indicating the current set of categories.
javax.imageio.spi.ServiceRegistry.getServiceProviderByClass,Returns the currently registered service provider object that  is of the given class type.
javax.imageio.spi.ServiceRegistry.getServiceProviders,Returns anIteratorcontaining all registered  service providers in the given category.
javax.imageio.spi.ServiceRegistry.getServiceProviders,Returns anIteratorcontaining service provider  objects within a given category that satisfy a criterion  imposed by the suppliedServiceRegistry.Filterobject'sfiltermethod.
javax.imageio.spi.ServiceRegistry.lookupProviders,Locates and incrementally instantiates the available providers  of a given service using the context class loader.
javax.imageio.spi.ServiceRegistry.lookupProviders,Searches for implementations of a particular service class  using the given class loader.
javax.imageio.spi.ServiceRegistry.registerServiceProvider,Adds a service provider object to the registry.
javax.imageio.spi.ServiceRegistry.registerServiceProviders,"Adds a set of service provider objects, taken from anIteratorto the registry."
javax.imageio.spi.ServiceRegistry.setOrdering,Sets a pairwise ordering between two service provider objects  within a given category.
javax.imageio.stream.FileCacheImageInputStream.close,"Closes thisFileCacheImageInputStream, closing  and removing the cache file."
javax.imageio.stream.FileCacheImageInputStream.isCached,Returnstruesince thisImageInputStreamcaches data in order to allow  seeking backwards.
javax.imageio.stream.FileCacheImageInputStream.isCachedFile,Returnstruesince thisImageInputStreammaintains a file cache.
javax.imageio.stream.FileCacheImageInputStream.isCachedMemory,Returnsfalsesince thisImageInputStreamdoes not maintain a main memory  cache.
javax.imageio.stream.FileCacheImageInputStream.read,Reads a single byte from the stream and returns it as anintbetween 0 and 255.
javax.imageio.stream.FileCacheImageInputStream.read,"Reads up tolenbytes from the stream, and stores  them intobstarting at indexoff."
javax.imageio.stream.FileCacheImageOutputStream.close,Closes thisFileCacheImageOutputStream.
javax.imageio.stream.FileCacheImageOutputStream.flushBefore,"Flushes all data prior to the given position to the underlying  destination, such as anOutputStreamorFile."
javax.imageio.stream.FileCacheImageOutputStream.isCached,Returnstruesince thisImageOutputStreamcaches data in order to allow  seeking backwards.
javax.imageio.stream.FileCacheImageOutputStream.isCachedFile,Returnstruesince thisImageOutputStreammaintains a file cache.
javax.imageio.stream.FileCacheImageOutputStream.isCachedMemory,Returnsfalsesince thisImageOutputStreamdoes not maintain a main memory  cache.
javax.imageio.stream.FileCacheImageOutputStream.length,Returns-1Lto indicate that the stream has unknown  length.
javax.imageio.stream.FileCacheImageOutputStream.seek,Sets the current stream position and resets the bit offset to  0.
javax.imageio.stream.FileCacheImageOutputStream.write,Writes a sequence of bytes to the stream at the current  position.
javax.imageio.stream.FileCacheImageOutputStream.write,Writes a single byte to the stream at the current position.
javax.imageio.stream.FileImageInputStream.length,"Returns the length of the underlying file, or-1if it is unknown."
javax.imageio.stream.IIOByteBuffer.getData,Returns a reference to the byte array.
javax.imageio.stream.IIOByteBuffer.getLength,Returns the length of the data of interest within the byte  array returned bygetData.
javax.imageio.stream.IIOByteBuffer.getOffset,Returns the offset within the byte array returned bygetDataat which the data of interest start.
javax.imageio.stream.IIOByteBuffer.setData,Updates the array reference that will be returned by subsequent calls  to thegetDatamethod.
javax.imageio.stream.IIOByteBuffer.setLength,Updates the value that will be returned by subsequent calls  to thegetLengthmethod.
javax.imageio.stream.IIOByteBuffer.setOffset,Updates the value that will be returned by subsequent calls  to thegetOffsetmethod.
javax.imageio.stream.ImageInputStreamImpl.checkClosed,Throws anIOExceptionif the stream has been closed.
javax.imageio.stream.ImageInputStreamImpl.flush,Discards the initial position of the stream prior to the current  stream position.
javax.imageio.stream.ImageInputStreamImpl.flushBefore,Discards the initial portion of the stream prior to the  indicated position.
javax.imageio.stream.ImageInputStreamImpl.getBitOffset,"Returns the current bit offset, as an integer between 0 and 7,  inclusive."
javax.imageio.stream.ImageInputStreamImpl.getByteOrder,Returns the byte order with which data values will be read from  this stream as an instance of thejava.nio.ByteOrderenumeration.
javax.imageio.stream.ImageInputStreamImpl.getFlushedPosition,Returns the earliest position in the stream to which seeking  may be performed.
javax.imageio.stream.ImageInputStreamImpl.getStreamPosition,Returns the current byte position of the stream.
javax.imageio.stream.ImageInputStreamImpl.isCached,Default implementation returns false.
javax.imageio.stream.ImageInputStreamImpl.mark,Pushes the current stream position onto a stack of marked  positions.
javax.imageio.stream.ImageInputStreamImpl.read,"A convenience method that callsread(b, 0, b.length)."
javax.imageio.stream.ImageInputStreamImpl.readBit,Reads a single bit from the stream and returns it as anintwith the value0or1.
javax.imageio.stream.ImageInputStreamImpl.readBits,"Reads a bitstring from the stream and returns it as along, with the first bit read becoming the most  significant bit of the output."
javax.imageio.stream.ImageInputStreamImpl.readBoolean,"Reads a byte from the stream and returns abooleanvalue oftrueif it is nonzero,falseif it is zero."
javax.imageio.stream.ImageInputStreamImpl.readByte,Reads a byte from the stream and returns it as abytevalue.
javax.imageio.stream.ImageInputStreamImpl.readBytes,"Reads up tolenbytes from the stream, and  modifies the suppliedIIOByteBufferto indicate  the byte array, offset, and length where the data may be found."
javax.imageio.stream.ImageInputStreamImpl.readChar,"Equivalent toreadUnsignedShort, except that the  result is returned using thechardatatype."
javax.imageio.stream.ImageInputStreamImpl.readDouble,"Reads 8 bytes from the stream, and (conceptually) concatenates  them according to the current byte order and returns the result  as adouble."
javax.imageio.stream.ImageInputStreamImpl.readFloat,"Reads 4 bytes from the stream, and (conceptually) concatenates  them according to the current byte order and returns the result  as afloat."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readsb.lengthbytes from the stream, and stores them  intobstarting at index0."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readslenbytes from the stream, and stores them  intobstarting at indexoff."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readslenchars (unsigned 16-bit integers) from the  stream according to the current byte order, and  stores them intocstarting at indexoff."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readslendoubles (64-bit IEEE double-precision  floats) from the stream according to the current byte order,  and stores them intodstarting at  indexoff."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readslenfloats (32-bit IEEE single-precision  floats) from the stream according to the current byte order,  and stores them intofstarting at  indexoff."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readslenints (signed 32-bit integers) from the  stream according to the current byte order, and  stores them intoistarting at indexoff."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readslenlongs (signed 64-bit integers) from the  stream according to the current byte order, and  stores them intolstarting at indexoff."
javax.imageio.stream.ImageInputStreamImpl.readFully,"Readslenshorts (signed 16-bit integers) from the  stream according to the current byte order, and  stores them intosstarting at indexoff."
javax.imageio.stream.ImageInputStreamImpl.readInt,"Reads 4 bytes from the stream, and (conceptually) concatenates  them according to the current byte order and returns the result  as anint."
javax.imageio.stream.ImageInputStreamImpl.readLine,Reads the next line of text from the input stream.
javax.imageio.stream.ImageInputStreamImpl.readLong,"Reads 8 bytes from the stream, and (conceptually) concatenates  them according to the current byte order and returns the result  as along."
javax.imageio.stream.ImageInputStreamImpl.readShort,"Reads two bytes from the stream, and (conceptually)  concatenates them according to the current byte order, and  returns the result as ashortvalue."
javax.imageio.stream.ImageInputStreamImpl.readUnsignedByte,"Reads a byte from the stream, and (conceptually) converts it to  an int, masks it with0xffin order to strip off  any sign-extension bits, and returns it as abytevalue."
javax.imageio.stream.ImageInputStreamImpl.readUnsignedInt,"Reads 4 bytes from the stream, and (conceptually) concatenates  them according to the current byte order, converts the result  to a long, masks it with0xffffffffLin order to  strip off any sign-extension bits, and returns the result as an  unsignedlongvalue."
javax.imageio.stream.ImageInputStreamImpl.readUnsignedShort,"Reads two bytes from the stream, and (conceptually)  concatenates them according to the current byte order, converts  the resulting value to anint, masks it with0xffffin order to strip off any sign-extension  buts, and returns the result as an unsignedintvalue."
javax.imageio.stream.ImageInputStreamImpl.readUTF,Reads in a string that has been encoded using amodified UTF-8format.
javax.imageio.stream.ImageInputStreamImpl.reset,Resets the current stream byte and bit positions from the stack  of marked positions.
javax.imageio.stream.ImageInputStreamImpl.seek,Sets the current stream position to the desired location.
javax.imageio.stream.ImageInputStreamImpl.setBitOffset,"Sets the bit offset to an integer between 0 and 7, inclusive."
javax.imageio.stream.ImageInputStreamImpl.setByteOrder,Sets the desired byte order for future reads of data values  from this stream.
javax.imageio.stream.ImageInputStreamImpl.skipBytes,Advances the current stream position by callingseek(getStreamPosition() + n).
javax.imageio.stream.ImageOutputStreamImpl.flushBits,"If the bit offset is non-zero, forces the remaining bits  in the current byte to 0 and advances the stream position  by one."
javax.imageio.stream.ImageOutputStreamImpl.writeBit,"Writes a single bit, given by the least significant bit of the  argument, to the stream at the current bit offset within the  current byte position."
javax.imageio.stream.ImageOutputStreamImpl.writeBits,"Writes a sequence of bits, given by thenumBitsleast significant bits of thebitsargument in  left-to-right order, to the stream at the current bit offset  within the current byte position."
javax.imageio.stream.ImageOutputStreamImpl.writeBoolean,Writes abooleanvalue to the stream.
javax.imageio.stream.ImageOutputStreamImpl.writeByte,Writes the 8 low-order bits ofvto the  stream.
javax.imageio.stream.ImageOutputStreamImpl.writeBytes,Writes a string to the output stream.
javax.imageio.stream.ImageOutputStreamImpl.writeChar,This method is a synonym forwriteShort.
javax.imageio.stream.ImageOutputStreamImpl.writeChars,Writes a sequence of chars to the stream at the current  position.
javax.imageio.stream.ImageOutputStreamImpl.writeDouble,"Writes adoublevalue, which is comprised of four  bytes, to the output stream."
javax.imageio.stream.ImageOutputStreamImpl.writeDoubles,Writes a sequence of doubles to the stream at the current  position.
javax.imageio.stream.ImageOutputStreamImpl.writeFloat,"Writes afloatvalue, which is comprised of four  bytes, to the output stream."
javax.imageio.stream.ImageOutputStreamImpl.writeFloats,Writes a sequence of floats to the stream at the current  position.
javax.imageio.stream.ImageOutputStreamImpl.writeInt,Writes the 32 bits ofvto the stream.
javax.imageio.stream.ImageOutputStreamImpl.writeInts,Writes a sequence of ints to the stream at the current  position.
javax.imageio.stream.ImageOutputStreamImpl.writeLong,Writes the 64 bits ofvto the stream.
javax.imageio.stream.ImageOutputStreamImpl.writeLongs,Writes a sequence of longs to the stream at the current  position.
javax.imageio.stream.ImageOutputStreamImpl.writeShort,Writes the 16 low-order bits ofvto the  stream.
javax.imageio.stream.ImageOutputStreamImpl.writeShorts,Writes a sequence of shorts to the stream at the current  position.
javax.imageio.stream.ImageOutputStreamImpl.writeUTF,"Writes two bytes of length information to the output stream in  network byte order, followed by themodified UTF-8representation of every character in the strings."
javax.imageio.stream.MemoryCacheImageInputStream.close,"Closes thisMemoryCacheImageInputStream, freeing  the cache."
javax.imageio.stream.MemoryCacheImageInputStream.isCachedFile,Returnsfalsesince thisImageInputStreamdoes not maintain a file cache.
javax.imageio.stream.MemoryCacheImageInputStream.isCachedMemory,Returnstruesince thisImageInputStreammaintains a main memory cache.
javax.imageio.stream.MemoryCacheImageOutputStream.close,Closes thisMemoryCacheImageOutputStream.
javax.imageio.stream.MemoryCacheImageOutputStream.isCachedFile,Returnsfalsesince thisImageOutputStreamdoes not maintain a file cache.
javax.imageio.stream.MemoryCacheImageOutputStream.isCachedMemory,Returnstruesince thisImageOutputStreammaintains a main memory cache.
javax.print.DocFlavor.equals,Determines if this doc flavor object is equal to the given object.
javax.print.DocFlavor.getMediaSubtype,Returns this doc flavor object's media subtype (from the MIME type).
javax.print.DocFlavor.getMediaType,Returns this doc flavor object's media type (from the MIME type).
javax.print.DocFlavor.getMimeType,Returns this doc flavor object's MIME type string based on the canonical  form.
javax.print.DocFlavor.getParameter,Returns aStringrepresenting a MIME parameter.
javax.print.DocFlavor.getRepresentationClassName,Returns the name of this doc flavor object's representation class.
javax.print.DocFlavor.hashCode,Returns a hash code for this doc flavor object.
javax.print.DocFlavor.toString,Converts thisDocFlavorto a string.
javax.print.PrintServiceLookup.getDefaultPrintService,Not called directly by applications.
javax.print.PrintServiceLookup.getPrintServices,Locates services that can be positively confirmed to support the  combination of attributes andDocFlavorsspecified.
javax.print.PrintServiceLookup.lookupDefaultPrintService,Locates the default print service for this environment.
javax.print.PrintServiceLookup.lookupMultiDocPrintServices,LocatesMultiDocprintServicescapable of printingMultiDocscontaining all the specified doc flavors.
javax.print.PrintServiceLookup.lookupPrintServices,Locates print services capable of printing the specifiedDocFlavor.
javax.print.PrintServiceLookup.registerService,Allows an application to directly register an instance of a class which  implements a print service.
javax.print.PrintServiceLookup.registerServiceProvider,Allows an application to explicitly register a class that implements  lookup services.
javax.print.ServiceUI.printDialog,Presents a dialog to the user for selecting a print service (printer).
javax.print.ServiceUIFactory.getUI,Get a UI object which may be cast to the requested UI type by the  application and used in its user interface.
javax.print.ServiceUIFactory.getUIClassNamesForRole,Given a UI role obtained from this factory obtain the UI types available  from this factory which implement this role.
javax.print.SimpleDoc.getAttributes,Obtains the set of printing attributes for this doc object.
javax.print.SimpleDoc.getDocFlavor,Determines the doc flavor in which this doc object will supply its piece  of print data.
javax.print.SimpleDoc.getPrintData,Obtains the print data representation object that contains this doc  object's piece of print data in the format corresponding to the supported  doc flavor.
javax.print.SimpleDoc.getReaderForText,Obtains a reader for extracting character print data from this doc.
javax.print.SimpleDoc.getStreamForBytes,Obtains an input stream for extracting byte print data from this doc.
javax.print.StreamPrintService.dispose,Disposes thisStreamPrintService.
javax.print.StreamPrintService.getOutputFormat,Returns the document format emitted by this print service.
javax.print.StreamPrintService.getOutputStream,Gets the output stream.
javax.print.StreamPrintService.isDisposed,Returns abooleanindicating whether or not thisStreamPrintServicehas been disposed.
javax.print.StreamPrintServiceFactory.getOutputFormat,Queries the factory for the document format that is emitted by printers  obtained from this factory.
javax.print.StreamPrintServiceFactory.getPrintService,Returns aStreamPrintServicethat can print to the specified  output stream.
javax.print.StreamPrintServiceFactory.getSupportedDocFlavors,Queries the factory for the document flavors that can be accepted by  printers obtained from this factory.
javax.print.StreamPrintServiceFactory.lookupStreamPrintServiceFactories,Locates factories for print services that can be used with a print job to  output a stream of data in the format specified byoutputMimeType.
javax.print.attribute.AttributeSetUtilities.synchronizedView,Creates a synchronized view of the given attribute set.
javax.print.attribute.AttributeSetUtilities.synchronizedView,Creates a synchronized view of the given doc attribute set.
javax.print.attribute.AttributeSetUtilities.synchronizedView,Creates a synchronized view of the given print job attribute set.
javax.print.attribute.AttributeSetUtilities.synchronizedView,Creates a synchronized view of the given print request attribute set.
javax.print.attribute.AttributeSetUtilities.synchronizedView,Creates a synchronized view of the given print service attribute set.
javax.print.attribute.AttributeSetUtilities.unmodifiableView,Creates an unmodifiable view of the given attribute set.
javax.print.attribute.AttributeSetUtilities.unmodifiableView,Creates an unmodifiable view of the given doc attribute set.
javax.print.attribute.AttributeSetUtilities.unmodifiableView,Creates an unmodifiable view of the given print job attribute set.
javax.print.attribute.AttributeSetUtilities.unmodifiableView,Creates an unmodifiable view of the given print request attribute set.
javax.print.attribute.AttributeSetUtilities.unmodifiableView,Creates an unmodifiable view of the given print service attribute set.
javax.print.attribute.AttributeSetUtilities.verifyAttributeCategory,"Verify that the given object is aClassthat implements the  given interface, which is assumed to be interfaceAttributeor a subinterface thereof."
javax.print.attribute.AttributeSetUtilities.verifyAttributeValue,"Verify that the given object is an instance of the given interface, which  is assumed to be interfaceAttributeor a subinterface  thereof."
javax.print.attribute.AttributeSetUtilities.verifyCategoryForValue,Verify that the given attribute category object is equal to the category  of the given attribute value object.
javax.print.attribute.DateTimeSyntax.equals,Returns whether this date-time attribute is equivalent to the passed in  object.
javax.print.attribute.DateTimeSyntax.getValue,Returns this date-time attribute'sjava.util.Datevalue.
javax.print.attribute.DateTimeSyntax.hashCode,Returns a hash code value for this date-time attribute.
javax.print.attribute.DateTimeSyntax.toString,Returns a string value corresponding to this date-time attribute.
javax.print.attribute.EnumSyntax.clone,"Returns a clone of this enumeration value, which to preserve the  semantics of enumeration values is the same object as this enumeration  value."
javax.print.attribute.EnumSyntax.getEnumValueTable,Returns the enumeration value table for this enumeration value's  enumeration class.
javax.print.attribute.EnumSyntax.getOffset,Returns the lowest integer value used by this enumeration value's  enumeration class.
javax.print.attribute.EnumSyntax.getStringTable,Returns the string table for this enumeration value's enumeration class.
javax.print.attribute.EnumSyntax.getValue,Returns this enumeration value's integer value.
javax.print.attribute.EnumSyntax.hashCode,Returns a hash code value for this enumeration value.
javax.print.attribute.EnumSyntax.readResolve,"During object input, convert this deserialized enumeration instance to  the proper enumeration value defined in the enumeration attribute class."
javax.print.attribute.EnumSyntax.toString,Returns a string value corresponding to this enumeration value.
javax.print.attribute.HashAttributeSet.add,"Adds the specified attribute to this attribute set if it is not already  present, first removing any existing in the same attribute category as  the specified attribute value."
javax.print.attribute.HashAttributeSet.addAll,Adds all of the elements in the specified set to this attribute.
javax.print.attribute.HashAttributeSet.clear,Removes all attributes from this attribute set.
javax.print.attribute.HashAttributeSet.containsKey,Returnstrueif this attribute set contains an attribute for the  specified category.
javax.print.attribute.HashAttributeSet.containsValue,Returnstrueif this attribute set contains the given attribute.
javax.print.attribute.HashAttributeSet.equals,Compares the specified object with this attribute set for equality.
javax.print.attribute.HashAttributeSet.get,Returns the attribute value which this attribute set contains in the  given attribute category.
javax.print.attribute.HashAttributeSet.hashCode,Returns the hash code value for this attribute set.
javax.print.attribute.HashAttributeSet.isEmpty,Returnstrueif this attribute set contains no attributes.
javax.print.attribute.HashAttributeSet.remove,Removes any attribute for this category from this attribute set if  present.
javax.print.attribute.HashAttributeSet.remove,Removes the specified attribute from this attribute set if present.
javax.print.attribute.HashAttributeSet.size,Returns the number of attributes in this attribute set.
javax.print.attribute.HashAttributeSet.toArray,Returns an array of the attributes contained in this set.
javax.print.attribute.IntegerSyntax.equals,Returns whether this integer attribute is equivalent to the passed in  object.
javax.print.attribute.IntegerSyntax.getValue,Returns this integer attribute's integer value.
javax.print.attribute.IntegerSyntax.hashCode,Returns a hash code value for this integer attribute.
javax.print.attribute.IntegerSyntax.toString,Returns a string value corresponding to this integer attribute.
javax.print.attribute.ResolutionSyntax.equals,Returns whether this resolution attribute is equivalent to the passed in  object.
javax.print.attribute.ResolutionSyntax.getCrossFeedResolution,Returns this resolution attribute's cross feed direction resolution in  the given units.
javax.print.attribute.ResolutionSyntax.getCrossFeedResolutionDphi,Returns this resolution attribute's cross feed direction resolution in  units of dphi.
javax.print.attribute.ResolutionSyntax.getFeedResolution,Returns this resolution attribute's feed direction resolution in the  given units.
javax.print.attribute.ResolutionSyntax.getFeedResolutionDphi,Returns this resolution attribute's feed direction resolution in units of  dphi.
javax.print.attribute.ResolutionSyntax.getResolution,Get this resolution attribute's resolution values in the given units.
javax.print.attribute.ResolutionSyntax.hashCode,Returns a hash code value for this resolution attribute.
javax.print.attribute.ResolutionSyntax.lessThanOrEquals,Determine whether this resolution attribute's value is less than or equal  to the given resolution attribute's value.
javax.print.attribute.ResolutionSyntax.toString,Returns a string version of this resolution attribute.
javax.print.attribute.ResolutionSyntax.toString,Returns a string version of this resolution attribute in the given units.
javax.print.attribute.SetOfIntegerSyntax.contains,Determine if this set-of-integer attribute contains the given value.
javax.print.attribute.SetOfIntegerSyntax.contains,Determine if this set-of-integer attribute contains the given integer  attribute's value.
javax.print.attribute.SetOfIntegerSyntax.equals,Returns whether this set-of-integer attribute is equivalent to the passed  in object.
javax.print.attribute.SetOfIntegerSyntax.getMembers,Obtain this set-of-integer attribute's members in canonical array form.
javax.print.attribute.SetOfIntegerSyntax.hashCode,Returns a hash code value for this set-of-integer attribute.
javax.print.attribute.SetOfIntegerSyntax.next,Determine the smallest integer in this set-of-integer attribute that is  greater than the given value.
javax.print.attribute.SetOfIntegerSyntax.toString,Returns a string value corresponding to this set-of-integer attribute.
javax.print.attribute.Size2DSyntax.equals,Returns whether this two-dimensional size attribute is equivalent to the  passed in object.
javax.print.attribute.Size2DSyntax.getSize,Get this two-dimensional size attribute's dimensions in the given units  as floating-point values.
javax.print.attribute.Size2DSyntax.getX,Returns this two-dimensional size attribute'sXdimension in the  given units as a floating-point value.
javax.print.attribute.Size2DSyntax.getXMicrometers,Returns this two-dimensional size attribute'sXdimension in  units of micrometers (µm).
javax.print.attribute.Size2DSyntax.getY,Returns this two-dimensional size attribute'sYdimension in the  given units as a floating-point value.
javax.print.attribute.Size2DSyntax.getYMicrometers,Returns this two-dimensional size attribute'sYdimension in  units of micrometers (µm).
javax.print.attribute.Size2DSyntax.hashCode,Returns a hash code value for this two-dimensional size attribute.
javax.print.attribute.Size2DSyntax.toString,Returns a string version of this two-dimensional size attribute.
javax.print.attribute.Size2DSyntax.toString,Returns a string version of this two-dimensional size attribute in the  given units.
javax.print.attribute.TextSyntax.equals,Returns whether this text attribute is equivalent to the passed in  object.
javax.print.attribute.TextSyntax.getLocale,Returns this text attribute's text string's natural language (locale).
javax.print.attribute.TextSyntax.getValue,Returns this text attribute's text string.
javax.print.attribute.TextSyntax.hashCode,Returns a hashcode for this text attribute.
javax.print.attribute.TextSyntax.toString,Returns aStringidentifying this text attribute.
javax.print.attribute.URISyntax.equals,Returns whether thisURIattribute is equivalent to the passed in  object.
javax.print.attribute.URISyntax.getURI,Returns thisURIattribute'sURIvalue.
javax.print.attribute.URISyntax.hashCode,Returns a hashcode for thisURIattribute.
javax.print.attribute.URISyntax.toString,Returns aStringidentifying thisURIattribute.
javax.print.attribute.standard.Chromaticity.getCategory,"Get the printing attribute class which is to be used as the ""category""  for this printing attribute value."
javax.print.attribute.standard.Chromaticity.getEnumValueTable,Returns the enumeration value table for classChromaticity.
javax.print.attribute.standard.Chromaticity.getName,Get the name of the category of which this attribute value is an  instance.
javax.print.attribute.standard.Chromaticity.getStringTable,Returns the string table for classChromaticity.
javax.print.attribute.standard.ColorSupported.getEnumValueTable,Returns the enumeration value table for classColorSupported.
javax.print.attribute.standard.ColorSupported.getStringTable,Returns the string table for classColorSupported.
javax.print.attribute.standard.Compression.getEnumValueTable,Returns the enumeration value table for classCompression.
javax.print.attribute.standard.Compression.getStringTable,Returns the string table for classCompression.
javax.print.attribute.standard.Copies.equals,Returns whether this copies attribute is equivalent to the passed in  object.
javax.print.attribute.standard.CopiesSupported.equals,Returns whether this copies supported attribute is equivalent to the  passed in object.
javax.print.attribute.standard.DateTimeAtCompleted.equals,Returns whether this date-time at completed attribute is equivalent to  the passed in object.
javax.print.attribute.standard.DateTimeAtCreation.equals,Returns whether this date-time at creation attribute is equivalent to the  passed in object.
javax.print.attribute.standard.DateTimeAtProcessing.equals,Returns whether this date-time at processing attribute is equivalent to  the passed in object.
javax.print.attribute.standard.Destination.equals,Returns whether this destination attribute is equivalent to the passed in  object.
javax.print.attribute.standard.DialogOwner.getOwner,"Returns aWindow owner, if one was specified,  otherwisenull."
javax.print.attribute.standard.DialogTypeSelection.getCategory,"Gets the printing attribute class which is to be used as the ""category""  for this printing attribute value."
javax.print.attribute.standard.DialogTypeSelection.getEnumValueTable,Returns the enumeration value table for classDialogTypeSelection.
javax.print.attribute.standard.DialogTypeSelection.getName,Gets the name of the category of which this attribute value is an  instance.
javax.print.attribute.standard.DialogTypeSelection.getStringTable,Returns the string table for classDialogTypeSelection.
javax.print.attribute.standard.DocumentName.equals,Returns whether this document name attribute is equivalent to the passed  in object.
javax.print.attribute.standard.Fidelity.getEnumValueTable,Returns the enumeration value table for classFidelity.
javax.print.attribute.standard.Fidelity.getStringTable,Returns the string table for classFidelity.
javax.print.attribute.standard.Finishings.getEnumValueTable,Returns the enumeration value table for classFinishings.
javax.print.attribute.standard.Finishings.getOffset,Returns the lowest integer value used by classFinishings.
javax.print.attribute.standard.Finishings.getStringTable,Returns the string table for classFinishings.
javax.print.attribute.standard.JobHoldUntil.equals,Returns whether this job hold until attribute is equivalent to the passed  in object.
javax.print.attribute.standard.JobImpressions.equals,Returns whether this job impressions attribute is equivalent to the  passed in object.
javax.print.attribute.standard.JobImpressionsCompleted.equals,Returns whether this job impressions completed attribute is equivalent tp  the passed in object.
javax.print.attribute.standard.JobImpressionsSupported.equals,Returns whether this job impressions supported attribute is equivalent to  the passed in object.
javax.print.attribute.standard.JobKOctets.equals,Returns whether this job K octets attribute is equivalent to the passed  in object.
javax.print.attribute.standard.JobKOctetsProcessed.equals,Returns whether this job K octets processed attribute is equivalent to  the passed in object.
javax.print.attribute.standard.JobKOctetsSupported.equals,Returns whether this job K octets supported attribute is equivalent to  the passed in object.
javax.print.attribute.standard.JobMediaSheets.equals,Returns whether this job media sheets attribute is equivalent to the  passed in object.
javax.print.attribute.standard.JobMediaSheetsCompleted.equals,Returns whether this job media sheets completed attribute is equivalent  to the passed in object.
javax.print.attribute.standard.JobMediaSheetsSupported.equals,Returns whether this job media sheets supported attribute is equivalent  to the passed in object.
javax.print.attribute.standard.JobMessageFromOperator.equals,Returns whether this job message from operator attribute is equivalent to  the passed in object.
javax.print.attribute.standard.JobName.equals,Returns whether this job name attribute is equivalent to the passed in  object.
javax.print.attribute.standard.JobOriginatingUserName.equals,Returns whether this job originating user name attribute is equivalent to  the passed in object.
javax.print.attribute.standard.JobPriority.equals,Returns whether this job priority attribute is equivalent to the passed  in object.
javax.print.attribute.standard.JobPrioritySupported.equals,Returns whether this job priority supported attribute is equivalent to  the passed in object.
javax.print.attribute.standard.JobSheets.getEnumValueTable,Returns the enumeration value table for classJobSheets.
javax.print.attribute.standard.JobSheets.getStringTable,Returns the string table for classJobSheets.
javax.print.attribute.standard.JobState.getEnumValueTable,Returns the enumeration value table for classJobState.
javax.print.attribute.standard.JobState.getStringTable,Returns the string table for classJobState.
javax.print.attribute.standard.JobStateReason.getEnumValueTable,Returns the enumeration value table for classJobStateReason.
javax.print.attribute.standard.JobStateReason.getStringTable,Returns the string table for classJobStateReason.
javax.print.attribute.standard.JobStateReasons.add,Adds the specified element to this job state reasons attribute if it is  not already present.
javax.print.attribute.standard.Media.equals,Returns whether this media attribute is equivalent to the passed in  object.
javax.print.attribute.standard.MediaName.getEnumValueTable,Returns the enumeration value table for classMediaTray.
javax.print.attribute.standard.MediaName.getStringTable,Returns the string table for classMediaTray.
javax.print.attribute.standard.MediaPrintableArea.equals,Returns whether this media margins attribute is equivalent to the passed  in object.
javax.print.attribute.standard.MediaPrintableArea.getHeight,Get theheightof the printable area in the specified units.
javax.print.attribute.standard.MediaPrintableArea.getPrintableArea,"Get the printable area as an array of 4 values in the orderx, y, w, h."
javax.print.attribute.standard.MediaPrintableArea.getWidth,Get thewidthof the printable area in the specified units.
javax.print.attribute.standard.MediaPrintableArea.getX,Get thexlocation of the origin of the printable area in the  specified units.
javax.print.attribute.standard.MediaPrintableArea.getY,Get theylocation of the origin of the printable area in the  specified units.
javax.print.attribute.standard.MediaPrintableArea.hashCode,Returns a hash code value for this attribute.
javax.print.attribute.standard.MediaPrintableArea.toString,Returns a string version of this rectangular size attribute in mm.
javax.print.attribute.standard.MediaPrintableArea.toString,Returns a string version of this rectangular size attribute in the given  units.
javax.print.attribute.standard.MediaSize.equals,Returns whether this media size attribute is equivalent to the passed in  object.
javax.print.attribute.standard.MediaSize.findMedia,The specified dimensions are used to locate a matchingMediaSizeinstance from amongst all the standardMediaSizeinstances.
javax.print.attribute.standard.MediaSize.getMediaSizeForName,Get theMediaSizefor the specified named media.
javax.print.attribute.standard.MediaSize.getMediaSizeName,"Get the media name, if any, for this size."
javax.print.attribute.standard.MediaSizeName.getEnumValueTable,Returns the enumeration value table for classMediaSizeName.
javax.print.attribute.standard.MediaSizeName.getStringTable,Returns the string table for classMediaSizeName.
javax.print.attribute.standard.MultipleDocumentHandling.getEnumValueTable,Returns the enumeration value table for classMultipleDocumentHandling.
javax.print.attribute.standard.MultipleDocumentHandling.getStringTable,Returns the string table for classMultipleDocumentHandling.
javax.print.attribute.standard.NumberOfDocuments.equals,Returns whether this number of documents attribute is equivalent to the  passed in object.
javax.print.attribute.standard.NumberOfInterveningJobs.equals,Returns whether this number of intervening jobs attribute is equivalent  to the passed in object.
javax.print.attribute.standard.NumberUp.equals,Returns whether this number up attribute is equivalent to the passed in  object.
javax.print.attribute.standard.NumberUpSupported.equals,Returns whether this number up supported attribute is equivalent to the  passed in object.
javax.print.attribute.standard.OrientationRequested.getEnumValueTable,Returns the enumeration value table for classOrientationRequested.
javax.print.attribute.standard.OrientationRequested.getOffset,Returns the lowest integer value used by classOrientationRequested.
javax.print.attribute.standard.OrientationRequested.getStringTable,Returns the string table for classOrientationRequested.
javax.print.attribute.standard.OutputDeviceAssigned.equals,Returns whether this output device assigned attribute is equivalent to  the passed in object.
javax.print.attribute.standard.PageRanges.equals,Returns whether this page ranges attribute is equivalent to the passed in  object.
javax.print.attribute.standard.PagesPerMinute.equals,Returns whether this pages per minute attribute is equivalent to the  passed in object.
javax.print.attribute.standard.PagesPerMinuteColor.equals,Returns whether this pages per minute color attribute is equivalent to  the passed in object.
javax.print.attribute.standard.PDLOverrideSupported.getEnumValueTable,Returns the enumeration value table for classPDLOverrideSupported.
javax.print.attribute.standard.PDLOverrideSupported.getStringTable,Returns the string table for classPDLOverrideSupported.
javax.print.attribute.standard.PresentationDirection.getEnumValueTable,Returns the enumeration value table for classPresentationDirection.
javax.print.attribute.standard.PresentationDirection.getStringTable,Returns the string table for classPresentationDirection.
javax.print.attribute.standard.PrinterInfo.equals,Returns whether this printer info attribute is equivalent to the passed  in object.
javax.print.attribute.standard.PrinterIsAcceptingJobs.getEnumValueTable,Returns the enumeration value table for classPrinterIsAcceptingJobs.
javax.print.attribute.standard.PrinterIsAcceptingJobs.getStringTable,Returns the string table for classPrinterIsAcceptingJobs.
javax.print.attribute.standard.PrinterLocation.equals,Returns whether this printer location attribute is equivalent to the  passed in object.
javax.print.attribute.standard.PrinterMakeAndModel.equals,Returns whether this printer make and model attribute is equivalent to  the passed in object.
javax.print.attribute.standard.PrinterMessageFromOperator.equals,Returns whether this printer message from operator attribute is  equivalent to the passed in object.
javax.print.attribute.standard.PrinterMoreInfo.equals,Returns whether this printer more info attribute is equivalent to the  passed in object.
javax.print.attribute.standard.PrinterMoreInfoManufacturer.equals,Returns whether this printer more info manufacturer attribute is  equivalent to the passed in object.
javax.print.attribute.standard.PrinterName.equals,Returns whether this printer name attribute is equivalent to the passed  in object.
javax.print.attribute.standard.PrinterResolution.equals,Returns whether this printer resolution attribute is equivalent to the  passed in object.
javax.print.attribute.standard.PrinterState.getEnumValueTable,Returns the enumeration value table for classPrinterState.
javax.print.attribute.standard.PrinterState.getStringTable,Returns the string table for classPrinterState.
javax.print.attribute.standard.PrinterStateReason.getEnumValueTable,Returns the enumeration value table for classPrinterStateReason.
javax.print.attribute.standard.PrinterStateReason.getStringTable,Returns the string table for classPrinterStateReason.
javax.print.attribute.standard.PrinterStateReasons.printerStateReasonSet,Obtain an unmodifiable set view of the individual printer state reason  attributes at the given severity level in thisPrinterStateReasonsattribute.
javax.print.attribute.standard.PrinterStateReasons.put,"Adds the given printer state reason to this printer state reasons  attribute, associating it with the given severity level."
javax.print.attribute.standard.PrintQuality.getEnumValueTable,Returns the enumeration value table for classPrintQuality.
javax.print.attribute.standard.PrintQuality.getOffset,Returns the lowest integer value used by classPrintQuality.
javax.print.attribute.standard.PrintQuality.getStringTable,Returns the string table for classPrintQuality.
javax.print.attribute.standard.QueuedJobCount.equals,Returns whether this queued job count attribute is equivalent to the  passed in object.
javax.print.attribute.standard.ReferenceUriSchemesSupported.getEnumValueTable,Returns the enumeration value table for classReferenceUriSchemesSupported.
javax.print.attribute.standard.ReferenceUriSchemesSupported.getStringTable,Returns the string table for classReferenceUriSchemesSupported.
javax.print.attribute.standard.RequestingUserName.equals,Returns whether this requesting user name attribute is equivalent to the  passed in object.
javax.print.attribute.standard.Severity.getEnumValueTable,Returns the enumeration value table for classSeverity.
javax.print.attribute.standard.Severity.getStringTable,Returns the string table for classSeverity.
javax.print.attribute.standard.SheetCollate.getEnumValueTable,Returns the enumeration value table for classSheetCollate.
javax.print.attribute.standard.SheetCollate.getStringTable,Returns the string table for classSheetCollate.
javax.print.attribute.standard.Sides.getEnumValueTable,Returns the enumeration value table for classSides.
javax.print.attribute.standard.Sides.getStringTable,Returns the string table for classSides.
javax.print.event.PrintEvent.toString,Returns a string representation of thisPrintEvent.
javax.print.event.PrintJobAdapter.printDataTransferCompleted,"Called to notify the client that data has been successfully transferred  to the print service, and the client may free local resources allocated  for that data."
javax.print.event.PrintJobAdapter.printJobCanceled,Called to notify the client that the job was canceled by user or program.
javax.print.event.PrintJobAdapter.printJobCompleted,Called to notify the client that the job completed successfully.
javax.print.event.PrintJobAdapter.printJobFailed,Called to notify the client that the job failed to complete successfully  and will have to be resubmitted.
javax.print.event.PrintJobAdapter.printJobNoMoreEvents,Called to notify the client that no more events will be delivered.
javax.print.event.PrintJobAdapter.printJobRequiresAttention,Called to notify the client that some possibly user rectifiable problem  occurs (eg printer out of paper).
javax.print.event.PrintJobAttributeEvent.getAttributes,Determine the printing attributes that changed and their new values.
javax.print.event.PrintJobAttributeEvent.getPrintJob,Determine thePrintJobto which this print job event pertains.
javax.print.event.PrintJobEvent.getPrintEventType,Gets the reason for this event.
javax.print.event.PrintJobEvent.getPrintJob,Determines theDocPrintJobto which this print job event  pertains.
javax.print.event.PrintServiceAttributeEvent.getAttributes,Determine the printing service attributes that changed and their new  values.
javax.print.event.PrintServiceAttributeEvent.getPrintService,Returns the print service.
javax.sound.midi.Instrument.getPatch,Obtains thePatchobject that indicates the bank and program  numbers where this instrument is to be stored in the synthesizer.
javax.sound.midi.MetaMessage.clone,Creates a new object of the same class and with the same contents as this  object.
javax.sound.midi.MetaMessage.getData,Obtains a copy of the data for the meta message.
javax.sound.midi.MetaMessage.getType,Obtains the type of theMetaMessage.
javax.sound.midi.MetaMessage.setMessage,Sets the message parameters for aMetaMessage.
javax.sound.midi.MidiEvent.getMessage,Obtains the MIDI message contained in the event.
javax.sound.midi.MidiEvent.getTick,"Obtains the time-stamp for the event, in MIDI ticks."
javax.sound.midi.MidiEvent.setTick,"Sets the time-stamp for the event, in MIDI ticks."
javax.sound.midi.MidiFileFormat.getByteLength,"Obtains the length of the MIDI file, expressed in 8-bit bytes."
javax.sound.midi.MidiFileFormat.getDivisionType,Obtains the timing division type for the MIDI file.
javax.sound.midi.MidiFileFormat.getMicrosecondLength,"Obtains the length of the MIDI file, expressed in microseconds."
javax.sound.midi.MidiFileFormat.getProperty,Obtain the property value specified by the key.
javax.sound.midi.MidiFileFormat.getResolution,Obtains the timing resolution for the MIDI file.
javax.sound.midi.MidiFileFormat.getType,Obtains the MIDI file type.
javax.sound.midi.MidiFileFormat.properties,Obtain an unmodifiable map of properties.
javax.sound.midi.MidiMessage.getLength,Obtains the total length of the MIDI message in bytes.
javax.sound.midi.MidiMessage.getMessage,Obtains the MIDI message data.
javax.sound.midi.MidiMessage.getStatus,Obtains the status byte for the MIDI message.
javax.sound.midi.MidiMessage.setMessage,Sets the data for the MIDI message.
javax.sound.midi.MidiSystem.getMidiDevice,Obtains the requested MIDI device.
javax.sound.midi.MidiSystem.getMidiDeviceInfo,Obtains an array of information objects representing the set of all MIDI  devices available on the system.
javax.sound.midi.MidiSystem.getMidiFileFormat,Obtains the MIDI file format of the specifiedFile.
javax.sound.midi.MidiSystem.getMidiFileFormat,Obtains the MIDI file format of the data in the specified input stream.
javax.sound.midi.MidiSystem.getMidiFileFormat,Obtains the MIDI file format of the data in the specified URL.
javax.sound.midi.MidiSystem.getMidiFileTypes,Obtains the set of MIDI file types for which file writing support is  provided by the system.
javax.sound.midi.MidiSystem.getMidiFileTypes,Obtains the set of MIDI file types that the system can write from the  sequence specified.
javax.sound.midi.MidiSystem.getReceiver,Obtains a MIDI receiver from an external MIDI port or other default  device.
javax.sound.midi.MidiSystem.getSequence,Obtains a MIDI sequence from the specifiedFile.
javax.sound.midi.MidiSystem.getSequence,Obtains a MIDI sequence from the specified input stream.
javax.sound.midi.MidiSystem.getSequence,Obtains a MIDI sequence from the specified URL.
javax.sound.midi.MidiSystem.getSequencer,"Obtains the defaultSequencer, connected to a default device."
javax.sound.midi.MidiSystem.getSequencer,"Obtains the defaultSequencer, optionally connected to a default  device."
javax.sound.midi.MidiSystem.getSoundbank,Constructs aSoundbankby reading it from the specifiedFile.
javax.sound.midi.MidiSystem.getSoundbank,Constructs a MIDI sound bank by reading it from the specified stream.
javax.sound.midi.MidiSystem.getSoundbank,Constructs aSoundbankby reading it from the specified URL.
javax.sound.midi.MidiSystem.getSynthesizer,Obtains the default synthesizer.
javax.sound.midi.MidiSystem.getTransmitter,Obtains a MIDI transmitter from an external MIDI port or other default  source.
javax.sound.midi.MidiSystem.isFileTypeSupported,Indicates whether file writing support for the specified MIDI file type  is provided by the system.
javax.sound.midi.MidiSystem.isFileTypeSupported,Indicates whether a MIDI file of the file type specified can be written  from the sequence indicated.
javax.sound.midi.MidiSystem.write,Writes a stream of bytes representing a file of the MIDI file type  indicated to the external file provided.
javax.sound.midi.MidiSystem.write,Writes a stream of bytes representing a file of the MIDI file type  indicated to the output stream provided.
javax.sound.midi.Patch.getBank,Returns the number of the bank that contains the instrument whose  location thisPatchspecifies.
javax.sound.midi.Patch.getProgram,"Returns the index, within a bank, of the instrument whose location thisPatchspecifies."
javax.sound.midi.Sequence.createTrack,"Creates a new, initially empty track as part of this sequence."
javax.sound.midi.Sequence.deleteTrack,Removes the specified track from the sequence.
javax.sound.midi.Sequence.getDivisionType,Obtains the timing division type for this sequence.
javax.sound.midi.Sequence.getMicrosecondLength,"Obtains the duration of this sequence, expressed in microseconds."
javax.sound.midi.Sequence.getPatchList,Obtains a list of patches referenced in this sequence.
javax.sound.midi.Sequence.getResolution,Obtains the timing resolution for this sequence.
javax.sound.midi.Sequence.getTickLength,"Obtains the duration of this sequence, expressed in MIDI ticks."
javax.sound.midi.Sequence.getTracks,Obtains an array containing all the tracks in this sequence.
javax.sound.midi.ShortMessage.getChannel,Obtains the MIDI channel associated with this event.
javax.sound.midi.ShortMessage.getCommand,Obtains the MIDI command associated with this event.
javax.sound.midi.ShortMessage.getData1,Obtains the first data byte in the message.
javax.sound.midi.ShortMessage.getData2,Obtains the second data byte in the message.
javax.sound.midi.ShortMessage.getDataLength,Retrieves the number of data bytes associated with a particular status  byte value.
javax.sound.midi.ShortMessage.setMessage,Sets the parameters for a MIDI message that takes no data bytes.
javax.sound.midi.ShortMessage.setMessage,Sets the parameters for a MIDI message that takes one or two data bytes.
javax.sound.midi.ShortMessage.setMessage,Sets the short message parameters for a channel message which takes up to  two data bytes.
javax.sound.midi.SoundbankResource.getData,Obtains the sampled audio that is stored in thisSoundbankResource.
javax.sound.midi.SoundbankResource.getDataClass,Obtains the class used by this sample to represent its data.
javax.sound.midi.SoundbankResource.getName,Obtains the name of the resource.
javax.sound.midi.SoundbankResource.getSoundbank,Obtains the sound bank that contains thisSoundbankResource.
javax.sound.midi.SysexMessage.getData,Obtains a copy of the data for the system exclusive message.
javax.sound.midi.SysexMessage.setMessage,Sets the data for the system exclusive message.
javax.sound.midi.Track.add,Adds a new event to the track.
javax.sound.midi.Track.get,Obtains the event at the specified index.
javax.sound.midi.Track.remove,Removes the specified event from the track.
javax.sound.midi.Track.size,Obtains the number of events in this track.
javax.sound.midi.Track.ticks,"Obtains the length of the track, expressed in MIDI ticks."
javax.sound.midi.spi.MidiDeviceProvider.getDevice,Obtains an instance of the device represented by the info object.
javax.sound.midi.spi.MidiDeviceProvider.getDeviceInfo,Obtains the set of info objects representing the device or devices  provided by thisMidiDeviceProvider.
javax.sound.midi.spi.MidiDeviceProvider.isDeviceSupported,Indicates whether the device provider supports the device represented by  the specified device info object.
javax.sound.midi.spi.MidiFileReader.getMidiFileFormat,Obtains the MIDI file format of theFileprovided.
javax.sound.midi.spi.MidiFileReader.getMidiFileFormat,Obtains the MIDI file format of the input stream provided.
javax.sound.midi.spi.MidiFileReader.getMidiFileFormat,Obtains the MIDI file format of theURLprovided.
javax.sound.midi.spi.MidiFileReader.getSequence,Obtains a MIDI sequence from theFileprovided.
javax.sound.midi.spi.MidiFileReader.getSequence,Obtains a MIDI sequence from the input stream provided.
javax.sound.midi.spi.MidiFileReader.getSequence,Obtains a MIDI sequence from theURLprovided.
javax.sound.midi.spi.MidiFileWriter.getMidiFileTypes,Obtains the set of MIDI file types for which file writing support is  provided by this file writer.
javax.sound.midi.spi.MidiFileWriter.getMidiFileTypes,Obtains the file types that this file writer can write from the sequence  specified.
javax.sound.midi.spi.MidiFileWriter.isFileTypeSupported,Indicates whether file writing support for the specified MIDI file type  is provided by this file writer.
javax.sound.midi.spi.MidiFileWriter.write,Writes a stream of bytes representing a MIDI file of the file type  indicated to the external file provided.
javax.sound.midi.spi.MidiFileWriter.write,Writes a stream of bytes representing a MIDI file of the file type  indicated to the output stream provided.
javax.sound.midi.spi.SoundbankReader.getSoundbank,Obtains a soundbank object from theFileprovided.
javax.sound.midi.spi.SoundbankReader.getSoundbank,Obtains a soundbank object from theInputStreamprovided.
javax.sound.midi.spi.SoundbankReader.getSoundbank,Obtains a soundbank object from theURLprovided.
javax.sound.sampled.AudioFileFormat.getByteLength,Obtains the size in bytes of the entire audio file (not just its audio  data).
javax.sound.sampled.AudioFileFormat.getFormat,Obtains the format of the audio data contained in the audio file.
javax.sound.sampled.AudioFileFormat.getFrameLength,"Obtains the length of the audio data contained in the file, expressed in  sample frames."
javax.sound.sampled.AudioFileFormat.getType,"Obtains the audio file type, such asWAVEorAU."
javax.sound.sampled.AudioFileFormat.toString,Returns a string representation of the audio file format.
javax.sound.sampled.AudioFileFormat.equals,"Indicates whether the specified object is equal to this file type,  returningtrueif the objects are equal."
javax.sound.sampled.AudioFileFormat.getExtension,Obtains the common file name extension for this file type.
javax.sound.sampled.AudioFileFormat.hashCode,Returns a hash code value for this file type.
javax.sound.sampled.AudioFileFormat.toString,Returns type's name as the string representation of the file type.
javax.sound.sampled.AudioFormat.equals,"Indicates whether the specified object is equal to this encoding,  returningtrueif the objects are equal."
javax.sound.sampled.AudioFormat.hashCode,Returns a hash code value for this encoding.
javax.sound.sampled.AudioFormat.toString,Returns encoding's name as the string representation of the encoding.
javax.sound.sampled.AudioFormat.getChannels,Obtains the number of channels.
javax.sound.sampled.AudioFormat.getEncoding,Obtains the type of encoding for sounds in this format.
javax.sound.sampled.AudioFormat.getFrameRate,Obtains the frame rate in frames per second.
javax.sound.sampled.AudioFormat.getFrameSize,Obtains the frame size in bytes.
javax.sound.sampled.AudioFormat.getSampleRate,Obtains the sample rate.
javax.sound.sampled.AudioFormat.getSampleSizeInBits,Obtains the size of a sample.
javax.sound.sampled.AudioFormat.isBigEndian,Indicates whether the audio data is stored in big-endian or little-endian  byte order.
javax.sound.sampled.AudioFormat.matches,Indicates whether this format matches the one specified.
javax.sound.sampled.AudioFormat.toString,"Returns a string that describes the audio format, such as: ""PCM SIGNED  22050 Hz 16 bit mono big-endian""."
javax.sound.sampled.AudioInputStream.available,Returns the maximum number of bytes that can be read (or skipped over)  from this audio input stream without blocking.
javax.sound.sampled.AudioInputStream.close,Closes this audio input stream and releases any system resources  associated with the stream.
javax.sound.sampled.AudioInputStream.getFormat,Obtains the audio format of the sound data in this audio input stream.
javax.sound.sampled.AudioInputStream.getFrameLength,"Obtains the length of the stream, expressed in sample frames rather than  bytes."
javax.sound.sampled.AudioInputStream.mark,Marks the current position in this audio input stream.
javax.sound.sampled.AudioInputStream.markSupported,Tests whether this audio input stream supports themarkandresetmethods.
javax.sound.sampled.AudioInputStream.read,Reads the next byte of data from the audio input stream.
javax.sound.sampled.AudioInputStream.read,Reads some number of bytes from the audio input stream and stores them  into the buffer arrayb.
javax.sound.sampled.AudioInputStream.read,"Reads up to a specified maximum number of bytes of data from the audio  stream, putting them into the given byte array."
javax.sound.sampled.AudioInputStream.reset,Repositions this audio input stream to the position it had at the time  itsmarkmethod was last invoked.
javax.sound.sampled.AudioInputStream.skip,Skips over and discards a specified number of bytes from this audio input  stream.
javax.sound.sampled.AudioSystem.getAudioFileFormat,Obtains the audio file format of the specifiedFile.
javax.sound.sampled.AudioSystem.getAudioFileFormat,Obtains the audio file format of the provided input stream.
javax.sound.sampled.AudioSystem.getAudioFileFormat,Obtains the audio file format of the specifiedURL.
javax.sound.sampled.AudioSystem.getAudioFileTypes,Obtains the file types for which file writing support is provided by the  system.
javax.sound.sampled.AudioSystem.getAudioFileTypes,Obtains the file types that the system can write from the audio input  stream specified.
javax.sound.sampled.AudioSystem.getAudioInputStream,Obtains an audio input stream from the providedFile.
javax.sound.sampled.AudioSystem.getAudioInputStream,Obtains an audio input stream from the provided input stream.
javax.sound.sampled.AudioSystem.getAudioInputStream,Obtains an audio input stream from theURLprovided.
javax.sound.sampled.AudioSystem.getAudioInputStream,"Obtains an audio input stream of the indicated encoding, by converting  the provided audio input stream."
javax.sound.sampled.AudioSystem.getAudioInputStream,"Obtains an audio input stream of the indicated format, by converting the  provided audio input stream."
javax.sound.sampled.AudioSystem.getClip,Obtains a clip that can be used for playing back an audio file or an  audio stream.
javax.sound.sampled.AudioSystem.getClip,Obtains a clip from the specified mixer that can be used for playing back  an audio file or an audio stream.
javax.sound.sampled.AudioSystem.getLine,Obtains a line that matches the description in the specifiedLine.Infoobject.
javax.sound.sampled.AudioSystem.getMixer,Obtains the requested audio mixer.
javax.sound.sampled.AudioSystem.getMixerInfo,Obtains an array of mixer info objects that represents the set of audio  mixers that are currently installed on the system.
javax.sound.sampled.AudioSystem.getSourceDataLine,Obtains a source data line that can be used for playing back audio data  in the format specified by theAudioFormatobject.
javax.sound.sampled.AudioSystem.getSourceDataLine,"Obtains a source data line that can be used for playing back audio data  in the format specified by theAudioFormatobject, provided by  the mixer specified by theMixer.Infoobject."
javax.sound.sampled.AudioSystem.getSourceLineInfo,Obtains information about all source lines of a particular type that are  supported by the installed mixers.
javax.sound.sampled.AudioSystem.getTargetDataLine,Obtains a target data line that can be used for recording audio data in  the format specified by theAudioFormatobject.
javax.sound.sampled.AudioSystem.getTargetDataLine,"Obtains a target data line that can be used for recording audio data in  the format specified by theAudioFormatobject, provided by the  mixer specified by theMixer.Infoobject."
javax.sound.sampled.AudioSystem.getTargetEncodings,Obtains the encodings that the system can obtain from an audio input  stream with the specified format using the set of installed format  converters.
javax.sound.sampled.AudioSystem.getTargetEncodings,Obtains the encodings that the system can obtain from an audio input  stream with the specified encoding using the set of installed format  converters.
javax.sound.sampled.AudioSystem.getTargetFormats,Obtains the formats that have a particular encoding and that the system  can obtain from a stream of the specified format using the set of  installed format converters.
javax.sound.sampled.AudioSystem.getTargetLineInfo,Obtains information about all target lines of a particular type that are  supported by the installed mixers.
javax.sound.sampled.AudioSystem.isConversionSupported,Indicates whether an audio input stream of the specified encoding can be  obtained from an audio input stream that has the specified format.
javax.sound.sampled.AudioSystem.isConversionSupported,Indicates whether an audio input stream of a specified format can be  obtained from an audio input stream of another specified format.
javax.sound.sampled.AudioSystem.isFileTypeSupported,Indicates whether file writing support for the specified file type is  provided by the system.
javax.sound.sampled.AudioSystem.isFileTypeSupported,Indicates whether an audio file of the specified file type can be written  from the indicated audio input stream.
javax.sound.sampled.AudioSystem.isLineSupported,Indicates whether the system supports any lines that match the specifiedLine.Infoobject.
javax.sound.sampled.AudioSystem.write,Writes a stream of bytes representing an audio file of the specified file  type to the external file provided.
javax.sound.sampled.AudioSystem.write,Writes a stream of bytes representing an audio file of the specified file  type to the output stream provided.
javax.sound.sampled.BooleanControl.getStateLabel,Obtains the label for the specified state.
javax.sound.sampled.BooleanControl.getValue,Obtains this control's current value.
javax.sound.sampled.BooleanControl.setValue,Sets the current value for the control.
javax.sound.sampled.BooleanControl.toString,Returns a string representation of the boolean control.
javax.sound.sampled.CompoundControl.getMemberControls,Returns the set of member controls that comprise the compound control.
javax.sound.sampled.CompoundControl.toString,Returns a string representation of the compound control.
javax.sound.sampled.Control.getType,Obtains the control's type.
javax.sound.sampled.Control.toString,Returns a string representation of the control.
javax.sound.sampled.Control.equals,"Indicates whether the specified object is equal to this control type,  returningtrueif the objects are the same."
javax.sound.sampled.Control.hashCode,Returns a hash code value for this control type.
javax.sound.sampled.Control.toString,Returns type's name as the string representation of the control type.
javax.sound.sampled.EnumControl.getValues,Returns the set of possible values for this control.
javax.sound.sampled.EnumControl.toString,Returns a string representation of the enumerated control.
javax.sound.sampled.FloatControl.getMaximum,Obtains the maximum value permitted.
javax.sound.sampled.FloatControl.getMaxLabel,"Obtains the label for the maximum value, such as ""Right"" or ""Full""."
javax.sound.sampled.FloatControl.getMidLabel,"Obtains the label for the mid-point value, such as ""Center"" or ""Default""."
javax.sound.sampled.FloatControl.getMinimum,Obtains the minimum value permitted.
javax.sound.sampled.FloatControl.getMinLabel,"Obtains the label for the minimum value, such as ""Left"" or ""Off""."
javax.sound.sampled.FloatControl.getPrecision,"Obtains the resolution or granularity of the control, in the units that  the control measures."
javax.sound.sampled.FloatControl.getUnits,"Obtains the label for the units in which the control's values are  expressed, such as ""dB"" or ""frames per second."""
javax.sound.sampled.FloatControl.getUpdatePeriod,"Obtains the smallest time interval, in microseconds, over which the  control's value can change during a shift."
javax.sound.sampled.FloatControl.shift,"Changes the control value from the initial value to the final value  linearly over the specified time period, specified in microseconds."
javax.sound.sampled.FloatControl.toString,Returns a string representation of the float control.
javax.sound.sampled.LineEvent.getFramePosition,"Obtains the position in the line's audio data when the event occurred,  expressed in sample frames."
javax.sound.sampled.LineEvent.getLine,Obtains the audio line that is the source of this event.
javax.sound.sampled.LineEvent.getType,Obtains the event's type.
javax.sound.sampled.LineEvent.toString,Returns a string representation of the event.
javax.sound.sampled.LineEvent.equals,"Indicates whether the specified object is equal to this event type,  returningtrueif the objects are the same."
javax.sound.sampled.LineEvent.hashCode,Returns a hash code value for this event type.
javax.sound.sampled.LineEvent.toString,Returns type's name as the string representation of the event type.
javax.sound.sampled.ReverbType.equals,"Indicates whether the specified object is equal to this reverb type,  returningtrueif the objects are the same."
javax.sound.sampled.ReverbType.getDecayTime,"Obtains the decay time, which is the amount of time over which the late  reflections attenuate to effective zero."
javax.sound.sampled.ReverbType.getEarlyReflectionDelay,Returns the early reflection delay time in microseconds.
javax.sound.sampled.ReverbType.getEarlyReflectionIntensity,Returns the early reflection intensity in decibels.
javax.sound.sampled.ReverbType.getLateReflectionDelay,Returns the late reflection delay time in microseconds.
javax.sound.sampled.ReverbType.getLateReflectionIntensity,Returns the late reflection intensity in decibels.
javax.sound.sampled.ReverbType.getName,Obtains the name of this reverb type.
javax.sound.sampled.ReverbType.hashCode,Returns a hash code value for this reverb type.
javax.sound.sampled.ReverbType.toString,"Returns a string representation of the reverb type, including its name  and its parameter settings."
javax.sound.sampled.spi.AudioFileReader.getAudioFileFormat,Obtains the audio file format of theFileprovided.
javax.sound.sampled.spi.AudioFileReader.getAudioFileFormat,Obtains the audio file format of the input stream provided.
javax.sound.sampled.spi.AudioFileReader.getAudioFileFormat,Obtains the audio file format of theURLprovided.
javax.sound.sampled.spi.AudioFileReader.getAudioInputStream,Obtains an audio input stream from theFileprovided.
javax.sound.sampled.spi.AudioFileReader.getAudioInputStream,Obtains an audio input stream from the input stream provided.
javax.sound.sampled.spi.AudioFileWriter.getAudioFileTypes,Obtains the file types for which file writing support is provided by this  audio file writer.
javax.sound.sampled.spi.AudioFileWriter.getAudioFileTypes,Obtains the file types that this audio file writer can write from the  audio input stream specified.
javax.sound.sampled.spi.AudioFileWriter.isFileTypeSupported,Indicates whether file writing support for the specified file type is  provided by this audio file writer.
javax.sound.sampled.spi.AudioFileWriter.isFileTypeSupported,Indicates whether an audio file of the type specified can be written from  the audio input stream indicated.
javax.sound.sampled.spi.AudioFileWriter.write,Writes a stream of bytes representing an audio file of the file format  indicated to the external file provided.
javax.sound.sampled.spi.AudioFileWriter.write,Writes a stream of bytes representing an audio file of the file type  indicated to the output stream provided.
javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream,Obtains an audio input stream with the specified encoding from the given  audio input stream.
javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream,Obtains an audio input stream with the specified format from the given  audio input stream.
javax.sound.sampled.spi.FormatConversionProvider.getSourceEncodings,Obtains the set of source format encodings from which format conversion  services are provided by this provider.
javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings,Obtains the set of target format encodings to which format conversion  services are provided by this provider.
javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings,Obtains the set of target format encodings supported by the format  converter given a particular source format.
javax.sound.sampled.spi.FormatConversionProvider.getTargetFormats,Obtains the set of target formats with the encoding specified supported  by the format converter.
javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported,Indicates whether the format converter supports conversion to a  particular encoding from a particular format.
javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported,Indicates whether the format converter supports conversion to one  particular format from another.
javax.sound.sampled.spi.FormatConversionProvider.isSourceEncodingSupported,Indicates whether the format converter supports conversion from the  specified source format encoding.
javax.sound.sampled.spi.FormatConversionProvider.isTargetEncodingSupported,Indicates whether the format converter supports conversion to the  specified target format encoding.
javax.sound.sampled.spi.MixerProvider.getMixer,Obtains an instance of the mixer represented by the info object.
javax.sound.sampled.spi.MixerProvider.getMixerInfo,Obtains the set of info objects representing the mixer or mixers provided  by this MixerProvider.
javax.sound.sampled.spi.MixerProvider.isMixerSupported,Indicates whether the mixer provider supports the mixer represented by  the specified mixer info object.
javax.swing.AbstractAction.clone,Clones the abstract action.
javax.swing.AbstractAction.firePropertyChange,Supports reporting bound property changes.
javax.swing.AbstractAction.getKeys,"Returns an array ofObjects which are keys for  which values have been set for thisAbstractAction,  ornullif no keys have values set."
javax.swing.AbstractAction.getPropertyChangeListeners,Returns an array of all thePropertyChangeListeners added  to this AbstractAction with addPropertyChangeListener().
javax.swing.AbstractAction.getValue,Gets theObjectassociated with the specified key.
javax.swing.AbstractAction.isEnabled,Returns true if the action is enabled.
javax.swing.AbstractAction.putValue,Sets theValueassociated with the specified key.
javax.swing.AbstractAction.setEnabled,Sets whether theActionis enabled.
javax.swing.AbstractButton.getAccessibleIcon,Get the AccessibleIcons associated with this object if one  or more exist.
javax.swing.AbstractButton.getAccessibleKeyBinding,Returns key bindings associated with this object
javax.swing.AbstractButton.getAccessibleName,Returns the accessible name of this object.
javax.swing.AbstractButton.getAccessibleRelationSet,Get the AccessibleRelationSet associated with this object if one  exists.
javax.swing.AbstractButton.getCaretPosition,Return the zero-based offset of the caret.
javax.swing.AbstractButton.getCharacterAttribute,Return the AttributeSet for a given character at a given index
javax.swing.AbstractButton.getCharacterBounds,Determine the bounding box of the character at the given  index into the string.
javax.swing.AbstractButton.getCharCount,Return the number of characters (valid indicies)
javax.swing.AbstractButton.getTitledBorderText,Returns the titled border text
javax.swing.AbstractButton.getToolTipText,Returns the tool tip text
javax.swing.AbstractButton.stateChanged,Invoked when the target of the listener has changed its state.
javax.swing.AbstractButton.actionPropertyChanged,Updates the button's state in response to property changes in the  associated action.
javax.swing.AbstractButton.addActionListener,Adds anActionListenerto the button.
javax.swing.AbstractButton.addChangeListener,Adds aChangeListenerto the button.
javax.swing.AbstractButton.addImpl,"Adds the specified component to this container at the specified  index, refer toContainer.addImpl(Component, Object, int)for a complete description of this method."
javax.swing.AbstractButton.addItemListener,Adds anItemListenerto thecheckbox.
javax.swing.AbstractButton.checkHorizontalKey,Verify that thekeyargument is a legal value for thehorizontalAlignmentandhorizontalTextPositionproperties.
javax.swing.AbstractButton.checkVerticalKey,Verify that thekeyargument is a legal value for the  vertical properties.
javax.swing.AbstractButton.configurePropertiesFromAction,Sets the properties on this button to match those in the specifiedAction.
javax.swing.AbstractButton.createActionListener,ReturnsActionListenerthat is added to model.
javax.swing.AbstractButton.createActionPropertyChangeListener,Creates and returns aPropertyChangeListenerthat is  responsible for listening for changes from the specifiedActionand updating the appropriate properties.
javax.swing.AbstractButton.createChangeListener,Subclasses that want to handleChangeEventsdifferently  can override this to return anotherChangeListenerimplementation.
javax.swing.AbstractButton.createItemListener,ReturnsItemListenerthat is added to model.
javax.swing.AbstractButton.doClick,"Programmatically perform a ""click""."
javax.swing.AbstractButton.fireActionPerformed,Notifies all listeners that have registered interest for  notification on this event type.
javax.swing.AbstractButton.getAction,"Returns the currently setActionfor thisActionEventsource, ornullif noActionis set."
javax.swing.AbstractButton.getActionCommand,Returns the action command for this button.
javax.swing.AbstractButton.getActionListeners,Returns an array of all theActionListeners added  to this AbstractButton with addActionListener().
javax.swing.AbstractButton.getChangeListeners,Returns an array of all theChangeListeners added  to this AbstractButton with addChangeListener().
javax.swing.AbstractButton.getDisabledIcon,Returns the icon used by the button when it's disabled.
javax.swing.AbstractButton.getDisabledSelectedIcon,Returns the icon used by the button when it's disabled and selected.
javax.swing.AbstractButton.getDisplayedMnemonicIndex,"Returns the character, as an index, that the look and feel should  provide decoration for as representing the mnemonic character."
javax.swing.AbstractButton.getHideActionText,"Returns the value of thehideActionTextproperty, which  determines whether the button displays text from theAction."
javax.swing.AbstractButton.getHorizontalAlignment,Returns the horizontal alignment of the icon and text.
javax.swing.AbstractButton.getHorizontalTextPosition,Returns the horizontal position of the text relative to the icon.
javax.swing.AbstractButton.getIcon,Returns the default icon.
javax.swing.AbstractButton.getIconTextGap,Returns the amount of space between the text and the icon  displayed in this button.
javax.swing.AbstractButton.getItemListeners,Returns an array of all theItemListeners added  to this AbstractButton with addItemListener().
javax.swing.AbstractButton.getLabel,Deprecated.- Replaced bygetText
javax.swing.AbstractButton.getMargin,Returns the margin between the button's border and  the label.
javax.swing.AbstractButton.getMnemonic,Returns the keyboard mnemonic from the current model.
javax.swing.AbstractButton.getModel,Returns the model that this button represents.
javax.swing.AbstractButton.getMultiClickThreshhold,Gets the amount of time (in milliseconds) required between  mouse press events for the button to generate the corresponding  action events.
javax.swing.AbstractButton.getPressedIcon,Returns the pressed icon for the button.
javax.swing.AbstractButton.getRolloverIcon,Returns the rollover icon for the button.
javax.swing.AbstractButton.getRolloverSelectedIcon,Returns the rollover selection icon for the button.
javax.swing.AbstractButton.getSelectedIcon,Returns the selected icon for the button.
javax.swing.AbstractButton.getSelectedObjects,Returns an array (length 1) containing the label ornullif the button is not selected.
javax.swing.AbstractButton.getText,Returns the button's text.
javax.swing.AbstractButton.getUI,Returns the L&F object that renders this component.
javax.swing.AbstractButton.getVerticalAlignment,Returns the vertical alignment of the text and icon.
javax.swing.AbstractButton.getVerticalTextPosition,Returns the vertical position of the text relative to the icon.
javax.swing.AbstractButton.imageUpdate,This is overridden to return false if the currentIcon'sImageis not equal to the  passed inImageimg.
javax.swing.AbstractButton.init,Initialization of theAbstractButton.
javax.swing.AbstractButton.isBorderPainted,Gets theborderPaintedproperty.
javax.swing.AbstractButton.isContentAreaFilled,Gets thecontentAreaFilledproperty.
javax.swing.AbstractButton.isFocusPainted,Gets thepaintFocusproperty.
javax.swing.AbstractButton.isRolloverEnabled,Gets therolloverEnabledproperty.
javax.swing.AbstractButton.isSelected,Returns the state of the button.
javax.swing.AbstractButton.paintBorder,Paint the button's border ifBorderPaintedproperty is true and the button has a border.
javax.swing.AbstractButton.paramString,Returns a string representation of thisAbstractButton.
javax.swing.AbstractButton.removeActionListener,Removes anActionListenerfrom the button.
javax.swing.AbstractButton.removeChangeListener,Removes a ChangeListener from the button.
javax.swing.AbstractButton.removeItemListener,Removes anItemListenerfrom the button.
javax.swing.AbstractButton.removeNotify,Notifies this component that it no longer has a parent component.
javax.swing.AbstractButton.setAction,Sets theAction.
javax.swing.AbstractButton.setActionCommand,Sets the action command for this button.
javax.swing.AbstractButton.setBorderPainted,Sets theborderPaintedproperty.
javax.swing.AbstractButton.setContentAreaFilled,Sets thecontentAreaFilledproperty.
javax.swing.AbstractButton.setDisabledIcon,Sets the disabled icon for the button.
javax.swing.AbstractButton.setDisabledSelectedIcon,Sets the disabled selection icon for the button.
javax.swing.AbstractButton.setDisplayedMnemonicIndex,Provides a hint to the look and feel as to which character in the  text should be decorated to represent the mnemonic.
javax.swing.AbstractButton.setEnabled,Enables (or disables) the button.
javax.swing.AbstractButton.setFocusPainted,"Sets thepaintFocusproperty, which must  betruefor the focus state to be painted."
javax.swing.AbstractButton.setHideActionText,"Sets thehideActionTextproperty, which determines  whether the button displays text from theAction."
javax.swing.AbstractButton.setHorizontalAlignment,Sets the horizontal alignment of the icon and text.
javax.swing.AbstractButton.setHorizontalTextPosition,Sets the horizontal position of the text relative to the icon.
javax.swing.AbstractButton.setIcon,Sets the button's default icon.
javax.swing.AbstractButton.setIconTextGap,"If both the icon and text properties are set, this property  defines the space between them."
javax.swing.AbstractButton.setLabel,Deprecated.- Replaced bysetText(text)
javax.swing.AbstractButton.setLayout,"Sets the layout manager for this container, refer toContainer.setLayout(LayoutManager)for a complete description of this method."
javax.swing.AbstractButton.setMargin,Sets space for margin between the button's border and  the label.
javax.swing.AbstractButton.setMnemonic,"This method is now obsolete, please usesetMnemonic(int)to set the mnemonic for a button."
javax.swing.AbstractButton.setMnemonic,Sets the keyboard mnemonic on the current model.
javax.swing.AbstractButton.setModel,Sets the model that this button represents.
javax.swing.AbstractButton.setMultiClickThreshhold,Sets the amount of time (in milliseconds) required between  mouse press events for the button to generate the corresponding  action events.
javax.swing.AbstractButton.setPressedIcon,Sets the pressed icon for the button.
javax.swing.AbstractButton.setRolloverEnabled,"Sets therolloverEnabledproperty, which  must betruefor rollover effects to occur."
javax.swing.AbstractButton.setRolloverIcon,Sets the rollover icon for the button.
javax.swing.AbstractButton.setRolloverSelectedIcon,Sets the rollover selected icon for the button.
javax.swing.AbstractButton.setSelected,Sets the state of the button.
javax.swing.AbstractButton.setSelectedIcon,Sets the selected icon for the button.
javax.swing.AbstractButton.setText,Sets the button's text.
javax.swing.AbstractButton.setUI,Sets the L&F object that renders this component.
javax.swing.AbstractButton.setVerticalAlignment,Sets the vertical alignment of the icon and text.
javax.swing.AbstractButton.setVerticalTextPosition,Sets the vertical position of the text relative to the icon.
javax.swing.AbstractButton.updateUI,Resets the UI property to a value from the current look  and feel.
javax.swing.AbstractCellEditor.addCellEditorListener,Adds aCellEditorListenerto the listener list.
javax.swing.AbstractCellEditor.cancelCellEditing,CallsfireEditingCanceled.
javax.swing.AbstractCellEditor.getCellEditorListeners,Returns an array of all theCellEditorListeners added  to this AbstractCellEditor with addCellEditorListener().
javax.swing.AbstractCellEditor.isCellEditable,Returns true.
javax.swing.AbstractCellEditor.removeCellEditorListener,Removes aCellEditorListenerfrom the listener list.
javax.swing.AbstractCellEditor.stopCellEditing,CallsfireEditingStoppedand returns true.
javax.swing.AbstractListModel.addListDataListener,Adds a listener to the list that's notified each time a change  to the data model occurs.
javax.swing.AbstractListModel.fireContentsChanged,AbstractListModelsubclasses must call this methodafterone or more elements of the list change.
javax.swing.AbstractListModel.fireIntervalAdded,AbstractListModelsubclasses must call this methodafterone or more elements are added to the model.
javax.swing.AbstractListModel.fireIntervalRemoved,AbstractListModelsubclasses must call this methodafterone or more elements are removed from the model.
javax.swing.AbstractListModel.getListDataListeners,Returns an array of all the list data listeners  registered on thisAbstractListModel.
javax.swing.AbstractListModel.getListeners,Returns an array of all the objects currently registered asFooListeners  upon this model.
javax.swing.AbstractListModel.removeListDataListener,Removes a listener from the list that's notified each time a  change to the data model occurs.
javax.swing.AbstractSpinnerModel.addChangeListener,Adds a ChangeListener to the model's listener list.
javax.swing.AbstractSpinnerModel.fireStateChanged,Run each ChangeListeners stateChanged() method.
javax.swing.AbstractSpinnerModel.getChangeListeners,Returns an array of all theChangeListeners added  to this AbstractSpinnerModel with addChangeListener().
javax.swing.AbstractSpinnerModel.getListeners,Return an array of all the listeners of the given type that  were added to this model.
javax.swing.AbstractSpinnerModel.removeChangeListener,Removes a ChangeListener from the model's listener list.
javax.swing.ActionMap.allKeys,Returns an array of the keys defined in thisActionMapand  its parent.
javax.swing.ActionMap.clear,Removes all the mappings from thisActionMap.
javax.swing.ActionMap.get,"Returns the binding forkey, messaging the  parentActionMapif the binding is not locally defined."
javax.swing.ActionMap.getParent,Returns thisActionMap's parent.
javax.swing.ActionMap.keys,Returns theActionnames that are bound in thisActionMap.
javax.swing.ActionMap.put,Adds a binding forkeytoaction.
javax.swing.ActionMap.remove,Removes the binding forkeyfrom thisActionMap.
javax.swing.ActionMap.setParent,Sets thisActionMap's parent.
javax.swing.ActionMap.size,Returns the number of bindings in thisActionMap.
javax.swing.BorderFactory.createBevelBorder,"Creates a beveled border of the specified type, using  brighter shades of the component's current background color  for highlighting, and darker shading for shadows."
javax.swing.BorderFactory.createBevelBorder,"Creates a beveled border of the specified type, using  the specified highlighting and shadowing."
javax.swing.BorderFactory.createBevelBorder,"Creates a beveled border of the specified type, using  the specified colors for the inner and outer highlight  and shadow areas."
javax.swing.BorderFactory.createCompoundBorder,Creates a compound border with anullinside edge and anulloutside edge.
javax.swing.BorderFactory.createCompoundBorder,Creates a compound border specifying the border objects to use  for the outside and inside edges.
javax.swing.BorderFactory.createDashedBorder,Creates a dashed border of the specifiedpaint.
javax.swing.BorderFactory.createDashedBorder,"Creates a dashed border of the specifiedpaint,  relativelength, and relativespacing."
javax.swing.BorderFactory.createDashedBorder,"Creates a dashed border of the specifiedpaint,thickness,  line shape, relativelength, and relativespacing."
javax.swing.BorderFactory.createEmptyBorder,Creates an empty border that takes up no space.
javax.swing.BorderFactory.createEmptyBorder,"Creates an empty border that takes up space but which does  no drawing, specifying the width of the top, left, bottom, and  right sides."
javax.swing.BorderFactory.createEtchedBorder,"Creates a border with an ""etched"" look using  the component's current background color for  highlighting and shading."
javax.swing.BorderFactory.createEtchedBorder,"Creates a border with an ""etched"" look using  the specified highlighting and shading colors."
javax.swing.BorderFactory.createLineBorder,Creates a line border with the specified color.
javax.swing.BorderFactory.createLineBorder,Creates a line border with the specified color  and width.
javax.swing.BorderFactory.createLineBorder,"Creates a line border with the specified color, thickness, and corner shape."
javax.swing.BorderFactory.createLoweredBevelBorder,"Creates a border with a lowered beveled edge, using  brighter shades of the component's current background color  for highlighting, and darker shading for shadows."
javax.swing.BorderFactory.createLoweredSoftBevelBorder,"Creates a beveled border with a lowered edge and softened corners,  using brighter shades of the component's current background color  for highlighting, and darker shading for shadows."
javax.swing.BorderFactory.createMatteBorder,Creates a matte-look border using a solid color.
javax.swing.BorderFactory.createMatteBorder,Creates a matte-look border that consists of multiple tiles of a  specified icon.
javax.swing.BorderFactory.createRaisedBevelBorder,"Creates a border with a raised beveled edge, using  brighter shades of the component's current background color  for highlighting, and darker shading for shadows."
javax.swing.BorderFactory.createRaisedSoftBevelBorder,"Creates a beveled border with a raised edge and softened corners,  using brighter shades of the component's current background color  for highlighting, and darker shading for shadows."
javax.swing.BorderFactory.createSoftBevelBorder,"Creates a beveled border of the specified type with softened corners,  using brighter shades of the component's current background color  for highlighting, and darker shading for shadows."
javax.swing.BorderFactory.createSoftBevelBorder,"Creates a beveled border of the specified type with softened corners,  using the specified highlighting and shadowing."
javax.swing.BorderFactory.createSoftBevelBorder,"Creates a beveled border of the specified type with softened corners,  using the specified colors for the inner and outer edges  of the highlight and the shadow areas."
javax.swing.BorderFactory.createStrokeBorder,Creates a border of the specifiedstroke.
javax.swing.BorderFactory.createStrokeBorder,Creates a border of the specifiedstrokeandpaint.
javax.swing.BorderFactory.createTitledBorder,"Creates a new titled border with the specified title,  the default border type (determined by the current look and feel),  the default text position (determined by the current look and feel),  the default justification (leading), and the default  font and text color (determined by the current look and feel)."
javax.swing.BorderFactory.createTitledBorder,"Creates a new titled border with an empty title,  the specified border object,  the default text position (determined by the current look and feel),  the default justification (leading), and the default  font and text color (determined by the current look and feel)."
javax.swing.BorderFactory.createTitledBorder,"Adds a title to an existing border,  with default positioning (determined by the current look and feel),  default justification (leading) and the default  font and text color (determined by the current look and feel)."
javax.swing.BorderFactory.createTitledBorder,"Adds a title to an existing border, with the specified  positioning and using the default  font and text color (determined by the current look and feel)."
javax.swing.BorderFactory.createTitledBorder,"Adds a title to an existing border, with the specified  positioning and font, and using the default text color  (determined by the current look and feel)."
javax.swing.BorderFactory.createTitledBorder,"Adds a title to an existing border, with the specified  positioning, font and color."
javax.swing.Box.changeShape,Change the size requests for this shape.
javax.swing.Box.getAccessibleContext,Gets the AccessibleContext associated with this Box.Filler.
javax.swing.Box.paintComponent,Paints thisFiller.
javax.swing.Box.createGlue,"Creates an invisible ""glue"" component  that can be useful in a Box  whose visible components have a maximum width  (for a horizontal box)  or height (for a vertical box)."
javax.swing.Box.createHorizontalBox,Creates aBoxthat displays its components  from left to right.
javax.swing.Box.createHorizontalGlue,Creates a horizontal glue component.
javax.swing.Box.createHorizontalStrut,"Creates an invisible, fixed-width component."
javax.swing.Box.createRigidArea,Creates an invisible component that's always the specified size.
javax.swing.Box.createVerticalBox,Creates aBoxthat displays its components  from top to bottom.
javax.swing.Box.createVerticalGlue,Creates a vertical glue component.
javax.swing.Box.createVerticalStrut,"Creates an invisible, fixed-height component."
javax.swing.Box.getAccessibleContext,Gets the AccessibleContext associated with this Box.
javax.swing.Box.paintComponent,Paints thisBox.
javax.swing.Box.setLayout,"Throws an AWTError, since a Box can use only a BoxLayout."
javax.swing.BoxLayout.addLayoutComponent,Not used by this class.
javax.swing.BoxLayout.getAxis,Returns the axis that was used to lay out components.
javax.swing.BoxLayout.getLayoutAlignmentX,Returns the alignment along the X axis for the container.
javax.swing.BoxLayout.getLayoutAlignmentY,Returns the alignment along the Y axis for the container.
javax.swing.BoxLayout.getTarget,Returns the container that uses this layout manager.
javax.swing.BoxLayout.invalidateLayout,"Indicates that a child has changed its layout related information,  and thus any cached calculations should be flushed."
javax.swing.BoxLayout.layoutContainer,Called by the AWTwhen the specified container  needs to be laid out.
javax.swing.BoxLayout.maximumLayoutSize,Returns the maximum dimensions the target container can use  to lay out the components it contains.
javax.swing.BoxLayout.minimumLayoutSize,Returns the minimum dimensions needed to lay out the components  contained in the specified target container.
javax.swing.BoxLayout.preferredLayoutSize,"Returns the preferred dimensions for this layout, given the components  in the specified target container."
javax.swing.ButtonGroup.add,Adds the button to the group.
javax.swing.ButtonGroup.clearSelection,Clears the selection such that none of the buttons  in theButtonGroupare selected.
javax.swing.ButtonGroup.getButtonCount,Returns the number of buttons in the group.
javax.swing.ButtonGroup.getElements,Returns all the buttons that are participating in  this group.
javax.swing.ButtonGroup.getSelection,Returns the model of the selected button.
javax.swing.ButtonGroup.isSelected,Returns whether aButtonModelis selected.
javax.swing.ButtonGroup.remove,Removes the button from the group.
javax.swing.ButtonGroup.setSelected,Sets the selected value for theButtonModel.
javax.swing.CellRendererPane.addImpl,If the specified component is already a child of this then we don't  bother doing anything - stacking order doesn't matter for cell  renderer components (CellRendererPane doesn't paint anyway).
javax.swing.CellRendererPane.getAccessibleContext,Gets the AccessibleContext associated with this CellRendererPane.
javax.swing.CellRendererPane.invalidate,Overridden to avoid propagating a invalidate up the tree when the  cell renderer child is configured.
javax.swing.CellRendererPane.paint,Shouldn't be called.
javax.swing.CellRendererPane.paintComponent,"Calls this.paintComponent(g, c, p, x, y, w, h, false)."
javax.swing.CellRendererPane.paintComponent,Paint a cell renderer component c on graphics object g.
javax.swing.CellRendererPane.paintComponent,"Calls this.paintComponent(g, c, p, r.x, r.y, r.width, r.height) whereris the inputRectangleparameter."
javax.swing.ComponentInputMap.clear,Removes all the mappings from this object.
javax.swing.ComponentInputMap.getComponent,Returns the component theInputMapwas created for.
javax.swing.ComponentInputMap.put,Adds a binding forkeyStroketoactionMapKey.
javax.swing.ComponentInputMap.remove,Removes the binding forkeyfrom this object.
javax.swing.ComponentInputMap.setParent,"Sets the parent, which must be aComponentInputMapassociated with the same component as thisComponentInputMap."
javax.swing.DebugGraphics.clearRect,OverridesGraphics.clearRect.
javax.swing.DebugGraphics.clipRect,OverridesGraphics.clipRect.
javax.swing.DebugGraphics.copyArea,OverridesGraphics.copyArea.
javax.swing.DebugGraphics.create,OverridesGraphics.createto return a DebugGraphics object.
javax.swing.DebugGraphics.dispose,OverridesGraphics.dispose.
javax.swing.DebugGraphics.draw3DRect,OverridesGraphics.draw3DRect.
javax.swing.DebugGraphics.drawArc,OverridesGraphics.drawArc.
javax.swing.DebugGraphics.drawBytes,OverridesGraphics.drawBytes.
javax.swing.DebugGraphics.drawChars,OverridesGraphics.drawChars.
javax.swing.DebugGraphics.drawImage,OverridesGraphics.drawImage.
javax.swing.DebugGraphics.drawLine,OverridesGraphics.drawLine.
javax.swing.DebugGraphics.drawOval,OverridesGraphics.drawOval.
javax.swing.DebugGraphics.drawPolygon,OverridesGraphics.drawPolygon.
javax.swing.DebugGraphics.drawPolyline,OverridesGraphics.drawPolyline.
javax.swing.DebugGraphics.drawRect,OverridesGraphics.drawRect.
javax.swing.DebugGraphics.drawRoundRect,OverridesGraphics.drawRoundRect.
javax.swing.DebugGraphics.drawString,OverridesGraphics.drawString.
javax.swing.DebugGraphics.fill3DRect,OverridesGraphics.fill3DRect.
javax.swing.DebugGraphics.fillArc,OverridesGraphics.fillArc.
javax.swing.DebugGraphics.fillOval,OverridesGraphics.fillOval.
javax.swing.DebugGraphics.fillPolygon,OverridesGraphics.fillPolygon.
javax.swing.DebugGraphics.fillRect,OverridesGraphics.fillRect.
javax.swing.DebugGraphics.fillRoundRect,OverridesGraphics.fillRoundRect.
javax.swing.DebugGraphics.flashColor,Returns the Color used to flash drawing operations.
javax.swing.DebugGraphics.flashCount,Returns the number of times that drawing operations will flash.
javax.swing.DebugGraphics.flashTime,Returns the time delay of drawing operation flashing.
javax.swing.DebugGraphics.getClip,OverridesGraphics.getClip.
javax.swing.DebugGraphics.getClipBounds,OverridesGraphics.getClipBounds.
javax.swing.DebugGraphics.getColor,Returns the Color used for text drawing operations.
javax.swing.DebugGraphics.getDebugOptions,Returns the current debugging options for this DebugGraphics.
javax.swing.DebugGraphics.getFont,Returns the Font used for text drawing operations.
javax.swing.DebugGraphics.getFontMetrics,OverridesGraphics.getFontMetrics.
javax.swing.DebugGraphics.isDrawingBuffer,Returns the drawingBuffer value.
javax.swing.DebugGraphics.logStream,Returns the stream to which the DebugGraphics logs drawing operations.
javax.swing.DebugGraphics.setClip,OverridesGraphics.setClip.
javax.swing.DebugGraphics.setColor,Sets the color to be used for drawing and filling lines and shapes.
javax.swing.DebugGraphics.setDebugOptions,Enables/disables diagnostic information about every graphics  operation.
javax.swing.DebugGraphics.setFlashColor,Sets the Color used to flash drawing operations.
javax.swing.DebugGraphics.setFlashCount,Sets the number of times that drawing operations will flash.
javax.swing.DebugGraphics.setFlashTime,Sets the time delay of drawing operation flashing.
javax.swing.DebugGraphics.setFont,Sets the Font used for text drawing operations.
javax.swing.DebugGraphics.setLogStream,Sets the stream to which the DebugGraphics logs drawing operations.
javax.swing.DebugGraphics.setPaintMode,OverridesGraphics.setPaintMode.
javax.swing.DebugGraphics.setXORMode,OverridesGraphics.setXORMode.
javax.swing.DebugGraphics.translate,OverridesGraphics.translate.
javax.swing.DefaultBoundedRangeModel.addChangeListener,Adds aChangeListener.
javax.swing.DefaultBoundedRangeModel.fireStateChanged,Runs eachChangeListener'sstateChangedmethod.
javax.swing.DefaultBoundedRangeModel.getChangeListeners,Returns an array of all the change listeners  registered on thisDefaultBoundedRangeModel.
javax.swing.DefaultBoundedRangeModel.getExtent,Returns the model's extent.
javax.swing.DefaultBoundedRangeModel.getMaximum,Returns the model's maximum.
javax.swing.DefaultBoundedRangeModel.getMinimum,Returns the model's minimum.
javax.swing.DefaultBoundedRangeModel.getValue,Returns the model's current value.
javax.swing.DefaultBoundedRangeModel.getValueIsAdjusting,Returns true if the value is in the process of changing  as a result of actions being taken by the user.
javax.swing.DefaultBoundedRangeModel.removeChangeListener,Removes aChangeListener.
javax.swing.DefaultBoundedRangeModel.setExtent,Sets the extent tonafter ensuring thatnis greater than or equal to zero and falls within the model's  constraints:
javax.swing.DefaultBoundedRangeModel.setMaximum,Sets the maximum tonafter ensuring thatnthat the other three properties obey the model's constraints:
javax.swing.DefaultBoundedRangeModel.setMinimum,Sets the minimum tonafter ensuring thatnthat the other three properties obey the model's constraints:
javax.swing.DefaultBoundedRangeModel.setRangeProperties,Sets all of theBoundedRangeModelproperties after forcing  the arguments to obey the usual constraints:
javax.swing.DefaultBoundedRangeModel.setValue,Sets the current value of the model.
javax.swing.DefaultBoundedRangeModel.toString,Returns a string that displays all of theBoundedRangeModelproperties.
javax.swing.DefaultButtonModel.addActionListener,Adds anActionListenerto the model.
javax.swing.DefaultButtonModel.addChangeListener,Adds aChangeListenerto the model.
javax.swing.DefaultButtonModel.addItemListener,Adds anItemListenerto the model.
javax.swing.DefaultButtonModel.getActionCommand,Returns the action command string for the button.
javax.swing.DefaultButtonModel.getActionListeners,Returns an array of all the action listeners  registered on thisDefaultButtonModel.
javax.swing.DefaultButtonModel.getChangeListeners,Returns an array of all the change listeners  registered on thisDefaultButtonModel.
javax.swing.DefaultButtonModel.getGroup,Returns the group that the button belongs to.
javax.swing.DefaultButtonModel.getItemListeners,Returns an array of all the item listeners  registered on thisDefaultButtonModel.
javax.swing.DefaultButtonModel.getMnemonic,Gets the keyboard mnemonic for the button.
javax.swing.DefaultButtonModel.getSelectedObjects,Overridden to returnnull.
javax.swing.DefaultButtonModel.isArmed,Indicates partial commitment towards triggering the  button.
javax.swing.DefaultButtonModel.isEnabled,"Indicates if the button can be selected or triggered by  an input device, such as a mouse pointer."
javax.swing.DefaultButtonModel.isPressed,Indicates if the button is pressed.
javax.swing.DefaultButtonModel.isRollover,Indicates that the mouse is over the button.
javax.swing.DefaultButtonModel.isSelected,Indicates if the button has been selected.
javax.swing.DefaultButtonModel.removeActionListener,Removes anActionListenerfrom the model.
javax.swing.DefaultButtonModel.removeChangeListener,Removes aChangeListenerfrom the model.
javax.swing.DefaultButtonModel.removeItemListener,Removes anItemListenerfrom the model.
javax.swing.DefaultButtonModel.setActionCommand,Sets the action command string that gets sent as part of theActionEventwhen the button is triggered.
javax.swing.DefaultButtonModel.setArmed,Marks the button as armed or unarmed.
javax.swing.DefaultButtonModel.setEnabled,Enables or disables the button.
javax.swing.DefaultButtonModel.setGroup,"Identifies the group the button belongs to --  needed for radio buttons, which are mutually  exclusive within their group."
javax.swing.DefaultButtonModel.setMnemonic,Sets the keyboard mnemonic (shortcut key or  accelerator key) for the button.
javax.swing.DefaultButtonModel.setPressed,Sets the button to pressed or unpressed.
javax.swing.DefaultButtonModel.setRollover,Sets or clears the button's rollover state
javax.swing.DefaultButtonModel.setSelected,Selects or deselects the button.
javax.swing.DefaultCellEditor.actionPerformed,"When an action is performed, editing is ended."
javax.swing.DefaultCellEditor.cancelCellEditing,Cancels editing.
javax.swing.DefaultCellEditor.getCellEditorValue,Returns the value of this cell.
javax.swing.DefaultCellEditor.isCellEditable,Returns true ifanEventisnotaMouseEvent.
javax.swing.DefaultCellEditor.itemStateChanged,"When an item's state changes, editing is ended."
javax.swing.DefaultCellEditor.setValue,Sets the value of this cell.
javax.swing.DefaultCellEditor.shouldSelectCell,Returns true to indicate that the editing cell may  be selected.
javax.swing.DefaultCellEditor.startCellEditing,Returns true to indicate that editing has begun.
javax.swing.DefaultCellEditor.stopCellEditing,Stops editing and  returns true to indicate that editing has stopped.
javax.swing.DefaultCellEditor.cancelCellEditing,Forwards the message from theCellEditorto  thedelegate.
javax.swing.DefaultCellEditor.getClickCountToStart,Returns the number of clicks needed to start editing.
javax.swing.DefaultCellEditor.getComponent,Returns a reference to the editor component.
javax.swing.DefaultCellEditor.getTableCellEditorComponent,Implements theTableCellEditorinterface.
javax.swing.DefaultCellEditor.getTreeCellEditorComponent,Implements theTreeCellEditorinterface.
javax.swing.DefaultCellEditor.setClickCountToStart,Specifies the number of clicks needed to start editing.
javax.swing.DefaultComboBoxModel.addAll,"Adds all of the elements present in the collection, starting  from the specified index."
javax.swing.DefaultComboBoxModel.addAll,Adds all of the elements present in the collection.
javax.swing.DefaultComboBoxModel.addElement,Adds an item at the end of the model.
javax.swing.DefaultComboBoxModel.getElementAt,Returns the value at the specified index.
javax.swing.DefaultComboBoxModel.getIndexOf,Returns the index-position of the specified object in the list.
javax.swing.DefaultComboBoxModel.getSelectedItem,Returns the selected item
javax.swing.DefaultComboBoxModel.getSize,Returns the length of the list.
javax.swing.DefaultComboBoxModel.insertElementAt,Adds an item at a specific index.
javax.swing.DefaultComboBoxModel.removeAllElements,Empties the list.
javax.swing.DefaultComboBoxModel.removeElement,Removes an item from the model.
javax.swing.DefaultComboBoxModel.removeElementAt,Removes an item at a specific index.
javax.swing.DefaultComboBoxModel.setSelectedItem,Set the value of the selected item.
javax.swing.DefaultDesktopManager.activateFrame,This will activatefmoving it to the front.
javax.swing.DefaultDesktopManager.beginDraggingFrame,This method is normally called when the user has indicated that  they will begin dragging a component around.
javax.swing.DefaultDesktopManager.beginResizingFrame,This method is normally called when the user has indicated that  they will begin resizing the frame.
javax.swing.DefaultDesktopManager.closeFrame,"Removes the frame, and, if necessary, thedesktopIcon, from its parent."
javax.swing.DefaultDesktopManager.deactivateFrame,"Generally, indicate that this frame has lost focus."
javax.swing.DefaultDesktopManager.deiconifyFrame,Removes the desktopIcon from its parent and adds its frame  to the parent.
javax.swing.DefaultDesktopManager.dragFrame,Moves the visible location of the frame being dragged  to the location specified.
javax.swing.DefaultDesktopManager.endDraggingFrame,This method signals the end of the dragging session.
javax.swing.DefaultDesktopManager.endResizingFrame,This method signals the end of the resize session.
javax.swing.DefaultDesktopManager.getBoundsForIconOf,TheiconifyFrame()code calls this to determine the proper bounds  for the desktopIcon.
javax.swing.DefaultDesktopManager.getPreviousBounds,Gets the normal bounds of the component prior to the component  being maximized.
javax.swing.DefaultDesktopManager.iconifyFrame,Removes the frame from its parent and adds itsdesktopIconto the parent.
javax.swing.DefaultDesktopManager.maximizeFrame,Resizes the frame to fill its parents bounds.
javax.swing.DefaultDesktopManager.minimizeFrame,Restores the frame back to its size and position prior  to amaximizeFramecall.
javax.swing.DefaultDesktopManager.openFrame,Normally this method will not be called.
javax.swing.DefaultDesktopManager.removeIconFor,Convenience method to remove the desktopIcon offis necessary.
javax.swing.DefaultDesktopManager.resizeFrame,CallssetBoundsForFramewith the new values.
javax.swing.DefaultDesktopManager.setBoundsForFrame,This moves theJComponentand repaints the damaged areas.
javax.swing.DefaultDesktopManager.setPreviousBounds,Stores the bounds of the component just before a maximize call.
javax.swing.DefaultDesktopManager.setWasIcon,Sets that the component has been iconized and the bounds of thedesktopIconare valid.
javax.swing.DefaultDesktopManager.wasIcon,"Returnstrueif the component has been iconized  and the bounds of thedesktopIconare valid,  otherwise returnsfalse."
javax.swing.DefaultFocusManager.compareTabOrder,Compares the components by their focus traversal cycle order.
javax.swing.DefaultFocusManager.getComponentAfter,Returns the component after.
javax.swing.DefaultFocusManager.getComponentBefore,Returns the component before.
javax.swing.DefaultFocusManager.getFirstComponent,Returns the first component.
javax.swing.DefaultFocusManager.getLastComponent,Returns the last component.
javax.swing.DefaultListCellRenderer.firePropertyChange,Overridden for performance reasons.
javax.swing.DefaultListCellRenderer.getListCellRendererComponent,Return a component that has been configured to display the specified  value.
javax.swing.DefaultListModel.addAll,Adds all of the elements present in the collection to the list.
javax.swing.DefaultListModel.addElement,Adds the specified component to the end of this list.
javax.swing.DefaultListModel.capacity,Returns the current capacity of this list.
javax.swing.DefaultListModel.contains,Tests whether the specified object is a component in this list.
javax.swing.DefaultListModel.copyInto,Copies the components of this list into the specified array.
javax.swing.DefaultListModel.elements,Returns an enumeration of the components of this list.
javax.swing.DefaultListModel.ensureCapacity,"Increases the capacity of this list, if necessary, to ensure  that it can hold at least the number of components specified by  the minimum capacity argument."
javax.swing.DefaultListModel.firstElement,Returns the first component of this list.
javax.swing.DefaultListModel.getSize,Returns the number of components in this list.
javax.swing.DefaultListModel.indexOf,Searches for the first occurrence ofelem.
javax.swing.DefaultListModel.indexOf,"Searches for the first occurrence ofelem, beginning  the search atindex."
javax.swing.DefaultListModel.insertElementAt,Inserts the specified element as a component in this list at the  specifiedindex.
javax.swing.DefaultListModel.isEmpty,Tests whether this list has any components.
javax.swing.DefaultListModel.lastElement,Returns the last component of the list.
javax.swing.DefaultListModel.lastIndexOf,Returns the index of the last occurrence ofelem.
javax.swing.DefaultListModel.lastIndexOf,"Searches backwards forelem, starting from the  specified index, and returns an index to it."
javax.swing.DefaultListModel.removeAllElements,Removes all components from this list and sets its size to zero.
javax.swing.DefaultListModel.removeElement,Removes the first (lowest-indexed) occurrence of the argument  from this list.
javax.swing.DefaultListModel.removeRange,Deletes the components at the specified range of indexes.
javax.swing.DefaultListModel.setElementAt,Sets the component at the specifiedindexof this  list to be the specified element.
javax.swing.DefaultListModel.setSize,Sets the size of this list.
javax.swing.DefaultListModel.toArray,Returns an array containing all of the elements in this list in the  correct order.
javax.swing.DefaultListModel.toString,Returns a string that displays and identifies this  object's properties.
javax.swing.DefaultListModel.trimToSize,Trims the capacity of this list to be the list's current size.
javax.swing.DefaultRowSorter.allRowsChanged,Invoked when the contents of the underlying model have  completely changed.
javax.swing.DefaultRowSorter.convertRowIndexToModel,Returns the location ofindexin terms of the  underlying model.
javax.swing.DefaultRowSorter.convertRowIndexToView,Returns the location ofindexin terms of the  view.
javax.swing.DefaultRowSorter.getComparator,Returns theComparatorfor the specified  column.
javax.swing.DefaultRowSorter.getMaxSortKeys,Returns the maximum number of sort keys.
javax.swing.DefaultRowSorter.getModel,Returns the underlying model.
javax.swing.DefaultRowSorter.getModelRowCount,Returns the number of rows in the underlying model.
javax.swing.DefaultRowSorter.getModelWrapper,Returns the model wrapper providing the data that is being sorted and  filtered.
javax.swing.DefaultRowSorter.getRowFilter,"Returns the filter that determines which rows, if any, should  be hidden from view."
javax.swing.DefaultRowSorter.getSortKeys,Returns the current sort keys.
javax.swing.DefaultRowSorter.getSortsOnUpdates,"Returns true if  a sort should happen when the underlying  model is updated; otherwise, returns false."
javax.swing.DefaultRowSorter.getViewRowCount,Returns the number of rows in the view.
javax.swing.DefaultRowSorter.isSortable,"Returns true if the specified column is sortable; otherwise, false."
javax.swing.DefaultRowSorter.modelStructureChanged,Invoked when the underlying model structure has completely  changed.
javax.swing.DefaultRowSorter.rowsDeleted,Invoked when rows have been deleted from the underlying model  in the specified range (inclusive).
javax.swing.DefaultRowSorter.rowsInserted,Invoked when rows have been inserted into the underlying model  in the specified range (inclusive).
javax.swing.DefaultRowSorter.rowsUpdated,Invoked when rows have been changed in the underlying model  between the specified range (inclusive).
javax.swing.DefaultRowSorter.rowsUpdated,Invoked when the column in the rows have been updated in  the underlying model between the specified range.
javax.swing.DefaultRowSorter.setComparator,Sets theComparatorto use when sorting the specified  column.
javax.swing.DefaultRowSorter.setMaxSortKeys,Sets the maximum number of sort keys.
javax.swing.DefaultRowSorter.setModelWrapper,Sets the model wrapper providing the data that is being sorted and  filtered.
javax.swing.DefaultRowSorter.setRowFilter,"Sets the filter that determines which rows, if any, should be  hidden from the view."
javax.swing.DefaultRowSorter.setSortable,Sets whether or not the specified column is sortable.
javax.swing.DefaultRowSorter.setSortKeys,Sets the sort keys.
javax.swing.DefaultRowSorter.setSortsOnUpdates,"If true, specifies that a sort should happen when the underlying  model is updated (rowsUpdatedis invoked)."
javax.swing.DefaultRowSorter.sort,"Sorts and filters the rows in the view based on the sort keys  of the columns currently being sorted and the filter, if any,  associated with this sorter."
javax.swing.DefaultRowSorter.toggleSortOrder,"Reverses the sort order from ascending to descending (or  descending to ascending) if the specified column is already the  primary sorted column; otherwise, makes the specified column  the primary sorted column, with an ascending sort order."
javax.swing.DefaultRowSorter.useToString,Returns whether or not to convert the value to a string before  doing comparisons when sorting.
javax.swing.DefaultRowSorter.getColumnCount,Returns the number of columns in the model.
javax.swing.DefaultRowSorter.getIdentifier,Returns the identifier for the specified row.
javax.swing.DefaultRowSorter.getModel,Returns the underlying model that thisModelis  wrapping.
javax.swing.DefaultRowSorter.getRowCount,Returns the number of rows in the model.
javax.swing.DefaultRowSorter.getStringValueAt,Returns the value as aStringat the specified  index.
javax.swing.DefaultSingleSelectionModel.clearSelection,Clears the selection (to -1).
javax.swing.DefaultSingleSelectionModel.getChangeListeners,Returns an array of all the change listeners  registered on thisDefaultSingleSelectionModel.
javax.swing.DefaultSingleSelectionModel.getSelectedIndex,Returns the model's selection.
javax.swing.DefaultSingleSelectionModel.isSelected,Returns true if the selection model currently has a selected value.
javax.swing.DefaultSingleSelectionModel.removeChangeListener,Removes aChangeListenerfrom the button.
javax.swing.DefaultSingleSelectionModel.setSelectedIndex,Sets the model's selected index toindex.
javax.swing.FocusManager.disableSwingFocusManager,"Deprecated.as of 1.4, replaced byKeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy)"
javax.swing.FocusManager.getCurrentManager,Returns the currentKeyboardFocusManagerinstance  for the calling thread's context.
javax.swing.FocusManager.isFocusManagerEnabled,"Deprecated.As of 1.4, replaced byKeyboardFocusManager.getDefaultFocusTraversalPolicy()"
javax.swing.FocusManager.setCurrentManager,Sets the currentKeyboardFocusManagerinstance  for the calling thread's context.
javax.swing.GrayFilter.createDisabledImage,Creates a disabled image
javax.swing.GrayFilter.filterRGB,OverridesRGBImageFilter.filterRGB.
javax.swing.GroupLayout.addComponent,Adds aComponentto thisGroup.
javax.swing.GroupLayout.addComponent,Adds aComponentto thisGroupwith the specified size.
javax.swing.GroupLayout.addGap,Adds a rigid gap to thisGroup.
javax.swing.GroupLayout.addGap,Adds a gap to thisGroupwith the specified size.
javax.swing.GroupLayout.addGroup,Adds aGroupto thisGroup.
javax.swing.GroupLayout.addLayoutComponent,Notification that aComponenthas been added to  the parent container.
javax.swing.GroupLayout.createBaselineGroup,Creates and returns aParallelGroupthat aligns its  elements along the baseline.
javax.swing.GroupLayout.createParallelGroup,Creates and returns aParallelGroupwith an alignment ofAlignment.LEADING.
javax.swing.GroupLayout.createParallelGroup,Creates and returns aParallelGroupwith the specified  alignment.
javax.swing.GroupLayout.createParallelGroup,Creates and returns aParallelGroupwith the specified  alignment and resize behavior.
javax.swing.GroupLayout.createSequentialGroup,Creates and returns aSequentialGroup.
javax.swing.GroupLayout.getAutoCreateContainerGaps,Returnstrueif gaps between the container and components that  border the container are automatically created.
javax.swing.GroupLayout.getAutoCreateGaps,Returnstrueif gaps between components are automatically  created.
javax.swing.GroupLayout.getHonorsVisibility,Returns whether component visibility is considered when sizing and  positioning components.
javax.swing.GroupLayout.getLayoutStyle,Returns theLayoutStyleused for calculating the preferred  gap between components.
javax.swing.GroupLayout.layoutContainer,Lays out the specified container.
javax.swing.GroupLayout.linkSize,"Forces the specified components to have the same size along the  specified axis regardless of their preferred, minimum or  maximum sizes."
javax.swing.GroupLayout.linkSize,"Forces the specified components to have the same size  regardless of their preferred, minimum or maximum sizes."
javax.swing.GroupLayout.maximumLayoutSize,Returns the maximum size for the specified container.
javax.swing.GroupLayout.minimumLayoutSize,Returns the minimum size for the specified container.
javax.swing.GroupLayout.preferredLayoutSize,Returns the preferred size for the specified container.
javax.swing.GroupLayout.removeLayoutComponent,Notification that aComponenthas been removed from  the parent container.
javax.swing.GroupLayout.replace,Replaces an existing component with a new one.
javax.swing.GroupLayout.setAutoCreateContainerGaps,Sets whether a gap between the container and components that  touch the border of the container should automatically be  created.
javax.swing.GroupLayout.setAutoCreateGaps,Sets whether a gap between components should automatically be  created.
javax.swing.GroupLayout.setHonorsVisibility,Sets whether component visibility is considered when sizing and  positioning components.
javax.swing.GroupLayout.setHonorsVisibility,Sets whether the component's visibility is considered for  sizing and positioning.
javax.swing.GroupLayout.setHorizontalGroup,Sets theGroupthat positions and sizes  components along the horizontal axis.
javax.swing.GroupLayout.setLayoutStyle,Sets theLayoutStyleused to calculate the preferred  gaps between components.
javax.swing.GroupLayout.setVerticalGroup,Sets theGroupthat positions and sizes  components along the vertical axis.
javax.swing.GroupLayout.toString,Returns a string representation of thisGroupLayout.
javax.swing.GroupLayout.addComponent,Adds aComponentto thisParallelGroupwith  the specified alignment.
javax.swing.GroupLayout.addComponent,Adds aComponentto thisParallelGroupwith the  specified alignment and size.
javax.swing.GroupLayout.addGroup,Adds aGroupto thisParallelGroupwith the  specified alignment.
javax.swing.GroupLayout.addContainerGap,Adds an element representing the preferred gap between an edge  the container and components that touch the border of the  container.
javax.swing.GroupLayout.addContainerGap,Adds an element representing the preferred gap between one  edge of the container and the next or previousComponentwith the specified size.
javax.swing.GroupLayout.addPreferredGap,Adds an element representing the preferred gap between two  components.
javax.swing.GroupLayout.addPreferredGap,Adds an element representing the preferred gap between the  nearest components.
javax.swing.ImageIcon.getAccessibleChild,Returns the nth Accessible child of the object.
javax.swing.ImageIcon.getAccessibleIconDescription,Gets the description of the icon.
javax.swing.ImageIcon.getAccessibleIconHeight,Gets the height of the icon.
javax.swing.ImageIcon.getAccessibleIconWidth,Gets the width of the icon.
javax.swing.ImageIcon.getAccessibleParent,Gets the Accessible parent of this object.
javax.swing.ImageIcon.setAccessibleIconDescription,Sets the description of the icon.
javax.swing.ImageIcon.getAccessibleContext,Gets the AccessibleContext associated with this ImageIcon.
javax.swing.ImageIcon.getDescription,Gets the description of the image.
javax.swing.ImageIcon.getImage,Returns this icon'sImage.
javax.swing.ImageIcon.getImageLoadStatus,Returns the status of the image loading operation.
javax.swing.ImageIcon.getImageObserver,Returns the image observer for the image.
javax.swing.ImageIcon.loadImage,"Loads the image, returning only when the image is loaded."
javax.swing.ImageIcon.paintIcon,Paints the icon.
javax.swing.ImageIcon.setDescription,Sets the description of the image.
javax.swing.ImageIcon.setImage,Sets the image displayed by this icon.
javax.swing.ImageIcon.setImageObserver,Sets the image observer for the image.
javax.swing.ImageIcon.toString,Returns a string representation of this image.
javax.swing.InputMap.allKeys,Returns an array of theKeyStrokes defined in thisInputMapand its parent.
javax.swing.InputMap.clear,Removes all the mappings from thisInputMap.
javax.swing.InputMap.get,"Returns the binding forkeyStroke, messaging the  parentInputMapif the binding is not locally defined."
javax.swing.InputMap.getParent,Gets thisInputMap's parent.
javax.swing.InputMap.keys,Returns theKeyStrokes that are bound in thisInputMap.
javax.swing.InputMap.remove,Removes the binding forkeyfrom thisInputMap.
javax.swing.InputMap.setParent,Sets thisInputMap's parent.
javax.swing.InputMap.size,Returns the number ofKeyStrokebindings.
javax.swing.InputVerifier.shouldYieldFocus,"Deprecated.useshouldYieldFocus(JComponent, JComponent)instead."
javax.swing.InputVerifier.shouldYieldFocus,Is called by Swing if thisInputVerifieris assigned to thesourceSwing component to check whether the requested focus  transfer from thesourcetotargetis allowed.
javax.swing.InputVerifier.verify,Checks whether the JComponent's input is valid.
javax.swing.InputVerifier.verifyTarget,Checks whether the target JComponent that will be receiving the focus  is ready to accept it.
javax.swing.InternalFrameFocusTraversalPolicy.getInitialComponent,Returns the Component that should receive the focus when a  JInternalFrame is selected for the first time.
javax.swing.JButton.getAccessibleContext,Gets theAccessibleContextassociated with thisJButton.
javax.swing.JButton.getUIClassID,Returns a string that specifies the name of the L&F class  that renders this component.
javax.swing.JButton.isDefaultButton,"Gets the value of thedefaultButtonproperty,  which iftruemeans that this button is the current  default button for itsJRootPane."
javax.swing.JButton.isDefaultCapable,Gets the value of thedefaultCapableproperty.
javax.swing.JButton.paramString,Returns a string representation of thisJButton.
javax.swing.JButton.removeNotify,"OverridesJComponent.removeNotifyto check if  this button is currently set as the default button on theRootPane, and if so, sets theRootPane's  default button tonullto ensure theRootPanedoesn't hold onto an invalid button reference."
javax.swing.JButton.setDefaultCapable,"Sets thedefaultCapableproperty,  which determines whether this button can be  made the default button for its root pane."
javax.swing.JButton.updateUI,Resets the UI property to a value from the current look and  feel.
javax.swing.JCheckBox.getAccessibleContext,Gets the AccessibleContext associated with this JCheckBox.
javax.swing.JCheckBox.isBorderPaintedFlat,Gets the value of theborderPaintedFlatproperty.
javax.swing.JCheckBox.paramString,Returns a string representation of this JCheckBox.
javax.swing.JCheckBox.setBorderPaintedFlat,"Sets theborderPaintedFlatproperty,  which gives a hint to the look and feel as to the  appearance of the check box border."
javax.swing.JCheckBox.updateUI,Resets the UI property to a value from the current look and feel.
javax.swing.JCheckBoxMenuItem.getAccessibleContext,Gets the AccessibleContext associated with this JCheckBoxMenuItem.
javax.swing.JCheckBoxMenuItem.getSelectedObjects,Returns an array (length 1) containing the check box menu item  label or null if the check box is not selected.
javax.swing.JCheckBoxMenuItem.getState,Returns the selected-state of the item.
javax.swing.JCheckBoxMenuItem.getUIClassID,Returns the name of the L&F class  that renders this component.
javax.swing.JCheckBoxMenuItem.paramString,Returns a string representation of this JCheckBoxMenuItem.
javax.swing.JCheckBoxMenuItem.setState,Sets the selected-state of the item.
javax.swing.JColorChooser.addChooserPanel,Adds a color chooser panel to the color chooser.
javax.swing.JColorChooser.createDialog,"Creates and returns a new dialog containing the specifiedColorChooserpane along with ""OK"", ""Cancel"", and ""Reset""  buttons."
javax.swing.JColorChooser.getAccessibleContext,Gets the AccessibleContext associated with this JColorChooser.
javax.swing.JColorChooser.getChooserPanels,Returns the specified color panels.
javax.swing.JColorChooser.getColor,Gets the current color value from the color chooser.
javax.swing.JColorChooser.getDragEnabled,Gets the value of thedragEnabledproperty.
javax.swing.JColorChooser.getPreviewPanel,Returns the preview panel that shows a chosen color.
javax.swing.JColorChooser.getSelectionModel,Returns the data model that handles color selections.
javax.swing.JColorChooser.getUIClassID,Returns the name of the L&F class that renders this component.
javax.swing.JColorChooser.paramString,Returns a string representation of thisJColorChooser.
javax.swing.JColorChooser.removeChooserPanel,Removes the Color Panel specified.
javax.swing.JColorChooser.setChooserPanels,Specifies the Color Panels used to choose a color value.
javax.swing.JColorChooser.setColor,Sets the current color of the color chooser to the  specified color.
javax.swing.JColorChooser.setColor,Sets the current color of the color chooser to the  specified RGB color.
javax.swing.JColorChooser.setColor,Sets the current color of the color chooser to the specified color.
javax.swing.JColorChooser.setDragEnabled,"Sets thedragEnabledproperty,  which must betrueto enable  automatic drag handling (the first part of drag and drop)  on this component."
javax.swing.JColorChooser.setPreviewPanel,Sets the current preview panel.
javax.swing.JColorChooser.setSelectionModel,Sets the model containing the selected color.
javax.swing.JColorChooser.showDialog,Shows a modal color-chooser dialog and blocks until the  dialog is hidden.
javax.swing.JColorChooser.updateUI,Notification from theUIManagerthat the L&F has changed.
javax.swing.JComboBox.addAccessibleSelection,Adds the specified Accessible child of the object to the object's  selection.
javax.swing.JComboBox.getAccessibleSelection,Returns an Accessible representing the specified selected child  in the popup.
javax.swing.JComboBox.getAccessibleSelectionCount,Returns the number of Accessible children currently selected.
javax.swing.JComboBox.actionPerformed,This method is public as an implementation side effect.
javax.swing.JComboBox.actionPropertyChanged,Updates the combobox's state in response to property changes in  associated action.
javax.swing.JComboBox.addActionListener,Adds anActionListener.
javax.swing.JComboBox.addItem,Adds an item to the item list.
javax.swing.JComboBox.addItemListener,Adds anItemListener.
javax.swing.JComboBox.addPopupMenuListener,Adds aPopupMenulistener which will listen to notification  messages from the popup portion of the combo box.
javax.swing.JComboBox.configureEditor,Initializes the editor with the specified item.
javax.swing.JComboBox.configurePropertiesFromAction,Sets the properties on this combobox to match those in the specifiedAction.
javax.swing.JComboBox.createDefaultKeySelectionManager,Returns an instance of the default key-selection manager.
javax.swing.JComboBox.firePopupMenuCanceled,NotifiesPopupMenuListeners that the popup portion of the  combo box has been canceled.
javax.swing.JComboBox.firePopupMenuWillBecomeInvisible,NotifiesPopupMenuListeners that the popup portion of the  combo box has become invisible.
javax.swing.JComboBox.firePopupMenuWillBecomeVisible,NotifiesPopupMenuListeners that the popup portion of the  combo box will become visible.
javax.swing.JComboBox.getAccessibleContext,Gets the AccessibleContext associated with this JComboBox.
javax.swing.JComboBox.getActionCommand,Returns the action command that is included in the event sent to  action listeners.
javax.swing.JComboBox.getActionListeners,Returns an array of all theActionListeners added  to this JComboBox with addActionListener().
javax.swing.JComboBox.getEditor,Returns the editor used to paint and edit the selected item in theJComboBoxfield.
javax.swing.JComboBox.getItemAt,Returns the list item at the specified index.
javax.swing.JComboBox.getItemCount,Returns the number of items in the list.
javax.swing.JComboBox.getItemListeners,Returns an array of all theItemListeners added  to this JComboBox with addItemListener().
javax.swing.JComboBox.getKeySelectionManager,Returns the list's key-selection manager.
javax.swing.JComboBox.getMaximumRowCount,Returns the maximum number of items the combo box can display  without a scrollbar
javax.swing.JComboBox.getModel,Returns the data model currently used by theJComboBox.
javax.swing.JComboBox.getPopupMenuListeners,Returns an array of all thePopupMenuListeners added  to this JComboBox with addPopupMenuListener().
javax.swing.JComboBox.getPrototypeDisplayValue,"Returns the ""prototypical display"" value - an Object used  for the calculation of the display height and width."
javax.swing.JComboBox.getRenderer,Returns the renderer used to display the selected item in theJComboBoxfield.
javax.swing.JComboBox.getSelectedIndex,Returns the first item in the list that matches the given item.
javax.swing.JComboBox.getSelectedItem,Returns the current selected item.
javax.swing.JComboBox.getSelectedObjects,Returns an array containing the selected item.
javax.swing.JComboBox.hidePopup,Causes the combo box to close its popup window.
javax.swing.JComboBox.insertItemAt,Inserts an item into the item list at a given index.
javax.swing.JComboBox.installAncestorListener,Registers ancestor listener so that it will receiveAncestorEventswhen it or any of its ancestors  move or are made visible or invisible.
javax.swing.JComboBox.isEditable,Returns true if theJComboBoxis editable.
javax.swing.JComboBox.isLightWeightPopupEnabled,Gets the value of thelightWeightPopupEnabledproperty.
javax.swing.JComboBox.isPopupVisible,Determines the visibility of the popup.
javax.swing.JComboBox.paramString,Returns a string representation of thisJComboBox.
javax.swing.JComboBox.processKeyEvent,"HandlesKeyEvents, looking for the Tab key."
javax.swing.JComboBox.removeActionListener,Removes anActionListener.
javax.swing.JComboBox.removeAllItems,Removes all items from the item list.
javax.swing.JComboBox.removeItem,Removes an item from the item list.
javax.swing.JComboBox.removeItemAt,Removes the item atanIndexThis method works only if theJComboBoxuses a  mutable data model.
javax.swing.JComboBox.removeItemListener,Removes anItemListener.
javax.swing.JComboBox.removePopupMenuListener,Removes aPopupMenuListener.
javax.swing.JComboBox.selectedItemChanged,This protected method is implementation specific.
javax.swing.JComboBox.selectWithKeyChar,"Selects the list item that corresponds to the specified keyboard  character and returns true, if there is an item corresponding  to that character."
javax.swing.JComboBox.setAction,Sets theActionfor theActionEventsource.
javax.swing.JComboBox.setActionCommand,Sets the action command that should be included in the event  sent to action listeners.
javax.swing.JComboBox.setEditable,Determines whether theJComboBoxfield is editable.
javax.swing.JComboBox.setEditor,Sets the editor used to paint and edit the selected item in theJComboBoxfield.
javax.swing.JComboBox.setEnabled,Enables the combo box so that items can be selected.
javax.swing.JComboBox.setKeySelectionManager,Sets the object that translates a keyboard character into a list  selection.
javax.swing.JComboBox.setLightWeightPopupEnabled,"Sets thelightWeightPopupEnabledproperty, which  provides a hint as to whether or not a lightweightComponentshould be used to contain theJComboBox, versus a heavyweightComponentsuch as aPanelor aWindow."
javax.swing.JComboBox.setMaximumRowCount,Sets the maximum number of rows theJComboBoxdisplays.
javax.swing.JComboBox.setModel,Sets the data model that theJComboBoxuses to obtain  the list of items.
javax.swing.JComboBox.setPopupVisible,Sets the visibility of the popup.
javax.swing.JComboBox.setPrototypeDisplayValue,Sets the prototype display value used to calculate the size of the display  for the UI portion.
javax.swing.JComboBox.setRenderer,Sets the renderer that paints the list items and the item selected from the list in  the JComboBox field.
javax.swing.JComboBox.setSelectedIndex,Selects the item at indexanIndex.
javax.swing.JComboBox.setSelectedItem,Sets the selected item in the combo box display area to the object in  the argument.
javax.swing.JComboBox.showPopup,Causes the combo box to display its popup window.
javax.swing.JComboBox.selectionForKey,"GivenaKeyand the model, returns the row   that should become selected."
javax.swing.JComponent.getBorderTitle,Recursively search through the border hierarchy (if it exists)  for a TitledBorder with a non-null title.
javax.swing.JComponent.addAncestorListener,Registerslistenerso that it will receiveAncestorEventswhen it or any of its ancestors  move or are made visible or invisible.
javax.swing.JComponent.addNotify,Notifies this component that it now has a parent component.
javax.swing.JComponent.addVetoableChangeListener,Adds aVetoableChangeListenerto the listener list.
javax.swing.JComponent.computeVisibleRect,"Returns theComponent's ""visible rect rectangle"" -  the  intersection of the visible rectangles for this component  and all of its ancestors."
javax.swing.JComponent.contains,Gives the UI delegate an opportunity to define the precise  shape of this component for the sake of mouse processing.
javax.swing.JComponent.createToolTip,Returns the instance ofJToolTipthat should be used  to display the tooltip.
javax.swing.JComponent.disable,"Deprecated.As of JDK version 1.1,  replaced byjava.awt.Component.setEnabled(boolean)."
javax.swing.JComponent.firePropertyChange,Support for reporting bound property changes for boolean properties.
javax.swing.JComponent.firePropertyChange,Support for reporting bound property changes for integer properties.
javax.swing.JComponent.fireVetoableChange,Supports reporting constrained property changes.
javax.swing.JComponent.getActionForKeyStroke,Returns the object that will perform the action registered for a  given keystroke.
javax.swing.JComponent.getActionMap,Returns theActionMapused to determine whatActionto fire for particularKeyStrokebinding.
javax.swing.JComponent.getAlignmentX,OverridesContainer.getAlignmentXto return  the horizontal alignment.
javax.swing.JComponent.getAlignmentY,OverridesContainer.getAlignmentYto return  the vertical alignment.
javax.swing.JComponent.getAncestorListeners,Returns an array of all the ancestor listeners  registered on this component.
javax.swing.JComponent.getAutoscrolls,Gets theautoscrollsproperty.
javax.swing.JComponent.getBaseline,Returns the baseline.
javax.swing.JComponent.getBaselineResizeBehavior,Returns an enum indicating how the baseline of the component  changes as the size changes.
javax.swing.JComponent.getBorder,Returns the border of this component ornullif no  border is currently set.
javax.swing.JComponent.getBounds,"Stores the bounds of this component into ""return value""rvand returnsrv."
javax.swing.JComponent.getClientProperty,Returns the value of the property with the specified key.
javax.swing.JComponent.getComponentGraphics,Returns the graphics object used to paint this component.
javax.swing.JComponent.getComponentPopupMenu,ReturnsJPopupMenuthat assigned for this component.
javax.swing.JComponent.getConditionForKeyStroke,Returns the condition that determines whether a registered action  occurs in response to the specified keystroke.
javax.swing.JComponent.getDebugGraphicsOptions,Returns the state of graphics debugging.
javax.swing.JComponent.getDefaultLocale,Returns the default locale used to initialize each JComponent's  locale property upon creation.
javax.swing.JComponent.getFontMetrics,Gets theFontMetricsfor the specifiedFont.
javax.swing.JComponent.getGraphics,"Returns this component's graphics context, which lets you draw  on a component."
javax.swing.JComponent.getHeight,Returns the current height of this component.
javax.swing.JComponent.getInheritsPopupMenu,Returns true if the JPopupMenu should be inherited from the parent.
javax.swing.JComponent.getInputMap,Returns theInputMapthat is used when the  component has focus.
javax.swing.JComponent.getInputMap,Returns theInputMapthat is used duringcondition.
javax.swing.JComponent.getInputVerifier,Returns the input verifier for this component.
javax.swing.JComponent.getInsets,"If a border has been set on this component, returns the  border's insets; otherwise callssuper.getInsets."
javax.swing.JComponent.getInsets,Returns anInsetsobject containing this component's inset  values.
javax.swing.JComponent.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisJComponent.
javax.swing.JComponent.getLocation,"Stores the x,y origin of this component into ""return value""rvand returnsrv."
javax.swing.JComponent.getMaximumSize,If the maximum size has been set to a non-nullvalue  just returns it.
javax.swing.JComponent.getMinimumSize,If the minimum size has been set to a non-nullvalue  just returns it.
javax.swing.JComponent.getNextFocusableComponent,"Deprecated.As of 1.4, replaced byFocusTraversalPolicy."
javax.swing.JComponent.getPopupLocation,Returns the preferred location to display the popup menu in this  component's coordinate system.
javax.swing.JComponent.getPreferredSize,If thepreferredSizehas been set to a  non-nullvalue just returns it.
javax.swing.JComponent.getRegisteredKeyStrokes,Returns theKeyStrokesthat will initiate  registered actions.
javax.swing.JComponent.getRootPane,Returns theJRootPaneancestor for this component.
javax.swing.JComponent.getSize,"Stores the width/height of this component into ""return value""rvand returnsrv."
javax.swing.JComponent.getToolTipLocation,Returns the tooltip location in this component's coordinate system.
javax.swing.JComponent.getToolTipText,Returns the tooltip string that has been set withsetToolTipText.
javax.swing.JComponent.getToolTipText,Returns the string to be used as the tooltip forevent.
javax.swing.JComponent.getTopLevelAncestor,"Returns the top-level ancestor of this component (either the  containingWindoworApplet),  ornullif this component has not  been added to any container."
javax.swing.JComponent.getTransferHandler,Gets thetransferHandlerproperty.
javax.swing.JComponent.getUI,Returns the look and feel delegate that renders this component.
javax.swing.JComponent.getUIClassID,Returns theUIDefaultskey used to  look up the name of theswing.plaf.ComponentUIclass that defines the look and feel  for this component.
javax.swing.JComponent.getVerifyInputWhenFocusTarget,Returns the value that indicates whether the input verifier for the  current focus owner will be called before this component requests  focus.
javax.swing.JComponent.getVetoableChangeListeners,Returns an array of all the vetoable change listeners  registered on this component.
javax.swing.JComponent.getVisibleRect,"Returns theComponent's ""visible rectangle"" -  the  intersection of this component's visible rectangle,new Rectangle(0, 0, getWidth(), getHeight()),  and all of its ancestors' visible rectangles."
javax.swing.JComponent.getWidth,Returns the current width of this component.
javax.swing.JComponent.getX,Returns the current x coordinate of the component's origin.
javax.swing.JComponent.getY,Returns the current y coordinate of the component's origin.
javax.swing.JComponent.grabFocus,"Requests that this Component get the input focus, and that this  Component's top-level ancestor become the focused Window."
javax.swing.JComponent.isDoubleBuffered,Returns whether this component should use a buffer to paint.
javax.swing.JComponent.isLightweightComponent,"Returns true if this component is lightweight, that is, if it doesn't  have a native window system peer."
javax.swing.JComponent.isManagingFocus,"Deprecated.As of 1.4, replaced byComponent.setFocusTraversalKeys(int, Set)andContainer.setFocusCycleRoot(boolean)."
javax.swing.JComponent.isOpaque,Returns true if this component is completely opaque.
javax.swing.JComponent.isOptimizedDrawingEnabled,"Returns true if this component tiles its children -- that is, if  it can guarantee that the children will not overlap."
javax.swing.JComponent.isPaintingForPrint,Returnstrueif the current painting operation on this  component is part of aprintoperation.
javax.swing.JComponent.isPaintingOrigin,"Returnstrueif a paint triggered on a child component should cause  painting to originate from this Component, or one of its ancestors."
javax.swing.JComponent.isPaintingTile,Returns true if the component is currently painting a tile.
javax.swing.JComponent.isRequestFocusEnabled,Returnstrueif thisJComponentshould  get focus; otherwise returnsfalse.
javax.swing.JComponent.isValidateRoot,"If this method returns true,revalidatecalls by  descendants of this component will cause the entire tree  beginning with this root to be validated."
javax.swing.JComponent.paint,Invoked by Swing to draw components.
javax.swing.JComponent.paintBorder,Paints the component's border.
javax.swing.JComponent.paintChildren,Paints this component's children.
javax.swing.JComponent.paintComponent,"Calls the UI delegate's paint method, if the UI delegate  is non-null."
javax.swing.JComponent.paintImmediately,"Paints the specified region in this component and all of its  descendants that overlap the region, immediately."
javax.swing.JComponent.paintImmediately,Paints the specified region now.
javax.swing.JComponent.paramString,Returns a string representation of thisJComponent.
javax.swing.JComponent.print,Invoke this method to print the component to the specifiedGraphics.
javax.swing.JComponent.printAll,Invoke this method to print the component.
javax.swing.JComponent.printBorder,Prints the component's border.
javax.swing.JComponent.printChildren,Prints this component's children.
javax.swing.JComponent.printComponent,This is invoked during a printing operation.
javax.swing.JComponent.processComponentKeyEvent,Processes any key events that the component itself  recognizes.
javax.swing.JComponent.processKeyBinding,Invoked to process the key bindings forksas the result  of theKeyEvente.
javax.swing.JComponent.processKeyEvent,OverridesprocessKeyEventto process events.
javax.swing.JComponent.processMouseEvent,"Processes mouse events occurring on this component by  dispatching them to any registeredMouseListenerobjects, refer toComponent.processMouseEvent(MouseEvent)for a complete description of this method."
javax.swing.JComponent.processMouseMotionEvent,"Processes mouse motion events, such as MouseEvent.MOUSE_DRAGGED."
javax.swing.JComponent.putClientProperty,"Adds an arbitrary key/value ""client property"" to this component."
javax.swing.JComponent.registerKeyboardAction,"This method is now obsolete, please use a combination ofgetActionMap()andgetInputMap()for  similar behavior."
javax.swing.JComponent.removeAncestorListener,Unregisterslistenerso that it will no longer receiveAncestorEvents.
javax.swing.JComponent.removeVetoableChangeListener,Removes aVetoableChangeListenerfrom the listener list.
javax.swing.JComponent.repaint,Adds the specified region to the dirty region list if the component  is showing.
javax.swing.JComponent.requestDefaultFocus,"Deprecated.As of 1.4, replaced byFocusTraversalPolicy.getDefaultComponent(Container).requestFocus()"
javax.swing.JComponent.requestFocus,Requests that thisComponentgets the input focus.
javax.swing.JComponent.resetKeyboardActions,Unregisters all the bindings in the first tierInputMapsandActionMap.
javax.swing.JComponent.reshape,"Deprecated.As of JDK 5,  replaced byComponent.setBounds(int, int, int, int)."
javax.swing.JComponent.revalidate,Supports deferred automatic layout.
javax.swing.JComponent.scrollRectToVisible,Forwards thescrollRectToVisible()message to theJComponent's parent.
javax.swing.JComponent.setActionMap,Sets theActionMaptoam.
javax.swing.JComponent.setAlignmentX,Sets the horizontal alignment.
javax.swing.JComponent.setAlignmentY,Sets the vertical alignment.
javax.swing.JComponent.setAutoscrolls,Sets theautoscrollsproperty.
javax.swing.JComponent.setBackground,Sets the background color of this component.
javax.swing.JComponent.setBorder,Sets the border of this component.
javax.swing.JComponent.setComponentPopupMenu,Sets theJPopupMenufor thisJComponent.
javax.swing.JComponent.setDebugGraphicsOptions,Enables or disables diagnostic information about every graphics  operation performed within the component or one of its children.
javax.swing.JComponent.setDefaultLocale,Sets the default locale used to initialize each JComponent's locale  property upon creation.
javax.swing.JComponent.setDoubleBuffered,Sets whether this component should use a buffer to paint.
javax.swing.JComponent.setEnabled,Sets whether or not this component is enabled.
javax.swing.JComponent.setFocusTraversalKeys,Sets the focus traversal keys for a given traversal operation for this  Component.
javax.swing.JComponent.setFont,Sets the font for this component.
javax.swing.JComponent.setForeground,Sets the foreground color of this component.
javax.swing.JComponent.setInheritsPopupMenu,Sets whether or notgetComponentPopupMenushould delegate  to the parent if this component does not have aJPopupMenuassigned to it.
javax.swing.JComponent.setInputMap,Sets theInputMapto use under the conditionconditiontomap.
javax.swing.JComponent.setInputVerifier,Sets the input verifier for this component.
javax.swing.JComponent.setMaximumSize,Sets the maximum size of this component to a constant  value.
javax.swing.JComponent.setMinimumSize,Sets the minimum size of this component to a constant  value.
javax.swing.JComponent.setNextFocusableComponent,"Deprecated.As of 1.4, replaced byFocusTraversalPolicy"
javax.swing.JComponent.setOpaque,If true the component paints every pixel within its bounds.
javax.swing.JComponent.setPreferredSize,Sets the preferred size of this component.
javax.swing.JComponent.setRequestFocusEnabled,Provides a hint as to whether or not thisJComponentshould get focus.
javax.swing.JComponent.setToolTipText,Registers the text to display in a tool tip.
javax.swing.JComponent.setTransferHandler,"Sets theTransferHandler, which provides support for transfer  of data into and out of this component via cut/copy/paste and drag  and drop."
javax.swing.JComponent.setUI,Sets the look and feel delegate for this component.
javax.swing.JComponent.setVerifyInputWhenFocusTarget,Sets the value to indicate whether input verifier for the  current focus owner will be called before this component requests  focus.
javax.swing.JComponent.setVisible,Makes the component visible or invisible.
javax.swing.JComponent.unregisterKeyboardAction,This method is now obsolete.
javax.swing.JComponent.update,Callspaint.
javax.swing.JComponent.updateUI,This method is called to update the UI property to a value from the  current look and feel.
javax.swing.JDesktopPane.getAccessibleContext,Gets theAccessibleContextassociated with thisJDesktopPane.
javax.swing.JDesktopPane.getAllFrames,Returns allJInternalFramescurrently displayed in the  desktop.
javax.swing.JDesktopPane.getAllFramesInLayer,Returns allJInternalFramescurrently displayed in the  specified layer of the desktop.
javax.swing.JDesktopPane.getDesktopManager,Returns theDesktopMangerthat handles  desktop-specific UI actions.
javax.swing.JDesktopPane.getDragMode,"Gets the current ""dragging style"" used by the desktop pane."
javax.swing.JDesktopPane.getSelectedFrame,"Returns the currently activeJInternalFramein thisJDesktopPane, ornullif noJInternalFrameis currently active."
javax.swing.JDesktopPane.paramString,Returns a string representation of thisJDesktopPane.
javax.swing.JDesktopPane.remove,Remove the indexed component from this pane.
javax.swing.JDesktopPane.selectFrame,Selects the nextJInternalFramein this desktop pane.
javax.swing.JDesktopPane.setDesktopManager,Sets theDesktopMangerthat will handle  desktop-specific UI actions.
javax.swing.JDesktopPane.setDragMode,"Sets the ""dragging style"" used by the desktop pane."
javax.swing.JDesktopPane.setSelectedFrame,Sets the currently activeJInternalFramein thisJDesktopPane.
javax.swing.JDialog.addImpl,Adds the specified childComponent.
javax.swing.JDialog.createRootPane,Called by the constructor methods to create the defaultrootPane.
javax.swing.JDialog.dialogInit,Called by the constructors to init theJDialogproperly.
javax.swing.JDialog.getAccessibleContext,Gets the AccessibleContext associated with this JDialog.
javax.swing.JDialog.getContentPane,Returns thecontentPaneobject for this dialog.
javax.swing.JDialog.getDefaultCloseOperation,"Returns the operation which occurs when the user  initiates a ""close"" on this dialog."
javax.swing.JDialog.getGlassPane,Returns theglassPaneobject for this dialog.
javax.swing.JDialog.getGraphics,Creates a graphics context for this component.
javax.swing.JDialog.getJMenuBar,Returns the menubar set on this dialog.
javax.swing.JDialog.getLayeredPane,Returns thelayeredPaneobject for this dialog.
javax.swing.JDialog.getRootPane,Returns therootPaneobject for this dialog.
javax.swing.JDialog.isDefaultLookAndFeelDecorated,Returns true if newly createdJDialogs should have their  Window decorations provided by the current look and feel.
javax.swing.JDialog.isRootPaneCheckingEnabled,Returns whether calls toaddandsetLayoutare forwarded to thecontentPane.
javax.swing.JDialog.paramString,Returns a string representation of thisJDialog.
javax.swing.JDialog.processWindowEvent,Handles window events depending on the state of thedefaultCloseOperationproperty.
javax.swing.JDialog.remove,Removes the specified component from the container.
javax.swing.JDialog.repaint,Repaints the specified rectangle of this component withintimemilliseconds.
javax.swing.JDialog.setContentPane,Sets thecontentPaneproperty.
javax.swing.JDialog.setDefaultCloseOperation,"Sets the operation that will happen by default when  the user initiates a ""close"" on this dialog."
javax.swing.JDialog.setDefaultLookAndFeelDecorated,"Provides a hint as to whether or not newly createdJDialogs  should have their Window decorations (such as borders, widgets to  close the window, title...) provided by the current look  and feel."
javax.swing.JDialog.setGlassPane,Sets theglassPaneproperty.
javax.swing.JDialog.setJMenuBar,Sets the menubar for this dialog.
javax.swing.JDialog.setLayeredPane,Sets thelayeredPaneproperty.
javax.swing.JDialog.setLayout,Sets theLayoutManager.
javax.swing.JDialog.setRootPane,Sets therootPaneproperty.
javax.swing.JDialog.setRootPaneCheckingEnabled,Sets whether calls toaddandsetLayoutare forwarded to thecontentPane.
javax.swing.JDialog.setTransferHandler,"Sets thetransferHandlerproperty, which is a mechanism to  support transfer of data into this component."
javax.swing.JDialog.update,Callspaint(g).
javax.swing.JEditorPane.getAccessibleDescription,Gets the accessibleDescription property of this object.
javax.swing.JEditorPane.getAccessibleAt,"Returns the Accessible child, if one exists, contained at the local  coordinate Point."
javax.swing.JEditorPane.getAccessibleChild,Returns the specified Accessible child of the object.
javax.swing.JEditorPane.getAccessibleText,Returns the accessible text.
javax.swing.JEditorPane.addHyperlinkListener,"Adds a hyperlink listener for notification of any changes, for example  when a link is selected and entered."
javax.swing.JEditorPane.createDefaultEditorKit,Creates the default editor kit (PlainEditorKit) for when  the component is first created.
javax.swing.JEditorPane.createEditorKitForContentType,Creates a handler for the given type from the default registry  of editor kits.
javax.swing.JEditorPane.getAccessibleContext,Gets the AccessibleContext associated with this JEditorPane.
javax.swing.JEditorPane.getContentType,Gets the type of content that this editor  is currently set to deal with.
javax.swing.JEditorPane.getEditorKit,Fetches the currently installed kit for handling content.
javax.swing.JEditorPane.getEditorKitClassNameForContentType,Returns the currently registeredEditorKitclass name for the  typetype.
javax.swing.JEditorPane.getEditorKitForContentType,Fetches the editor kit to use for the given type  of content.
javax.swing.JEditorPane.getHyperlinkListeners,Returns an array of all theHyperLinkListeners added  to this JEditorPane with addHyperlinkListener().
javax.swing.JEditorPane.getPage,Gets the current URL being displayed.
javax.swing.JEditorPane.getPreferredSize,Returns the preferred size for theJEditorPane.
javax.swing.JEditorPane.getScrollableTracksViewportHeight,Returns true if a viewport should always force the height of thisScrollableto match the height of the viewport.
javax.swing.JEditorPane.getScrollableTracksViewportWidth,Returns true if a viewport should always force the width of thisScrollableto match the width of the viewport.
javax.swing.JEditorPane.getStream,"Fetches a stream for the given URL, which is about to  be loaded by thesetPagemethod."
javax.swing.JEditorPane.getText,Returns the text contained in thisTextComponentin terms of the  content type of this editor.
javax.swing.JEditorPane.getUIClassID,Gets the class ID for the UI.
javax.swing.JEditorPane.paramString,Returns a string representation of thisJEditorPane.
javax.swing.JEditorPane.read,This method initializes from a stream.
javax.swing.JEditorPane.registerEditorKitForContentType,Establishes the default bindings oftypetoclassname.
javax.swing.JEditorPane.removeHyperlinkListener,Removes a hyperlink listener.
javax.swing.JEditorPane.replaceSelection,Replaces the currently selected content with new content  represented by the given string.
javax.swing.JEditorPane.scrollToReference,"Scrolls the view to the given reference location  (that is, the value returned by theURL.getRefmethod for the URL being displayed)."
javax.swing.JEditorPane.setContentType,Sets the type of content that this editor  handles.
javax.swing.JEditorPane.setEditorKit,Sets the currently installed kit for handling  content.
javax.swing.JEditorPane.setEditorKitForContentType,Directly sets the editor kit to use for the given type.
javax.swing.JEditorPane.setPage,Sets the current URL being displayed.
javax.swing.JEditorPane.setText,"Sets the text of thisTextComponentto the specified  content,  which is expected to be in the format of the content type of  this editor."
javax.swing.JEditorPane.getLink,Returns the index into an array of hyperlinks that  index.
javax.swing.JEditorPane.getLinkCount,Returns the number of links within this hypertext doc.
javax.swing.JEditorPane.getLinkIndex,"Returns the index into an array of hyperlinks that  is associated with this character index, or -1 if there  is no hyperlink associated with this index."
javax.swing.JEditorPane.getLinkText,Returns the contiguous text within the document that  is associated with this hyperlink.
javax.swing.JEditorPane.getAccessibleActionAnchor,"Return an object that represents the link anchor,  as appropriate for that link."
javax.swing.JEditorPane.getAccessibleActionCount,"Returns the number of accessible actions available in this Link  If there are more than one, the first one is NOT considered the  ""default"" action of this LINK object (e.g. in an HTML imagemap)."
javax.swing.JEditorPane.getAccessibleActionDescription,Return a String description of this particular  link action.
javax.swing.JEditorPane.getAccessibleActionObject,Returns a URL object that represents the link.
javax.swing.JEditorPane.getEndIndex,Get the index with the hypertext document at which this  link ends
javax.swing.JEditorPane.getStartIndex,Get the index with the hypertext document at which this  link begins
javax.swing.JEditorPane.isValid,"Since the document a link is associated with may have  changed, this method returns whether this Link is valid  anymore (with respect to the document it references)."
javax.swing.JFileChooser.accept,Returns true if the file should be displayed.
javax.swing.JFileChooser.addActionListener,Adds anActionListenerto the file chooser.
javax.swing.JFileChooser.addChoosableFileFilter,Adds a filter to the list of user choosable file filters.
javax.swing.JFileChooser.approveSelection,"Called by the UI when the user hits the Approve button  (labeled ""Open"" or ""Save"", by default)."
javax.swing.JFileChooser.cancelSelection,Called by the UI when the user chooses the Cancel button.
javax.swing.JFileChooser.changeToParentDirectory,Changes the directory to be set to the parent of the  current directory.
javax.swing.JFileChooser.createDialog,Creates and returns a newJDialogwrappingthiscentered on theparentin theparent's frame.
javax.swing.JFileChooser.ensureFileIsVisible,"Makes sure that the specified file is viewable, and  not hidden."
javax.swing.JFileChooser.getAcceptAllFileFilter,Returns theAcceptAllfile filter.
javax.swing.JFileChooser.getAccessibleContext,Gets the AccessibleContext associated with this JFileChooser.
javax.swing.JFileChooser.getAccessory,Returns the accessory component.
javax.swing.JFileChooser.getActionListeners,Returns an array of all the action listeners  registered on this file chooser.
javax.swing.JFileChooser.getApproveButtonMnemonic,Returns the approve button's mnemonic.
javax.swing.JFileChooser.getApproveButtonText,Returns the text used in theApproveButtonin theFileChooserUI.
javax.swing.JFileChooser.getApproveButtonToolTipText,Returns the tooltip text used in theApproveButton.
javax.swing.JFileChooser.getChoosableFileFilters,Gets the list of user choosable file filters.
javax.swing.JFileChooser.getControlButtonsAreShown,Returns the value of thecontrolButtonsAreShownproperty.
javax.swing.JFileChooser.getCurrentDirectory,Returns the current directory.
javax.swing.JFileChooser.getDescription,Returns the file description.
javax.swing.JFileChooser.getDialogTitle,Gets the string that goes in theJFileChooser's titlebar.
javax.swing.JFileChooser.getDialogType,Returns the type of this dialog.
javax.swing.JFileChooser.getFileFilter,Returns the currently selected file filter.
javax.swing.JFileChooser.getFileSelectionMode,Returns the current file-selection mode.
javax.swing.JFileChooser.getFileSystemView,Returns the file system view.
javax.swing.JFileChooser.getFileView,Returns the current file view.
javax.swing.JFileChooser.getIcon,"Returns the icon for this file or type of file, depending  on the system."
javax.swing.JFileChooser.getName,Returns the filename.
javax.swing.JFileChooser.getSelectedFile,Returns the selected file.
javax.swing.JFileChooser.getSelectedFiles,Returns a list of selected files if the file chooser is  set to allow multiple selection.
javax.swing.JFileChooser.getTypeDescription,Returns the file type.
javax.swing.JFileChooser.getUI,Gets the UI object which implements the L&F for this component.
javax.swing.JFileChooser.isAcceptAllFileFilterUsed,Returns whether theAcceptAll FileFilteris used.
javax.swing.JFileChooser.isDirectorySelectionEnabled,Convenience call that determines if directories are selectable based  on the current file selection mode.
javax.swing.JFileChooser.isFileHidingEnabled,"Returns true if hidden files are not shown in the file chooser;  otherwise, returns false."
javax.swing.JFileChooser.isFileSelectionEnabled,Convenience call that determines if files are selectable based on the  current file selection mode.
javax.swing.JFileChooser.isMultiSelectionEnabled,Returns true if multiple files can be selected.
javax.swing.JFileChooser.isTraversable,Returns true if the file (directory) can be visited.
javax.swing.JFileChooser.paramString,Returns a string representation of thisJFileChooser.
javax.swing.JFileChooser.removeActionListener,Removes anActionListenerfrom the file chooser.
javax.swing.JFileChooser.removeChoosableFileFilter,Removes a filter from the list of user choosable file filters.
javax.swing.JFileChooser.rescanCurrentDirectory,Tells the UI to rescan its files list from the current directory.
javax.swing.JFileChooser.resetChoosableFileFilters,Resets the choosable file filter list to its starting state.
javax.swing.JFileChooser.setAcceptAllFileFilterUsed,Determines whether theAcceptAll FileFilteris used  as an available choice in the choosable filter list.
javax.swing.JFileChooser.setAccessory,Sets the accessory component.
javax.swing.JFileChooser.setApproveButtonMnemonic,Sets the approve button's mnemonic using a character.
javax.swing.JFileChooser.setApproveButtonMnemonic,Sets the approve button's mnemonic using a numeric keycode.
javax.swing.JFileChooser.setApproveButtonText,Sets the text used in theApproveButtonin theFileChooserUI.
javax.swing.JFileChooser.setApproveButtonToolTipText,Sets the tooltip text used in theApproveButton.
javax.swing.JFileChooser.setControlButtonsAreShown,Sets the property  that indicates whether theapproveandcancelbuttons are shown in the file chooser.
javax.swing.JFileChooser.setCurrentDirectory,Sets the current directory.
javax.swing.JFileChooser.setDialogTitle,Sets the string that goes in theJFileChooserwindow's  title bar.
javax.swing.JFileChooser.setDialogType,Sets the type of this dialog.
javax.swing.JFileChooser.setFileFilter,Sets the current file filter.
javax.swing.JFileChooser.setFileHidingEnabled,Sets file hiding on or off.
javax.swing.JFileChooser.setFileSelectionMode,"Sets theJFileChooserto allow the user to just  select files, just select  directories, or select both files and directories."
javax.swing.JFileChooser.setFileSystemView,"Sets the file system view that theJFileChooseruses for  accessing and creating file system resources, such as finding  the floppy drive and getting a list of root drives."
javax.swing.JFileChooser.setFileView,"Sets the file view to be used to retrieve UI information, such as  the icon that represents a file or the type description of a file."
javax.swing.JFileChooser.setMultiSelectionEnabled,Sets the file chooser to allow multiple file selections.
javax.swing.JFileChooser.setSelectedFile,Sets the selected file.
javax.swing.JFileChooser.setSelectedFiles,Sets the list of selected files if the file chooser is  set to allow multiple selection.
javax.swing.JFileChooser.setup,Performs common constructor initialization and setup.
javax.swing.JFileChooser.showDialog,Pops a custom file chooser dialog with a custom approve button.
javax.swing.JFileChooser.showOpenDialog,"Pops up an ""Open File"" file chooser dialog."
javax.swing.JFileChooser.showSaveDialog,"Pops up a ""Save File"" file chooser dialog."
javax.swing.JFormattedTextField.clone,Clones theAbstractFormatter.
javax.swing.JFormattedTextField.getActions,Subclass and override if you wish to provide a custom set ofActions.
javax.swing.JFormattedTextField.getDocumentFilter,Subclass and override if you wish to provide aDocumentFilterto restrict what can be input.
javax.swing.JFormattedTextField.getFormattedTextField,Returns the currentJFormattedTextFieldtheAbstractFormatteris installed on.
javax.swing.JFormattedTextField.getNavigationFilter,Subclass and override if you wish to provide a filter to restrict  where the user can navigate to.
javax.swing.JFormattedTextField.install,Installs theAbstractFormatteronto a particularJFormattedTextField.
javax.swing.JFormattedTextField.invalidEdit,This should be invoked when the user types an invalid character.
javax.swing.JFormattedTextField.setEditValid,Invoke this to update theeditValidproperty of theJFormattedTextField.
javax.swing.JFormattedTextField.stringToValue,Parsestextreturning an arbitrary Object.
javax.swing.JFormattedTextField.uninstall,Uninstalls any state theAbstractFormattermay have  installed on theJFormattedTextField.
javax.swing.JFormattedTextField.valueToString,Returns the string value to display forvalue.
javax.swing.JFormattedTextField.getFormatter,Returns anAbstractFormatterthat can handle formatting  of the passed inJFormattedTextField.
javax.swing.JFormattedTextField.commitEdit,Forces the current value to be taken from theAbstractFormatterand set as the current value.
javax.swing.JFormattedTextField.getActions,Fetches the command list for the editor.
javax.swing.JFormattedTextField.getFocusLostBehavior,Returns the behavior when focus is lost.
javax.swing.JFormattedTextField.getFormatter,Returns theAbstractFormatterthat is used to format and  parse the current value.
javax.swing.JFormattedTextField.getFormatterFactory,Returns the currentAbstractFormatterFactory.
javax.swing.JFormattedTextField.getUIClassID,Gets the class ID for a UI.
javax.swing.JFormattedTextField.getValue,Returns the last valid value.
javax.swing.JFormattedTextField.invalidEdit,Invoked when the user inputs an invalid value.
javax.swing.JFormattedTextField.isEditValid,Returns true if the current value being edited is valid.
javax.swing.JFormattedTextField.processFocusEvent,"Processes any focus events, such asFocusEvent.FOCUS_GAINEDorFocusEvent.FOCUS_LOST."
javax.swing.JFormattedTextField.processInputMethodEvent,"Processes any input method events, such asInputMethodEvent.INPUT_METHOD_TEXT_CHANGEDorInputMethodEvent.CARET_POSITION_CHANGED."
javax.swing.JFormattedTextField.setDocument,Associates the editor with a text document.
javax.swing.JFormattedTextField.setFocusLostBehavior,Sets the behavior when focus is lost.
javax.swing.JFormattedTextField.setFormatter,Sets the currentAbstractFormatter.
javax.swing.JFormattedTextField.setFormatterFactory,Sets theAbstractFormatterFactory.
javax.swing.JFormattedTextField.setValue,Sets the value that will be formatted by anAbstractFormatterobtained from the currentAbstractFormatterFactory.
javax.swing.JFrame.frameInit,Called by the constructors to init theJFrameproperly.
javax.swing.JFrame.getAccessibleContext,Gets the AccessibleContext associated with this JFrame.
javax.swing.JFrame.getContentPane,Returns thecontentPaneobject for this frame.
javax.swing.JFrame.getDefaultCloseOperation,"Returns the operation that occurs when the user  initiates a ""close"" on this frame."
javax.swing.JFrame.getGlassPane,Returns theglassPaneobject for this frame.
javax.swing.JFrame.getJMenuBar,Returns the menubar set on this frame.
javax.swing.JFrame.getLayeredPane,Returns thelayeredPaneobject for this frame.
javax.swing.JFrame.getRootPane,Returns therootPaneobject for this frame.
javax.swing.JFrame.isDefaultLookAndFeelDecorated,Returns true if newly createdJFrames should have their  Window decorations provided by the current look and feel.
javax.swing.JFrame.paramString,Returns a string representation of thisJFrame.
javax.swing.JFrame.processWindowEvent,Processes window events occurring on this component.
javax.swing.JFrame.setDefaultCloseOperation,"Sets the operation that will happen by default when  the user initiates a ""close"" on this frame."
javax.swing.JFrame.setDefaultLookAndFeelDecorated,"Provides a hint as to whether or not newly createdJFrames  should have their Window decorations (such as borders, widgets to  close the window, title...) provided by the current look  and feel."
javax.swing.JFrame.setJMenuBar,Sets the menubar for this frame.
javax.swing.JFrame.update,Just callspaint(g).
javax.swing.JInternalFrame.getAccessibleValue,Gets the AccessibleValue associated with this object.
javax.swing.JInternalFrame.getCurrentAccessibleValue,Gets the value of this object as aNumber.
javax.swing.JInternalFrame.getMaximumAccessibleValue,Gets the maximum value of this object as aNumber.
javax.swing.JInternalFrame.getMinimumAccessibleValue,Gets the minimum value of this object as aNumber.
javax.swing.JInternalFrame.setCurrentAccessibleValue,Sets the value of this object as aNumber.
javax.swing.JInternalFrame.getAccessibleContext,Gets the AccessibleContext associated with this JDesktopIcon.
javax.swing.JInternalFrame.getDesktopPane,Convenience method to ask the icon for theDesktopobject it belongs to.
javax.swing.JInternalFrame.getInternalFrame,Returns theJInternalFramethat thisDesktopIconis associated with.
javax.swing.JInternalFrame.getUI,Returns the look-and-feel object that renders this component.
javax.swing.JInternalFrame.getUIClassID,Returns the name of the look-and-feel  class that renders this component.
javax.swing.JInternalFrame.setInternalFrame,Sets theJInternalFramewith which thisDesktopIconis associated.
javax.swing.JInternalFrame.setUI,Sets the look-and-feel object that renders this component.
javax.swing.JInternalFrame.updateUI,Notification from theUIManagerthat the look and feel  has changed.
javax.swing.JLabel.getCharacterBounds,Returns the bounding box of the character at the given  index in the string.
javax.swing.JLabel.checkHorizontalKey,Verify that key is a legal value for the horizontalAlignment properties.
javax.swing.JLabel.checkVerticalKey,Verify that key is a legal value for the  verticalAlignment or verticalTextPosition properties.
javax.swing.JLabel.getAccessibleContext,Get the AccessibleContext of this object
javax.swing.JLabel.getDisabledIcon,Returns the icon used by the label when it's disabled.
javax.swing.JLabel.getDisplayedMnemonic,Return the keycode that indicates a mnemonic key.
javax.swing.JLabel.getHorizontalAlignment,Returns the alignment of the label's contents along the X axis.
javax.swing.JLabel.getHorizontalTextPosition,"Returns the horizontal position of the label's text,  relative to its image."
javax.swing.JLabel.getIcon,"Returns the graphic image (glyph, icon) that the label displays."
javax.swing.JLabel.getIconTextGap,Returns the amount of space between the text and the icon  displayed in this label.
javax.swing.JLabel.getLabelFor,Get the component this is labelling.
javax.swing.JLabel.getText,Returns the text string that the label displays.
javax.swing.JLabel.getUIClassID,Returns a string that specifies the name of the l&f class  that renders this component.
javax.swing.JLabel.getVerticalAlignment,Returns the alignment of the label's contents along the Y axis.
javax.swing.JLabel.getVerticalTextPosition,"Returns the vertical position of the label's text,  relative to its image."
javax.swing.JLabel.imageUpdate,This is overridden to return false if the current Icon's Image is  not equal to the passed in Imageimg.
javax.swing.JLabel.paramString,Returns a string representation of this JLabel.
javax.swing.JLabel.setDisabledIcon,"Set the icon to be displayed if this JLabel is ""disabled""  (JLabel.setEnabled(false))."
javax.swing.JLabel.setDisplayedMnemonic,Specifies the displayedMnemonic as a char value.
javax.swing.JLabel.setDisplayedMnemonic,Specify a keycode that indicates a mnemonic key.
javax.swing.JLabel.setHorizontalAlignment,Sets the alignment of the label's contents along the X axis.
javax.swing.JLabel.setHorizontalTextPosition,"Sets the horizontal position of the label's text,  relative to its image."
javax.swing.JLabel.setIcon,Defines the icon this component will display.
javax.swing.JLabel.setLabelFor,Set the component this is labelling.
javax.swing.JLabel.setText,Defines the single line of text this component will display.
javax.swing.JLabel.setVerticalAlignment,Sets the alignment of the label's contents along the Y axis.
javax.swing.JLabel.setVerticalTextPosition,"Sets the vertical position of the label's text,  relative to its image."
javax.swing.JLayer.addImpl,This method is not supported byJLayerand always throwsUnsupportedOperationException
javax.swing.JLayer.createGlassPane,Called by the constructor methods to create a defaultglassPane.
javax.swing.JLayer.doLayout,"Delegates its functionality to theLayerUI.doLayout(JLayer)method,  ifLayerUIis set."
javax.swing.JLayer.getAccessibleContext,Gets the AccessibleContext associated with thisJLayer.
javax.swing.JLayer.getBorder,"Delegates its functionality to thegetView().getBorder()method,  if the view component is an instance ofjavax.swing.JComponent,  otherwise returnsnull."
javax.swing.JLayer.getGlassPane,Returns theJLayer's glassPane component ornull.
javax.swing.JLayer.getLayerEventMask,Returns the bitmap of event mask to receive by thisJLayerand itsLayerUI.
javax.swing.JLayer.getPreferredScrollableViewportSize,Returns the preferred size of the viewport for a view component.
javax.swing.JLayer.getScrollableBlockIncrement,"Returns a scroll increment, which is required for components  that display logical rows or columns in order to completely expose  one block of rows or columns, depending on the value of orientation."
javax.swing.JLayer.getScrollableTracksViewportHeight,"Returnsfalseto indicate that the height of the viewport does not  determine the height of the layer, unless the preferred height  of the layer is smaller than the height of the viewport."
javax.swing.JLayer.getScrollableTracksViewportWidth,"Returnsfalseto indicate that the width of the viewport does not  determine the width of the layer, unless the preferred width  of the layer is smaller than the width of the viewport."
javax.swing.JLayer.getScrollableUnitIncrement,"Returns a scroll increment, which is required for components  that display logical rows or columns in order to completely expose  one new row or column, depending on the value of orientation."
javax.swing.JLayer.getUI,Returns theLayerUIfor thisJLayer.
javax.swing.JLayer.getView,Returns theJLayer's view component ornull.
javax.swing.JLayer.imageUpdate,"Delegates its functionality to theLayerUI.imageUpdate(java.awt.Image, int, int, int, int, int, JLayer)method,  if theLayerUIis set."
javax.swing.JLayer.isOptimizedDrawingEnabled,TheJLayeroverrides the default implementation of  this method (inJComponent) to returnfalse.
javax.swing.JLayer.isPaintingOrigin,"Always returnstrueto cause painting to originate fromJLayer,  or one of its ancestors."
javax.swing.JLayer.paint,Delegates all painting to theLayerUIobject.
javax.swing.JLayer.paintComponent,"This method is empty, because all painting is done bypaint(Graphics)andComponentUI.update(Graphics, JComponent)methods"
javax.swing.JLayer.paintImmediately,"Delegates its functionality to theLayerUI.paintImmediately(int, int, int, int, JLayer)method,  ifLayerUIis set."
javax.swing.JLayer.propertyChange,This method gets called when a bound property is changed.
javax.swing.JLayer.setBorder,"Delegates its functionality to thegetView().setBorder(Border)method,  if the view component is an instance ofjavax.swing.JComponent,  otherwise this method is a no-op."
javax.swing.JLayer.setGlassPane,"Sets theJLayer's glassPane component, which can benull."
javax.swing.JLayer.setLayerEventMask,"Enables the events from JLayer andall its descendantsdefined by the specified event mask parameter  to be delivered to theLayerUI.eventDispatched(AWTEvent, JLayer)method."
javax.swing.JLayer.setUI,Sets theLayerUIwhich will perform painting  and receive input events for thisJLayer.
javax.swing.JLayer.setView,"Sets theJLayer's view component, which can benull."
javax.swing.JLayer.updateUI,"Delegates its functionality to theLayerUI.updateUI(JLayer)method,  ifLayerUIis set."
javax.swing.JLayeredPane.getAccessibleContext,Gets the AccessibleContext associated with this JLayeredPane.
javax.swing.JLayeredPane.getComponentCountInLayer,Returns the number of children currently in the specified layer.
javax.swing.JLayeredPane.getComponentsInLayer,Returns an array of the components in the specified layer.
javax.swing.JLayeredPane.getComponentToLayer,Returns the hashtable that maps components to layers.
javax.swing.JLayeredPane.getIndexOf,Returns the index of the specified Component.
javax.swing.JLayeredPane.getLayer,Returns the layer attribute for the specified Component.
javax.swing.JLayeredPane.getLayer,"Gets the layer property for a JComponent, it  does not cause any side effects like setLayer()."
javax.swing.JLayeredPane.getLayeredPaneAbove,Convenience method that returns the first JLayeredPane which  contains the specified component.
javax.swing.JLayeredPane.getObjectForLayer,Returns the Integer object associated with a specified layer.
javax.swing.JLayeredPane.getPosition,Get the relative position of the component within its layer.
javax.swing.JLayeredPane.highestLayer,Returns the highest layer value from all current children.
javax.swing.JLayeredPane.insertIndexForLayer,Primitive method that determines the proper location to  insert a new child based on layer and position requests.
javax.swing.JLayeredPane.isOptimizedDrawingEnabled,"Returns false if components in the pane can overlap, which makes  optimized drawing impossible."
javax.swing.JLayeredPane.lowestLayer,Returns the lowest layer value from all current children.
javax.swing.JLayeredPane.moveToBack,Moves the component to the bottom of the components in its current layer  (position -1).
javax.swing.JLayeredPane.moveToFront,Moves the component to the top of the components in its current layer  (position 0).
javax.swing.JLayeredPane.paint,Paints this JLayeredPane within the specified graphics context.
javax.swing.JLayeredPane.paramString,Returns a string representation of this JLayeredPane.
javax.swing.JLayeredPane.putLayer,Sets the layer property on a JComponent.
javax.swing.JLayeredPane.setLayer,"Sets the layer attribute on the specified component,  making it the bottommost component in that layer."
javax.swing.JLayeredPane.setLayer,Sets the layer attribute for the specified component and  also sets its position within that layer.
javax.swing.JLayeredPane.setPosition,"Moves the component topositionwithin its current layer,  where 0 is the topmost position within the layer and -1 is the bottommost  position."
javax.swing.JList.contains,"Checks whether the specified point is within this object's bounds, where  the point's x and y coordinates are defined to be relative to the  coordinate system of the object."
javax.swing.JList.getAccessibleActionCount,"Returns the number of accessible actions available in this object If  there are more than one, the first one is considered the ""default"" action  of the object."
javax.swing.JList.getAccessibleAt,"Returns theAccessiblechild, if one exists, contained at the  local coordinatePoint."
javax.swing.JList.getAccessibleComponent,Get the AccessibleComponent associated with this object.
javax.swing.JList.getAccessibleContext,Get the AccessibleContext for this object.
javax.swing.JList.getAccessibleIcon,"Returns the icon for the element renderer, as the only item  of an array ofAccessibleIcons or anullarray  if the renderer component contains no icons."
javax.swing.JList.getCursor,Gets the cursor of this object.
javax.swing.JList.getFont,Gets the font of this object.
javax.swing.JList.getLocation,Gets the location of the object relative to the parent in the form of a  point specifying the object's top-left corner in the screen's coordinate  space.
javax.swing.JList.setCursor,Sets the cursor of this object.
javax.swing.JList.setFont,Sets the font of this object.
javax.swing.JList.contentsChanged,List Data Listener contents changed method.
javax.swing.JList.getAccessibleAt,"Returns theAccessiblechild contained at  the local coordinatePoint, if one exists."
javax.swing.JList.intervalAdded,List Data Listener interval added method.
javax.swing.JList.intervalRemoved,List Data Listener interval removed method.
javax.swing.JList.propertyChange,Property Change Listener change method.
javax.swing.JList.valueChanged,List Selection Listener value change method.
javax.swing.JList.getIndex,Returns the index where dropped data should be placed in the  list.
javax.swing.JList.isInsert,Returns whether or not this location represents an insert  location.
javax.swing.JList.toString,Returns a string representation of this drop location.
javax.swing.JList.addListSelectionListener,"Adds a listener to the list, to be notified each time a change to the  selection occurs; the preferred way of listening for selection state  changes."
javax.swing.JList.addSelectionInterval,Sets the selection to be the union of the specified interval with current  selection.
javax.swing.JList.clearSelection,"Clears the selection; after calling this method,isSelectionEmptywill returntrue."
javax.swing.JList.createSelectionModel,Returns an instance ofDefaultListSelectionModel; called  during construction to initialize the list's selection model  property.
javax.swing.JList.ensureIndexIsVisible,Scrolls the list within an enclosing viewport to make the specified  cell completely visible.
javax.swing.JList.fireSelectionValueChanged,NotifiesListSelectionListeners added directly to the list  of selection changes made to the selection model.
javax.swing.JList.getAccessibleContext,Gets theAccessibleContextassociated with thisJList.
javax.swing.JList.getAnchorSelectionIndex,Returns the anchor selection index.
javax.swing.JList.getCellBounds,"Returns the bounding rectangle, in the list's coordinate system,  for the range of cells specified by the two indices."
javax.swing.JList.getCellRenderer,Returns the object responsible for painting list items.
javax.swing.JList.getDragEnabled,Returns whether or not automatic drag handling is enabled.
javax.swing.JList.getDropLocation,"Returns the location that this component should visually indicate  as the drop location during a DnD operation over the component,  ornullif no location is to currently be shown."
javax.swing.JList.getDropMode,Returns the drop mode for this component.
javax.swing.JList.getFirstVisibleIndex,Returns the smallest list index that is currently visible.
javax.swing.JList.getFixedCellHeight,Returns the value of thefixedCellHeightproperty.
javax.swing.JList.getFixedCellWidth,Returns the value of thefixedCellWidthproperty.
javax.swing.JList.getLastVisibleIndex,Returns the largest list index that is currently visible.
javax.swing.JList.getLayoutOrientation,"Returns the layout orientation property for the list:VERTICALif the layout is a single column of cells,VERTICAL_WRAPif the  layout is ""newspaper style"" with the content flowing vertically then  horizontally, orHORIZONTAL_WRAPif the layout is ""newspaper  style"" with the content flowing horizontally then vertically."
javax.swing.JList.getLeadSelectionIndex,Returns the lead selection index.
javax.swing.JList.getListSelectionListeners,Returns an array of all theListSelectionListeners added  to thisJListby way ofaddListSelectionListener.
javax.swing.JList.getMaxSelectionIndex,"Returns the largest selected cell index, or-1if the selection  is empty."
javax.swing.JList.getMinSelectionIndex,"Returns the smallest selected cell index, or-1if the selection  is empty."
javax.swing.JList.getModel,Returns the data model that holds the list of items displayed  by theJListcomponent.
javax.swing.JList.getNextMatch,Returns the next list element whosetoStringvalue  starts with the given prefix.
javax.swing.JList.getPreferredScrollableViewportSize,Computes the size of viewport needed to displayvisibleRowCountrows.
javax.swing.JList.getPrototypeCellValue,"Returns the ""prototypical"" cell value -- a value used to calculate a  fixed width and height for cells."
javax.swing.JList.getScrollableBlockIncrement,Returns the distance to scroll to expose the next or previous block.
javax.swing.JList.getScrollableTracksViewportHeight,"Returnstrueif thisJListis displayed in aJViewportand the viewport is taller than the list's  preferred height, or if the layout orientation isVERTICAL_WRAPandvisibleRowCount <= 0; otherwise returnsfalse."
javax.swing.JList.getScrollableTracksViewportWidth,"Returnstrueif thisJListis displayed in aJViewportand the viewport is wider than the list's  preferred width, or if the layout orientation isHORIZONTAL_WRAPandvisibleRowCount <= 0; otherwise returnsfalse."
javax.swing.JList.getScrollableUnitIncrement,Returns the distance to scroll to expose the next or previous  row (for vertical scrolling) or column (for horizontal scrolling).
javax.swing.JList.getSelectedIndex,Returns the smallest selected cell index;the selectionwhen only  a single item is selected in the list.
javax.swing.JList.getSelectedIndices,"Returns an array of all of the selected indices, in increasing  order."
javax.swing.JList.getSelectedValue,Returns the value for the smallest selected cell index;the selected valuewhen only a single item is selected in the  list.
javax.swing.JList.getSelectedValues,"Deprecated.As of JDK 1.7, replaced bygetSelectedValuesList()"
javax.swing.JList.getSelectedValuesList,"Returns a list of all the selected items, in increasing order based  on their indices in the list."
javax.swing.JList.getSelectionBackground,Returns the color used to draw the background of selected items.
javax.swing.JList.getSelectionForeground,Returns the color used to draw the foreground of selected items.
javax.swing.JList.getSelectionMode,Returns the current selection mode for the list.
javax.swing.JList.getSelectionModel,Returns the current selection model.
javax.swing.JList.getToolTipText,Returns the tooltip text to be used for the given event.
javax.swing.JList.getUI,"Returns theListUI, the look and feel object that  renders this component."
javax.swing.JList.getUIClassID,"Returns""ListUI"", theUIDefaultskey used to look  up the name of thejavax.swing.plaf.ListUIclass that defines  the look and feel for this component."
javax.swing.JList.getValueIsAdjusting,Returns the value of the selection model'sisAdjustingproperty.
javax.swing.JList.getVisibleRowCount,Returns the value of thevisibleRowCountproperty.
javax.swing.JList.indexToLocation,Returns the origin of the specified item in the list's coordinate  system.
javax.swing.JList.isSelectedIndex,"Returnstrueif the specified index is selected,  elsefalse."
javax.swing.JList.isSelectionEmpty,"Returnstrueif nothing is selected, elsefalse."
javax.swing.JList.locationToIndex,Returns the cell index closest to the given location in the list's  coordinate system.
javax.swing.JList.paramString,Returns aStringrepresentation of thisJList.
javax.swing.JList.removeListSelectionListener,Removes a selection listener from the list.
javax.swing.JList.removeSelectionInterval,Sets the selection to be the set difference of the specified interval  and the current selection.
javax.swing.JList.setCellRenderer,Sets the delegate that is used to paint each cell in the list.
javax.swing.JList.setDragEnabled,Turns on or off automatic drag handling.
javax.swing.JList.setDropMode,Sets the drop mode for this component.
javax.swing.JList.setFixedCellHeight,Sets a fixed value to be used for the height of every cell in the list.
javax.swing.JList.setFixedCellWidth,Sets a fixed value to be used for the width of every cell in the list.
javax.swing.JList.setLayoutOrientation,Defines the way list cells are layed out.
javax.swing.JList.setListData,"Constructs a read-onlyListModelfrom an array of items,  and callssetModelwith this model."
javax.swing.JList.setListData,Constructs a read-onlyListModelfrom aVectorand callssetModelwith this model.
javax.swing.JList.setModel,"Sets the model that represents the contents or ""value"" of the  list, notifies property change listeners, and then clears the  list's selection."
javax.swing.JList.setPrototypeCellValue,"Sets theprototypeCellValueproperty, and then (if the new value  isnon-null), computes thefixedCellWidthandfixedCellHeightproperties by requesting the cell renderer  component for the given value (and index 0) from the cell renderer, and  using that component's preferred size."
javax.swing.JList.setSelectedIndex,Selects a single cell.
javax.swing.JList.setSelectedIndices,Changes the selection to be the set of indices specified by the given  array.
javax.swing.JList.setSelectedValue,Selects the specified object from the list.
javax.swing.JList.setSelectionBackground,"Sets the color used to draw the background of selected items, which  cell renderers can use fill selected cells."
javax.swing.JList.setSelectionForeground,"Sets the color used to draw the foreground of selected items, which  cell renderers can use to render text and graphics."
javax.swing.JList.setSelectionInterval,Selects the specified interval.
javax.swing.JList.setSelectionMode,Sets the selection mode for the list.
javax.swing.JList.setSelectionModel,Sets theselectionModelfor the list to a  non-nullListSelectionModelimplementation.
javax.swing.JList.setUI,"Sets theListUI, the look and feel object that  renders this component."
javax.swing.JList.setValueIsAdjusting,Sets the selection model'svalueIsAdjustingproperty.
javax.swing.JList.setVisibleRowCount,"Sets thevisibleRowCountproperty, which has different meanings  depending on the layout orientation: For aVERTICALlayout  orientation, this sets the preferred number of rows to display without  requiring scrolling; for other orientations, it affects the wrapping of  cells."
javax.swing.JList.updateUI,Resets theListUIproperty by setting it to the value provided  by the current look and feel.
javax.swing.JMenu.addAccessibleSelection,Selects theith menu in the menu.
javax.swing.JMenu.getAccessibleSelection,"Returns the currently selected sub-menu if one is selected,  otherwise null (there can only be one selection, and it can  only be a sub-menu, as otherwise menu items don't remain  selected)."
javax.swing.JMenu.getAccessibleSelectionCount,Returns 1 if a sub-menu is currently selected in this menu.
javax.swing.JMenu.isAccessibleChildSelected,"Returns true if the current child of this object is selected  (that is, if this child is a popped-up submenu)."
javax.swing.JMenu.removeAccessibleSelection,Removes the nth item from the selection.
javax.swing.JMenu.selectAllAccessibleSelection,Normally causes every selected item in the object to be selected  if the object supports multiple selections.
javax.swing.JMenu.add,Appends a component to the end of this menu.
javax.swing.JMenu.add,Creates a new menu item with the specified text and appends  it to the end of this menu.
javax.swing.JMenu.add,Creates a new menu item attached to the specifiedActionobject  and appends it to the end of this menu.
javax.swing.JMenu.add,Appends a menu item to the end of this menu.
javax.swing.JMenu.addMenuListener,Adds a listener for menu events.
javax.swing.JMenu.addSeparator,Appends a new separator to the end of the menu.
javax.swing.JMenu.applyComponentOrientation,Sets theComponentOrientationproperty of this menu  and all components contained within it.
javax.swing.JMenu.createActionChangeListener,Returns a properly configuredPropertyChangeListenerwhich updates the control as changes to theActionoccur.
javax.swing.JMenu.createActionComponent,Factory method which creates theJMenuItemforActions added to theJMenu.
javax.swing.JMenu.createWinListener,Creates a window-closing listener for the popup.
javax.swing.JMenu.doClick,"Programmatically performs a ""click""."
javax.swing.JMenu.getAccessibleContext,Gets the AccessibleContext associated with this JMenu.
javax.swing.JMenu.getComponent,Returns thejava.awt.Componentused to  paint thisMenuElement.
javax.swing.JMenu.getDelay,"Returns the suggested delay, in milliseconds, before submenus  are popped up or down."
javax.swing.JMenu.getItem,Returns theJMenuItemat the specified position.
javax.swing.JMenu.getItemCount,"Returns the number of items on the menu, including separators."
javax.swing.JMenu.getMenuComponent,Returns the component at positionn.
javax.swing.JMenu.getMenuComponentCount,Returns the number of components on the menu.
javax.swing.JMenu.getMenuComponents,Returns an array ofComponents of the menu's  subcomponents.
javax.swing.JMenu.getMenuListeners,Returns an array of all theMenuListeners added  to this JMenu with addMenuListener().
javax.swing.JMenu.getPopupMenu,Returns the popupmenu associated with this menu.
javax.swing.JMenu.getPopupMenuOrigin,Computes the origin for theJMenu's popup menu.
javax.swing.JMenu.getSubElements,Returns an array ofMenuElements containing the submenu  for this menu component.
javax.swing.JMenu.insert,Inserts a new menu item with the specified text at a  given position.
javax.swing.JMenu.insert,Inserts a new menu item attached to the specifiedActionobject at a given position.
javax.swing.JMenu.insert,Inserts the specifiedJMenuitemat a given position.
javax.swing.JMenu.isMenuComponent,Returns true if the specified component exists in the  submenu hierarchy.
javax.swing.JMenu.isPopupMenuVisible,Returns true if the menu's popup window is visible.
javax.swing.JMenu.isSelected,Returns true if the menu is currently selected (highlighted).
javax.swing.JMenu.isTearOff,Returns true if the menu can be torn off.
javax.swing.JMenu.isTopLevelMenu,"Returns true if the menu is a 'top-level menu', that is, if it is  the direct child of a menubar."
javax.swing.JMenu.menuSelectionChanged,Messaged when the menubar selection changes to activate or  deactivate this menu.
javax.swing.JMenu.paramString,Returns a string representation of thisJMenu.
javax.swing.JMenu.processKeyEvent,Processes key stroke events such as mnemonics and accelerators.
javax.swing.JMenu.remove,Removes the componentcfrom this menu.
javax.swing.JMenu.removeAll,Removes all menu items from this menu.
javax.swing.JMenu.removeMenuListener,Removes a listener for menu events.
javax.swing.JMenu.setAccelerator,setAcceleratoris not defined forJMenu.
javax.swing.JMenu.setComponentOrientation,Sets the orientation for this menu and its associated popup menu  determined by theComponentOrientationargument.
javax.swing.JMenu.setDelay,Sets the suggested delay before the menu'sPopupMenuis popped up or down.
javax.swing.JMenu.setMenuLocation,Sets the location of the popup component.
javax.swing.JMenu.setModel,"Sets the data model for the ""menu button"" -- the label  that the user clicks to open or close the menu."
javax.swing.JMenu.setPopupMenuVisible,Sets the visibility of the menu's popup.
javax.swing.JMenu.setSelected,Sets the selection status of the menu.
javax.swing.JMenu.updateUI,Resets the UI property with a value from the current look and feel.
javax.swing.JMenu.windowClosing,Deselect the menu when the popup is closed from outside.
javax.swing.JMenuBar.addAccessibleSelection,"Selects the nth menu in the menu bar, forcing it to  pop up."
javax.swing.JMenuBar.getAccessibleSelection,"Returns the currently selected menu if one is selected,  otherwise null."
javax.swing.JMenuBar.getAccessibleSelectionCount,Returns 1 if a menu is currently selected in this menu bar.
javax.swing.JMenuBar.getAccessibleStateSet,Get the accessible state set of this object.
javax.swing.JMenuBar.removeAccessibleSelection,Removes the nth selected item in the object from the object's  selection.
javax.swing.JMenuBar.add,Appends the specified menu to the end of the menu bar.
javax.swing.JMenuBar.addNotify,OverridesJComponent.addNotifyto register this  menu bar with the current keyboard manager.
javax.swing.JMenuBar.getAccessibleContext,Gets the AccessibleContext associated with this JMenuBar.
javax.swing.JMenuBar.getComponent,Implemented to be aMenuElement.
javax.swing.JMenuBar.getComponentAtIndex,Deprecated.replaced bygetComponent(int i)
javax.swing.JMenuBar.getComponentIndex,Returns the index of the specified component.
javax.swing.JMenuBar.getHelpMenu,Gets the help menu for the menu bar.
javax.swing.JMenuBar.getMargin,Returns the margin between the menubar's border and  its menus.
javax.swing.JMenuBar.getMenu,Returns the menu at the specified position in the menu bar.
javax.swing.JMenuBar.getMenuCount,Returns the number of items in the menu bar.
javax.swing.JMenuBar.getSelectionModel,Returns the model object that handles single selections.
javax.swing.JMenuBar.getSubElements,Implemented to be aMenuElement-- returns the  menus in this menu bar.
javax.swing.JMenuBar.getUI,Returns the menubar's current UI.
javax.swing.JMenuBar.isBorderPainted,Returns true if the menu bars border should be painted.
javax.swing.JMenuBar.isSelected,Returns true if the menu bar currently has a component selected.
javax.swing.JMenuBar.menuSelectionChanged,Implemented to be aMenuElement-- does nothing.
javax.swing.JMenuBar.paintBorder,Paints the menubar's border ifBorderPaintedproperty is true.
javax.swing.JMenuBar.paramString,Returns a string representation of thisJMenuBar.
javax.swing.JMenuBar.processKeyBinding,Subclassed to check all the child menus.
javax.swing.JMenuBar.removeNotify,OverridesJComponent.removeNotifyto unregister this  menu bar with the current keyboard manager.
javax.swing.JMenuBar.setBorderPainted,Sets whether the border should be painted.
javax.swing.JMenuBar.setHelpMenu,"Sets the help menu that appears when the user selects the  ""help"" option in the menu bar."
javax.swing.JMenuBar.setMargin,Sets the margin between the menubar's border and  its menus.
javax.swing.JMenuBar.setSelected,"Sets the currently selected component, producing a  a change to the selection model."
javax.swing.JMenuBar.setSelectionModel,Sets the model object to handle single selections.
javax.swing.JMenuItem.stateChanged,Supports the change listener interface and fires property changes.
javax.swing.JMenuItem.addMenuDragMouseListener,Adds aMenuDragMouseListenerto the menu item.
javax.swing.JMenuItem.addMenuKeyListener,Adds aMenuKeyListenerto the menu item.
javax.swing.JMenuItem.getAccelerator,Returns theKeyStrokewhich serves as an accelerator  for the menu item.
javax.swing.JMenuItem.getAccessibleContext,Returns theAccessibleContextassociated with thisJMenuItem.
javax.swing.JMenuItem.getComponent,Returns thejava.awt.Componentused to paint  this object.
javax.swing.JMenuItem.getMenuDragMouseListeners,Returns an array of all theMenuDragMouseListeners added  to this JMenuItem with addMenuDragMouseListener().
javax.swing.JMenuItem.getMenuKeyListeners,Returns an array of all theMenuKeyListeners added  to this JMenuItem with addMenuKeyListener().
javax.swing.JMenuItem.getSubElements,This method returns an array containing the sub-menu  components for this menu component.
javax.swing.JMenuItem.getUIClassID,Returns the suffix used to construct the name of the L&F class used to  render this component.
javax.swing.JMenuItem.init,Initializes the menu item with the specified text and icon.
javax.swing.JMenuItem.isArmed,"Returns whether the menu item is ""armed""."
javax.swing.JMenuItem.menuSelectionChanged,Called by theMenuSelectionManagerwhen theMenuElementis selected or unselected.
javax.swing.JMenuItem.paramString,Returns a string representation of thisJMenuItem.
javax.swing.JMenuItem.processKeyEvent,"Processes a key event forwarded from theMenuSelectionManagerand changes the menu selection,  if necessary, by usingMenuSelectionManager's API."
javax.swing.JMenuItem.processMenuDragMouseEvent,Handles mouse drag in a menu.
javax.swing.JMenuItem.processMenuKeyEvent,Handles a keystroke in a menu.
javax.swing.JMenuItem.processMouseEvent,"Processes a mouse event forwarded from theMenuSelectionManagerand changes the menu  selection, if necessary, by using theMenuSelectionManager's API."
javax.swing.JMenuItem.removeMenuDragMouseListener,Removes aMenuDragMouseListenerfrom the menu item.
javax.swing.JMenuItem.removeMenuKeyListener,Removes aMenuKeyListenerfrom the menu item.
javax.swing.JMenuItem.setAccelerator,Sets the key combination which invokes the menu item's  action listeners without navigating the menu hierarchy.
javax.swing.JMenuItem.setArmed,"Identifies the menu item as ""armed""."
javax.swing.JMenuItem.setEnabled,Enables or disables the menu item.
javax.swing.JMenuItem.setUI,Sets the look and feel object that renders this component.
javax.swing.JOptionPane.createDialog,Creates and returns a newJDialogwrappingthiscentered on theparentComponentin theparentComponent's frame.
javax.swing.JOptionPane.createDialog,Creates and returns a new parentlessJDialogwith the specified title.
javax.swing.JOptionPane.createInternalFrame,Creates and returns an instance ofJInternalFrame.
javax.swing.JOptionPane.getAccessibleContext,Returns theAccessibleContextassociated with this JOptionPane.
javax.swing.JOptionPane.getDesktopPaneForComponent,Returns the specified component's desktop pane.
javax.swing.JOptionPane.getFrameForComponent,Returns the specified component'sFrame.
javax.swing.JOptionPane.getIcon,Returns the icon this pane displays.
javax.swing.JOptionPane.getInitialSelectionValue,Returns the input value that is displayed as initially selected to the user.
javax.swing.JOptionPane.getInitialValue,Returns the initial value.
javax.swing.JOptionPane.getInputValue,"Returns the value the user has input, ifwantsInputis true."
javax.swing.JOptionPane.getMaxCharactersPerLineCount,Returns the maximum number of characters to place on a line in a  message.
javax.swing.JOptionPane.getMessage,Returns the message-object this pane displays.
javax.swing.JOptionPane.getMessageType,Returns the message type.
javax.swing.JOptionPane.getOptions,Returns the choices the user can make.
javax.swing.JOptionPane.getOptionType,Returns the type of options that are displayed.
javax.swing.JOptionPane.getRootFrame,Returns theFrameto use for the class methods in  which a frame is not provided.
javax.swing.JOptionPane.getSelectionValues,Returns the input selection values.
javax.swing.JOptionPane.getUI,Returns the UI object which implements the L&F for this component.
javax.swing.JOptionPane.getUIClassID,Returns the name of the UI class that implements the  L&F for this component.
javax.swing.JOptionPane.getValue,Returns the value the user has selected.
javax.swing.JOptionPane.getWantsInput,Returns the value of thewantsInputproperty.
javax.swing.JOptionPane.paramString,Returns a string representation of thisJOptionPane.
javax.swing.JOptionPane.selectInitialValue,"Requests that the initial value be selected, which will set  focus to the initial value."
javax.swing.JOptionPane.setIcon,Sets the icon to display.
javax.swing.JOptionPane.setInitialSelectionValue,Sets the input value that is initially displayed as selected to the user.
javax.swing.JOptionPane.setInitialValue,Sets the initial value that is to be enabled -- theComponentthat has the focus when the pane is initially displayed.
javax.swing.JOptionPane.setInputValue,Sets the input value that was selected or input by the user.
javax.swing.JOptionPane.setMessage,Sets the option pane's message-object.
javax.swing.JOptionPane.setMessageType,Sets the option pane's message type.
javax.swing.JOptionPane.setOptions,Sets the options this pane displays.
javax.swing.JOptionPane.setOptionType,Sets the options to display.
javax.swing.JOptionPane.setRootFrame,Sets the frame to use for class methods in which a frame is  not provided.
javax.swing.JOptionPane.setSelectionValues,Sets the input selection values for a pane that provides the user  with a list of items to choose from.
javax.swing.JOptionPane.setUI,Sets the UI object which implements the L&F for this component.
javax.swing.JOptionPane.setValue,Sets the value the user has chosen.
javax.swing.JOptionPane.setWantsInput,Sets thewantsInputproperty.
javax.swing.JOptionPane.showConfirmDialog,"Brings up a dialog with the optionsYes,NoandCancel; with the  title,Select an Option."
javax.swing.JOptionPane.showConfirmDialog,Brings up a dialog where the number of choices is determined  by theoptionTypeparameter.
javax.swing.JOptionPane.showConfirmDialog,"Brings up a dialog where the number of choices is determined  by theoptionTypeparameter, where themessageTypeparameter determines the icon to display."
javax.swing.JOptionPane.showConfirmDialog,"Brings up a dialog with a specified icon, where the number of  choices is determined by theoptionTypeparameter."
javax.swing.JOptionPane.showInputDialog,Shows a question-message dialog requesting input from the user  parented toparentComponent.
javax.swing.JOptionPane.showInputDialog,Shows a question-message dialog requesting input from the user and  parented toparentComponent.
javax.swing.JOptionPane.showInputDialog,Shows a dialog requesting input from the user parented toparentComponentwith the dialog having the titletitleand message typemessageType.
javax.swing.JOptionPane.showInputDialog,"Prompts the user for input in a blocking dialog where the  initial selection, possible selections, and all other options can  be specified."
javax.swing.JOptionPane.showInputDialog,Shows a question-message dialog requesting input from the user.
javax.swing.JOptionPane.showInputDialog,"Shows a question-message dialog requesting input from the user, with  the input value initialized toinitialSelectionValue."
javax.swing.JOptionPane.showInternalConfirmDialog,"Brings up an internal dialog panel with the optionsYes,NoandCancel; with the title,Select an Option."
javax.swing.JOptionPane.showInternalConfirmDialog,Brings up a internal dialog panel where the number of choices  is determined by theoptionTypeparameter.
javax.swing.JOptionPane.showInternalConfirmDialog,"Brings up an internal dialog panel where the number of choices  is determined by theoptionTypeparameter, where  themessageTypeparameter determines the icon to display."
javax.swing.JOptionPane.showInternalConfirmDialog,"Brings up an internal dialog panel with a specified icon, where  the number of choices is determined by theoptionTypeparameter."
javax.swing.JOptionPane.showInternalInputDialog,Shows an internal question-message dialog requesting input from  the user parented toparentComponent.
javax.swing.JOptionPane.showInternalInputDialog,Shows an internal dialog requesting input from the user parented  toparentComponentwith the dialog having the titletitleand message typemessageType.
javax.swing.JOptionPane.showInternalInputDialog,"Prompts the user for input in a blocking internal dialog where  the initial selection, possible selections, and all other  options can be specified."
javax.swing.JOptionPane.showInternalMessageDialog,Brings up an internal confirmation dialog panel.
javax.swing.JOptionPane.showInternalMessageDialog,Brings up an internal dialog panel that displays a message  using a default icon determined by themessageTypeparameter.
javax.swing.JOptionPane.showInternalMessageDialog,"Brings up an internal dialog panel displaying a message,  specifying all parameters."
javax.swing.JOptionPane.showInternalOptionDialog,"Brings up an internal dialog panel with a specified icon, where  the initial choice is determined by theinitialValueparameter and the number of choices is determined by theoptionTypeparameter."
javax.swing.JOptionPane.showMessageDialog,"Brings up an information-message dialog titled ""Message""."
javax.swing.JOptionPane.showMessageDialog,Brings up a dialog that displays a message using a default  icon determined by themessageTypeparameter.
javax.swing.JOptionPane.showMessageDialog,"Brings up a dialog displaying a message, specifying all parameters."
javax.swing.JOptionPane.showOptionDialog,"Brings up a dialog with a specified icon, where the initial  choice is determined by theinitialValueparameter and  the number of choices is determined by theoptionTypeparameter."
javax.swing.JPanel.getAccessibleContext,Gets the AccessibleContext associated with this JPanel.
javax.swing.JPanel.getUI,Returns the look and feel (L&F) object that renders this component.
javax.swing.JPanel.paramString,Returns a string representation of this JPanel.
javax.swing.JPanel.setUI,Sets the look and feel (L&F) object that renders this component.
javax.swing.JPasswordField.getAccessibleText,Gets theAccessibleTextfor theJPasswordField.
javax.swing.JPasswordField.getAfterIndex,Returns theStringafter a givenindex.
javax.swing.JPasswordField.getAtIndex,Returns theStringat a givenindex.
javax.swing.JPasswordField.getBeforeIndex,Returns theStringbefore a givenindex.
javax.swing.JPasswordField.getTextRange,Returns the text between twoindices.
javax.swing.JPasswordField.getTextSequenceAfter,Returns theAccessibleTextSequenceafter a givenindex.
javax.swing.JPasswordField.getTextSequenceAt,Returns theAccessibleTextSequenceat a givenindex.
javax.swing.JPasswordField.getTextSequenceBefore,Returns theAccessibleTextSequencebefore a givenindex.
javax.swing.JPasswordField.copy,"InvokesprovideErrorFeedbackon the current  look and feel, which typically initiates an error beep."
javax.swing.JPasswordField.echoCharIsSet,Returns true if thisJPasswordFieldhas a character  set for echoing.
javax.swing.JPasswordField.getAccessibleContext,Returns theAccessibleContextassociated with thisJPasswordField.
javax.swing.JPasswordField.getEchoChar,Returns the character to be used for echoing.
javax.swing.JPasswordField.getPassword,Returns the text contained in thisTextComponent.
javax.swing.JPasswordField.getText,"Deprecated.As of Java 2 platform v1.2,  replaced bygetPassword."
javax.swing.JPasswordField.paramString,Returns a string representation of thisJPasswordField.
javax.swing.JPasswordField.setEchoChar,Sets the echo character for thisJPasswordField.
javax.swing.JPasswordField.setText,Sets the text of thisTextComponentto the specified text.
javax.swing.JPasswordField.updateUI,Reloads the pluggable UI.
javax.swing.JPopupMenu.add,Appends a new menu item to the end of the menu which  dispatches the specifiedActionobject.
javax.swing.JPopupMenu.add,Appends the specified menu item to the end of this menu.
javax.swing.JPopupMenu.addMenuKeyListener,Adds aMenuKeyListenerto the popup menu.
javax.swing.JPopupMenu.addPopupMenuListener,Adds aPopupMenulistener.
javax.swing.JPopupMenu.addSeparator,Appends a new separator at the end of the menu.
javax.swing.JPopupMenu.createActionComponent,Factory method which creates theJMenuItemforActionsadded to theJPopupMenu.
javax.swing.JPopupMenu.firePopupMenuCanceled,NotifiesPopupMenuListenersthat this popup menu is  cancelled.
javax.swing.JPopupMenu.firePopupMenuWillBecomeInvisible,NotifiesPopupMenuListeners that this popup menu will  become invisible.
javax.swing.JPopupMenu.firePopupMenuWillBecomeVisible,NotifiesPopupMenuListeners that this popup menu will  become visible.
javax.swing.JPopupMenu.getAccessibleContext,Gets the AccessibleContext associated with this JPopupMenu.
javax.swing.JPopupMenu.getComponent,Returns thisJPopupMenucomponent.
javax.swing.JPopupMenu.getComponentAtIndex,Deprecated.replaced byContainer.getComponent(int)
javax.swing.JPopupMenu.getDefaultLightWeightPopupEnabled,"Gets thedefaultLightWeightPopupEnabledproperty,   which by default istrue."
javax.swing.JPopupMenu.getInvoker,Returns the component which is the 'invoker' of this  popup menu.
javax.swing.JPopupMenu.getLabel,Returns the popup menu's label
javax.swing.JPopupMenu.getMargin,"Returns the margin, in pixels, between the popup menu's border and  its containers."
javax.swing.JPopupMenu.getMenuKeyListeners,Returns an array of all theMenuKeyListeners added  to this JPopupMenu with addMenuKeyListener().
javax.swing.JPopupMenu.getPopupMenuListeners,Returns an array of all thePopupMenuListeners added  to this JMenuItem with addPopupMenuListener().
javax.swing.JPopupMenu.insert,Inserts the specified component into the menu at a given  position.
javax.swing.JPopupMenu.insert,Inserts a menu item for the specifiedActionobject at  a given position.
javax.swing.JPopupMenu.isBorderPainted,Checks whether the border should be painted.
javax.swing.JPopupMenu.isLightWeightPopupEnabled,Gets thelightWeightPopupEnabledproperty.
javax.swing.JPopupMenu.isPopupTrigger,Returns true if theMouseEventis considered a popup trigger  by theJPopupMenu's currently installed UI.
javax.swing.JPopupMenu.isVisible,Returns true if the popup menu is visible (currently  being displayed).
javax.swing.JPopupMenu.pack,Lays out the container so that it uses the minimum space  needed to display its contents.
javax.swing.JPopupMenu.paintBorder,Paints the popup menu's border if theborderPaintedproperty istrue.
javax.swing.JPopupMenu.paramString,Returns a string representation of thisJPopupMenu.
javax.swing.JPopupMenu.processMouseEvent,"This method is required to conform to theMenuElementinterface, but it not implemented."
javax.swing.JPopupMenu.remove,Removes the component at the specified index from this popup menu.
javax.swing.JPopupMenu.removeMenuKeyListener,Removes aMenuKeyListenerfrom the popup menu.
javax.swing.JPopupMenu.removePopupMenuListener,Removes aPopupMenulistener.
javax.swing.JPopupMenu.setDefaultLightWeightPopupEnabled,Sets the default value of thelightWeightPopupEnabledproperty.
javax.swing.JPopupMenu.setInvoker,Sets the invoker of this popup menu -- the component in which  the popup menu menu is to be displayed.
javax.swing.JPopupMenu.setLabel,Sets the popup menu's label.
javax.swing.JPopupMenu.setLightWeightPopupEnabled,"Sets the value of thelightWeightPopupEnabledproperty,  which by default istrue."
javax.swing.JPopupMenu.setLocation,"Sets the location of the upper left corner of the  popup menu using x, y coordinates."
javax.swing.JPopupMenu.setPopupSize,Sets the size of the Popup window to the specified width and  height.
javax.swing.JPopupMenu.setPopupSize,Sets the size of the Popup window using aDimensionobject.
javax.swing.JPopupMenu.setSelected,"Sets the currently selected component,  This will result  in a change to the selection model."
javax.swing.JPopupMenu.setVisible,Sets the visibility of the popup menu.
javax.swing.JPopupMenu.show,"Displays the popup menu at the position x,y in the coordinate  space of the component invoker."
javax.swing.JProgressBar.getAccessibleValue,Gets theAccessibleValueassociated with this object.
javax.swing.JProgressBar.getCurrentAccessibleValue,Gets the accessible value of this object.
javax.swing.JProgressBar.getMaximumAccessibleValue,Gets the maximum accessible value of this object.
javax.swing.JProgressBar.getMinimumAccessibleValue,Gets the minimum accessible value of this object.
javax.swing.JProgressBar.addChangeListener,Adds the specifiedChangeListenerto the progress bar.
javax.swing.JProgressBar.createChangeListener,Subclasses that want to handle change events  from the model differently  can override this to return  an instance of a customChangeListenerimplementation.
javax.swing.JProgressBar.fireStateChanged,"Send aChangeEvent, whose source is thisJProgressBar, to  allChangeListeners that have registered interest inChangeEvents."
javax.swing.JProgressBar.getAccessibleContext,Gets theAccessibleContextassociated with thisJProgressBar.
javax.swing.JProgressBar.getChangeListeners,Returns an array of all theChangeListeners added  to this progress bar withaddChangeListener.
javax.swing.JProgressBar.getMaximum,Returns the progress bar'smaximumvalue  from theBoundedRangeModel.
javax.swing.JProgressBar.getMinimum,Returns the progress bar'sminimumvalue  from theBoundedRangeModel.
javax.swing.JProgressBar.getModel,Returns the data model used by this progress bar.
javax.swing.JProgressBar.getOrientation,"ReturnsSwingConstants.VERTICALorSwingConstants.HORIZONTAL, depending on the orientation  of the progress bar."
javax.swing.JProgressBar.getPercentComplete,Returns the percent complete for the progress bar.
javax.swing.JProgressBar.getString,Returns aStringrepresentation of the current progress.
javax.swing.JProgressBar.getUIClassID,Returns the name of the look-and-feel class that renders this component.
javax.swing.JProgressBar.getValue,Returns the progress bar's currentvaluefrom theBoundedRangeModel.
javax.swing.JProgressBar.isBorderPainted,Returns theborderPaintedproperty.
javax.swing.JProgressBar.isIndeterminate,Returns the value of theindeterminateproperty.
javax.swing.JProgressBar.isStringPainted,Returns the value of thestringPaintedproperty.
javax.swing.JProgressBar.paintBorder,Paints the progress bar's border if theborderPaintedproperty istrue.
javax.swing.JProgressBar.paramString,Returns a string representation of thisJProgressBar.
javax.swing.JProgressBar.removeChangeListener,Removes aChangeListenerfrom the progress bar.
javax.swing.JProgressBar.setBorderPainted,"Sets theborderPaintedproperty, which istrueif the progress bar should paint its border."
javax.swing.JProgressBar.setIndeterminate,"Sets theindeterminateproperty of the progress bar,  which determines whether the progress bar is in determinate  or indeterminate mode."
javax.swing.JProgressBar.setMaximum,Sets the progress bar's maximum value  (stored in the progress bar's data model) ton.
javax.swing.JProgressBar.setMinimum,Sets the progress bar's minimum value  (stored in the progress bar's data model) ton.
javax.swing.JProgressBar.setModel,Sets the data model used by theJProgressBar.
javax.swing.JProgressBar.setOrientation,"Sets the progress bar's orientation tonewOrientation,  which must beSwingConstants.VERTICALorSwingConstants.HORIZONTAL."
javax.swing.JProgressBar.setString,Sets the value of the progress string.
javax.swing.JProgressBar.setStringPainted,"Sets the value of thestringPaintedproperty,  which determines whether the progress bar  should render a progress string."
javax.swing.JProgressBar.setValue,Sets the progress bar's current value ton.
javax.swing.JRadioButton.getAccessibleContext,Gets the AccessibleContext associated with this JRadioButton.
javax.swing.JRadioButton.paramString,Returns a string representation of this JRadioButton.
javax.swing.JRadioButtonMenuItem.getAccessibleContext,Gets the AccessibleContext associated with this JRadioButtonMenuItem.
javax.swing.JRadioButtonMenuItem.paramString,Returns a string representation of thisJRadioButtonMenuItem.
javax.swing.JRootPane.addImpl,Overridden to enforce the position of the glass component as  the zero child.
javax.swing.JRootPane.createContentPane,Called by the constructor methods to create the defaultcontentPane.
javax.swing.JRootPane.createGlassPane,Called by the constructor methods to create the defaultglassPane.
javax.swing.JRootPane.createLayeredPane,Called by the constructor methods to create the defaultlayeredPane.
javax.swing.JRootPane.createRootLayout,Called by the constructor methods to create the defaultlayoutManager.
javax.swing.JRootPane.getAccessibleContext,Gets theAccessibleContextassociated with thisJRootPane.
javax.swing.JRootPane.getContentPane,Returns the content pane -- the container that holds the components  parented by the root pane.
javax.swing.JRootPane.getDefaultButton,Returns the value of thedefaultButtonproperty.
javax.swing.JRootPane.getGlassPane,Returns the current glass pane for thisJRootPane.
javax.swing.JRootPane.getJMenuBar,Returns the menu bar from the layered pane.
javax.swing.JRootPane.getLayeredPane,Gets the layered pane used by the root pane.
javax.swing.JRootPane.getMenuBar,Deprecated.As of Swing version 1.0.3   replaced bygetJMenuBar().
javax.swing.JRootPane.getWindowDecorationStyle,Returns a constant identifying the type of Window decorations theJRootPaneis providing.
javax.swing.JRootPane.isOptimizedDrawingEnabled,"TheglassPaneandcontentPanehave the same bounds, which meansJRootPanedoes not tiles its children and this should return false."
javax.swing.JRootPane.isValidateRoot,"If a descendant of thisJRootPanecallsrevalidate, validate from here on down."
javax.swing.JRootPane.paramString,Returns a string representation of thisJRootPane.
javax.swing.JRootPane.setContentPane,Sets the content pane -- the container that holds the components  parented by the root pane.
javax.swing.JRootPane.setDefaultButton,"Sets thedefaultButtonproperty,  which determines the current default button for thisJRootPane."
javax.swing.JRootPane.setGlassPane,Sets a specifiedComponentto be the glass pane for this  root pane.
javax.swing.JRootPane.setJMenuBar,Adds or changes the menu bar used in the layered pane.
javax.swing.JRootPane.setLayeredPane,Sets the layered pane for the root pane.
javax.swing.JRootPane.setMenuBar,Deprecated.As of Swing version 1.0.3   replaced bysetJMenuBar(JMenuBar menu).
javax.swing.JRootPane.setWindowDecorationStyle,"Sets the type of Window decorations (such as borders, widgets for  closing a Window, title ...) theJRootPaneshould  provide."
javax.swing.JRootPane.addLayoutComponent,"If the layout manager uses a per-component string,  adds the componentcompto the layout,  associating it  with the string specified byname."
javax.swing.JRootPane.layoutContainer,Instructs the layout manager to perform the layout for the specified  container.
javax.swing.JRootPane.maximumLayoutSize,Returns the maximum amount of space the layout can use.
javax.swing.JRootPane.minimumLayoutSize,Returns the minimum amount of space the layout needs.
javax.swing.JRootPane.preferredLayoutSize,Returns the amount of space the layout would like to have.
javax.swing.JScrollBar.addAdjustmentListener,Adds an AdjustmentListener.
javax.swing.JScrollBar.fireAdjustmentValueChanged,Notify listeners that the scrollbar's model has changed.
javax.swing.JScrollBar.getAccessibleContext,Gets the AccessibleContext associated with this JScrollBar.
javax.swing.JScrollBar.getAdjustmentListeners,Returns an array of all theAdjustmentListeners added  to this JScrollBar with addAdjustmentListener().
javax.swing.JScrollBar.getBlockIncrement,For backwards compatibility with java.awt.Scrollbar.
javax.swing.JScrollBar.getBlockIncrement,"Returns the amount to change the scrollbar's value by,  given a block (usually ""page"") up/down request."
javax.swing.JScrollBar.getMaximum,The maximum value of the scrollbar is maximum - extent.
javax.swing.JScrollBar.getMaximumSize,The scrollbar is flexible along it's scrolling axis and  rigid along the other axis.
javax.swing.JScrollBar.getMinimum,Returns the minimum value supported by the scrollbar  (usually zero).
javax.swing.JScrollBar.getModel,"Returns data model that handles the scrollbar's four  fundamental properties: minimum, maximum, value, extent."
javax.swing.JScrollBar.getOrientation,Returns the component's orientation (horizontal or vertical).
javax.swing.JScrollBar.getUI,Returns the delegate that implements the look and feel for  this component.
javax.swing.JScrollBar.getUIClassID,Returns the name of the LookAndFeel class for this component.
javax.swing.JScrollBar.getUnitIncrement,"Returns the amount to change the scrollbar's value by,  given a unit up/down request."
javax.swing.JScrollBar.getValue,Returns the scrollbar's value.
javax.swing.JScrollBar.getValueIsAdjusting,True if the scrollbar knob is being dragged.
javax.swing.JScrollBar.getVisibleAmount,"Returns the scrollbar's extent, aka its ""visibleAmount""."
javax.swing.JScrollBar.paramString,Returns a string representation of this JScrollBar.
javax.swing.JScrollBar.removeAdjustmentListener,Removes an AdjustmentEvent listener.
javax.swing.JScrollBar.setBlockIncrement,Sets the blockIncrement property.
javax.swing.JScrollBar.setEnabled,Enables the component so that the knob position can be changed.
javax.swing.JScrollBar.setMaximum,Sets the model's maximum property.
javax.swing.JScrollBar.setMinimum,Sets the model's minimum property.
javax.swing.JScrollBar.setModel,"Sets the model that handles the scrollbar's four  fundamental properties: minimum, maximum, value, extent."
javax.swing.JScrollBar.setOrientation,Set the scrollbar's orientation to either VERTICAL or  HORIZONTAL.
javax.swing.JScrollBar.setUnitIncrement,Sets the unitIncrement property.
javax.swing.JScrollBar.setValue,Sets the scrollbar's value.
javax.swing.JScrollBar.setValueIsAdjusting,Sets the model's valueIsAdjusting property.
javax.swing.JScrollBar.setValues,Sets the four BoundedRangeModel properties after forcing  the arguments to obey the usual constraints:
javax.swing.JScrollBar.setVisibleAmount,Set the model's extent property.
javax.swing.JScrollBar.updateUI,OverridesJComponent.updateUI.
javax.swing.JScrollPane.resetViewPort,Resets the viewport ChangeListener and PropertyChangeListener
javax.swing.JScrollPane.createHorizontalScrollBar,Returns aJScrollPane.ScrollBarby default.
javax.swing.JScrollPane.createViewport,Returns a newJViewportby default.
javax.swing.JScrollPane.getAccessibleContext,Gets the AccessibleContext associated with this JScrollPane.
javax.swing.JScrollPane.getColumnHeader,Returns the column header.
javax.swing.JScrollPane.getCorner,Returns the component at the specified corner.
javax.swing.JScrollPane.getHorizontalScrollBar,Returns the horizontal scroll bar that controls the viewport's  horizontal view position.
javax.swing.JScrollPane.getHorizontalScrollBarPolicy,Returns the horizontal scroll bar policy value.
javax.swing.JScrollPane.getRowHeader,Returns the row header.
javax.swing.JScrollPane.getVerticalScrollBar,Returns the vertical scroll bar that controls the viewports  vertical view position.
javax.swing.JScrollPane.getVerticalScrollBarPolicy,Returns the vertical scroll bar policy value.
javax.swing.JScrollPane.getViewport,Returns the currentJViewport.
javax.swing.JScrollPane.getViewportBorder,Returns theBorderobject that surrounds the viewport.
javax.swing.JScrollPane.getViewportBorderBounds,Returns the bounds of the viewport's border.
javax.swing.JScrollPane.isValidateRoot,Overridden to return true so that any calls torevalidateon any descendants of thisJScrollPanewill cause the  entire tree beginning with thisJScrollPaneto be  validated.
javax.swing.JScrollPane.isWheelScrollingEnabled,Indicates whether or not scrolling will take place in response to the  mouse wheel.
javax.swing.JScrollPane.paramString,Returns a string representation of thisJScrollPane.
javax.swing.JScrollPane.setColumnHeader,"Removes the old columnHeader, if it exists; if the new columnHeader  isn'tnull, syncs the x coordinate of its viewPosition  with the viewport (if there is one) and then adds it to the scroll pane."
javax.swing.JScrollPane.setColumnHeaderView,"Creates a column-header viewport if necessary, sets  its view, and then adds the column-header viewport  to the scrollpane."
javax.swing.JScrollPane.setComponentOrientation,Sets the orientation for the vertical and horizontal  scrollbars as determined by theComponentOrientationargument.
javax.swing.JScrollPane.setCorner,"Adds a child that will appear in one of the scroll panes  corners, if there's room."
javax.swing.JScrollPane.setHorizontalScrollBar,Adds the scrollbar that controls the viewport's horizontal view  position to the scrollpane.
javax.swing.JScrollPane.setHorizontalScrollBarPolicy,Determines when the horizontal scrollbar appears in the scrollpane.
javax.swing.JScrollPane.setLayout,Sets the layout manager for thisJScrollPane.
javax.swing.JScrollPane.setRowHeader,"Removes the old rowHeader, if it exists; if the new rowHeader  isn'tnull, syncs the y coordinate of its  viewPosition with  the viewport (if there is one) and then adds it to the scroll pane."
javax.swing.JScrollPane.setRowHeaderView,"Creates a row-header viewport if necessary, sets  its view and then adds the row-header viewport  to the scrollpane."
javax.swing.JScrollPane.setUI,Sets theScrollPaneUIobject that provides the  look and feel (L&F) for this component.
javax.swing.JScrollPane.setVerticalScrollBar,Adds the scrollbar that controls the viewports vertical view position  to the scrollpane.
javax.swing.JScrollPane.setVerticalScrollBarPolicy,Determines when the vertical scrollbar appears in the scrollpane.
javax.swing.JScrollPane.setViewport,"Removes the old viewport (if there is one); forces the  viewPosition of the new viewport to be in the +x,+y quadrant;  syncs up the row and column headers (if there are any) with the  new viewport; and finally syncs the scrollbars and  headers with the new viewport."
javax.swing.JScrollPane.setViewportBorder,Adds a border around the viewport.
javax.swing.JScrollPane.setViewportView,Creates a viewport if necessary and then sets its view.
javax.swing.JScrollPane.updateUI,Replaces the currentScrollPaneUIobject with a version  from the current default look and feel.
javax.swing.JScrollPane.getBlockIncrement,Computes the block increment for scrolling if the viewport's  view is aScrollableobject.
javax.swing.JScrollPane.getUnitIncrement,Computes the unit increment for scrolling if the viewport's  view is aScrollableobject.
javax.swing.JScrollPane.setBlockIncrement,"Messages super to set the value, and resets theblockIncrementSetinstance variable to true."
javax.swing.JScrollPane.setUnitIncrement,"Messages super to set the value, and resets theunitIncrementSetinstance variable to true."
javax.swing.JSeparator.getAccessibleContext,Gets the AccessibleContext associated with this JSeparator.
javax.swing.JSeparator.getOrientation,Returns the orientation of this separator.
javax.swing.JSeparator.paramString,Returns a string representation of thisJSeparator.
javax.swing.JSeparator.setOrientation,Sets the orientation of the separator.
javax.swing.JSlider.doAccessibleAction,Performs the specified Action on the object
javax.swing.JSlider.getAccessibleAction,Gets the AccessibleAction associated with this object that supports  one or more actions.
javax.swing.JSlider.addChangeListener,Adds a ChangeListener to the slider.
javax.swing.JSlider.createChangeListener,Subclasses that want to handleChangeEvents  from the model differently  can override this to return  an instance of a customChangeListenerimplementation.
javax.swing.JSlider.createStandardLabels,"Creates aHashtableof numerical text labels, starting at the  slider minimum, and using the increment specified."
javax.swing.JSlider.createStandardLabels,"Creates aHashtableof numerical text labels, starting at the  starting point specified, and using the increment specified."
javax.swing.JSlider.fireStateChanged,"Send aChangeEvent, whose source is thisJSlider, to  allChangeListeners that have registered interest inChangeEvents."
javax.swing.JSlider.getAccessibleContext,Gets the AccessibleContext associated with this JSlider.
javax.swing.JSlider.getChangeListeners,Returns an array of all theChangeListeners added  to this JSlider with addChangeListener().
javax.swing.JSlider.getExtent,"Returns the ""extent"" from theBoundedRangeModel."
javax.swing.JSlider.getInverted,"Returns true if the value-range shown for the slider is reversed,"
javax.swing.JSlider.getLabelTable,Returns the dictionary of what labels to draw at which values.
javax.swing.JSlider.getMajorTickSpacing,This method returns the major tick spacing.
javax.swing.JSlider.getMaximum,Returns the maximum value supported by the slider  from theBoundedRangeModel.
javax.swing.JSlider.getMinimum,Returns the minimum value supported by the slider  from theBoundedRangeModel.
javax.swing.JSlider.getMinorTickSpacing,This method returns the minor tick spacing.
javax.swing.JSlider.getModel,"Returns theBoundedRangeModelthat handles the slider's three  fundamental properties: minimum, maximum, value."
javax.swing.JSlider.getOrientation,Return this slider's vertical or horizontal orientation.
javax.swing.JSlider.getPaintLabels,Tells if labels are to be painted.
javax.swing.JSlider.getPaintTicks,Tells if tick marks are to be painted.
javax.swing.JSlider.getPaintTrack,Tells if the track (area the slider slides in) is to be painted.
javax.swing.JSlider.getSnapToTicks,Returns true if the knob (and the data value it represents)  resolve to the closest tick mark next to where the user  positioned the knob.
javax.swing.JSlider.getValue,Returns the slider's current value  from theBoundedRangeModel.
javax.swing.JSlider.getValueIsAdjusting,Returns thevalueIsAdjustingproperty from the model.
javax.swing.JSlider.imageUpdate,Repaints the component when the image has changed.
javax.swing.JSlider.paramString,Returns a string representation of this JSlider.
javax.swing.JSlider.removeChangeListener,Removes a ChangeListener from the slider.
javax.swing.JSlider.setExtent,"Sets the size of the range ""covered"" by the knob."
javax.swing.JSlider.setInverted,Specify true to reverse the value-range shown for the slider and false to  put the value range in the normal order.
javax.swing.JSlider.setLabelTable,Used to specify what label will be drawn at any given value.
javax.swing.JSlider.setMajorTickSpacing,This method sets the major tick spacing.
javax.swing.JSlider.setMaximum,Sets the slider's maximum value tomaximum.
javax.swing.JSlider.setMinimum,Sets the slider's minimum value tominimum.
javax.swing.JSlider.setMinorTickSpacing,This method sets the minor tick spacing.
javax.swing.JSlider.setModel,"Sets theBoundedRangeModelthat handles the slider's three  fundamental properties: minimum, maximum, value."
javax.swing.JSlider.setOrientation,Set the slider's orientation to eitherSwingConstants.VERTICALorSwingConstants.HORIZONTAL.
javax.swing.JSlider.setPaintLabels,Determines whether labels are painted on the slider.
javax.swing.JSlider.setPaintTicks,Determines whether tick marks are painted on the slider.
javax.swing.JSlider.setPaintTrack,Determines whether the track is painted on the slider.
javax.swing.JSlider.setSnapToTicks,Specifying true makes the knob (and the data value it represents)  resolve to the closest tick mark next to where the user  positioned the knob.
javax.swing.JSlider.setValue,Sets the slider's current value ton.
javax.swing.JSlider.setValueIsAdjusting,Sets the model'svalueIsAdjustingproperty.
javax.swing.JSlider.updateLabelUIs,Updates the UIs for the labels in the label table by callingupdateUIon each label.
javax.swing.JSpinner.cut,Cuts the text between two indices into the system clipboard.
javax.swing.JSpinner.delete,Deletes the text between two indices
javax.swing.JSpinner.getAccessibleText,Gets the AccessibleText associated with this object presenting  text on the display.
javax.swing.JSpinner.getCharacterAttribute,Returns the AttributeSet for a given character at a given index
javax.swing.JSpinner.getCharCount,Returns the number of characters (valid indicies)
javax.swing.JSpinner.getTextRange,Returns the text string between two indices.
javax.swing.JSpinner.insertTextAtIndex,Inserts the specified string at the given index/
javax.swing.JSpinner.paste,Pastes the text from the system clipboard into the text  starting at the specified index.
javax.swing.JSpinner.replaceText,Replaces the text between two indices with the specified  string.
javax.swing.JSpinner.selectText,Selects the text between two indices.
javax.swing.JSpinner.setAttributes,Sets attributes for the text between two indices.
javax.swing.JSpinner.setTextContents,Sets the text contents to the specified string.
javax.swing.JSpinner.getFormat,Returns thejava.text.SimpleDateFormatobject theJFormattedTextFielduses to parse and format  numbers.
javax.swing.JSpinner.getModel,Return our spinner ancestor'sSpinnerDateModel.
javax.swing.JSpinner.addLayoutComponent,ThisLayoutManagermethod does nothing.
javax.swing.JSpinner.commitEdit,Pushes the currently edited value to theSpinnerModel.
javax.swing.JSpinner.dismiss,Disconnectthiseditor from the specifiedJSpinner.
javax.swing.JSpinner.getSpinner,Returns theJSpinnerancestor of this editor ornullif none of the ancestors are aJSpinner.
javax.swing.JSpinner.getTextField,Returns theJFormattedTextFieldchild of this  editor.
javax.swing.JSpinner.layoutContainer,Resize the one (and only) child to completely fill the area  within the parents insets.
javax.swing.JSpinner.minimumLayoutSize,Returns the minimum size of first (and only) child plus the  size of the parents insets.
javax.swing.JSpinner.preferredLayoutSize,Returns the preferred size of first (and only) child plus the  size of the parents insets.
javax.swing.JSpinner.propertyChange,Called by theJFormattedTextFieldPropertyChangeListener.
javax.swing.JSpinner.stateChanged,This method is called when the spinner's model's state changes.
javax.swing.JSpinner.addChangeListener,Adds a listener to the list that is notified each time a change  to the model occurs.
javax.swing.JSpinner.commitEdit,Commits the currently edited value to theSpinnerModel.
javax.swing.JSpinner.createEditor,This method is called by the constructors to create theJComponentthat displays the current value of the sequence.
javax.swing.JSpinner.fireStateChanged,"Sends aChangeEvent, whose source is thisJSpinner, to eachChangeListener."
javax.swing.JSpinner.getAccessibleContext,Gets theAccessibleContextfor theJSpinner
javax.swing.JSpinner.getChangeListeners,Returns an array of all theChangeListeners added  to this JSpinner with addChangeListener().
javax.swing.JSpinner.getEditor,Returns the component that displays and potentially  changes the model's value.
javax.swing.JSpinner.getModel,Returns theSpinnerModelthat defines  this spinners sequence of values.
javax.swing.JSpinner.getNextValue,Returns the object in the sequence that comes after the object returned  bygetValue().
javax.swing.JSpinner.getPreviousValue,Returns the object in the sequence that comes  before the object returned bygetValue().
javax.swing.JSpinner.getUIClassID,Returns the suffix used to construct the name of the look and feel  (L&F) class used to render this component.
javax.swing.JSpinner.getValue,"Returns the current value of the model, typically  this value is displayed by theeditor."
javax.swing.JSpinner.removeChangeListener,Removes aChangeListenerfrom this spinner.
javax.swing.JSpinner.setEditor,Changes theJComponentthat displays the current value  of theSpinnerModel.
javax.swing.JSpinner.setModel,Changes the model that represents the value of this spinner.
javax.swing.JSpinner.setValue,"Changes current value of the model, typically  this value is displayed by theeditor."
javax.swing.JSpinner.updateUI,Resets the UI property with the value from the current look and feel.
javax.swing.JSpinner.getModel,Return our spinner ancestor'sSpinnerNumberModel.
javax.swing.JSpinner.getFormat,Returns thejava.text.DecimalFormatobject theJFormattedTextFielduses to parse and format  numbers.
javax.swing.JSplitPane.setCurrentAccessibleValue,Sets the value of this object as a Number.
javax.swing.JSplitPane.addImpl,Adds the specified component to this split pane.
javax.swing.JSplitPane.getAccessibleContext,Gets the AccessibleContext associated with this JSplitPane.
javax.swing.JSplitPane.getBottomComponent,"Returns the component below, or to the right of the divider."
javax.swing.JSplitPane.getDividerLocation,Returns the last value passed tosetDividerLocation.
javax.swing.JSplitPane.getDividerSize,Returns the size of the divider.
javax.swing.JSplitPane.getLastDividerLocation,Returns the last location the divider was at.
javax.swing.JSplitPane.getLeftComponent,Returns the component to the left (or above) the divider.
javax.swing.JSplitPane.getMaximumDividerLocation,Returns the maximum location of the divider from the look and feel  implementation.
javax.swing.JSplitPane.getMinimumDividerLocation,Returns the minimum location of the divider from the look and feel  implementation.
javax.swing.JSplitPane.getOrientation,Returns the orientation.
javax.swing.JSplitPane.getResizeWeight,Returns the number that determines how extra space is distributed.
javax.swing.JSplitPane.getRightComponent,Returns the component to the right (or below) the divider.
javax.swing.JSplitPane.getTopComponent,"Returns the component above, or to the left of the divider."
javax.swing.JSplitPane.getUI,Returns theSplitPaneUIthat is providing the  current look and feel.
javax.swing.JSplitPane.isContinuousLayout,Gets thecontinuousLayoutproperty.
javax.swing.JSplitPane.isOneTouchExpandable,Gets theoneTouchExpandableproperty.
javax.swing.JSplitPane.isValidateRoot,"Returns true, so that calls torevalidateon any descendant of thisJSplitPanewill cause a request to be queued that  will validate theJSplitPaneand all its descendants."
javax.swing.JSplitPane.paintChildren,"Subclassed to message the UI withfinishedPaintingChildrenafter super has been messaged, as well as painting the border."
javax.swing.JSplitPane.paramString,Returns a string representation of thisJSplitPane.
javax.swing.JSplitPane.remove,Removes theComponentat the specified index.
javax.swing.JSplitPane.remove,"Removes the child component,componentfrom the  pane."
javax.swing.JSplitPane.removeAll,Removes all the child components from the split pane.
javax.swing.JSplitPane.resetToPreferredSizes,Lays out theJSplitPanelayout based on the preferred size  of the children components.
javax.swing.JSplitPane.setBottomComponent,"Sets the component below, or to the right of the divider."
javax.swing.JSplitPane.setContinuousLayout,"Sets the value of thecontinuousLayoutproperty,  which must betruefor the child components  to be continuously  redisplayed and laid out during user intervention."
javax.swing.JSplitPane.setDividerLocation,Sets the divider location as a percentage of theJSplitPane's size.
javax.swing.JSplitPane.setDividerLocation,Sets the location of the divider.
javax.swing.JSplitPane.setDividerSize,Sets the size of the divider.
javax.swing.JSplitPane.setLastDividerLocation,Sets the last location the divider was at tonewLastLocation.
javax.swing.JSplitPane.setLeftComponent,Sets the component to the left (or above) the divider.
javax.swing.JSplitPane.setOneTouchExpandable,"Sets the value of theoneTouchExpandableproperty,  which must betruefor theJSplitPaneto provide a UI widget  on the divider to quickly expand/collapse the divider."
javax.swing.JSplitPane.setOrientation,"Sets the orientation, or how the splitter is divided."
javax.swing.JSplitPane.setResizeWeight,Specifies how to distribute extra space when the size of the split pane  changes.
javax.swing.JSplitPane.setRightComponent,Sets the component to the right (or below) the divider.
javax.swing.JSplitPane.setTopComponent,"Sets the component above, or to the left of the divider."
javax.swing.JTabbedPane.addAccessibleSelection,Adds the specifiedAccessiblechild of the object to the object's  selection.
javax.swing.JTabbedPane.clearAccessibleSelection,"Clears the selection in the object, so that no children in the object are  selected."
javax.swing.JTabbedPane.getAccessibleName,"Returns the accessible name of this object, ornullif  there is no accessible name."
javax.swing.JTabbedPane.getAccessibleSelection,Gets theAccessibleSelectionassociated with  this object.
javax.swing.JTabbedPane.getAccessibleSelection,Returns anAccessiblerepresenting the specified selected child  of the object.
javax.swing.JTabbedPane.removeAccessibleSelection,Removes the specified child of the object from the object's selection.
javax.swing.JTabbedPane.selectAllAccessibleSelection,Causes every child of the object to be selected if the object supports  multiple selections.
javax.swing.JTabbedPane.add,Adds acomponentwith a tab title defaulting to  the name of the component which is the result of callingcomponent.getName.
javax.swing.JTabbedPane.add,Adds acomponentat the specified tab index with a tab  title defaulting to the name of the component.
javax.swing.JTabbedPane.add,Adds acomponentto the tabbed pane.
javax.swing.JTabbedPane.add,Adds acomponentat the specified tab index.
javax.swing.JTabbedPane.add,Adds acomponentwith the specified tab title.
javax.swing.JTabbedPane.addChangeListener,Adds aChangeListenerto this tabbedpane.
javax.swing.JTabbedPane.addTab,Adds acomponentrepresented by atitleand no icon.
javax.swing.JTabbedPane.addTab,"Adds acomponentrepresented by atitleand/oricon, either of which can benull."
javax.swing.JTabbedPane.addTab,"Adds acomponentandtiprepresented by atitleand/oricon,  either of which can benull."
javax.swing.JTabbedPane.createChangeListener,Subclasses that want to handleChangeEventsdifferently  can override this to return a subclass ofModelListeneror  anotherChangeListenerimplementation.
javax.swing.JTabbedPane.fireStateChanged,"Sends aChangeEvent, with thisJTabbedPaneas the source,  to each registered listener."
javax.swing.JTabbedPane.getAccessibleContext,Gets the AccessibleContext associated with this JTabbedPane.
javax.swing.JTabbedPane.getBackgroundAt,Returns the tab background color atindex.
javax.swing.JTabbedPane.getBoundsAt,Returns the tab bounds atindex.
javax.swing.JTabbedPane.getChangeListeners,Returns an array of all theChangeListeners added  to thisJTabbedPanewithaddChangeListener.
javax.swing.JTabbedPane.getComponentAt,Returns the component atindex.
javax.swing.JTabbedPane.getDisabledIconAt,Returns the tab disabled icon atindex.
javax.swing.JTabbedPane.getForegroundAt,Returns the tab foreground color atindex.
javax.swing.JTabbedPane.getIconAt,Returns the tab icon atindex.
javax.swing.JTabbedPane.getMnemonicAt,Returns the keyboard mnemonic for accessing the specified tab.
javax.swing.JTabbedPane.getModel,Returns the model associated with this tabbedpane.
javax.swing.JTabbedPane.getSelectedComponent,Returns the currently selected component for this tabbedpane.
javax.swing.JTabbedPane.getSelectedIndex,Returns the currently selected index for this tabbedpane.
javax.swing.JTabbedPane.getTabComponentAt,Returns the tab component atindex.
javax.swing.JTabbedPane.getTabCount,Returns the number of tabs in thistabbedpane.
javax.swing.JTabbedPane.getTabLayoutPolicy,Returns the policy used by the tabbedpane to layout the tabs when all the  tabs will not fit within a single run.
javax.swing.JTabbedPane.getTabPlacement,Returns the placement of the tabs for this tabbedpane.
javax.swing.JTabbedPane.getTabRunCount,Returns the number of tab runs currently used to display  the tabs.
javax.swing.JTabbedPane.getTitleAt,Returns the tab title atindex.
javax.swing.JTabbedPane.getToolTipText,Returns the tooltip text for the component determined by the  mouse event location.
javax.swing.JTabbedPane.getToolTipTextAt,Returns the tab tooltip text atindex.
javax.swing.JTabbedPane.indexAtLocation,Returns the tab index corresponding to the tab whose bounds  intersect the specified location.
javax.swing.JTabbedPane.indexOfComponent,Returns the index of the tab for the specified component.
javax.swing.JTabbedPane.indexOfTab,"Returns the first tab index with a giventitle,  or  -1 if no tab has this title."
javax.swing.JTabbedPane.indexOfTab,"Returns the first tab index with a givenicon,  or -1 if no tab has this icon."
javax.swing.JTabbedPane.indexOfTabComponent,Returns the index of the tab for the specified tab component.
javax.swing.JTabbedPane.insertTab,"Inserts a new tab for the given component, at the given index,  represented by the given title and/or icon, either of which may  benull."
javax.swing.JTabbedPane.isEnabledAt,Returns whether or not the tab atindexis  currently enabled.
javax.swing.JTabbedPane.paramString,Returns a string representation of thisJTabbedPane.
javax.swing.JTabbedPane.remove,Removes the tab and component which corresponds to the specified index.
javax.swing.JTabbedPane.remove,Removes the specifiedComponentfrom theJTabbedPane.
javax.swing.JTabbedPane.removeAll,Removes all the tabs and their corresponding components  from thetabbedpane.
javax.swing.JTabbedPane.removeChangeListener,Removes aChangeListenerfrom this tabbedpane.
javax.swing.JTabbedPane.removeTabAt,Removes the tab atindex.
javax.swing.JTabbedPane.setBackgroundAt,"Sets the background color atindextobackgroundwhich can benull, in which case the tab's background color  will default to the background color of thetabbedpane."
javax.swing.JTabbedPane.setComponentAt,Sets the component atindextocomponent.
javax.swing.JTabbedPane.setDisabledIconAt,Sets the disabled icon atindextoiconwhich can benull.
javax.swing.JTabbedPane.setEnabledAt,Sets whether or not the tab atindexis enabled.
javax.swing.JTabbedPane.setForegroundAt,"Sets the foreground color atindextoforegroundwhich can benull, in which case the tab's foreground color  will default to the foreground color of thistabbedpane."
javax.swing.JTabbedPane.setIconAt,Sets the icon atindextoiconwhich can benull.
javax.swing.JTabbedPane.setMnemonicAt,Sets the keyboard mnemonic for accessing the specified tab.
javax.swing.JTabbedPane.setModel,Sets the model to be used with this tabbedpane.
javax.swing.JTabbedPane.setSelectedComponent,Sets the selected component for this tabbedpane.
javax.swing.JTabbedPane.setSelectedIndex,Sets the selected index for this tabbedpane.
javax.swing.JTabbedPane.setTabComponentAt,Sets the component that is responsible for rendering the  title for the specified tab.
javax.swing.JTabbedPane.setTabLayoutPolicy,Sets the policy which the tabbedpane will use in laying out the tabs  when all the tabs will not fit within a single run.
javax.swing.JTabbedPane.setTabPlacement,Sets the tab placement for this tabbedpane.
javax.swing.JTabbedPane.setTitleAt,Sets the title atindextotitlewhich  can benull.
javax.swing.JTabbedPane.setToolTipTextAt,Sets the tooltip text atindextotoolTipTextwhich can benull.
javax.swing.JTable.contains,"Checks whether the specified point is within this  object's bounds, where the point's x and y coordinates  are defined to be relative to the coordinate system of  the object."
javax.swing.JTable.getAccessibleAction,Gets theAccessibleActionassociated with this  object if one exists.
javax.swing.JTable.getAccessibleChild,Returns the specifiedAccessiblechild of the  object.
javax.swing.JTable.getAccessibleContext,Gets theAccessibleContextassociated with this  component.
javax.swing.JTable.getAccessibleSelection,Gets theAccessibleSelectionassociated with  this object if one exists.
javax.swing.JTable.getAccessibleText,Gets theAccessibleTextassociated with this  object if one exists.
javax.swing.JTable.getAccessibleValue,Gets theAccessibleValueassociated with  this object if one exists.
javax.swing.JTable.getCurrentAccessibleContext,Gets the AccessibleContext for the table cell renderer.
javax.swing.JTable.getCurrentComponent,Gets the table cell renderer component.
javax.swing.JTable.getLocation,Gets the location of the object relative to the parent  in the form of a point specifying the object's  top-left corner in the screen's coordinate space.
javax.swing.JTable.isVisible,Determines if this object is visible.
javax.swing.JTable.removePropertyChangeListener,Removes aPropertyChangeListenerfrom the  listener list.
javax.swing.JTable.getFirstColumn,Returns the first column.
javax.swing.JTable.getFirstRow,Returns the first row.
javax.swing.JTable.getLastColumn,Returns the last column.
javax.swing.JTable.getLastRow,Returns the last row.
javax.swing.JTable.getType,Returns the type.
javax.swing.JTable.addAccessibleSelection,Adds the specifiedAccessiblechild of the  object to the object's selection.
javax.swing.JTable.columnAdded,Track changes to the table contents (column insertions)
javax.swing.JTable.columnMarginChanged,Track changes of a column moving due to margin changes.
javax.swing.JTable.columnMoved,Track changes of a column repositioning.
javax.swing.JTable.columnRemoved,Track changes to the table contents (column deletions)
javax.swing.JTable.columnSelectionChanged,Track that the selection model of the TableColumnModel changed.
javax.swing.JTable.editingCanceled,Invoked when editing is canceled.
javax.swing.JTable.editingStopped,Track changes to a cell's contents.
javax.swing.JTable.getAccessibleAt,Returns theAccessibleat a specified row and column in the  table.
javax.swing.JTable.getAccessibleCaption,Returns the caption for the table.
javax.swing.JTable.getAccessibleColumn,Returns the column number of an index in the table.
javax.swing.JTable.getAccessibleColumnAtIndex,Returns the column at a given index into the table.
javax.swing.JTable.getAccessibleColumnCount,Returns the number of columns in the table.
javax.swing.JTable.getAccessibleColumnDescription,Returns the description of the specified column in the table.
javax.swing.JTable.getAccessibleColumnExtentAt,"Returns the number of columns occupied by theAccessibleat a given (row, column)."
javax.swing.JTable.getAccessibleColumnHeader,Returns the column headers as anAccessibleTable.
javax.swing.JTable.getAccessibleIndex,Returns the index at a row and column in the table.
javax.swing.JTable.getAccessibleIndexAt,"Returns the index at a given (row, column) in the table."
javax.swing.JTable.getAccessibleRow,Returns the row number of an index in the table.
javax.swing.JTable.getAccessibleRowAtIndex,Returns the row at a given index into the table.
javax.swing.JTable.getAccessibleRowCount,Returns the number of rows in the table.
javax.swing.JTable.getAccessibleRowDescription,Returns the description of the specified row in the table.
javax.swing.JTable.getAccessibleRowExtentAt,Returns the number of rows occupied by theAccessibleat a specified row and column in the table.
javax.swing.JTable.getAccessibleRowHeader,Returns the row headers as anAccessibleTable.
javax.swing.JTable.getAccessibleSelection,Returns anAccessiblerepresenting the  specified selected child in the object.
javax.swing.JTable.getAccessibleSelectionCount,Returns the number ofAccessiblechildren  currently selected.
javax.swing.JTable.getAccessibleSummary,Returns the summary description of the table.
javax.swing.JTable.getAccessibleTable,Gets theAccessibleTableassociated with this  object.
javax.swing.JTable.getSelectedAccessibleColumns,Returns the selected columns in a table.
javax.swing.JTable.getSelectedAccessibleRows,Returns the selected rows in a table.
javax.swing.JTable.isAccessibleColumnSelected,Returns a boolean value indicating whether the specified column  is selected.
javax.swing.JTable.isAccessibleRowSelected,Returns a boolean value indicating whether the specified row  is selected.
javax.swing.JTable.isAccessibleSelected,"Returns a boolean value indicating whether the accessible at a  given (row, column) is selected."
javax.swing.JTable.propertyChange,"Track changes to selection model, column model, etc. so as to  be able to re-place listeners on those in order to pass on  information to the Accessibility PropertyChange mechanism"
javax.swing.JTable.selectAllAccessibleSelection,"Causes every child of the object to be selected, but only  if theJTablesupports multiple selections,  and if individual cell selection is enabled."
javax.swing.JTable.setAccessibleCaption,Sets the caption for the table.
javax.swing.JTable.setAccessibleColumnDescription,Sets the description text of the specified column of the table.
javax.swing.JTable.setAccessibleColumnHeader,Sets the column headers as anAccessibleTable.
javax.swing.JTable.setAccessibleRowDescription,Sets the description text of the specified row of the table.
javax.swing.JTable.setAccessibleRowHeader,Sets the row headers as anAccessibleTable.
javax.swing.JTable.setAccessibleSummary,Sets the summary description of the table.
javax.swing.JTable.tableChanged,Track changes to the table contents
javax.swing.JTable.tableRowsDeleted,Track changes to the table contents (row deletions)
javax.swing.JTable.tableRowsInserted,Track changes to the table contents (row insertions)
javax.swing.JTable.valueChanged,Track changes to table cell selections
javax.swing.JTable.getColumn,Returns the column index where a dropped item should be placed in the  table.
javax.swing.JTable.getRow,Returns the row index where a dropped item should be placed in the  table.
javax.swing.JTable.isInsertColumn,Returns whether or not this location represents an insert  of a column.
javax.swing.JTable.isInsertRow,Returns whether or not this location represents an insert  of a row.
javax.swing.JTable.addColumn,AppendsaColumnto the end of the array of columns held by   thisJTable's column model.
javax.swing.JTable.addColumnSelectionInterval,"Adds the columns fromindex0toindex1,  inclusive, to the current selection."
javax.swing.JTable.addNotify,Calls theconfigureEnclosingScrollPanemethod.
javax.swing.JTable.addRowSelectionInterval,"Adds the rows fromindex0toindex1, inclusive, to  the current selection."
javax.swing.JTable.changeSelection,"Updates the selection models of the table, depending on the state of the  two flags:toggleandextend."
javax.swing.JTable.clearSelection,Deselects all selected columns and rows.
javax.swing.JTable.columnAdded,Invoked when a column is added to the table column model.
javax.swing.JTable.columnAtPoint,"Returns the index of the column thatpointlies in,  or -1 if the result is not in the range  [0,getColumnCount()-1]."
javax.swing.JTable.columnMarginChanged,Invoked when a column is moved due to a margin change.
javax.swing.JTable.columnMoved,Invoked when a column is repositioned.
javax.swing.JTable.columnRemoved,Invoked when a column is removed from the table column model.
javax.swing.JTable.columnSelectionChanged,Invoked when the selection model of theTableColumnModelis changed.
javax.swing.JTable.configureEnclosingScrollPane,"If thisJTableis theviewportViewof an enclosingJScrollPane(the usual situation), configure thisScrollPaneby, amongst other things,  installing the table'stableHeaderas thecolumnHeaderViewof the scroll pane."
javax.swing.JTable.convertColumnIndexToModel,Maps the index of the column in the view atviewColumnIndexto the index of the column  in the table model.
javax.swing.JTable.convertColumnIndexToView,Maps the index of the column in the table model atmodelColumnIndexto the index of the column  in the view.
javax.swing.JTable.convertRowIndexToModel,Maps the index of the row in terms of the view to the  underlyingTableModel.
javax.swing.JTable.convertRowIndexToView,Maps the index of the row in terms of theTableModelto the view.
javax.swing.JTable.createDefaultColumnModel,"Returns the default column model object, which is  aDefaultTableColumnModel."
javax.swing.JTable.createDefaultColumnsFromModel,Creates default columns for the table from  the data model using thegetColumnCountmethod  defined in theTableModelinterface.
javax.swing.JTable.createDefaultDataModel,"Returns the default table model object, which is  aDefaultTableModel."
javax.swing.JTable.createDefaultEditors,"Creates default cell editors for objects, numbers, and boolean values."
javax.swing.JTable.createDefaultRenderers,"Creates default cell renderers for objects, numbers, doubles, dates,  booleans, and icons."
javax.swing.JTable.createDefaultSelectionModel,"Returns the default selection model object, which is  aDefaultListSelectionModel."
javax.swing.JTable.createDefaultTableHeader,"Returns the default table header object, which is  aJTableHeader."
javax.swing.JTable.createScrollPaneForTable,"Deprecated.As of Swing version 1.0.2,  replaced bynew JScrollPane(aTable)."
javax.swing.JTable.doLayout,Causes this table to lay out its rows and columns.
javax.swing.JTable.editCellAt,"Programmatically starts editing the cell atrowandcolumn, if those indices are in the valid range, and  the cell at those indices is editable."
javax.swing.JTable.editingStopped,Invoked when editing is finished.
javax.swing.JTable.getAccessibleContext,Gets the AccessibleContext associated with this JTable.
javax.swing.JTable.getAutoCreateColumnsFromModel,Determines whether the table will create default columns from the model.
javax.swing.JTable.getAutoCreateRowSorter,"Returnstrueif whenever the model changes, a newRowSortershould be created and installed  as the table's sorter; otherwise, returnsfalse."
javax.swing.JTable.getAutoResizeMode,Returns the auto resize mode of the table.
javax.swing.JTable.getCellEditor,"Returns the active cell editor, which isnullif the table  is not currently editing."
javax.swing.JTable.getCellEditor,Returns an appropriate editor for the cell specified byrowandcolumn.
javax.swing.JTable.getCellRect,Returns a rectangle for the cell that lies at the intersection ofrowandcolumn.
javax.swing.JTable.getCellRenderer,Returns an appropriate renderer for the cell specified by this row and  column.
javax.swing.JTable.getCellSelectionEnabled,Returns true if both row and column selection models are enabled.
javax.swing.JTable.getColumn,"Returns theTableColumnobject for the column in the table  whose identifier is equal toidentifier, when compared usingequals."
javax.swing.JTable.getColumnClass,Returns the type of the column appearing in the view at  column positioncolumn.
javax.swing.JTable.getColumnCount,Returns the number of columns in the column model.
javax.swing.JTable.getColumnModel,Returns theTableColumnModelthat contains all column information  of this table.
javax.swing.JTable.getColumnName,Returns the name of the column appearing in the view at  column positioncolumn.
javax.swing.JTable.getColumnSelectionAllowed,Returns true if columns can be selected.
javax.swing.JTable.getDefaultEditor,Returns the editor to be used when no editor has been set in  aTableColumn.
javax.swing.JTable.getDefaultRenderer,Returns the cell renderer to be used when no renderer has been set in  aTableColumn.
javax.swing.JTable.getEditingColumn,Returns the index of the column that contains the cell currently  being edited.
javax.swing.JTable.getEditingRow,Returns the index of the row that contains the cell currently  being edited.
javax.swing.JTable.getEditorComponent,Returns the component that is handling the editing session.
javax.swing.JTable.getFillsViewportHeight,Returns whether or not this table is always made large enough  to fill the height of an enclosing viewport.
javax.swing.JTable.getGridColor,Returns the color used to draw grid lines.
javax.swing.JTable.getIntercellSpacing,Returns the horizontal and vertical space between cells.
javax.swing.JTable.getModel,Returns theTableModelthat provides the data displayed by thisJTable.
javax.swing.JTable.getPreferredScrollableViewportSize,Returns the preferred size of the viewport for this table.
javax.swing.JTable.getPrintable,Return aPrintablefor use in printing this JTable.
javax.swing.JTable.getRowCount,"Returns the number of rows that can be shown in theJTable, given unlimited space."
javax.swing.JTable.getRowHeight,"Returns the height of a table row, in pixels."
javax.swing.JTable.getRowHeight,"Returns the height, in pixels, of the cells inrow."
javax.swing.JTable.getRowMargin,"Gets the amount of empty space, in pixels, between cells."
javax.swing.JTable.getRowSelectionAllowed,Returns true if rows can be selected.
javax.swing.JTable.getRowSorter,Returns the object responsible for sorting.
javax.swing.JTable.getScrollableBlockIncrement,"ReturnsvisibleRect.heightorvisibleRect.width,  depending on this table's orientation."
javax.swing.JTable.getScrollableTracksViewportHeight,"Returnsfalseto indicate that the height of the viewport does  not determine the height of the table, unlessgetFillsViewportHeightistrueand the preferred height  of the table is smaller than the viewport's height."
javax.swing.JTable.getScrollableTracksViewportWidth,"Returns false ifautoResizeModeis set toAUTO_RESIZE_OFF, which indicates that the  width of the viewport does not determine the width  of the table."
javax.swing.JTable.getScrollableUnitIncrement,Returns the scroll increment (in pixels) that completely exposes one new  row or column (depending on the orientation).
javax.swing.JTable.getSelectedColumn,"Returns the index of the first selected column,  -1 if no column is selected."
javax.swing.JTable.getSelectedColumnCount,Returns the number of selected columns.
javax.swing.JTable.getSelectedColumns,Returns the indices of all selected columns.
javax.swing.JTable.getSelectedRow,"Returns the index of the first selected row, -1 if no row is selected."
javax.swing.JTable.getSelectedRowCount,Returns the number of selected rows.
javax.swing.JTable.getSelectedRows,Returns the indices of all selected rows.
javax.swing.JTable.getSelectionBackground,Returns the background color for selected cells.
javax.swing.JTable.getSelectionForeground,Returns the foreground color for selected cells.
javax.swing.JTable.getSelectionModel,Returns theListSelectionModelthat is used to maintain row  selection state.
javax.swing.JTable.getShowHorizontalLines,"Returns true if the table draws horizontal lines between cells, false if it  doesn't."
javax.swing.JTable.getShowVerticalLines,"Returns true if the table draws vertical lines between cells, false if it  doesn't."
javax.swing.JTable.getSurrendersFocusOnKeystroke,Returns true if the editor should get the focus  when keystrokes cause the editor to be activated
javax.swing.JTable.getTableHeader,Returns thetableHeaderused by thisJTable.
javax.swing.JTable.getToolTipText,OverridesJComponent'sgetToolTipTextmethod in order to allow the renderer's tips to be used  if it has text set.
javax.swing.JTable.getUpdateSelectionOnSort,Returns true if the selection should be updated after sorting.
javax.swing.JTable.getValueAt,Returns the cell value atrowandcolumn.
javax.swing.JTable.initializeLocalVars,Initializes table properties to their default values.
javax.swing.JTable.isCellEditable,Returns true if the cell atrowandcolumnis editable.
javax.swing.JTable.isCellSelected,Returns true if the specified indices are in the valid range of rows  and columns and the cell at the specified position is selected.
javax.swing.JTable.isColumnSelected,"Returns true if the specified index is in the valid range of columns,  and the column at that index is selected."
javax.swing.JTable.isEditing,Returns true if a cell is being edited.
javax.swing.JTable.isRowSelected,"Returns true if the specified index is in the valid range of rows,  and the row at that index is selected."
javax.swing.JTable.moveColumn,Moves the columncolumnto the position currently  occupied by the columntargetColumnin the view.
javax.swing.JTable.paramString,Returns a string representation of this table.
javax.swing.JTable.prepareEditor,"Prepares the editor by querying the data model for the value and  selection state of the cell atrow,column."
javax.swing.JTable.prepareRenderer,"Prepares the renderer by querying the data model for the  value and selection state  of the cell atrow,column."
javax.swing.JTable.print,"A convenience method that displays a printing dialog, and then prints  thisJTablein modePrintMode.FIT_WIDTH,  with no header or footer text."
javax.swing.JTable.print,"A convenience method that displays a printing dialog, and then prints  thisJTablein the given printing mode,  with no header or footer text."
javax.swing.JTable.print,"A convenience method that displays a printing dialog, and then prints  thisJTablein the given printing mode,  with the specified header and footer text."
javax.swing.JTable.print,"Prints this table, as specified by the fully featuredprintmethod, with the default printer specified as the print service."
javax.swing.JTable.print,Prints thisJTable.
javax.swing.JTable.removeColumn,RemovesaColumnfrom thisJTable's   array of columns.
javax.swing.JTable.removeColumnSelectionInterval,"Deselects the columns fromindex0toindex1, inclusive."
javax.swing.JTable.removeEditor,Discards the editor object and frees the real estate it used for  cell rendering.
javax.swing.JTable.removeNotify,Calls theunconfigureEnclosingScrollPanemethod.
javax.swing.JTable.removeRowSelectionInterval,"Deselects the rows fromindex0toindex1, inclusive."
javax.swing.JTable.resizeAndRepaint,Equivalent torevalidatefollowed byrepaint.
javax.swing.JTable.rowAtPoint,"Returns the index of the row thatpointlies in,  or -1 if the result is not in the range  [0,getRowCount()-1]."
javax.swing.JTable.selectAll,"Selects all rows, columns, and cells in the table."
javax.swing.JTable.setAutoCreateColumnsFromModel,Sets this table'sautoCreateColumnsFromModelflag.
javax.swing.JTable.setAutoCreateRowSorter,Specifies whether aRowSortershould be created for the  table whenever its model changes.
javax.swing.JTable.setAutoResizeMode,Sets the table's auto resize mode when the table is resized.
javax.swing.JTable.setCellEditor,Sets the active cell editor.
javax.swing.JTable.setCellSelectionEnabled,Sets whether this table allows both a column selection and a  row selection to exist simultaneously.
javax.swing.JTable.setColumnModel,Sets the column model for this table tocolumnModeland registers  for listener notifications from the new column model.
javax.swing.JTable.setColumnSelectionAllowed,Sets whether the columns in this model can be selected.
javax.swing.JTable.setColumnSelectionInterval,"Selects the columns fromindex0toindex1,  inclusive."
javax.swing.JTable.setDefaultEditor,Sets a default cell editor to be used if no editor has been set in  aTableColumn.
javax.swing.JTable.setDefaultRenderer,Sets a default cell renderer to be used if no renderer has been set in  aTableColumn.
javax.swing.JTable.setEditingColumn,Sets theeditingColumnvariable.
javax.swing.JTable.setEditingRow,Sets theeditingRowvariable.
javax.swing.JTable.setFillsViewportHeight,Sets whether or not this table is always made large enough  to fill the height of an enclosing viewport.
javax.swing.JTable.setGridColor,Sets the color used to draw grid lines togridColorand redisplays.
javax.swing.JTable.setIntercellSpacing,Sets therowMarginand thecolumnMargin--  the height and width of the space between cells -- tointercellSpacing.
javax.swing.JTable.setModel,Sets the data model for this table todataModeland registers  with it for listener notifications from the new data model.
javax.swing.JTable.setPreferredScrollableViewportSize,Sets the preferred size of the viewport for this table.
javax.swing.JTable.setRowHeight,"Sets the height, in pixels, of all cells torowHeight,  revalidates, and repaints."
javax.swing.JTable.setRowHeight,"Sets the height forrowtorowHeight,  revalidates, and repaints."
javax.swing.JTable.setRowMargin,Sets the amount of empty space between cells in adjacent rows.
javax.swing.JTable.setRowSelectionAllowed,Sets whether the rows in this model can be selected.
javax.swing.JTable.setRowSelectionInterval,"Selects the rows fromindex0toindex1,  inclusive."
javax.swing.JTable.setRowSorter,Sets theRowSorter.
javax.swing.JTable.setSelectionBackground,Sets the background color for selected cells.
javax.swing.JTable.setSelectionForeground,Sets the foreground color for selected cells.
javax.swing.JTable.setSelectionMode,"Sets the table's selection mode to allow only single selections, a single  contiguous interval, or multiple intervals."
javax.swing.JTable.setSelectionModel,Sets the row selection model for this table toselectionModeland registers for listener notifications from the new selection model.
javax.swing.JTable.setShowGrid,Sets whether the table draws grid lines around cells.
javax.swing.JTable.setShowHorizontalLines,Sets whether the table draws horizontal lines between cells.
javax.swing.JTable.setShowVerticalLines,Sets whether the table draws vertical lines between cells.
javax.swing.JTable.setSurrendersFocusOnKeystroke,Sets whether editors in this JTable get the keyboard focus  when an editor is activated as a result of the JTable  forwarding keyboard events for a cell.
javax.swing.JTable.setTableHeader,Sets thetableHeaderworking with thisJTabletonewHeader.
javax.swing.JTable.setUI,Sets the L&F object that renders this component and repaints.
javax.swing.JTable.setUpdateSelectionOnSort,Specifies whether the selection should be updated after sorting.
javax.swing.JTable.setValueAt,Sets the value for the cell in the table model atrowandcolumn.
javax.swing.JTable.sizeColumnsToFit,"Deprecated.As of Swing version 1.0.3,  replaced bydoLayout()."
javax.swing.JTable.sizeColumnsToFit,Obsolete as of Java 2 platform v1.4.
javax.swing.JTable.sorterChanged,RowSorterListenernotification that theRowSorterhas changed in some way.
javax.swing.JTable.tableChanged,Invoked when this table'sTableModelgenerates  aTableModelEvent.
javax.swing.JTable.unconfigureEnclosingScrollPane,Reverses the effect ofconfigureEnclosingScrollPaneby replacing thecolumnHeaderViewof the enclosing  scroll pane withnull.
javax.swing.JTable.valueChanged,Invoked when the row selection changes -- repaints to show the new  selection.
javax.swing.JTextArea.append,Appends the given text to the end of the document.
javax.swing.JTextArea.createDefaultModel,Creates the default implementation of the model  to be used at construction if one isn't explicitly  given.
javax.swing.JTextArea.getAccessibleContext,Gets the AccessibleContext associated with this JTextArea.
javax.swing.JTextArea.getColumns,Returns the number of columns in the TextArea.
javax.swing.JTextArea.getColumnWidth,Gets column width.
javax.swing.JTextArea.getLineCount,Determines the number of lines contained in the area.
javax.swing.JTextArea.getLineEndOffset,Determines the offset of the end of the given line.
javax.swing.JTextArea.getLineOfOffset,Translates an offset into the components text to a  line number.
javax.swing.JTextArea.getLineStartOffset,Determines the offset of the start of the given line.
javax.swing.JTextArea.getLineWrap,Gets the line-wrapping policy of the text area.
javax.swing.JTextArea.getPreferredScrollableViewportSize,Returns the preferred size of the viewport if this component  is embedded in a JScrollPane.
javax.swing.JTextArea.getPreferredSize,Returns the preferred size of the TextArea.
javax.swing.JTextArea.getRowHeight,Defines the meaning of the height of a row.
javax.swing.JTextArea.getRows,Returns the number of rows in the TextArea.
javax.swing.JTextArea.getScrollableTracksViewportWidth,Returns true if a viewport should always force the width of this  Scrollable to match the width of the viewport.
javax.swing.JTextArea.getScrollableUnitIncrement,"Components that display logical rows or columns should compute  the scroll increment that will completely expose one new row  or column, depending on the value of orientation."
javax.swing.JTextArea.getTabSize,Gets the number of characters used to expand tabs.
javax.swing.JTextArea.getUIClassID,Returns the class ID for the UI.
javax.swing.JTextArea.getWrapStyleWord,Gets the style of wrapping used if the text area is wrapping  lines.
javax.swing.JTextArea.insert,Inserts the specified text at the specified position.
javax.swing.JTextArea.paramString,Returns a string representation of this JTextArea.
javax.swing.JTextArea.replaceRange,Replaces text from the indicated start to end position with the  new text specified.
javax.swing.JTextArea.setColumns,Sets the number of columns for this TextArea.
javax.swing.JTextArea.setFont,Sets the current font.
javax.swing.JTextArea.setLineWrap,Sets the line-wrapping policy of the text area.
javax.swing.JTextArea.setRows,Sets the number of rows for this TextArea.
javax.swing.JTextArea.setTabSize,Sets the number of characters to expand tabs to.
javax.swing.JTextArea.setWrapStyleWord,Sets the style of wrapping used if the text area is wrapping  lines.
javax.swing.JTextField.actionPropertyChanged,Updates the textfield's state in response to property changes in  associated action.
javax.swing.JTextField.addActionListener,Adds the specified action listener to receive  action events from this textfield.
javax.swing.JTextField.configurePropertiesFromAction,Sets the properties on this textfield to match those in the specifiedAction.
javax.swing.JTextField.getAccessibleContext,Gets theAccessibleContextassociated with thisJTextField.
javax.swing.JTextField.getActionListeners,Returns an array of all theActionListeners added  to this JTextField with addActionListener().
javax.swing.JTextField.getColumns,Returns the number of columns in thisTextField.
javax.swing.JTextField.getColumnWidth,Returns the column width.
javax.swing.JTextField.getHorizontalAlignment,Returns the horizontal alignment of the text.
javax.swing.JTextField.getHorizontalVisibility,Gets the visibility of the text field.
javax.swing.JTextField.getPreferredSize,Returns the preferred sizeDimensionsneeded for thisTextField.
javax.swing.JTextField.getScrollOffset,"Gets the scroll offset, in pixels."
javax.swing.JTextField.isValidateRoot,"Calls torevalidatethat come from within the  textfield itself will  be handled by validating the textfield, unless the textfield  is contained within aJViewport,  in which case this returns false."
javax.swing.JTextField.paramString,Returns a string representation of thisJTextField.
javax.swing.JTextField.postActionEvent,Processes action events occurring on this textfield by  dispatching them to any registeredActionListenerobjects.
javax.swing.JTextField.removeActionListener,Removes the specified action listener so that it no longer  receives action events from this textfield.
javax.swing.JTextField.scrollRectToVisible,Scrolls the field left or right.
javax.swing.JTextField.setActionCommand,Sets the command string used for action events.
javax.swing.JTextField.setColumns,"Sets the number of columns in thisTextField,  and then invalidate the layout."
javax.swing.JTextField.setHorizontalAlignment,Sets the horizontal alignment of the text.
javax.swing.JTextField.setScrollOffset,"Sets the scroll offset, in pixels."
javax.swing.JTextPane.addStyle,Adds a new style into the logical style hierarchy.
javax.swing.JTextPane.createDefaultEditorKit,Creates theEditorKitto use by default.
javax.swing.JTextPane.getCharacterAttributes,"Fetches the character attributes in effect at the  current location of the caret, ornull."
javax.swing.JTextPane.getInputAttributes,Gets the input attributes for the pane.
javax.swing.JTextPane.getLogicalStyle,"Fetches the logical style assigned to the paragraph represented  by the current position of the caret, ornull."
javax.swing.JTextPane.getParagraphAttributes,"Fetches the current paragraph attributes in effect  at the location of the caret, ornullif none."
javax.swing.JTextPane.getStyle,Fetches a named non-nullstyle previously added.
javax.swing.JTextPane.getStyledDocument,Fetches the model associated with the editor.
javax.swing.JTextPane.getStyledEditorKit,Gets the editor kit.
javax.swing.JTextPane.insertComponent,Inserts a component into the document as a replacement  for the currently selected content.
javax.swing.JTextPane.insertIcon,Inserts an icon into the document as a replacement  for the currently selected content.
javax.swing.JTextPane.paramString,Returns a string representation of thisJTextPane.
javax.swing.JTextPane.removeStyle,Removes a named non-nullstyle previously added to  the document.
javax.swing.JTextPane.setCharacterAttributes,Applies the given attributes to character  content.
javax.swing.JTextPane.setLogicalStyle,Sets the logical style to use for the paragraph at the  current caret position.
javax.swing.JTextPane.setParagraphAttributes,Applies the given attributes to paragraphs.
javax.swing.JToggleButton.getAccessibleContext,Gets the AccessibleContext associated with this JToggleButton.
javax.swing.JToggleButton.paramString,Returns a string representation of this JToggleButton.
javax.swing.JToggleButton.requestFocus,"If this toggle button is a member of theButtonGroupwhich has  another toggle button which is selected and can be the focus owner,  and the focus cause argument denotes window activation or focus  traversal action of any direction the result of the method execution  is the same as callingComponent.requestFocus(FocusEvent.Cause)on the toggle button  selected in the group."
javax.swing.JToggleButton.requestFocusInWindow,"If this toggle button is a member of theButtonGroupwhich has  another toggle button which is selected and can be the focus owner,  and the focus cause argument denotes window activation or focus  traversal action of any direction the result of the method execution  is the same as callingComponent.requestFocusInWindow(FocusEvent.Cause)on the toggle  button selected in the group."
javax.swing.JToggleButton.isSelected,Checks if the button is selected.
javax.swing.JToggleButton.setPressed,Sets the pressed state of the toggle button.
javax.swing.JToggleButton.setSelected,Sets the selected state of the button.
javax.swing.JToolBar.add,Adds a newJButtonwhich dispatches the action.
javax.swing.JToolBar.addImpl,"If aJButtonis being added, it is initially  set to be disabled."
javax.swing.JToolBar.addSeparator,Appends a separator of default size to the end of the tool bar.
javax.swing.JToolBar.addSeparator,Appends a separator of a specified size to the end  of the tool bar.
javax.swing.JToolBar.createActionChangeListener,"Returns a properly configuredPropertyChangeListenerwhich updates the control as changes to theActionoccur,  ornullif the default  property change listener for the control is desired."
javax.swing.JToolBar.createActionComponent,Factory method which creates theJButtonforActions added to theJToolBar.
javax.swing.JToolBar.getAccessibleContext,Gets the AccessibleContext associated with this JToolBar.
javax.swing.JToolBar.getMargin,Returns the margin between the tool bar's border and  its buttons.
javax.swing.JToolBar.getOrientation,Returns the current orientation of the tool bar.
javax.swing.JToolBar.getUI,Returns the tool bar's current UI.
javax.swing.JToolBar.isFloatable,Gets thefloatableproperty.
javax.swing.JToolBar.isRollover,Returns the rollover state.
javax.swing.JToolBar.paintBorder,Paints the tool bar's border if theborderPaintedproperty  istrue.
javax.swing.JToolBar.paramString,Returns a string representation of thisJToolBar.
javax.swing.JToolBar.setBorderPainted,"Sets theborderPaintedproperty, which istrueif the border should be painted."
javax.swing.JToolBar.setFloatable,"Sets thefloatableproperty,  which must betruefor the user to move the tool bar."
javax.swing.JToolBar.setMargin,Sets the margin between the tool bar's border and  its buttons.
javax.swing.JToolBar.setOrientation,Sets the orientation of the tool bar.
javax.swing.JToolBar.setRollover,Sets the rollover state of this toolbar.
javax.swing.JToolBar.updateUI,Notification from theUIFactorythat the L&F has changed.
javax.swing.JToolBar.getMaximumSize,Returns the maximum size for the separator.
javax.swing.JToolBar.getMinimumSize,Returns the minimum size for the separator.
javax.swing.JToolBar.getPreferredSize,Returns the preferred size for the separator.
javax.swing.JToolBar.getSeparatorSize,Returns the size of the separator
javax.swing.JToolBar.setSeparatorSize,Sets the size of the separator.
javax.swing.JToolTip.getAccessibleDescription,Get the accessible description of this object.
javax.swing.JToolTip.getAccessibleContext,Gets the AccessibleContext associated with this JToolTip.
javax.swing.JToolTip.getComponent,Returns the component the tooltip applies to.
javax.swing.JToolTip.getTipText,Returns the text that is shown when the tool tip is displayed.
javax.swing.JToolTip.paramString,Returns a string representation of thisJToolTip.
javax.swing.JToolTip.setComponent,Specifies the component that the tooltip describes.
javax.swing.JToolTip.setTipText,Sets the text to show when the tool tip is displayed.
javax.swing.JTree.doAccessibleAction,Perform the specified Action on the tree node.
javax.swing.JTree.getAccessibleActionCount,Returns the number of accessible actions available in this  tree node.
javax.swing.JTree.getAccessibleActionDescription,Return a description of the specified action of the tree node.
javax.swing.JTree.getAccessibleContext,Get the AccessibleContext associated with this tree node.
javax.swing.JTree.getAccessibleIndexInParent,Get the index of this object in its accessible parent.
javax.swing.JTree.getAccessibleParent,Get the Accessible parent of this object.
javax.swing.JTree.getAccessibleSelection,Get the AccessibleSelection associated with this object if one  exists.
javax.swing.JTree.getAccessibleText,Get the AccessibleText associated with this object if one  exists.
javax.swing.JTree.getAccessibleValue,Get the AccessibleValue associated with this object if one  exists.
javax.swing.JTree.getLocationInJTree,Returns the relative location of the node
javax.swing.JTree.removeAccessibleSelection,Removes the specified selected item in the object from the  object's  selection.
javax.swing.JTree.setAccessibleDescription,Set the accessible description of this object.
javax.swing.JTree.setAccessibleName,Set the localized accessible name of this object.
javax.swing.JTree.fireVisibleDataPropertyChange,Fire a visible data property change notification.
javax.swing.JTree.getAccessibleChildrenCount,Returns the number of top-level children nodes of this  JTree.
javax.swing.JTree.treeCollapsed,Tree Collapsed notification.
javax.swing.JTree.treeExpanded,Tree Model Expansion notification.
javax.swing.JTree.treeNodesChanged,Tree Model Node change notification.
javax.swing.JTree.treeStructureChanged,Tree Model structure change change notification.
javax.swing.JTree.valueChanged,Tree Selection Listener value change method.
javax.swing.JTree.getChildIndex,Returns the index where the dropped data should be inserted  with respect to the path returned bygetPath().
javax.swing.JTree.getPath,Returns the path where dropped data should be placed in the  tree.
javax.swing.JTree.children,"Subclassed to load the children, if necessary."
javax.swing.JTree.createChildren,Adds to parent all the children inchildren.
javax.swing.JTree.getChildCount,Returns the number of child nodes.
javax.swing.JTree.isLeaf,Returns true if this node allows children.
javax.swing.JTree.loadChildren,Loads the children based onchildValue.
javax.swing.JTree.addPropertyChangeListener,This is overriden to do nothing;EmptySelectionModeldoes not allow a selection.
javax.swing.JTree.sharedInstance,Returns the single instance ofEmptySelectionModel.
javax.swing.JTree.addSelectionInterval,Adds the specified rows (inclusive) to the selection.
javax.swing.JTree.addSelectionPath,Adds the node identified by the specifiedTreePathto the current selection.
javax.swing.JTree.addSelectionPaths,Adds each path in the array of paths to the current selection.
javax.swing.JTree.addSelectionRow,Adds the path at the specified row to the current selection.
javax.swing.JTree.addSelectionRows,Adds the paths at each of the specified rows to the current selection.
javax.swing.JTree.addTreeExpansionListener,Adds a listener forTreeExpansionevents.
javax.swing.JTree.addTreeSelectionListener,Adds a listener forTreeSelectionevents.
javax.swing.JTree.addTreeWillExpandListener,Adds a listener forTreeWillExpandevents.
javax.swing.JTree.cancelEditing,Cancels the current editing session.
javax.swing.JTree.clearSelection,Clears the selection.
javax.swing.JTree.clearToggledPaths,Clears the cache of toggled tree paths.
javax.swing.JTree.collapsePath,Ensures that the node identified by the specified path is  collapsed and viewable.
javax.swing.JTree.collapseRow,Ensures that the node in the specified row is collapsed.
javax.swing.JTree.convertValueToText,Called by the renderers to convert the specified value to  text.
javax.swing.JTree.createTreeModel,Returns aTreeModelwrapping the specified object.
javax.swing.JTree.createTreeModelListener,Creates and returns an instance ofTreeModelHandler.
javax.swing.JTree.expandPath,Ensures that the node identified by the specified path is  expanded and viewable.
javax.swing.JTree.expandRow,Ensures that the node in the specified row is expanded and  viewable.
javax.swing.JTree.getAccessibleContext,Gets the AccessibleContext associated with this JTree.
javax.swing.JTree.getAnchorSelectionPath,Returns the path identified as the anchor.
javax.swing.JTree.getCellEditor,Returns the editor used to edit entries in the tree.
javax.swing.JTree.getCellRenderer,Returns the currentTreeCellRendererthat is rendering each cell.
javax.swing.JTree.getClosestPathForLocation,"Returns the path to the node that is closest to x,y."
javax.swing.JTree.getClosestRowForLocation,"Returns the row to the node that is closest to x,y."
javax.swing.JTree.getDefaultTreeModel,Creates and returns a sampleTreeModel.
javax.swing.JTree.getDescendantToggledPaths,Returns anEnumerationofTreePathsthat have been expanded that  are descendants ofparent.
javax.swing.JTree.getEditingPath,Returns the path to the element that is currently being edited.
javax.swing.JTree.getExpandedDescendants,Returns anEnumerationof the descendants of the  pathparentthat  are currently expanded.
javax.swing.JTree.getExpandsSelectedPaths,Returns theexpandsSelectedPathsproperty.
javax.swing.JTree.getInvokesStopCellEditing,Returns the indicator that tells what happens when editing is  interrupted.
javax.swing.JTree.getLastSelectedPathComponent,Returns the last path component of the selected path.
javax.swing.JTree.getLeadSelectionPath,Returns the path identified as the lead.
javax.swing.JTree.getLeadSelectionRow,Returns the row index corresponding to the lead path.
javax.swing.JTree.getMaxSelectionRow,Returns the largest selected row.
javax.swing.JTree.getMinSelectionRow,Returns the smallest selected row.
javax.swing.JTree.getModel,Returns theTreeModelthat is providing the data.
javax.swing.JTree.getNextMatch,Returns the TreePath to the next tree element that  begins with a prefix.
javax.swing.JTree.getPathBetweenRows,Returns the paths (inclusive) between the specified rows.
javax.swing.JTree.getPathBounds,Returns theRectanglethat the specified node will be drawn  into.
javax.swing.JTree.getPathForLocation,Returns the path for the node at the specified location.
javax.swing.JTree.getPathForRow,Returns the path for the specified row.
javax.swing.JTree.getPreferredScrollableViewportSize,Returns the preferred display size of aJTree.
javax.swing.JTree.getRowBounds,Returns theRectanglethat the node at the specified row is  drawn in.
javax.swing.JTree.getRowCount,Returns the number of viewable nodes.
javax.swing.JTree.getRowForLocation,Returns the row for the specified location.
javax.swing.JTree.getRowForPath,Returns the row that displays the node identified by the specified  path.
javax.swing.JTree.getRowHeight,Returns the height of each row.
javax.swing.JTree.getScrollableBlockIncrement,"Returns the amount for a block increment, which is the height or  width ofvisibleRect, based onorientation."
javax.swing.JTree.getScrollableTracksViewportHeight,"Returns false to indicate that the height of the viewport does not  determine the height of the table, unless the preferred height  of the tree is smaller than the viewports height."
javax.swing.JTree.getScrollableTracksViewportWidth,"Returns false to indicate that the width of the viewport does not  determine the width of the table, unless the preferred width of  the tree is smaller than the viewports width."
javax.swing.JTree.getScrollableUnitIncrement,Returns the amount to increment when scrolling.
javax.swing.JTree.getScrollsOnExpand,Returns the value of thescrollsOnExpandproperty.
javax.swing.JTree.getSelectionCount,Returns the number of nodes selected.
javax.swing.JTree.getSelectionModel,Returns the model for selections.
javax.swing.JTree.getSelectionPath,Returns the path to the first selected node.
javax.swing.JTree.getSelectionPaths,Returns the paths of all selected values.
javax.swing.JTree.getSelectionRows,Returns all of the currently selected rows.
javax.swing.JTree.getShowsRootHandles,Returns the value of theshowsRootHandlesproperty.
javax.swing.JTree.getToggleClickCount,Returns the number of mouse clicks needed to expand or close a node.
javax.swing.JTree.getToolTipText,OverridesJComponent'sgetToolTipTextmethod in order to allow  renderer's tips to be used if it has text set.
javax.swing.JTree.getTreeExpansionListeners,Returns an array of all theTreeExpansionListeners added  to this JTree with addTreeExpansionListener().
javax.swing.JTree.getTreeSelectionListeners,Returns an array of all theTreeSelectionListeners added  to this JTree with addTreeSelectionListener().
javax.swing.JTree.getTreeWillExpandListeners,Returns an array of all theTreeWillExpandListeners added  to this JTree with addTreeWillExpandListener().
javax.swing.JTree.getVisibleRowCount,Returns the number of rows that are displayed in the display area.
javax.swing.JTree.hasBeenExpanded,Returns true if the node identified by the path has ever been  expanded.
javax.swing.JTree.isCollapsed,Returns true if the node at the specified display row is collapsed.
javax.swing.JTree.isCollapsed,"Returns true if the value identified by path is currently collapsed,  this will return false if any of the values in path are currently  not being displayed."
javax.swing.JTree.isEditable,Returns true if the tree is editable.
javax.swing.JTree.isEditing,Returns true if the tree is being edited.
javax.swing.JTree.isExpanded,Returns true if the node at the specified display row is currently  expanded.
javax.swing.JTree.isExpanded,"Returns true if the node identified by the path is currently expanded,"
javax.swing.JTree.isFixedRowHeight,Returns true if the height of each display row is a fixed size.
javax.swing.JTree.isLargeModel,Returns true if the tree is configured for a large model.
javax.swing.JTree.isPathEditable,ReturnsisEditable.
javax.swing.JTree.isPathSelected,Returns true if the item identified by the path is currently selected.
javax.swing.JTree.isRootVisible,Returns true if the root node of the tree is displayed.
javax.swing.JTree.isRowSelected,Returns true if the node identified by row is selected.
javax.swing.JTree.isSelectionEmpty,Returns true if the selection is currently empty.
javax.swing.JTree.isVisible,"Returns true if the value identified by path is currently viewable,  which means it is either the root or all of its parents are expanded."
javax.swing.JTree.makeVisible,Ensures that the node identified by path is currently viewable.
javax.swing.JTree.paramString,Returns a string representation of thisJTree.
javax.swing.JTree.removeDescendantSelectedPaths,Removes any paths in the selection that are descendants ofpath.
javax.swing.JTree.removeDescendantToggledPaths,Removes any descendants of theTreePathsintoRemovethat have been expanded.
javax.swing.JTree.removeSelectionInterval,Removes the specified rows (inclusive) from the selection.
javax.swing.JTree.removeSelectionPath,Removes the node identified by the specified path from the current  selection.
javax.swing.JTree.removeSelectionPaths,Removes the nodes identified by the specified paths from the  current selection.
javax.swing.JTree.removeSelectionRow,Removes the row at the indexrowfrom the current  selection.
javax.swing.JTree.removeSelectionRows,Removes the rows that are selected at each of the specified  rows.
javax.swing.JTree.removeTreeExpansionListener,Removes a listener forTreeExpansionevents.
javax.swing.JTree.removeTreeSelectionListener,Removes aTreeSelectionlistener.
javax.swing.JTree.removeTreeWillExpandListener,Removes a listener forTreeWillExpandevents.
javax.swing.JTree.scrollPathToVisible,Makes sure all the path components in path are expanded (except  for the last path component) and scrolls so that the  node identified by the path is displayed.
javax.swing.JTree.scrollRowToVisible,Scrolls the item identified by row until it is displayed.
javax.swing.JTree.setAnchorSelectionPath,Sets the path identified as the anchor.
javax.swing.JTree.setCellEditor,Sets the cell editor.
javax.swing.JTree.setCellRenderer,Sets theTreeCellRendererthat will be used to  draw each cell.
javax.swing.JTree.setEditable,Determines whether the tree is editable.
javax.swing.JTree.setExpandedState,Sets the expanded state of thisJTree.
javax.swing.JTree.setExpandsSelectedPaths,Configures theexpandsSelectedPathsproperty.
javax.swing.JTree.setInvokesStopCellEditing,"Determines what happens when editing is interrupted by selecting  another node in the tree, a change in the tree's data, or by some  other means."
javax.swing.JTree.setLargeModel,Specifies whether the UI should use a large model.
javax.swing.JTree.setLeadSelectionPath,Sets the path identifies as the lead.
javax.swing.JTree.setModel,Sets theTreeModelthat will provide the data.
javax.swing.JTree.setRootVisible,Determines whether or not the root node from  theTreeModelis visible.
javax.swing.JTree.setRowHeight,"Sets the height of each cell, in pixels."
javax.swing.JTree.setScrollsOnExpand,"Sets thescrollsOnExpandproperty,  which determines whether the  tree might scroll to show previously hidden children."
javax.swing.JTree.setSelectionInterval,Selects the rows in the specified interval (inclusive).
javax.swing.JTree.setSelectionModel,Sets the tree's selection model.
javax.swing.JTree.setSelectionPath,Selects the node identified by the specified path.
javax.swing.JTree.setSelectionPaths,Selects the nodes identified by the specified array of paths.
javax.swing.JTree.setSelectionRow,Selects the node at the specified row in the display.
javax.swing.JTree.setSelectionRows,Selects the nodes corresponding to each of the specified rows  in the display.
javax.swing.JTree.setShowsRootHandles,"Sets the value of theshowsRootHandlesproperty,  which specifies whether the node handles should be displayed."
javax.swing.JTree.setToggleClickCount,Sets the number of mouse clicks before a node will expand or close.
javax.swing.JTree.setVisibleRowCount,Sets the number of rows that are to be displayed.
javax.swing.JTree.startEditingAtPath,Selects the node identified by the specified path and initiates  editing.
javax.swing.JTree.stopEditing,Ends the current editing session.
javax.swing.JTree.treeDidChange,"Sent when the tree has changed enough that we need to resize  the bounds, but not enough that we need to remove the  expanded node set (e.g nodes were expanded or collapsed, or  nodes were inserted into the tree)."
javax.swing.JTree.treeNodesChanged,Invoked after a node (or a set of siblings) has changed in some  way.
javax.swing.JTree.treeNodesInserted,Invoked after nodes have been inserted into the tree.
javax.swing.JTree.treeNodesRemoved,Invoked after nodes have been removed from the tree.
javax.swing.JTree.treeStructureChanged,Invoked after the tree has drastically changed structure from a  given node down.
javax.swing.JTree.valueChanged,Invoked by theTreeSelectionModelwhen the  selection changes.
javax.swing.JViewport.addChangeListener,"Adds aChangeListenerto the list that is  notified each time the view's  size, position, or the viewport's extent size has changed."
javax.swing.JViewport.addImpl,"Sets theJViewport's one lightweight child,  which can benull."
javax.swing.JViewport.computeBlit,Computes the parameters for a blit where the backing store image  currently containsoldLocin the upper left hand corner  and we're scrolling tonewLoc.
javax.swing.JViewport.createLayoutManager,Subclassers can override this to install a different  layout manager (ornull) in the constructor.
javax.swing.JViewport.createViewListener,Creates a listener for the view.
javax.swing.JViewport.firePropertyChange,Notifies listeners of a property change.
javax.swing.JViewport.fireStateChanged,"Notifies allChangeListenerswhen the views  size, position, or the viewports extent size has changed."
javax.swing.JViewport.getAccessibleContext,Gets the AccessibleContext associated with this JViewport.
javax.swing.JViewport.getChangeListeners,Returns an array of all theChangeListeners added  to this JViewport with addChangeListener().
javax.swing.JViewport.getExtentSize,Returns the size of the visible part of the view in view coordinates.
javax.swing.JViewport.getInsets,"Returns the insets (border) dimensions as (0,0,0,0), since borders  are not supported on aJViewport."
javax.swing.JViewport.getInsets,Returns anInsetsobject containing thisJViewports inset values.
javax.swing.JViewport.getScrollMode,Returns the current scrolling mode.
javax.swing.JViewport.getView,Returns theJViewport's one child ornull.
javax.swing.JViewport.getViewPosition,"Returns the view coordinates that appear in the upper left  hand corner of the viewport, or 0,0 if there's no view."
javax.swing.JViewport.getViewRect,Returns a rectangle whose origin isgetViewPositionand size isgetExtentSize.
javax.swing.JViewport.getViewSize,"If the view's size hasn't been explicitly set, return the  preferred size, otherwise return the view's current size."
javax.swing.JViewport.isBackingStoreEnabled,"Deprecated.As of Java 2 platform v1.3, replaced bygetScrollMode()."
javax.swing.JViewport.isOptimizedDrawingEnabled,TheJViewportoverrides the default implementation of  this method (inJComponent) to return false.
javax.swing.JViewport.isPaintingOrigin,"Returns true if scroll mode is aBACKINGSTORE_SCROLL_MODEto cause  painting to originate fromJViewport, or one of its  ancestors."
javax.swing.JViewport.paint,"Depending on whether thebackingStoreis enabled,  either paint the image through the backing store or paint  just the recently exposed part, using the backing store  to ""blit"" the remainder."
javax.swing.JViewport.paramString,Returns a string representation of thisJViewport.
javax.swing.JViewport.remove,Removes theViewports one lightweight child.
javax.swing.JViewport.removeChangeListener,"Removes aChangeListenerfrom the list that's notified each  time the views size, position, or the viewports extent size  has changed."
javax.swing.JViewport.repaint,Always repaint in the parents coordinate system to make sure  only one paint is performed by theRepaintManager.
javax.swing.JViewport.reshape,Sets the bounds of this viewport.
javax.swing.JViewport.scrollRectToVisible,Scrolls the view so thatRectanglewithin the view becomes visible.
javax.swing.JViewport.setBackingStoreEnabled,"Deprecated.As of Java 2 platform v1.3, replaced bysetScrollMode()."
javax.swing.JViewport.setBorder,"The viewport ""scrolls"" its child (called the ""view"") by the  normal parent/child clipping (typically the view is moved in  the opposite direction of the scroll)."
javax.swing.JViewport.setExtentSize,Sets the size of the visible part of the view using view coordinates.
javax.swing.JViewport.setScrollMode,Used to control the method of scrolling the viewport contents.
javax.swing.JViewport.setView,"Sets theJViewport's one lightweight child  (view), which can benull."
javax.swing.JViewport.setViewPosition,"Sets the view coordinates that appear in the upper left  hand corner of the viewport, does nothing if there's no view."
javax.swing.JViewport.setViewSize,Sets the size of the view.
javax.swing.JViewport.toViewCoordinates,Converts a size in pixel coordinates to view coordinates.
javax.swing.JViewport.toViewCoordinates,Converts a point in pixel coordinates to view coordinates.
javax.swing.JWindow.getAccessibleContext,Gets the AccessibleContext associated with this JWindow.
javax.swing.JWindow.getContentPane,Returns theContainerwhich is thecontentPanefor this window.
javax.swing.JWindow.getGlassPane,Returns theglassPane Componentfor this window.
javax.swing.JWindow.getLayeredPane,Returns thelayeredPaneobject for this window.
javax.swing.JWindow.getRootPane,Returns therootPaneobject for this window.
javax.swing.JWindow.paramString,Returns a string representation of thisJWindow.
javax.swing.JWindow.setContentPane,Sets thecontentPaneproperty for this window.
javax.swing.JWindow.setRootPane,Sets the newrootPaneobject for this window.
javax.swing.JWindow.windowInit,Called by the constructors to init theJWindowproperly.
javax.swing.KeyStroke.getKeyStroke,Returns a shared instance of aKeyStrokethat represents aKEY_TYPEDevent for the  specified character.
javax.swing.KeyStroke.getKeyStroke,Deprecated.use getKeyStroke(char)
javax.swing.KeyStroke.getKeyStroke,"Returns a shared instance of a KeyStroke, given a numeric key code and a  set of modifiers."
javax.swing.KeyStroke.getKeyStroke,"Returns a shared instance of a KeyStroke, given a numeric key code and a  set of modifiers, specifying whether the key is activated when it is  pressed or released."
javax.swing.KeyStroke.getKeyStroke,Returns a shared instance of aKeyStrokethat represents aKEY_TYPEDevent for the  specified Character object and a  set of modifiers.
javax.swing.KeyStroke.getKeyStroke,Parses a string and returns aKeyStroke.
javax.swing.KeyStroke.getKeyStrokeForEvent,Returns a KeyStroke which represents the stroke which generated a given  KeyEvent.
javax.swing.LayoutFocusTraversalPolicy.accept,Determines whether the specifiedComponentis an acceptable choice as the new focus owner.
javax.swing.LayoutStyle.getContainerGap,Returns the amount of space to place between the component and specified  edge of its parent.
javax.swing.LayoutStyle.getInstance,Returns the shared instance ofLayoutStyle.
javax.swing.LayoutStyle.getPreferredGap,Returns the amount of space to use between two components.
javax.swing.LayoutStyle.setInstance,Sets the shared instance ofLayoutStyle.
javax.swing.LookAndFeel.getDefaults,Returns the look and feel defaults.
javax.swing.LookAndFeel.getDescription,"Return a one line description of this look and feel implementation,  e.g."
javax.swing.LookAndFeel.getDesktopPropertyValue,Returns the value of the specified system desktop property by  invokingToolkit.getDefaultToolkit().getDesktopProperty().
javax.swing.LookAndFeel.getDisabledIcon,Returns anIconwith a disabled appearance.
javax.swing.LookAndFeel.getDisabledSelectedIcon,Returns anIconfor use by disabled  components that are also selected.
javax.swing.LookAndFeel.getID,Return a string that identifies this look and feel.
javax.swing.LookAndFeel.getLayoutStyle,Returns theLayoutStylefor this look  and feel.
javax.swing.LookAndFeel.getName,"Return a short string that identifies this look and feel, e.g."
javax.swing.LookAndFeel.getSupportsWindowDecorations,Returnstrueif theLookAndFeelreturnedRootPaneUIinstances support providingWindowdecorations in aJRootPane.
javax.swing.LookAndFeel.initialize,Initializes the look and feel.
javax.swing.LookAndFeel.installBorder,Convenience method for setting a component's border property with  a value from the defaults.
javax.swing.LookAndFeel.installColors,Convenience method for setting a component's foreground  and background color properties with values from the  defaults.
javax.swing.LookAndFeel.installColorsAndFont,"Convenience method for setting a component's foreground,  background and font properties with values from the  defaults."
javax.swing.LookAndFeel.installProperty,Convenience method for installing a property with the specified name  and value on a component if that property has not already been set  by the developer.
javax.swing.LookAndFeel.isNativeLookAndFeel,"If the underlying platform has a ""native"" look and feel, and  this is an implementation of it, returntrue."
javax.swing.LookAndFeel.isSupportedLookAndFeel,Returntrueif the underlying platform supports and or permits  this look and feel.
javax.swing.LookAndFeel.loadKeyBindings,Populates anInputMapwith the specified bindings.
javax.swing.LookAndFeel.makeComponentInputMap,Creates aComponentInputMapUIResourcefromkeys.
javax.swing.LookAndFeel.makeIcon,Creates and returns aUIDefault.LazyValuethat loads an  image.
javax.swing.LookAndFeel.makeInputMap,Creates anInputMapUIResourcefromkeys.
javax.swing.LookAndFeel.makeKeyBindings,Convenience method for building an array ofKeyBindings.
javax.swing.LookAndFeel.provideErrorFeedback,"Invoked when the user attempts an invalid operation,  such as pasting into an uneditableJTextFieldthat has focus."
javax.swing.LookAndFeel.uninitialize,Uninitializes the look and feel.
javax.swing.LookAndFeel.uninstallBorder,Convenience method for uninstalling a border.
javax.swing.MenuSelectionManager.addChangeListener,Adds a ChangeListener to the button.
javax.swing.MenuSelectionManager.clearSelectedPath,Tell the menu selection to close and unselect all the menu components.
javax.swing.MenuSelectionManager.componentForPoint,Returns the component in the currently selected path  which contains sourcePoint.
javax.swing.MenuSelectionManager.defaultManager,Returns the default menu selection manager.
javax.swing.MenuSelectionManager.getChangeListeners,Returns an array of all theChangeListeners added  to this MenuSelectionManager with addChangeListener().
javax.swing.MenuSelectionManager.getSelectedPath,Returns the path to the currently selected menu item
javax.swing.MenuSelectionManager.isComponentPartOfCurrentMenu,Return true ifcis part of the currently used menu
javax.swing.MenuSelectionManager.processKeyEvent,"When a MenuElement receives an event from a KeyListener, it should never process the event  directly."
javax.swing.MenuSelectionManager.processMouseEvent,"When a MenuElement receives an event from a MouseListener, it should never process the event  directly."
javax.swing.MenuSelectionManager.setSelectedPath,Changes the selection in the menu hierarchy.
javax.swing.OverlayLayout.getLayoutAlignmentX,Returns the alignment along the x axis for the container.
javax.swing.OverlayLayout.getLayoutAlignmentY,Returns the alignment along the y axis for the container.
javax.swing.OverlayLayout.invalidateLayout,"Indicates a child has changed its layout related information,  which causes any cached calculations to be flushed."
javax.swing.OverlayLayout.layoutContainer,Called by the AWT when the specified container needs to be laid out.
javax.swing.OverlayLayout.maximumLayoutSize,Returns the maximum dimensions needed to lay out the components  contained in the specified target container.
javax.swing.OverlayLayout.preferredLayoutSize,Returns the preferred dimensions for this layout given the components  in the specified target container.
javax.swing.Popup.hide,Hides and disposes of thePopup.
javax.swing.Popup.show,Makes thePopupvisible.
javax.swing.PopupFactory.getPopup,Creates aPopupfor the Componentownercontaining the Componentcontents.
javax.swing.PopupFactory.getSharedInstance,Returns the sharedPopupFactorywhich can be used  to obtainPopups.
javax.swing.PopupFactory.setSharedInstance,Sets thePopupFactorythat will be used to obtainPopups.
javax.swing.ProgressMonitor.getAccessibleComponent,Gets the AccessibleComponent associated with this object that has a  graphical representation.
javax.swing.ProgressMonitor.getAccessibleName,Gets the accessibleName property of this object.
javax.swing.ProgressMonitor.getAccessibleValue,Gets the AccessibleValue associated with this object that supports a  Numerical value.
javax.swing.ProgressMonitor.close,Indicate that the operation is complete.
javax.swing.ProgressMonitor.getAccessibleContext,Gets theAccessibleContextfor theProgressMonitor
javax.swing.ProgressMonitor.getMaximum,Returns the maximum value -- the higher end of the progress value.
javax.swing.ProgressMonitor.getMillisToDecideToPopup,Returns the amount of time this object waits before deciding whether  or not to popup a progress monitor.
javax.swing.ProgressMonitor.getMillisToPopup,Returns the amount of time it will take for the popup to appear.
javax.swing.ProgressMonitor.getMinimum,Returns the minimum value -- the lower end of the progress value.
javax.swing.ProgressMonitor.getNote,Specifies the additional note that is displayed along with the  progress message.
javax.swing.ProgressMonitor.isCanceled,Returns true if the user hits the Cancel button or closes  the progress dialog.
javax.swing.ProgressMonitor.setMaximum,Specifies the maximum value.
javax.swing.ProgressMonitor.setMillisToDecideToPopup,Specifies the amount of time to wait before deciding whether or  not to popup a progress monitor.
javax.swing.ProgressMonitor.setMillisToPopup,Specifies the amount of time it will take for the popup to appear.
javax.swing.ProgressMonitor.setMinimum,Specifies the minimum value.
javax.swing.ProgressMonitor.setProgress,Indicate the progress of the operation being monitored.
javax.swing.ProgressMonitorInputStream.close,OverridesFilterInputStream.closeto close the progress monitor as well as the stream.
javax.swing.ProgressMonitorInputStream.getProgressMonitor,Get the ProgressMonitor object being used by this stream.
javax.swing.ProgressMonitorInputStream.read,OverridesFilterInputStream.readto update the progress monitor after the read.
javax.swing.ProgressMonitorInputStream.reset,OverridesFilterInputStream.resetto reset the progress monitor as well as the stream.
javax.swing.ProgressMonitorInputStream.skip,OverridesFilterInputStream.skipto update the progress monitor after the skip.
javax.swing.RepaintManager.addDirtyRegion,"Deprecated, for removal: This API element is subject to removal in a future version.The Applet API is deprecated."
javax.swing.RepaintManager.addDirtyRegion,Addswindowto the list ofComponents that  need to be repainted.
javax.swing.RepaintManager.addDirtyRegion,Add a component in the list of components that should be refreshed.
javax.swing.RepaintManager.addInvalidComponent,Mark the component as in need of layout and queue a runnable  for the event dispatching thread that will validate the components  first isValidateRoot() ancestor.
javax.swing.RepaintManager.currentManager,Return the RepaintManager for the calling thread given a Component.
javax.swing.RepaintManager.currentManager,Return the RepaintManager for the calling thread given a JComponent.
javax.swing.RepaintManager.getDirtyRegion,Return the current dirty region for a component.
javax.swing.RepaintManager.getDoubleBufferMaximumSize,Returns the maximum double buffer size.
javax.swing.RepaintManager.getOffscreenBuffer,Return the offscreen buffer that should be used as a double buffer with  the componentc.
javax.swing.RepaintManager.getVolatileOffscreenBuffer,Return a volatile offscreen buffer that should be used as a  double buffer with the specified componentc.
javax.swing.RepaintManager.isCompletelyDirty,Convenience method that returns true ifaComponentwill be completely  painted during the next paintDirtyRegions().
javax.swing.RepaintManager.isDoubleBufferingEnabled,Returns true if this RepaintManager is double buffered.
javax.swing.RepaintManager.markCompletelyClean,Mark a component completely clean.
javax.swing.RepaintManager.markCompletelyDirty,Mark a component completely dirty.
javax.swing.RepaintManager.paintDirtyRegions,Paint all of the components that have been marked dirty.
javax.swing.RepaintManager.removeInvalidComponent,Remove a component from the list of invalid components.
javax.swing.RepaintManager.setCurrentManager,Set the RepaintManager that should be used for the calling  thread.
javax.swing.RepaintManager.setDoubleBufferingEnabled,Enables or disables double buffering in this RepaintManager.
javax.swing.RepaintManager.setDoubleBufferMaximumSize,Set the maximum double buffer size.
javax.swing.RepaintManager.validateInvalidComponents,Validate all of the components that have been marked invalid.
javax.swing.RowFilter.getIdentifier,Returns the identifer (in the model) of the entry.
javax.swing.RowFilter.getStringValue,Returns the string value at the specified index.
javax.swing.RowFilter.getValueCount,Returns the number of values in the entry.
javax.swing.RowFilter.andFilter,Returns aRowFilterthat includes entries if all  of the supplied filters include the entry.
javax.swing.RowFilter.dateFilter,Returns aRowFilterthat includes entries that  have at least oneDatevalue meeting the specified  criteria.
javax.swing.RowFilter.include,Returns true if the specified entry should be shown;  returns false if the entry should be hidden.
javax.swing.RowFilter.notFilter,Returns aRowFilterthat includes entries if the  supplied filter does not include the entry.
javax.swing.RowFilter.numberFilter,Returns aRowFilterthat includes entries that  have at least oneNumbervalue meeting the  specified criteria.
javax.swing.RowFilter.orFilter,Returns aRowFilterthat includes entries if any  of the supplied filters includes the entry.
javax.swing.RowFilter.regexFilter,Returns aRowFilterthat uses a regular  expression to determine which entries to include.
javax.swing.RowSorter.addRowSorterListener,Adds aRowSorterListenerto receive notification  about thisRowSorter.
javax.swing.RowSorter.fireRowSorterChanged,Notifies listener that the mapping has changed.
javax.swing.RowSorter.fireSortOrderChanged,Notifies listener that the sort order has changed.
javax.swing.RowSorter.removeRowSorterListener,Removes aRowSorterListener.
javax.swing.RowSorter.setSortKeys,Sets the current sort keys.
javax.swing.RowSorter.toggleSortOrder,Reverses the sort order of the specified column.
javax.swing.RowSorter.equals,Returns true if this object equals the specified object.
javax.swing.RowSorter.getColumn,Returns the index of the column.
javax.swing.RowSorter.getSortOrder,Returns the sort order of the column.
javax.swing.RowSorter.hashCode,Returns the hash code for thisSortKey.
javax.swing.ScrollPaneLayout.addSingletonComponent,Removes an existing component.
javax.swing.ScrollPaneLayout.getColumnHeader,Returns theJViewportobject that is the column header.
javax.swing.ScrollPaneLayout.getCorner,Returns theComponentat the specified corner.
javax.swing.ScrollPaneLayout.getHorizontalScrollBar,Returns theJScrollBarobject that handles horizontal scrolling.
javax.swing.ScrollPaneLayout.getHorizontalScrollBarPolicy,Returns the horizontal scrollbar-display policy.
javax.swing.ScrollPaneLayout.getRowHeader,Returns theJViewportobject that is the row header.
javax.swing.ScrollPaneLayout.getVerticalScrollBar,Returns theJScrollBarobject that handles vertical scrolling.
javax.swing.ScrollPaneLayout.getVerticalScrollBarPolicy,Returns the vertical scrollbar-display policy.
javax.swing.ScrollPaneLayout.getViewport,Returns theJViewportobject that displays the  scrollable contents.
javax.swing.ScrollPaneLayout.getViewportBorderBounds,Deprecated.As of JDK version Swing1.1     replaced byJScrollPane.getViewportBorderBounds().
javax.swing.ScrollPaneLayout.layoutContainer,Lays out the scrollpane.
javax.swing.ScrollPaneLayout.minimumLayoutSize,"The minimum size of aScrollPaneis the size of the insets  plus minimum size of the viewport, plus the scrollpane's  viewportBorder insets, plus the minimum size  of the visible headers, plus the minimum size of the  scrollbars whose displayPolicy isn't NEVER."
javax.swing.ScrollPaneLayout.preferredLayoutSize,"The preferred size of aScrollPaneis the size of the insets,  plus the preferred size of the viewport, plus the preferred size of  the visible headers, plus the preferred size of the scrollbars  that will appear given the current view and the current  scrollbar displayPolicies."
javax.swing.ScrollPaneLayout.setHorizontalScrollBarPolicy,Sets the horizontal scrollbar-display policy.
javax.swing.ScrollPaneLayout.setVerticalScrollBarPolicy,Sets the vertical scrollbar-display policy.
javax.swing.ScrollPaneLayout.syncWithScrollPane,This method is invoked after the ScrollPaneLayout is set as the  LayoutManager of aJScrollPane.
javax.swing.SizeRequirements.adjustSizes,Adjust a specified array of sizes by a given amount.
javax.swing.SizeRequirements.calculateAlignedPositions,Creates a bunch of offset/span pairs specifying how to  lay out a set of components with the specified alignments.
javax.swing.SizeRequirements.calculateAlignedPositions,Creates a set of offset/span pairs specifying how to  lay out a set of components with the specified alignments.
javax.swing.SizeRequirements.calculateTiledPositions,Creates a set of offset/span pairs representing how to  lay out a set of components end-to-end.
javax.swing.SizeRequirements.getAlignedSizeRequirements,Determines the total space necessary to  align a set of components.
javax.swing.SizeRequirements.getTiledSizeRequirements,Determines the total space necessary to  place a set of components end-to-end.
javax.swing.SizeRequirements.toString,"Returns a string describing the minimum, preferred, and maximum  size requirements, along with the alignment."
javax.swing.SizeSequence.getIndex,Returns the index of the entry  that corresponds to the specified position.
javax.swing.SizeSequence.getPosition,Returns the start position for the specified entry.
javax.swing.SizeSequence.getSize,Returns the size of the specified entry.
javax.swing.SizeSequence.getSizes,Returns the size of all entries.
javax.swing.SizeSequence.insertEntries,Adds a contiguous group of entries to thisSizeSequence.
javax.swing.SizeSequence.removeEntries,Removes a contiguous group of entries  from thisSizeSequence.
javax.swing.SizeSequence.setSize,Sets the size of the specified entry.
javax.swing.SizeSequence.setSizes,"Resets thisSizeSequenceobject,  using the data in thesizesargument."
javax.swing.SortingFocusTraversalPolicy.getComparator,Returns the Comparator which will be used to sort the Components in a  focus traversal cycle.
javax.swing.SortingFocusTraversalPolicy.getImplicitDownCycleTraversal,Returns whether this SortingFocusTraversalPolicy transfers focus down-  cycle implicitly.
javax.swing.SortingFocusTraversalPolicy.setComparator,Sets the Comparator which will be used to sort the Components in a  focus traversal cycle.
javax.swing.SortingFocusTraversalPolicy.setImplicitDownCycleTraversal,Sets whether this SortingFocusTraversalPolicy transfers focus down-cycle  implicitly.
javax.swing.SpinnerDateModel.getCalendarField,Returns theCalendarfield that is added to or subtracted from  by thenextValueandpreviousValuemethods.
javax.swing.SpinnerDateModel.getDate,Returns the current element in this sequence ofDates.
javax.swing.SpinnerDateModel.getEnd,Returns the lastDatein the sequence.
javax.swing.SpinnerDateModel.getNextValue,"Returns the nextDatein the sequence, ornullif  the next date is afterend."
javax.swing.SpinnerDateModel.getPreviousValue,"Returns the previousDatein the sequence, ornullif the previous date is beforestart."
javax.swing.SpinnerDateModel.getStart,Returns the firstDatein the sequence.
javax.swing.SpinnerDateModel.setCalendarField,Changes the size of the date value change computed  by thenextValueandpreviousValuemethods.
javax.swing.SpinnerDateModel.setEnd,Changes the upper limit forDates in this sequence.
javax.swing.SpinnerDateModel.setStart,Changes the lower limit for Dates in this sequence.
javax.swing.SpinnerDateModel.setValue,Sets the currentDatefor this sequence.
javax.swing.SpinnerListModel.getList,Returns theListthat defines the sequence for this model.
javax.swing.SpinnerListModel.getNextValue,Returns the next legal value of the underlying sequence ornullif value is already the last element.
javax.swing.SpinnerListModel.getPreviousValue,Returns the previous element of the underlying sequence ornullif value is already the first element.
javax.swing.SpinnerListModel.getValue,Returns the current element of the sequence.
javax.swing.SpinnerListModel.setList,Changes the list that defines this sequence and resets the index  of the modelsvalueto zero.
javax.swing.SpinnerListModel.setValue,Changes the current element of the sequence and notifiesChangeListeners.
javax.swing.SpinnerNumberModel.getMaximum,Returns the last number in the sequence.
javax.swing.SpinnerNumberModel.getMinimum,Returns the first number in this sequence.
javax.swing.SpinnerNumberModel.getNextValue,Returns the next number in the sequence.
javax.swing.SpinnerNumberModel.getNumber,Returns the value of the current element of the sequence.
javax.swing.SpinnerNumberModel.getPreviousValue,Returns the previous number in the sequence.
javax.swing.SpinnerNumberModel.getStepSize,Returns the size of the value change computed by thegetNextValueandgetPreviousValuemethods.
javax.swing.SpinnerNumberModel.setMaximum,Changes the upper bound for numbers in this sequence.
javax.swing.SpinnerNumberModel.setMinimum,Changes the lower bound for numbers in this sequence.
javax.swing.SpinnerNumberModel.setStepSize,Changes the size of the value change computed by thegetNextValueandgetPreviousValuemethods.
javax.swing.SpinnerNumberModel.setValue,Sets the current value for this sequence.
javax.swing.Spring.constant,"Returns a strut -- a spring whoseminimum,preferred, andmaximumvalues each have the valuepref."
javax.swing.Spring.constant,"Returns a spring whoseminimum,preferred, andmaximumvalues have the values:min,pref,  andmaxrespectively."
javax.swing.Spring.getMaximumValue,Returns themaximumvalue of thisSpring.
javax.swing.Spring.getMinimumValue,Returns theminimumvalue of thisSpring.
javax.swing.Spring.getPreferredValue,Returns thepreferredvalue of thisSpring.
javax.swing.Spring.getValue,Returns the currentvalueof thisSpring.
javax.swing.Spring.height,"Returns a spring whoseminimum,preferred,maximumandvalueproperties are defined by the heights of theminimumSize,preferredSize,maximumSizeandsizeproperties  of the supplied component."
javax.swing.Spring.max,"Returnsmax(s1, s2): a spring whose value is always greater than (or equal to)          the values of boths1ands2."
javax.swing.Spring.minus,Returns-s: a spring running in the opposite direction tos.
javax.swing.Spring.scale,"Returns a spring whoseminimum,preferred,maximumandvalueproperties are each multiples of the properties of the  argument spring,s."
javax.swing.Spring.setValue,Sets the currentvalueof thisSpringtovalue.
javax.swing.Spring.sum,Returnss1+s2: a spring representings1ands2in series.
javax.swing.Spring.width,"Returns a spring whoseminimum,preferred,maximumandvalueproperties are defined by the widths of theminimumSize,preferredSize,maximumSizeandsizeproperties  of the supplied component."
javax.swing.SpringLayout.getConstraint,"Returns the value of the specified edge, which may be  a derived value, or evennull."
javax.swing.SpringLayout.getHeight,Returns the value of theheightproperty.
javax.swing.SpringLayout.getWidth,Returns the value of thewidthproperty.
javax.swing.SpringLayout.getX,Returns the value of thexproperty.
javax.swing.SpringLayout.getY,Returns the value of theyproperty.
javax.swing.SpringLayout.setConstraint,Sets the spring controlling the specified edge.
javax.swing.SpringLayout.setHeight,"Sets theheightproperty,  which controls the height of a component."
javax.swing.SpringLayout.setWidth,"Sets thewidthproperty,  which controls the width of a component."
javax.swing.SpringLayout.setX,"Sets thexproperty,  which controls thexvalue  of a component's location."
javax.swing.SpringLayout.setY,"Sets theyproperty,  which controls theyvalue  of a component's location."
javax.swing.SpringLayout.addLayoutComponent,"Ifconstraintsis an instance ofSpringLayout.Constraints,  associates the constraints with the specified component."
javax.swing.SpringLayout.addLayoutComponent,"Has no effect,  since this layout manager does not  use a per-component string."
javax.swing.SpringLayout.getConstraint,Returns the spring controlling the distance between  the specified edge of  the component and the top or left edge of its parent.
javax.swing.SpringLayout.getConstraints,Returns the constraints for the specified component.
javax.swing.SpringLayout.getLayoutAlignmentX,Returns 0.5f (centered).
javax.swing.SpringLayout.maximumLayoutSize,"Calculates the maximum size dimensions for the specified container,  given the components it contains."
javax.swing.SpringLayout.minimumLayoutSize,"Calculates the minimum size dimensions for the specified  container, given the components it contains."
javax.swing.SpringLayout.preferredLayoutSize,"Calculates the preferred size dimensions for the specified  container, given the components it contains."
javax.swing.SpringLayout.putConstraint,"Links edgee1of componentc1to  edgee2of componentc2,  with a fixed distance between the edges."
javax.swing.SpringLayout.putConstraint,Links edgee1of componentc1to  edgee2of componentc2.
javax.swing.SpringLayout.removeLayoutComponent,Removes the constraints associated with the specified component.
javax.swing.SwingUtilities.calculateInnerArea,Stores the position and size of  the inner painting area of the specified component  inrand returnsr.
javax.swing.SwingUtilities.computeDifference,Convenience returning an array of rect representing the regions withinrectAthat do not overlap withrectB.
javax.swing.SwingUtilities.computeIntersection,Convenience to calculate the intersection of two rectangles  without allocating a new rectangle.
javax.swing.SwingUtilities.computeStringWidth,"Compute the width of the string using a font with the specified  ""metrics"" (sizes)."
javax.swing.SwingUtilities.computeUnion,Convenience method that calculates the union of two rectangles  without allocating a new rectangle.
javax.swing.SwingUtilities.convertMouseEvent,Returns a MouseEvent similar tosourceEventexcept that its x  and y members have been converted todestination's coordinate  system.
javax.swing.SwingUtilities.convertPoint,"Convert the point(x,y)insourcecoordinate system todestinationcoordinate system."
javax.swing.SwingUtilities.convertPoint,Convert aaPointinsourcecoordinate system todestinationcoordinate system.
javax.swing.SwingUtilities.convertPointFromScreen,Convert a point from a screen coordinates to a component's  coordinate system
javax.swing.SwingUtilities.convertPointToScreen,Convert a point from a component's coordinate system to  screen coordinates.
javax.swing.SwingUtilities.convertRectangle,Convert the rectangleaRectangleinsourcecoordinate system todestinationcoordinate system.
javax.swing.SwingUtilities.findFocusOwner,"Deprecated.As of 1.4, replaced byKeyboardFocusManager.getFocusOwner()."
javax.swing.SwingUtilities.getAccessibleAt,"Returns theAccessiblechild contained at the  local coordinatePoint, if one exists."
javax.swing.SwingUtilities.getAncestorNamed,Convenience method for searching abovecompin the  component hierarchy and returns the first object ofnameit  finds.
javax.swing.SwingUtilities.getAncestorOfClass,Convenience method for searching abovecompin the  component hierarchy and returns the first object of classcit  finds.
javax.swing.SwingUtilities.getDeepestComponentAt,"Returns the deepest visible descendent Component ofparentthat contains the locationx,y."
javax.swing.SwingUtilities.getLocalBounds,"Return the rectangle (0,0,bounds.width,bounds.height) for the componentaComponent"
javax.swing.SwingUtilities.getRoot,Returns the root component for the current component tree.
javax.swing.SwingUtilities.getRootPane,If c is a JRootPane descendant return its JRootPane ancestor.
javax.swing.SwingUtilities.getUIActionMap,Returns the ActionMap provided by the UI  in componentcomponent.
javax.swing.SwingUtilities.getUIInputMap,Returns the InputMap provided by the UI for conditionconditionin componentcomponent.
javax.swing.SwingUtilities.getUnwrappedParent,Returns the first ancestor of thecomponentwhich is not an instance ofJLayer.
javax.swing.SwingUtilities.getUnwrappedView,Returns the firstJViewport's descendant  which is not an instance ofJLayer.
javax.swing.SwingUtilities.getWindowAncestor,"Returns the firstWindowancestor ofc, ornullifcis not contained inside aWindow."
javax.swing.SwingUtilities.invokeAndWait,CausesdoRun.run()to be executed synchronously on the  AWT event dispatching thread.
javax.swing.SwingUtilities.invokeLater,CausesdoRun.run()to be executed asynchronously on the  AWT event dispatching thread.
javax.swing.SwingUtilities.isDescendingFrom,Returntrueif a componentadescends from a componentb
javax.swing.SwingUtilities.isEventDispatchThread,Returns true if the current thread is an AWT event dispatching thread.
javax.swing.SwingUtilities.isLeftMouseButton,Returns true if the mouse event specifies the left mouse button.
javax.swing.SwingUtilities.isMiddleMouseButton,Returns true if the mouse event specifies the middle mouse button.
javax.swing.SwingUtilities.isRectangleContainingRectangle,Returntrueif @{code a} containsb
javax.swing.SwingUtilities.isRightMouseButton,Returns true if the mouse event specifies the right mouse button.
javax.swing.SwingUtilities.layoutCompoundLabel,"Compute and return the location of the icons origin, the  location of origin of the text baseline, and a possibly clipped  version of the compound labels string."
javax.swing.SwingUtilities.notifyAction,InvokesactionPerformedonactionifactionis non-nulland accepts the sender object.
javax.swing.SwingUtilities.paintComponent,Paints a component to the specifiedGraphics.
javax.swing.SwingUtilities.processKeyBindings,Process the key bindings for theComponentassociated withevent.
javax.swing.SwingUtilities.replaceUIActionMap,Convenience method to change the UI ActionMap forcomponenttouiActionMap.
javax.swing.SwingUtilities.replaceUIInputMap,Convenience method to change the UI InputMap forcomponenttouiInputMap.
javax.swing.SwingUtilities.updateComponentTreeUI,"A simple minded look and feel change: ask each node in the tree  toupdateUI()-- that is, to initialize its UI property  with the current look and feel."
javax.swing.SwingWorker.doInBackground,"Computes a result, or throws an exception if unable to do so."
javax.swing.SwingWorker.done,Executed on theEvent Dispatch Threadafter thedoInBackgroundmethod is finished.
javax.swing.SwingWorker.execute,Schedules thisSwingWorkerfor execution on aworkerthread.
javax.swing.SwingWorker.firePropertyChange,Reports a bound property update to any registered listeners.
javax.swing.SwingWorker.getProgress,Returns theprogressbound property.
javax.swing.SwingWorker.getPropertyChangeSupport,Returns thePropertyChangeSupportfor thisSwingWorker.
javax.swing.SwingWorker.getState,Returns theSwingWorkerstate bound property.
javax.swing.SwingWorker.process,Receives data chunks from thepublishmethod asynchronously on theEvent Dispatch Thread.
javax.swing.SwingWorker.publish,Sends data chunks to theprocess(java.util.List<V>)method.
javax.swing.SwingWorker.run,Sets thisFutureto the result of computation unless  it has been cancelled.
javax.swing.SwingWorker.setProgress,Sets theprogressbound property.
javax.swing.Timer.addActionListener,Adds an action listener to theTimer.
javax.swing.Timer.getActionCommand,Returns the string that will be delivered as the action command  inActionEvents fired by this timer.
javax.swing.Timer.getActionListeners,Returns an array of all the action listeners registered  on this timer.
javax.swing.Timer.getDelay,"Returns the delay, in milliseconds,  between firings of action events."
javax.swing.Timer.getInitialDelay,Returns theTimer's initial delay.
javax.swing.Timer.getListeners,Returns an array of all the objects currently registered asFooListeners  upon thisTimer.
javax.swing.Timer.getLogTimers,Returnstrueif logging is enabled.
javax.swing.Timer.isCoalesce,Returnstrueif theTimercoalesces  multiple pending action events.
javax.swing.Timer.isRepeats,Returnstrue(the default)  if theTimerwill send  an action event  to its listeners multiple times.
javax.swing.Timer.isRunning,Returnstrueif theTimeris running.
javax.swing.Timer.removeActionListener,Removes the specified action listener from theTimer.
javax.swing.Timer.restart,"Restarts theTimer,  canceling any pending firings and causing  it to fire with its initial delay."
javax.swing.Timer.setActionCommand,Sets the string that will be delivered as the action command  inActionEvents fired by this timer.
javax.swing.Timer.setCoalesce,Sets whether theTimercoalesces multiple pendingActionEventfirings.
javax.swing.Timer.setDelay,"Sets theTimer's between-event delay, the number of milliseconds  between successive action events."
javax.swing.Timer.setInitialDelay,"Sets theTimer's initial delay, the time  in milliseconds to wait after the timer is started  before firing the first event."
javax.swing.Timer.setLogTimers,Enables or disables the timer log.
javax.swing.Timer.setRepeats,"Ifflagisfalse,  instructs theTimerto send only one  action event to its listeners."
javax.swing.Timer.start,"Starts theTimer,  causing it to start sending action events  to its listeners."
javax.swing.Timer.stop,"Stops theTimer,  causing it to stop sending action events  to its listeners."
javax.swing.ToolTipManager.getDismissDelay,Returns the dismissal delay value.
javax.swing.ToolTipManager.getInitialDelay,Returns the initial delay value.
javax.swing.ToolTipManager.getReshowDelay,Returns the reshow delay property.
javax.swing.ToolTipManager.isEnabled,Returns true if this object is enabled.
javax.swing.ToolTipManager.isLightWeightPopupEnabled,"Returns true if lightweight (all-Java)Tooltipsare in use, or false if heavyweight (native peer)Tooltipsare being used."
javax.swing.ToolTipManager.mouseDragged,Called when the mouse is pressed and dragged.
javax.swing.ToolTipManager.mouseEntered,Called when the mouse enters the region of a component.
javax.swing.ToolTipManager.mouseExited,Called when the mouse exits the region of a component.
javax.swing.ToolTipManager.mouseMoved,Called when the mouse is moved.
javax.swing.ToolTipManager.mousePressed,Called when the mouse is pressed.
javax.swing.ToolTipManager.registerComponent,Registers a component for tooltip management.
javax.swing.ToolTipManager.setDismissDelay,Specifies the dismissal delay value.
javax.swing.ToolTipManager.setEnabled,Enables or disables the tooltip.
javax.swing.ToolTipManager.setInitialDelay,Specifies the initial delay value.
javax.swing.ToolTipManager.setLightWeightPopupEnabled,"When displaying theJToolTip, theToolTipManagerchooses to use a lightweightJPanelif it fits."
javax.swing.ToolTipManager.setReshowDelay,Used to specify the amount of time before the user has to waitinitialDelaymilliseconds before a tooltip will be  shown.
javax.swing.ToolTipManager.sharedInstance,Returns a sharedToolTipManagerinstance.
javax.swing.ToolTipManager.unregisterComponent,Removes a component from tooltip control.
javax.swing.TransferHandler.getDropPoint,"Returns the drop point, representing the mouse's  current location within the component."
javax.swing.TransferHandler.canImport,Indicates whether a component will accept an import of the given  set of data flavors prior to actually attempting to import it.
javax.swing.TransferHandler.canImport,"This method is called repeatedly during a drag and drop operation  to allow the developer to configure properties of, and to return  the acceptability of transfers; with a return value oftrueindicating that the transfer represented by the givenTransferSupport(which contains all of the details of the  transfer) is acceptable at the current time, and a value offalserejecting the transfer."
javax.swing.TransferHandler.createTransferable,Creates aTransferableto use as the source for  a data transfer.
javax.swing.TransferHandler.exportAsDrag,Causes the Swing drag support to be initiated.
javax.swing.TransferHandler.exportDone,Invoked after data has been exported.
javax.swing.TransferHandler.exportToClipboard,Causes a transfer from the given component to the  given clipboard.
javax.swing.TransferHandler.getCopyAction,Returns anActionthat performs copy operations to the  clipboard.
javax.swing.TransferHandler.getCutAction,Returns anActionthat performs cut operations to the  clipboard.
javax.swing.TransferHandler.getDragImage,Returns the drag image.
javax.swing.TransferHandler.getDragImageOffset,Returns an anchor offset for the image to drag.
javax.swing.TransferHandler.getPasteAction,Returns anActionthat performs paste operations from the  clipboard.
javax.swing.TransferHandler.getSourceActions,"Returns the type of transfer actions supported by the source;  any bitwise-OR combination ofCOPY,MOVEandLINK."
javax.swing.TransferHandler.getVisualRepresentation,Returns an object that establishes the look of a transfer.
javax.swing.TransferHandler.importData,Causes a transfer to a component from a clipboard or a  DND drop operation.
javax.swing.TransferHandler.importData,Causes a transfer to occur from a clipboard or a drag and  drop operation.
javax.swing.TransferHandler.setDragImage,Sets the drag image parameter.
javax.swing.TransferHandler.setDragImageOffset,Sets an anchor offset for the image to drag.
javax.swing.TransferHandler.getComponent,Returns the target component of this transfer.
javax.swing.TransferHandler.getDataFlavors,Returns the data flavors for this transfer.
javax.swing.TransferHandler.getDropAction,"Returns the action chosen for the drop, when thisTransferSupportrepresents a drop."
javax.swing.TransferHandler.getDropLocation,"Returns the current (non-null) drop location for the component,  when thisTransferSupportrepresents a drop."
javax.swing.TransferHandler.getSourceDropActions,"Returns the drag source's supported drop actions, when thisTransferSupportrepresents a drop."
javax.swing.TransferHandler.getTransferable,Returns theTransferableassociated with this transfer.
javax.swing.TransferHandler.getUserDropAction,"Returns the user drop action for the drop, when thisTransferSupportrepresents a drop."
javax.swing.TransferHandler.isDataFlavorSupported,Returns whether or not the given data flavor is supported.
javax.swing.TransferHandler.isDrop,Returns whether or not thisTransferSupportrepresents a drop operation.
javax.swing.TransferHandler.setDropAction,"Sets the drop action for the transfer - which must represent a drop  - to the given action,  instead of the default user drop action."
javax.swing.TransferHandler.setShowDropLocation,Sets whether or not the drop location should be visually indicated  for the transfer - which must represent a drop.
javax.swing.UIDefaults.createValue,Creates the value retrieved from theUIDefaultstable.
javax.swing.UIDefaults.addResourceBundle,Adds a resource bundle to the list of resource bundles that are  searched for localized values.
javax.swing.UIDefaults.get,Returns the value for key.
javax.swing.UIDefaults.get,Returns the value for key associated with the given locale.
javax.swing.UIDefaults.getBoolean,"If the value ofkeyis boolean, return the  boolean value, otherwise return false."
javax.swing.UIDefaults.getBoolean,"If the value ofkeyfor the givenLocaleis boolean, return the boolean value, otherwise return false."
javax.swing.UIDefaults.getBorder,"If the value ofkeyis aBorderreturn it,  otherwise returnnull."
javax.swing.UIDefaults.getBorder,"If the value ofkeyfor the givenLocaleis aBorderreturn it, otherwise returnnull."
javax.swing.UIDefaults.getColor,"If the value ofkeyis aColorreturn it,  otherwise returnnull."
javax.swing.UIDefaults.getColor,"If the value ofkeyfor the givenLocaleis aColorreturn it, otherwise returnnull."
javax.swing.UIDefaults.getDefaultLocale,Returns the default locale.
javax.swing.UIDefaults.getDimension,"If the value ofkeyis aDimensionreturn it,  otherwise returnnull."
javax.swing.UIDefaults.getDimension,"If the value ofkeyfor the givenLocaleis aDimensionreturn it, otherwise returnnull."
javax.swing.UIDefaults.getFont,"If the value ofkeyis aFontreturn it,  otherwise returnnull."
javax.swing.UIDefaults.getFont,"If the value ofkeyfor the givenLocaleis aFontreturn it, otherwise returnnull."
javax.swing.UIDefaults.getIcon,"If the value ofkeyis anIconreturn it,  otherwise returnnull."
javax.swing.UIDefaults.getIcon,"If the value ofkeyfor the givenLocaleis anIconreturn it, otherwise returnnull."
javax.swing.UIDefaults.getInsets,"If the value ofkeyis anInsetsreturn it,  otherwise returnnull."
javax.swing.UIDefaults.getInsets,"If the value ofkeyfor the givenLocaleis anInsetsreturn it, otherwise returnnull."
javax.swing.UIDefaults.getInt,"If the value ofkeyis anIntegerreturn its  integer value, otherwise return 0."
javax.swing.UIDefaults.getInt,"If the value ofkeyfor the givenLocaleis anIntegerreturn its integer value, otherwise return 0."
javax.swing.UIDefaults.getPropertyChangeListeners,Returns an array of all thePropertyChangeListeners added  to this UIDefaults with addPropertyChangeListener().
javax.swing.UIDefaults.getString,"If the value ofkeyis aStringreturn it,  otherwise returnnull."
javax.swing.UIDefaults.getString,"If the value ofkeyfor the givenLocaleis aStringreturn it, otherwise returnnull."
javax.swing.UIDefaults.getUI,Creates anComponentUIimplementation for the  specified component.
javax.swing.UIDefaults.getUIClass,Returns the L&F class that renders this component.
javax.swing.UIDefaults.getUIClass,The value ofget(uidClassID)must be theStringname of a  class that implements the correspondingComponentUIclass.
javax.swing.UIDefaults.getUIError,"IfgetUI()fails for any reason,  it calls this method before returningnull."
javax.swing.UIDefaults.put,Sets the value ofkeytovaluefor all locales.
javax.swing.UIDefaults.putDefaults,Puts all of the key/value pairs in the database and  unconditionally generates onePropertyChangeEvent.
javax.swing.UIDefaults.removeResourceBundle,Removes a resource bundle from the list of resource bundles that are  searched for localized defaults.
javax.swing.UIDefaults.setDefaultLocale,Sets the default locale.
javax.swing.UIDefaults.createValue,Creates anInputMapwith the bindings that are  passed in.
javax.swing.UIDefaults.createValue,Creates the actual value retrieved from theUIDefaultstable.
javax.swing.UIManager.addAuxiliaryLookAndFeel,Adds aLookAndFeelto the list of auxiliary look and feels.
javax.swing.UIManager.createLookAndFeel,Creates a supported built-in JavaLookAndFeelspecified  by the givenL&F namename.
javax.swing.UIManager.get,Returns an object from the defaults.
javax.swing.UIManager.get,Returns an object from the defaults that is appropriate for  the given locale.
javax.swing.UIManager.getAuxiliaryLookAndFeels,Returns the list of auxiliary look and feels (can benull).
javax.swing.UIManager.getBoolean,Returns a boolean from the defaults which is associated with  the key value.
javax.swing.UIManager.getBoolean,Returns a boolean from the defaults which is associated with  the key value and the givenLocale.
javax.swing.UIManager.getBorder,Returns a border from the defaults.
javax.swing.UIManager.getBorder,Returns a border from the defaults that is appropriate  for the given locale.
javax.swing.UIManager.getColor,Returns a color from the defaults.
javax.swing.UIManager.getColor,Returns a color from the defaults that is appropriate  for the given locale.
javax.swing.UIManager.getCrossPlatformLookAndFeelClassName,Returns the name of theLookAndFeelclass that implements  the default cross platform look and feel -- the Java  Look and Feel (JLF).
javax.swing.UIManager.getDefaults,Returns the defaults.
javax.swing.UIManager.getDimension,Returns a dimension from the defaults.
javax.swing.UIManager.getDimension,Returns a dimension from the defaults that is appropriate  for the given locale.
javax.swing.UIManager.getFont,Returns a font from the defaults.
javax.swing.UIManager.getFont,Returns a font from the defaults that is appropriate  for the given locale.
javax.swing.UIManager.getIcon,Returns anIconfrom the defaults.
javax.swing.UIManager.getIcon,Returns anIconfrom the defaults that is appropriate  for the given locale.
javax.swing.UIManager.getInsets,Returns anInsetsobject from the defaults.
javax.swing.UIManager.getInsets,Returns anInsetsobject from the defaults that is  appropriate for the given locale.
javax.swing.UIManager.getInstalledLookAndFeels,Returns an array ofLookAndFeelInfos representing theLookAndFeelimplementations currently available.
javax.swing.UIManager.getInt,Returns an integer from the defaults.
javax.swing.UIManager.getInt,Returns an integer from the defaults that is appropriate  for the given locale.
javax.swing.UIManager.getLookAndFeel,Returns the current look and feel ornull.
javax.swing.UIManager.getLookAndFeelDefaults,"Returns theUIDefaultsfrom the current look and feel,  that were obtained at the time the look and feel was installed."
javax.swing.UIManager.getPropertyChangeListeners,Returns an array of all thePropertyChangeListeners added  to this UIManager with addPropertyChangeListener().
javax.swing.UIManager.getString,Returns a string from the defaults.
javax.swing.UIManager.getString,Returns a string from the defaults that is appropriate for the  given locale.
javax.swing.UIManager.getSystemLookAndFeelClassName,"Returns the name of theLookAndFeelclass that implements  the native system look and feel if there is one, otherwise  the name of the default cross platformLookAndFeelclass."
javax.swing.UIManager.getUI,Returns the appropriateComponentUIimplementation fortarget.
javax.swing.UIManager.installLookAndFeel,Adds the specified look and feel to the set of available look  and feels.
javax.swing.UIManager.put,Stores an object in the developer defaults.
javax.swing.UIManager.removeAuxiliaryLookAndFeel,Removes aLookAndFeelfrom the list of auxiliary look and feels.
javax.swing.UIManager.setInstalledLookAndFeels,Sets the set of available look and feels.
javax.swing.UIManager.setLookAndFeel,"Loads theLookAndFeelspecified by the given class  name, using the current thread's context class loader, and  passes it tosetLookAndFeel(LookAndFeel)."
javax.swing.UIManager.setLookAndFeel,Sets the current look and feel tonewLookAndFeel.
javax.swing.UIManager.getClassName,Returns the name of the class that implements this look and feel.
javax.swing.UIManager.getName,Returns the name of the look and feel in a form suitable  for a menu or other presentation
javax.swing.ViewportLayout.minimumLayoutSize,Returns the minimum dimensions needed to layout the components  contained in the specified target container.
javax.swing.border.AbstractBorder.getBaselineResizeBehavior,Returns an enum indicating how the baseline of a component  changes as the size changes.
javax.swing.border.AbstractBorder.getBorderInsets,"This default implementation returns a newInsetsobject  that is initialized by thegetBorderInsets(Component,Insets)method."
javax.swing.border.AbstractBorder.getBorderInsets,Reinitializes the insets parameter with this Border's current Insets.
javax.swing.border.AbstractBorder.getInteriorRectangle,This convenience method calls the static method.
javax.swing.border.AbstractBorder.getInteriorRectangle,Returns a rectangle using the arguments minus the  insets of the border.
javax.swing.border.AbstractBorder.isBorderOpaque,This default implementation returns false.
javax.swing.border.AbstractBorder.paintBorder,This default implementation does no painting.
javax.swing.border.BevelBorder.getBevelType,Returns the type of the bevel border.
javax.swing.border.BevelBorder.getBorderInsets,Reinitialize the insets parameter with this Border's current Insets.
javax.swing.border.BevelBorder.getHighlightInnerColor,Returns the inner highlight color of the bevel border.
javax.swing.border.BevelBorder.getHighlightInnerColor,Returns the inner highlight color of the bevel border  when rendered on the specified component.
javax.swing.border.BevelBorder.getHighlightOuterColor,Returns the outer highlight color of the bevel border.
javax.swing.border.BevelBorder.getHighlightOuterColor,Returns the outer highlight color of the bevel border  when rendered on the specified component.
javax.swing.border.BevelBorder.getShadowInnerColor,Returns the inner shadow color of the bevel border.
javax.swing.border.BevelBorder.getShadowInnerColor,Returns the inner shadow color of the bevel border  when rendered on the specified component.
javax.swing.border.BevelBorder.getShadowOuterColor,Returns the outer shadow color of the bevel border.
javax.swing.border.BevelBorder.getShadowOuterColor,Returns the outer shadow color of the bevel border  when rendered on the specified component.
javax.swing.border.BevelBorder.isBorderOpaque,Returns whether or not the border is opaque.
javax.swing.border.BevelBorder.paintBorder,Paints the border for the specified component with the specified  position and size.
javax.swing.border.BevelBorder.paintLoweredBevel,Paints a lowered bevel for the specified component with the specified  position and size.
javax.swing.border.BevelBorder.paintRaisedBevel,Paints a raised bevel for the specified component with the specified  position and size.
javax.swing.border.CompoundBorder.getInsideBorder,Returns the inside border object.
javax.swing.border.CompoundBorder.getOutsideBorder,Returns the outside border object.
javax.swing.border.CompoundBorder.isBorderOpaque,Returns whether or not the compound border is opaque.
javax.swing.border.CompoundBorder.paintBorder,Paints the compound border by painting the outside border  with the specified position and size and then painting the  inside border at the specified position and size offset by  the insets of the outside border.
javax.swing.border.EmptyBorder.getBorderInsets,Returns the insets of the border.
javax.swing.border.EmptyBorder.paintBorder,Does no drawing by default.
javax.swing.border.EtchedBorder.getEtchType,Returns which etch-type is set on the etched border.
javax.swing.border.EtchedBorder.getHighlightColor,Returns the highlight color of the etched border.
javax.swing.border.EtchedBorder.getHighlightColor,Returns the highlight color of the etched border  when rendered on the specified component.
javax.swing.border.EtchedBorder.getShadowColor,Returns the shadow color of the etched border.
javax.swing.border.EtchedBorder.getShadowColor,Returns the shadow color of the etched border  when rendered on the specified component.
javax.swing.border.EtchedBorder.paintBorder,Paints the border for the specified component with the  specified position and size.
javax.swing.border.LineBorder.createBlackLineBorder,Convenience method for getting the Color.black LineBorder of thickness 1.
javax.swing.border.LineBorder.createGrayLineBorder,Convenience method for getting the Color.gray LineBorder of thickness 1.
javax.swing.border.LineBorder.getLineColor,Returns the color of the border.
javax.swing.border.LineBorder.getRoundedCorners,Returns whether this border will be drawn with rounded corners.
javax.swing.border.LineBorder.getThickness,Returns the thickness of the border.
javax.swing.border.MatteBorder.getMatteColor,Returns the color used for tiling the border or null  if a tile icon is being used.
javax.swing.border.MatteBorder.getTileIcon,Returns the icon used for tiling the border or null  if a solid color is being used.
javax.swing.border.MatteBorder.paintBorder,Paints the matte border.
javax.swing.border.StrokeBorder.getBorderInsets,Reinitializes theinsetsparameter  with this border's current insets.
javax.swing.border.StrokeBorder.getPaint,Returns thePaintobject used to generate a color  during the border rendering.
javax.swing.border.StrokeBorder.getStroke,Returns theBasicStrokeobject used to stroke a shape  during the border rendering.
javax.swing.border.StrokeBorder.paintBorder,Paints the border for the specified component  with the specified position and size.
javax.swing.border.TitledBorder.getBaselineResizeBehavior,Returns an enum indicating how the baseline of the border  changes as the size changes.
javax.swing.border.TitledBorder.getBorder,Returns the border of the titled border.
javax.swing.border.TitledBorder.getFont,Returns default font of the titled border.
javax.swing.border.TitledBorder.getMinimumSize,Returns the minimum dimensions this border requires  in order to fully display the border and title.
javax.swing.border.TitledBorder.getTitle,Returns the title of the titled border.
javax.swing.border.TitledBorder.getTitleColor,Returns the title-color of the titled border.
javax.swing.border.TitledBorder.getTitleFont,Returns the title-font of the titled border.
javax.swing.border.TitledBorder.getTitleJustification,Returns the title-justification of the titled border.
javax.swing.border.TitledBorder.getTitlePosition,Returns the title-position of the titled border.
javax.swing.border.TitledBorder.setBorder,Sets the border of the titled border.
javax.swing.border.TitledBorder.setTitle,Sets the title of the titled border.
javax.swing.border.TitledBorder.setTitleColor,Sets the title-color of the titled border.
javax.swing.border.TitledBorder.setTitleFont,Sets the title-font of the titled border.
javax.swing.border.TitledBorder.setTitleJustification,Sets the title-justification of the titled border.
javax.swing.border.TitledBorder.setTitlePosition,Sets the title-position of the titled border.
javax.swing.colorchooser.AbstractColorChooserPanel.buildChooser,Builds a new chooser panel.
javax.swing.colorchooser.AbstractColorChooserPanel.getColorFromModel,Returns the color that is currently selected.
javax.swing.colorchooser.AbstractColorChooserPanel.getColorSelectionModel,Returns the model that the chooser panel is editing.
javax.swing.colorchooser.AbstractColorChooserPanel.getDisplayedMnemonicIndex,Provides a hint to the look and feel as to the index of the character ingetDisplayNamethat should be visually identified as the  mnemonic.
javax.swing.colorchooser.AbstractColorChooserPanel.getDisplayName,Returns a string containing the display name of the panel.
javax.swing.colorchooser.AbstractColorChooserPanel.getLargeDisplayIcon,Returns the large display icon for the panel.
javax.swing.colorchooser.AbstractColorChooserPanel.getMnemonic,Provides a hint to the look and feel as to theKeyEvent.VKconstant that can be used as a mnemonic to  access the panel.
javax.swing.colorchooser.AbstractColorChooserPanel.getSmallDisplayIcon,Returns the small display icon for the panel.
javax.swing.colorchooser.AbstractColorChooserPanel.installChooserPanel,Invoked when the panel is added to the chooser.
javax.swing.colorchooser.AbstractColorChooserPanel.isColorTransparencySelectionEnabled,Gets whether color chooser panel allows to select the transparency  (alpha value) of a color.
javax.swing.colorchooser.AbstractColorChooserPanel.paint,Draws the panel.
javax.swing.colorchooser.AbstractColorChooserPanel.setColorTransparencySelectionEnabled,Sets whether color chooser panel allows to select the transparency  (alpha value) of a color.
javax.swing.colorchooser.AbstractColorChooserPanel.uninstallChooserPanel,Invoked when the panel is removed from the chooser.
javax.swing.colorchooser.AbstractColorChooserPanel.updateChooser,Invoked automatically when the model's state changes.
javax.swing.colorchooser.ColorChooserComponentFactory.getDefaultChooserPanels,Returns the default chooser panels.
javax.swing.colorchooser.ColorChooserComponentFactory.getPreviewPanel,Returns the preview panel.
javax.swing.colorchooser.DefaultColorSelectionModel.getChangeListeners,Returns an array of all theChangeListeners added  to thisDefaultColorSelectionModelwithaddChangeListener.
javax.swing.colorchooser.DefaultColorSelectionModel.getSelectedColor,Returns the selectedColorwhich should be  non-null.
javax.swing.colorchooser.DefaultColorSelectionModel.setSelectedColor,Sets the selected color tocolor.
javax.swing.event.AncestorEvent.getAncestor,Returns the ancestor that the event actually occurred on.
javax.swing.event.AncestorEvent.getAncestorParent,Returns the parent of the ancestor the event actually occurred on.
javax.swing.event.AncestorEvent.getComponent,Returns the component that the listener was added to.
javax.swing.event.CaretEvent.getDot,Fetches the location of the caret.
javax.swing.event.CaretEvent.getMark,Fetches the location of other end of a logical  selection.
javax.swing.event.EventListenerList.add,Adds the listener as a listener of the specified type.
javax.swing.event.EventListenerList.getListenerCount,Returns the total number of listeners for this listener list.
javax.swing.event.EventListenerList.getListenerCount,Returns the total number of listeners of the supplied type  for this listener list.
javax.swing.event.EventListenerList.getListenerList,Passes back the event listener list as an array  of ListenerType-listener pairs.
javax.swing.event.EventListenerList.getListeners,Return an array of all the listeners of the given type.
javax.swing.event.EventListenerList.remove,Removes the listener as a listener of the specified type.
javax.swing.event.EventListenerList.toString,Returns a string representation of the EventListenerList.
javax.swing.event.HyperlinkEvent.toString,Converts the type to a string.
javax.swing.event.HyperlinkEvent.getDescription,Get the description of the link as a string.
javax.swing.event.HyperlinkEvent.getEventType,Gets the type of event.
javax.swing.event.HyperlinkEvent.getInputEvent,Returns theInputEventthat triggered the hyperlink event.
javax.swing.event.HyperlinkEvent.getSourceElement,Returns theElementthat corresponds to the source of the  event.
javax.swing.event.HyperlinkEvent.getURL,Gets the URL that the link refers to.
javax.swing.event.InternalFrameAdapter.internalFrameActivated,Invoked when an internal frame is activated.
javax.swing.event.InternalFrameAdapter.internalFrameClosed,Invoked when an internal frame has been closed.
javax.swing.event.InternalFrameAdapter.internalFrameClosing,Invoked when an internal frame is in the process of being closed.
javax.swing.event.InternalFrameAdapter.internalFrameDeactivated,Invoked when an internal frame is de-activated.
javax.swing.event.InternalFrameAdapter.internalFrameDeiconified,Invoked when an internal frame is de-iconified.
javax.swing.event.InternalFrameAdapter.internalFrameIconified,Invoked when an internal frame is iconified.
javax.swing.event.InternalFrameAdapter.internalFrameOpened,Invoked when an internal frame has been opened.
javax.swing.event.ListDataEvent.getIndex0,Returns the lower index of the range.
javax.swing.event.ListDataEvent.getIndex1,Returns the upper index of the range.
javax.swing.event.ListDataEvent.toString,Returns a string representation of this ListDataEvent.
javax.swing.event.ListSelectionEvent.getFirstIndex,Returns the index of the first row whose selection may have changed.
javax.swing.event.ListSelectionEvent.getLastIndex,Returns the index of the last row whose selection may have changed.
javax.swing.event.ListSelectionEvent.getValueIsAdjusting,"Returns whether or not this is one in a series of multiple events,  where changes are still being made."
javax.swing.event.ListSelectionEvent.toString,Returns aStringthat displays and identifies this  object's properties.
javax.swing.event.MenuDragMouseEvent.getMenuSelectionManager,Returns the current menu selection manager.
javax.swing.event.MenuDragMouseEvent.getPath,Returns the path to the selected menu item.
javax.swing.event.MenuKeyEvent.getPath,Returns the path to the menu item referenced by this event.
javax.swing.event.RowSorterEvent.convertPreviousRowIndexToModel,Returns the location ofindexin terms of the  model prior to the sort.
javax.swing.event.RowSorterEvent.getPreviousRowCount,Returns the number of rows before the sort.
javax.swing.event.RowSorterEvent.getSource,Returns the source of the event as aRowSorter.
javax.swing.event.RowSorterEvent.getType,Returns the type of event.
javax.swing.event.SwingPropertyChangeSupport.isNotifyOnEDT,ReturnsnotifyOnEDTproperty.
javax.swing.event.TableColumnModelEvent.getFromIndex,Returns the fromIndex.
javax.swing.event.TableColumnModelEvent.getToIndex,Returns the toIndex.
javax.swing.event.TableModelEvent.getColumn,Returns the column for the event.
javax.swing.event.TableModelEvent.getFirstRow,Returns the first row that changed.
javax.swing.event.TableModelEvent.getLastRow,Returns the last row that changed.
javax.swing.event.TableModelEvent.getType,"Returns the type of event - one of: INSERT, UPDATE and DELETE."
javax.swing.event.TreeExpansionEvent.getPath,Returns the path to the value that has been expanded/collapsed.
javax.swing.event.TreeModelEvent.getChildIndices,Returns the values of the child indexes.
javax.swing.event.TreeModelEvent.getChildren,Returns the objects that are children of the node identified bygetPathat the locations specified bygetChildIndices.
javax.swing.event.TreeModelEvent.getPath,Convenience method to get the array of objects from the TreePath  instance that this event wraps.
javax.swing.event.TreeModelEvent.getTreePath,"For all events, except treeStructureChanged,  returns the parent of the changed nodes."
javax.swing.event.TreeModelEvent.toString,Returns a string that displays and identifies this object's  properties.
javax.swing.event.TreeSelectionEvent.cloneWithSource,"Returns a copy of the receiver, but with the source being newSource."
javax.swing.event.TreeSelectionEvent.getNewLeadSelectionPath,Returns the current lead path.
javax.swing.event.TreeSelectionEvent.getOldLeadSelectionPath,Returns the path that was previously the lead path.
javax.swing.event.TreeSelectionEvent.getPath,Returns the first path element.
javax.swing.event.TreeSelectionEvent.getPaths,Returns the paths that have been added or removed from the selection.
javax.swing.event.TreeSelectionEvent.isAddedPath,Returns whether the path identified bygetPathwas  added to the selection.
javax.swing.event.TreeSelectionEvent.isAddedPath,Returns whether the path atgetPaths()[index]was added  to the selection.
javax.swing.event.TreeSelectionEvent.isAddedPath,Returns whether the specified path was added to the selection.
javax.swing.event.UndoableEditEvent.getEdit,Returns the edit value.
javax.swing.filechooser.FileFilter.accept,Whether the given file is accepted by this filter.
javax.swing.filechooser.FileFilter.getDescription,The description of this filter.
javax.swing.filechooser.FileNameExtensionFilter.accept,"Tests the specified file, returning true if the file is  accepted, false otherwise."
javax.swing.filechooser.FileNameExtensionFilter.getExtensions,Returns the set of file name extensions files are tested against.
javax.swing.filechooser.FileNameExtensionFilter.toString,Returns a string representation of theFileNameExtensionFilter.
javax.swing.filechooser.FileView.getDescription,A human readable description of the file.
javax.swing.filechooser.FileView.getIcon,The icon that represents this file in theJFileChooser.
javax.swing.filechooser.FileView.getName,The name of the file.
javax.swing.filechooser.FileView.getTypeDescription,A human readable description of the type of the file.
javax.swing.filechooser.FileView.isTraversable,Whether the directory is traversable or not.
javax.swing.plaf.BorderUIResource.getBlackLineBorderUIResource,Returns a black line border UI resource.
javax.swing.plaf.BorderUIResource.getEtchedBorderUIResource,Returns a etched border UI resource.
javax.swing.plaf.BorderUIResource.getLoweredBevelBorderUIResource,Returns a lowered bevel border UI resource.
javax.swing.plaf.BorderUIResource.getRaisedBevelBorderUIResource,Returns a raised bevel border UI resource.
javax.swing.plaf.ComboBoxUI.isFocusTraversable,Determine whether or not the combo box itself is traversable
javax.swing.plaf.ComboBoxUI.isPopupVisible,Determine the visibility of the popup
javax.swing.plaf.ComboBoxUI.setPopupVisible,Set the visibility of the popup
javax.swing.plaf.ComponentUI.contains,"Returnstrueif the specifiedx,ylocation is  contained within the look and feel's defined shape of the specified  component."
javax.swing.plaf.ComponentUI.createUI,Returns an instance of the UI delegate for the specified component.
javax.swing.plaf.ComponentUI.getAccessibleChild,Returns theithAccessiblechild of the object.
javax.swing.plaf.ComponentUI.getMaximumSize,Returns the specified component's maximum size appropriate for  the look and feel.
javax.swing.plaf.ComponentUI.getMinimumSize,Returns the specified component's minimum size appropriate for  the look and feel.
javax.swing.plaf.ComponentUI.getPreferredSize,Returns the specified component's preferred size appropriate for  the look and feel.
javax.swing.plaf.ComponentUI.installUI,Configures the specified component appropriately for the look and feel.
javax.swing.plaf.ComponentUI.paint,Paints the specified component appropriately for the look and feel.
javax.swing.plaf.ComponentUI.uninstallUI,Reverses configuration which was done on the specified component duringinstallUI.
javax.swing.plaf.ComponentUI.update,Notifies this UI delegate that it is time to paint the specified  component.
javax.swing.plaf.FileChooserUI.ensureFileIsVisible,Ensure the file in question is visible.
javax.swing.plaf.FileChooserUI.getAcceptAllFileFilter,Returns an accept-all file filter.
javax.swing.plaf.FileChooserUI.getApproveButtonText,Returns approve button text.
javax.swing.plaf.FileChooserUI.getDefaultButton,Returns default button for currentLookAndFeel.
javax.swing.plaf.FileChooserUI.getDialogTitle,Returns the dialog title.
javax.swing.plaf.FileChooserUI.getFileView,Returns a file view.
javax.swing.plaf.FileChooserUI.rescanCurrentDirectory,Rescan the current directory.
javax.swing.plaf.IconUIResource.getIconHeight,Returns the icon's height.
javax.swing.plaf.IconUIResource.getIconWidth,Returns the icon's width.
javax.swing.plaf.IconUIResource.paintIcon,Draw the icon at the specified location.
javax.swing.plaf.LayerUI.applyPropertyChange,Notifies theLayerUIwhen any of its property are changed  and enables updating everyJLayerthisLayerUIinstance is set to.
javax.swing.plaf.LayerUI.doLayout,Causes the passed instance ofJLayerto lay out its components.
javax.swing.plaf.LayerUI.eventDispatched,ProcessesAWTEvents forJLayerandall its descendantsto thisLayerUIinstance.
javax.swing.plaf.LayerUI.firePropertyChange,Support for reporting bound property changes for Object properties.
javax.swing.plaf.LayerUI.getBaseline,"If theJLayer's view component is notnull,  this calls the view'sgetBaseline()method."
javax.swing.plaf.LayerUI.getBaselineResizeBehavior,"If theJLayer's view component is notnull,  this returns the result of the view'sgetBaselineResizeBehavior()method."
javax.swing.plaf.LayerUI.getMaximumSize,"If theJLayer's view component is notnull,  this returns the result of  the view'sgetMaximumSize()method."
javax.swing.plaf.LayerUI.getMinimumSize,"If theJLayer's view component is notnull,  this returns the result of  the view'sgetMinimalSize()method."
javax.swing.plaf.LayerUI.getPreferredSize,"If theJLayer's view component is notnull,  this returns the result of  the view'sgetPreferredSize()method."
javax.swing.plaf.LayerUI.getPropertyChangeListeners,Returns an array of all the property change listeners  registered on this component.
javax.swing.plaf.LayerUI.imageUpdate,Delegates its functionality to the default implementation of theJLayer.imageUpdatemethod  which is inherited fromJLayer's base classes.
javax.swing.plaf.LayerUI.installUI,Configures theJLayerthisLayerUIis set to.
javax.swing.plaf.LayerUI.paint,Paints the specified component.
javax.swing.plaf.LayerUI.paintImmediately,"Paints the specified region in theJLayerthisLayerUIis set to, immediately."
javax.swing.plaf.LayerUI.processComponentEvent,Processes component events occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processFocusEvent,Processes focus events occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processHierarchyBoundsEvent,Processes hierarchy bounds event occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processHierarchyEvent,Processes hierarchy event occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processInputMethodEvent,Processes input event occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processKeyEvent,Processes key events occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processMouseEvent,Processes mouse events occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processMouseMotionEvent,Processes mouse motion event occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.processMouseWheelEvent,Processes mouse wheel event occurring on theJLayeror any of its subcomponents.
javax.swing.plaf.LayerUI.removePropertyChangeListener,Removes aPropertyChangeListenerfrom the listener  list for a specific property.
javax.swing.plaf.LayerUI.uninstallUI,Reverses the configuration which was previously set  in theinstallUI(JComponent)method.
javax.swing.plaf.LayerUI.updateUI,Invoked whenJLayer.updateUI()is called  by theJLayerthisLayerUIis set to.
javax.swing.plaf.ListUI.getCellBounds,"Returns the bounding rectangle, in the given list's coordinate system,  for the range of cells specified by the two indices."
javax.swing.plaf.ListUI.indexToLocation,"Returns the origin in the givenJList, of the specified item,  in the list's coordinate system."
javax.swing.plaf.ListUI.locationToIndex,Returns the cell index in the specifiedJListclosest to the  given location in the list's coordinate system.
javax.swing.plaf.OptionPaneUI.containsCustomComponents,Returns true if the user has supplied instances of Component for  either the options or message.
javax.swing.plaf.OptionPaneUI.selectInitialValue,Requests the component representing the default value to have  focus.
javax.swing.plaf.PopupMenuUI.getPopup,Returns thePopupthat will be responsible for  displaying theJPopupMenu.
javax.swing.plaf.PopupMenuUI.isPopupTrigger,Returns whether or not the givenMouseEventis the popup menu  trigger event for the platform
javax.swing.plaf.SplitPaneUI.finishedPaintingChildren,Messaged after the JSplitPane the receiver is providing the look  and feel for paints its children.
javax.swing.plaf.SplitPaneUI.getDividerLocation,Returns the location of the divider.
javax.swing.plaf.SplitPaneUI.getMaximumDividerLocation,Returns the maximum possible location of the divider.
javax.swing.plaf.SplitPaneUI.getMinimumDividerLocation,Returns the minimum possible location of the divider.
javax.swing.plaf.SplitPaneUI.resetToPreferredSizes,Messaged to relayout the JSplitPane based on the preferred size  of the children components.
javax.swing.plaf.SplitPaneUI.setDividerLocation,Sets the location of the divider to location.
javax.swing.plaf.TabbedPaneUI.getTabBounds,Returns the rectangle for the tab bounds.
javax.swing.plaf.TabbedPaneUI.getTabRunCount,Returns the tab run count.
javax.swing.plaf.TabbedPaneUI.tabForCoordinate,Returns the tab for the coordinate.
javax.swing.plaf.TextUI.damageRange,Causes the portion of the view responsible for the  given part of the model to be repainted.
javax.swing.plaf.TextUI.getEditorKit,Fetches the binding of services that set a policy  for the type of document being edited.
javax.swing.plaf.TextUI.getNextVisualPositionFrom,Provides a way to determine the next visually represented model  location that one might place a caret.
javax.swing.plaf.TextUI.getRootView,Fetches a View with the allocation of the associated  text component (i.e. the root of the hierarchy) that  can be traversed to determine how the model is being  represented spatially.
javax.swing.plaf.TextUI.getToolTipText,"Deprecated.replaced bygetToolTipText2D(JTextComponent, Point2D)"
javax.swing.plaf.TextUI.getToolTipText2D,Returns the string to be used as the tooltip at the passed in location.
javax.swing.plaf.TextUI.modelToView,"Deprecated.replaced bymodelToView2D(JTextComponent, int, Position.Bias)"
javax.swing.plaf.TextUI.modelToView2D,Converts the given location in the model to a place in  the view coordinate system.
javax.swing.plaf.TextUI.viewToModel,"Deprecated.replaced byviewToModel2D(JTextComponent, Point2D, Position.Bias[])"
javax.swing.plaf.TextUI.viewToModel2D,Provides a mapping from the view coordinate space to the logical  coordinate space of the model.
javax.swing.plaf.TreeUI.getEditingPath,Returns the path to the element that is being edited.
javax.swing.plaf.TreeUI.getPathBounds,Returns the Rectangle enclosing the label portion that the  last item in path will be drawn into.
javax.swing.plaf.TreeUI.getPathForRow,Returns the path for passed in row.
javax.swing.plaf.TreeUI.getRowCount,Returns the number of rows that are being displayed.
javax.swing.plaf.TreeUI.getRowForPath,Returns the row that the last item identified in path is visible  at.
javax.swing.plaf.TreeUI.startEditingAtPath,Selects the last item in path and tries to edit it.
javax.swing.plaf.TreeUI.stopEditing,Stops the current editing session.
javax.swing.plaf.basic.BasicArrowButton.getDirection,Returns the direction of the arrow.
javax.swing.plaf.basic.BasicArrowButton.getMaximumSize,Returns the maximum size of theBasicArrowButton.
javax.swing.plaf.basic.BasicArrowButton.getMinimumSize,Returns the minimum size of theBasicArrowButton.
javax.swing.plaf.basic.BasicArrowButton.getPreferredSize,Returns the preferred size of theBasicArrowButton.
javax.swing.plaf.basic.BasicArrowButton.isFocusTraversable,Returns whether the arrow button should get the focus.
javax.swing.plaf.basic.BasicArrowButton.paintTriangle,Paints a triangle.
javax.swing.plaf.basic.BasicArrowButton.setDirection,Sets the direction of the arrow.
javax.swing.plaf.basic.BasicBorders.getButtonBorder,Returns a border instance for aJButton.
javax.swing.plaf.basic.BasicBorders.getInternalFrameBorder,Returns a border instance for aJInternalFrame.
javax.swing.plaf.basic.BasicBorders.getMenuBarBorder,Returns a border instance for aJMenuBar.
javax.swing.plaf.basic.BasicBorders.getProgressBarBorder,Returns a border instance for aJProgressBar.
javax.swing.plaf.basic.BasicBorders.getRadioButtonBorder,Returns a border instance for aJRadioButton.
javax.swing.plaf.basic.BasicBorders.getSplitPaneBorder,Returns a border instance for aJSplitPane.
javax.swing.plaf.basic.BasicBorders.getSplitPaneDividerBorder,Returns a border instance for aJSplitPanedivider.
javax.swing.plaf.basic.BasicBorders.getTextFieldBorder,Returns a border instance for aJTextField.
javax.swing.plaf.basic.BasicBorders.getToggleButtonBorder,Returns a border instance for aJToggleButton.
javax.swing.plaf.basic.BasicButtonListener.checkOpacity,Checks the opacity of theAbstractButton.
javax.swing.plaf.basic.BasicButtonListener.installKeyboardActions,"Register default key actions: pressing space to ""click"" a  button and registering the keyboard mnemonic (if any)."
javax.swing.plaf.basic.BasicButtonListener.uninstallKeyboardActions,Unregister default key actions.
javax.swing.plaf.basic.BasicButtonUI.clearTextShiftOffset,Clears the offset of the text.
javax.swing.plaf.basic.BasicButtonUI.createButtonListener,Returns a new instance ofBasicButtonListener.
javax.swing.plaf.basic.BasicButtonUI.createUI,Returns an instance ofBasicButtonUI.
javax.swing.plaf.basic.BasicButtonUI.getDefaultTextIconGap,Returns the default gap between a text and an icon.
javax.swing.plaf.basic.BasicButtonUI.getPropertyPrefix,Returns the property prefix.
javax.swing.plaf.basic.BasicButtonUI.getTextShiftOffset,Returns the offset of the text.
javax.swing.plaf.basic.BasicButtonUI.installDefaults,Installs default properties.
javax.swing.plaf.basic.BasicButtonUI.installKeyboardActions,Registers keyboard actions.
javax.swing.plaf.basic.BasicButtonUI.installListeners,Registers listeners.
javax.swing.plaf.basic.BasicButtonUI.paintButtonPressed,Paints a pressed button.
javax.swing.plaf.basic.BasicButtonUI.paintFocus,Paints a focused button.
javax.swing.plaf.basic.BasicButtonUI.paintIcon,Paints an icon of the current button.
javax.swing.plaf.basic.BasicButtonUI.paintText,Method which renders the text of the current button.
javax.swing.plaf.basic.BasicButtonUI.setTextShiftOffset,Sets the offset of the text.
javax.swing.plaf.basic.BasicButtonUI.uninstallDefaults,Uninstalls default properties.
javax.swing.plaf.basic.BasicButtonUI.uninstallKeyboardActions,Unregisters keyboard actions.
javax.swing.plaf.basic.BasicButtonUI.uninstallListeners,Unregisters listeners.
javax.swing.plaf.basic.BasicCheckBoxMenuItemUI.createUI,Constructs a new instance ofBasicCheckBoxMenuItemUI.
javax.swing.plaf.basic.BasicCheckBoxMenuItemUI.processMouseEvent,Invoked when mouse event occurs.
javax.swing.plaf.basic.BasicCheckBoxUI.createUI,Returns an instance ofBasicCheckBoxUI.
javax.swing.plaf.basic.BasicColorChooserUI.createDefaultChoosers,Returns an array of default color choosers.
javax.swing.plaf.basic.BasicColorChooserUI.createPropertyChangeListener,Returns an instance ofPropertyChangeListener.
javax.swing.plaf.basic.BasicColorChooserUI.createUI,Returns a new instance ofBasicColorChooserUI.
javax.swing.plaf.basic.BasicColorChooserUI.installPreviewPanel,Installs preview panel.
javax.swing.plaf.basic.BasicColorChooserUI.uninstallDefaultChoosers,Uninstalls default color choosers.
javax.swing.plaf.basic.BasicColorChooserUI.uninstallPreviewPanel,Removes installed preview panel from the UI delegate.
javax.swing.plaf.basic.BasicComboBoxEditor.addActionListener,Add an ActionListener.
javax.swing.plaf.basic.BasicComboBoxEditor.createEditorComponent,Creates the internal editor component.
javax.swing.plaf.basic.BasicComboBoxEditor.getEditorComponent,Returns the component that should be added to the tree hierarchy for  this editor
javax.swing.plaf.basic.BasicComboBoxEditor.getItem,Returns the edited item
javax.swing.plaf.basic.BasicComboBoxEditor.removeActionListener,Remove an ActionListener
javax.swing.plaf.basic.BasicComboBoxEditor.selectAll,Ask the editor to start editing and to select everything
javax.swing.plaf.basic.BasicComboBoxEditor.setItem,Sets the item that should be edited.
javax.swing.plaf.basic.BasicComboBoxUI.addEditor,This public method is implementation specific and should be private.
javax.swing.plaf.basic.BasicComboBoxUI.configureEditor,This protected method is implementation specific and should be private.
javax.swing.plaf.basic.BasicComboBoxUI.createArrowButton,Creates a button which will be used as the control to show or hide  the popup portion of the combo box.
javax.swing.plaf.basic.BasicComboBoxUI.createEditor,Creates the default editor that will be used in editable combo boxes.
javax.swing.plaf.basic.BasicComboBoxUI.createFocusListener,Creates aFocusListenerwhich will be added to the combo box.
javax.swing.plaf.basic.BasicComboBoxUI.createItemListener,Creates anItemListenerwhich will be added to the  combo box.
javax.swing.plaf.basic.BasicComboBoxUI.createKeyListener,Creates aKeyListenerwhich will be added to the  combo box.
javax.swing.plaf.basic.BasicComboBoxUI.createLayoutManager,Creates a layout manager for managing the components which make up the  combo box.
javax.swing.plaf.basic.BasicComboBoxUI.createListDataListener,Creates a list data listener which will be added to theComboBoxModel.
javax.swing.plaf.basic.BasicComboBoxUI.createPopup,Creates the popup portion of the combo box.
javax.swing.plaf.basic.BasicComboBoxUI.createPropertyChangeListener,Creates aPropertyChangeListenerwhich will be added to  the combo box.
javax.swing.plaf.basic.BasicComboBoxUI.createRenderer,Creates the default renderer that will be used in a non-editiable combo  box.
javax.swing.plaf.basic.BasicComboBoxUI.createUI,Constructs a new instance ofBasicComboBoxUI.
javax.swing.plaf.basic.BasicComboBoxUI.getDefaultSize,Return the default size of an empty display area of the combo box using  the current renderer and font.
javax.swing.plaf.basic.BasicComboBoxUI.getDisplaySize,Returns the calculated size of the display area.
javax.swing.plaf.basic.BasicComboBoxUI.getInsets,Gets the insets from the JComboBox.
javax.swing.plaf.basic.BasicComboBoxUI.getMinimumSize,The minimum size is the size of the display area plus insets plus the button.
javax.swing.plaf.basic.BasicComboBoxUI.getSizeForComponent,Returns the size a component would have if used as a cell renderer.
javax.swing.plaf.basic.BasicComboBoxUI.installComponents,Creates and initializes the components which make up the  aggregate combo box.
javax.swing.plaf.basic.BasicComboBoxUI.installDefaults,"Installs the default colors, default font, default renderer, and default  editor into the JComboBox."
javax.swing.plaf.basic.BasicComboBoxUI.installKeyboardActions,Adds keyboard actions to the JComboBox.
javax.swing.plaf.basic.BasicComboBoxUI.installListeners,Creates and installs listeners for the combo box and its model.
javax.swing.plaf.basic.BasicComboBoxUI.isFocusTraversable,Determines if the JComboBox is focus traversable.
javax.swing.plaf.basic.BasicComboBoxUI.isNavigationKey,Returns whether or not the supplied keyCode maps to a key that is used for  navigation.
javax.swing.plaf.basic.BasicComboBoxUI.isPopupVisible,Tells if the popup is visible or not.
javax.swing.plaf.basic.BasicComboBoxUI.paintCurrentValue,Paints the currently selected item.
javax.swing.plaf.basic.BasicComboBoxUI.paintCurrentValueBackground,Paints the background of the currently selected item.
javax.swing.plaf.basic.BasicComboBoxUI.rectangleForCurrentValue,Returns the area that is reserved for drawing the currently selected item.
javax.swing.plaf.basic.BasicComboBoxUI.selectNextPossibleValue,Selects the next item in the list.
javax.swing.plaf.basic.BasicComboBoxUI.selectPreviousPossibleValue,Selects the previous item in the list.
javax.swing.plaf.basic.BasicComboBoxUI.setPopupVisible,Hides the popup.
javax.swing.plaf.basic.BasicComboBoxUI.toggleOpenClose,Hides the popup if it is showing and shows the popup if it is hidden.
javax.swing.plaf.basic.BasicComboBoxUI.uninstallComponents,The aggregate components which comprise the combo box are  unregistered and uninitialized.
javax.swing.plaf.basic.BasicComboBoxUI.uninstallDefaults,"Uninstalls the default colors, default font, default renderer,  and default editor from the combo box."
javax.swing.plaf.basic.BasicComboBoxUI.uninstallKeyboardActions,Removes the focus InputMap and ActionMap.
javax.swing.plaf.basic.BasicComboBoxUI.uninstallListeners,Removes the installed listeners from the combo box and its model.
javax.swing.plaf.basic.BasicComboBoxUI.contentsChanged,Sent when the contents of the list has changed in a way  that's too complex to characterize with the previous  methods.
javax.swing.plaf.basic.BasicComboBoxUI.intervalAdded,"Sent after the indices in the index0,index1  interval have been inserted in the data model."
javax.swing.plaf.basic.BasicComboBoxUI.intervalRemoved,"Sent after the indices in the index0,index1 interval  have been removed from the data model."
javax.swing.plaf.basic.BasicComboPopup.computePopupBounds,Calculate the placement and size of the popup portion of the combo box based  on the combo box location and the enclosing screen bounds.
javax.swing.plaf.basic.BasicComboPopup.configureList,Configures the list which is used to hold the combo box items in the  popup.
javax.swing.plaf.basic.BasicComboPopup.configurePopup,Configures the popup portion of the combo box.
javax.swing.plaf.basic.BasicComboPopup.configureScroller,Configures the scrollable portion which holds the list within  the combo box popup.
javax.swing.plaf.basic.BasicComboPopup.convertMouseEvent,Converts mouse event.
javax.swing.plaf.basic.BasicComboPopup.createKeyListener,Creates the key listener that will be added to the combo box.
javax.swing.plaf.basic.BasicComboPopup.createList,Creates the JList used in the popup to display  the items in the combo box model.
javax.swing.plaf.basic.BasicComboPopup.createListMouseListener,Creates a mouse listener that watches for mouse events in  the popup's list.
javax.swing.plaf.basic.BasicComboPopup.createListMouseMotionListener,Creates a mouse motion listener that watches for mouse motion  events in the popup's list.
javax.swing.plaf.basic.BasicComboPopup.createListSelectionListener,Creates a list selection listener that watches for selection changes in  the popup's list.
javax.swing.plaf.basic.BasicComboPopup.createMouseListener,Creates a listener  that will watch for mouse-press and release events on the combo box.
javax.swing.plaf.basic.BasicComboPopup.createMouseMotionListener,Creates the mouse motion listener which will be added to the combo  box.
javax.swing.plaf.basic.BasicComboPopup.createScroller,Creates the scroll pane which houses the scrollable list.
javax.swing.plaf.basic.BasicComboPopup.delegateFocus,This is a utility method that helps event handlers figure out where to  send the focus when the popup is brought up.
javax.swing.plaf.basic.BasicComboPopup.getAccessibleContext,Gets the AccessibleContext associated with this BasicComboPopup.
javax.swing.plaf.basic.BasicComboPopup.getKeyListener,Implementation of ComboPopup.getKeyListener().
javax.swing.plaf.basic.BasicComboPopup.getList,Implementation of ComboPopup.getList().
javax.swing.plaf.basic.BasicComboPopup.getMouseListener,Implementation of ComboPopup.getMouseListener().
javax.swing.plaf.basic.BasicComboPopup.getMouseMotionListener,Implementation of ComboPopup.getMouseMotionListener().
javax.swing.plaf.basic.BasicComboPopup.getPopupHeightForRowCount,Retrieves the height of the popup based on the current  ListCellRenderer and the maximum row count.
javax.swing.plaf.basic.BasicComboPopup.hide,Implementation of ComboPopup.hide().
javax.swing.plaf.basic.BasicComboPopup.installComboBoxListeners,This method adds the necessary listeners to the JComboBox.
javax.swing.plaf.basic.BasicComboPopup.installComboBoxModelListeners,Installs the listeners on the combo box model.
javax.swing.plaf.basic.BasicComboPopup.installListListeners,Adds the listeners to the list control.
javax.swing.plaf.basic.BasicComboPopup.isFocusTraversable,Overridden to unconditionally return false.
javax.swing.plaf.basic.BasicComboPopup.show,Implementation of ComboPopup.show().
javax.swing.plaf.basic.BasicComboPopup.togglePopup,Makes the popup visible if it is hidden and makes it hidden if it is  visible.
javax.swing.plaf.basic.BasicComboPopup.uninstallComboBoxModelListeners,Removes the listeners from the combo box model
javax.swing.plaf.basic.BasicComboPopup.uninstallingUI,Called when the UI is uninstalling.
javax.swing.plaf.basic.BasicComboPopup.updateListBoxSelectionForEvent,A utility method used by the event listeners.
javax.swing.plaf.basic.BasicComboPopup.mousePressed,Responds to mouse-pressed events on the combo box.
javax.swing.plaf.basic.BasicComboPopup.mouseReleased,Responds to the user terminating  a click or drag that began on the combo box.
javax.swing.plaf.basic.BasicComboPopup.valueChanged,Called whenever the value of the selection changes.
javax.swing.plaf.basic.BasicDesktopIconUI.createMouseInputListener,Returns a new instance ofMouseInputListener.
javax.swing.plaf.basic.BasicDesktopIconUI.createUI,Constructs a new instance ofBasicDesktopIconUI.
javax.swing.plaf.basic.BasicDesktopIconUI.deiconize,De-iconifies the internal frame.
javax.swing.plaf.basic.BasicDesktopIconUI.getInsets,Returns the insets.
javax.swing.plaf.basic.BasicDesktopIconUI.getMaximumSize,Desktop icons can not be resized.
javax.swing.plaf.basic.BasicDesktopIconUI.installComponents,Registers components.
javax.swing.plaf.basic.BasicDesktopIconUI.uninstallComponents,Unregisters components.
javax.swing.plaf.basic.BasicDesktopIconUI.moveAndRepaint,Moves and repaints a componentf.
javax.swing.plaf.basic.BasicDesktopPaneUI.createPropertyChangeListener,Returns thePropertyChangeListenerto install on  theJDesktopPane.
javax.swing.plaf.basic.BasicDesktopPaneUI.createUI,Constructs a new instance ofBasicDesktopPaneUI.
javax.swing.plaf.basic.BasicDesktopPaneUI.installDesktopManager,Installs desktop manager.
javax.swing.plaf.basic.BasicDesktopPaneUI.installKeyboardActions,Installs keyboard actions.
javax.swing.plaf.basic.BasicDesktopPaneUI.installListeners,Installs thePropertyChangeListenerreturned fromcreatePropertyChangeListeneron theJDesktopPane.
javax.swing.plaf.basic.BasicDesktopPaneUI.uninstallDesktopManager,Uninstalls desktop manager.
javax.swing.plaf.basic.BasicDesktopPaneUI.uninstallListeners,Uninstalls thePropertyChangeListenerreturned fromcreatePropertyChangeListenerfrom theJDesktopPane.
javax.swing.plaf.basic.BasicDirectoryModel.contains,"Returnstrueif an elementois in file cache,  otherwise, returnsfalse."
javax.swing.plaf.basic.BasicDirectoryModel.fireContentsChanged,Invoked when a content is changed.
javax.swing.plaf.basic.BasicDirectoryModel.getDirectories,Returns a list of directories.
javax.swing.plaf.basic.BasicDirectoryModel.getFiles,Returns a list of files.
javax.swing.plaf.basic.BasicDirectoryModel.indexOf,Returns an index of elementoin file cache.
javax.swing.plaf.basic.BasicDirectoryModel.intervalAdded,"Deprecated.Obsolete method, not used anymore."
javax.swing.plaf.basic.BasicDirectoryModel.invalidateFileCache,This method is used to interrupt file loading thread.
javax.swing.plaf.basic.BasicDirectoryModel.renameFile,Renames a file in the underlying file system.
javax.swing.plaf.basic.BasicDirectoryModel.sort,Sorts a list of files.
javax.swing.plaf.basic.BasicDirectoryModel.validateFileCache,Validates content of file cache.
javax.swing.plaf.basic.BasicEditorPaneUI.createUI,Creates a UI for the JTextPane.
javax.swing.plaf.basic.BasicEditorPaneUI.getEditorKit,Fetches the EditorKit for the UI.
javax.swing.plaf.basic.BasicEditorPaneUI.getPropertyPrefix,Fetches the name used as a key to lookup properties through the  UIManager.
javax.swing.plaf.basic.BasicEditorPaneUI.installUI,Installs the UI for a component.
javax.swing.plaf.basic.BasicEditorPaneUI.propertyChange,This method gets called when a bound property is changed  on the associated JTextComponent.
javax.swing.plaf.basic.BasicEditorPaneUI.uninstallUI,Deinstalls the UI for a component.
javax.swing.plaf.basic.BasicFileChooserUI.cacheIcon,Caches an icon for a file.
javax.swing.plaf.basic.BasicFileChooserUI.clearIconCache,Clears the icon cache.
javax.swing.plaf.basic.BasicFileChooserUI.getCachedIcon,Returns the cached icon for the file.
javax.swing.plaf.basic.BasicFileChooserUI.isHidden,Returns whether or not a file is hidden.
javax.swing.plaf.basic.BasicFileChooserUI.mouseEntered,"The JList used for representing the files is created by subclasses, but the  selection is monitored in this class."
javax.swing.plaf.basic.BasicFileChooserUI.createDoubleClickListener,Creates a double click listener.
javax.swing.plaf.basic.BasicFileChooserUI.createListSelectionListener,Creates a list selection listener.
javax.swing.plaf.basic.BasicFileChooserUI.createModel,Creates the model.
javax.swing.plaf.basic.BasicFileChooserUI.createPropertyChangeListener,Creates the property change listener.
javax.swing.plaf.basic.BasicFileChooserUI.createUI,Creates aBasicFileChooserUIimplementation  for the specified component.
javax.swing.plaf.basic.BasicFileChooserUI.getAcceptAllFileFilter,Returns the default accept all file filter
javax.swing.plaf.basic.BasicFileChooserUI.getAccessoryPanel,Returns the accessory panel.
javax.swing.plaf.basic.BasicFileChooserUI.getApproveButton,Returns the approve button.
javax.swing.plaf.basic.BasicFileChooserUI.getApproveButtonMnemonic,Returns the approve button mnemonic.
javax.swing.plaf.basic.BasicFileChooserUI.getApproveButtonToolTipText,Returns the approve button tool tip.
javax.swing.plaf.basic.BasicFileChooserUI.getApproveSelectionAction,Returns an approve selection action.
javax.swing.plaf.basic.BasicFileChooserUI.getCancelSelectionAction,Returns a cancel selection action.
javax.swing.plaf.basic.BasicFileChooserUI.getChangeToParentDirectoryAction,Returns a change to parent directory action.
javax.swing.plaf.basic.BasicFileChooserUI.getDialogTitle,Returns the title of this dialog
javax.swing.plaf.basic.BasicFileChooserUI.getDirectory,Property to remember the directory that is currently selected in the UI.
javax.swing.plaf.basic.BasicFileChooserUI.getDirectoryName,Returns the directory name.
javax.swing.plaf.basic.BasicFileChooserUI.getFileChooser,Returns the file chooser.
javax.swing.plaf.basic.BasicFileChooserUI.getFileName,Returns the file name.
javax.swing.plaf.basic.BasicFileChooserUI.getGoHomeAction,Returns a go home action.
javax.swing.plaf.basic.BasicFileChooserUI.getModel,Returns the model.
javax.swing.plaf.basic.BasicFileChooserUI.getNewFolderAction,Returns a new folder action.
javax.swing.plaf.basic.BasicFileChooserUI.getUpdateAction,Returns an update action.
javax.swing.plaf.basic.BasicFileChooserUI.installComponents,Installs the components.
javax.swing.plaf.basic.BasicFileChooserUI.installDefaults,Installs the defaults.
javax.swing.plaf.basic.BasicFileChooserUI.installIcons,Installs the icons.
javax.swing.plaf.basic.BasicFileChooserUI.installListeners,Installs the listeners.
javax.swing.plaf.basic.BasicFileChooserUI.installStrings,Installs the strings.
javax.swing.plaf.basic.BasicFileChooserUI.installUI,Installs the UI.
javax.swing.plaf.basic.BasicFileChooserUI.isDirectorySelected,Property to remember whether a directory is currently selected in the UI.
javax.swing.plaf.basic.BasicFileChooserUI.setDirectoryName,Sets the directory name.
javax.swing.plaf.basic.BasicFileChooserUI.setFileName,Sets the file name.
javax.swing.plaf.basic.BasicFileChooserUI.uninstallComponents,Uninstalls the components.
javax.swing.plaf.basic.BasicFileChooserUI.uninstallDefaults,Uninstalls the defaults.
javax.swing.plaf.basic.BasicFileChooserUI.uninstallIcons,Uninstalls the icons.
javax.swing.plaf.basic.BasicFileChooserUI.uninstallListeners,Uninstalls the listeners.
javax.swing.plaf.basic.BasicFileChooserUI.uninstallStrings,Uninstalls the strings.
javax.swing.plaf.basic.BasicFileChooserUI.uninstallUI,Uninstalls the UI.
javax.swing.plaf.basic.BasicFormattedTextFieldUI.createUI,Creates a UI for a JFormattedTextField.
javax.swing.plaf.basic.BasicGraphicsUtils.drawBezel,Draws a bezel.
javax.swing.plaf.basic.BasicGraphicsUtils.drawDashedRect,Draws dashed rectangle.
javax.swing.plaf.basic.BasicGraphicsUtils.drawEtchedRect,Draws an etched rectangle.
javax.swing.plaf.basic.BasicGraphicsUtils.drawGroove,Draws a groove.
javax.swing.plaf.basic.BasicGraphicsUtils.drawLoweredBezel,Draws a lowered bezel.
javax.swing.plaf.basic.BasicGraphicsUtils.drawString,"Draw a string with the graphicsgat location (x,y)  just likeg.drawStringwould."
javax.swing.plaf.basic.BasicGraphicsUtils.drawString,Draws the given string at the specified location using text properties  and anti-aliasing hints from the provided component.
javax.swing.plaf.basic.BasicGraphicsUtils.drawStringUnderlineCharAt,"Draw a string with the graphicsgat location  (x,y)  just likeg.drawStringwould."
javax.swing.plaf.basic.BasicGraphicsUtils.drawStringUnderlineCharAt,Draws the given string at the specified location underlining  the specified character.
javax.swing.plaf.basic.BasicGraphicsUtils.getClippedString,Clips the passed in string to the space provided.
javax.swing.plaf.basic.BasicGraphicsUtils.getEtchedInsets,Returns the amount of space taken up by a border drawn bydrawEtchedRect()
javax.swing.plaf.basic.BasicGraphicsUtils.getGrooveInsets,Returns the amount of space taken up by a border drawn bydrawGroove()
javax.swing.plaf.basic.BasicGraphicsUtils.getPreferredButtonSize,Returns the preferred size of the button.
javax.swing.plaf.basic.BasicGraphicsUtils.getStringWidth,Returns the width of the passed in string using text properties  and anti-aliasing hints from the provided component.
javax.swing.plaf.basic.BasicHTML.createHTMLView,Create an html renderer for the given component and  string of html.
javax.swing.plaf.basic.BasicHTML.getHTMLBaseline,Returns the baseline for the html renderer.
javax.swing.plaf.basic.BasicHTML.isHTMLString,Check the given string to see if it should trigger the  html rendering logic in a non-text component that supports  html rendering.
javax.swing.plaf.basic.BasicHTML.updateRenderer,Stash the HTML render for the given text into the client  properties of the given JComponent.
javax.swing.plaf.basic.BasicIconFactory.createEmptyFrameIcon,Returns an empty frame icon.
javax.swing.plaf.basic.BasicIconFactory.getCheckBoxIcon,Returns a check box icon.
javax.swing.plaf.basic.BasicIconFactory.getCheckBoxMenuItemIcon,Returns a check box menu item icon.
javax.swing.plaf.basic.BasicIconFactory.getMenuArrowIcon,Returns a menu arrow icon.
javax.swing.plaf.basic.BasicIconFactory.getMenuItemArrowIcon,Returns a menu item arrow icon.
javax.swing.plaf.basic.BasicIconFactory.getMenuItemCheckIcon,Returns a menu item check icon.
javax.swing.plaf.basic.BasicIconFactory.getRadioButtonIcon,Returns a radio button icon.
javax.swing.plaf.basic.BasicIconFactory.getRadioButtonMenuItemIcon,Returns a radio button menu item icon.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.addSubComponents,Adds subcomponents.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.addSystemMenuItems,Adds system menu items tosystemMenu.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.assembleSystemMenu,Assembles system menu.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.createActions,Creates actions.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.createButtons,Creates buttons.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.createLayout,Returns a layout manager.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.createSystemMenu,Returns a new instance ofJMenu.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.createSystemMenuBar,Returns a new instance ofJMenuBar.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.enableActions,Enables actions.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.getTitle,Returns the title.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.installTitlePane,Installs the title pane.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.paintTitleBackground,Invoked from paintComponent.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.postClosingEvent,"Post a WINDOW_CLOSING-like event to the frame, so that it can  be treated like a regularFrame."
javax.swing.plaf.basic.BasicInternalFrameTitlePane.setButtonIcons,Sets the button icons.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.showSystemMenu,Shows system menu.
javax.swing.plaf.basic.BasicInternalFrameTitlePane.isFocusTraversable,Returns whether thisComponentcan become the focus  owner.
javax.swing.plaf.basic.BasicInternalFrameUI.internalFrameOpened,Invoked when a internal frame has been opened.
javax.swing.plaf.basic.BasicInternalFrameUI.componentResized,Invoked when a JInternalFrame's parent's size changes.
javax.swing.plaf.basic.BasicInternalFrameUI.activateFrame,This method is called when the frame becomes selected.
javax.swing.plaf.basic.BasicInternalFrameUI.closeFrame,This method is called when the user wants to close the frame.
javax.swing.plaf.basic.BasicInternalFrameUI.createBorderListener,Creates the border listener.
javax.swing.plaf.basic.BasicInternalFrameUI.createComponentListener,Creates a component listener.
javax.swing.plaf.basic.BasicInternalFrameUI.createDesktopManager,Creates the desktop manager.
javax.swing.plaf.basic.BasicInternalFrameUI.createEastPane,Creates the east pane.
javax.swing.plaf.basic.BasicInternalFrameUI.createGlassPaneDispatcher,Creates aGlassPaneDispatcher.
javax.swing.plaf.basic.BasicInternalFrameUI.createInternalFrameListener,Creates the internal frame listener.
javax.swing.plaf.basic.BasicInternalFrameUI.createLayoutManager,Creates the layout manager.
javax.swing.plaf.basic.BasicInternalFrameUI.createNorthPane,Creates the north pane.
javax.swing.plaf.basic.BasicInternalFrameUI.createUI,Returns a component UI.
javax.swing.plaf.basic.BasicInternalFrameUI.createWestPane,Creates the west pane.
javax.swing.plaf.basic.BasicInternalFrameUI.deactivateFrame,This method is called when the frame is no longer selected.
javax.swing.plaf.basic.BasicInternalFrameUI.deiconifyFrame,This method is called when the user wants to deiconify the frame.
javax.swing.plaf.basic.BasicInternalFrameUI.deinstallMouseHandlers,Deinstalls the mouse handlers.
javax.swing.plaf.basic.BasicInternalFrameUI.getDesktopManager,Returns the proper DesktopManager.
javax.swing.plaf.basic.BasicInternalFrameUI.getEastPane,Returns the east pane.
javax.swing.plaf.basic.BasicInternalFrameUI.getMaximumSize,Returns the maximum size.
javax.swing.plaf.basic.BasicInternalFrameUI.getMinimumSize,Returns the minimum size.
javax.swing.plaf.basic.BasicInternalFrameUI.getNorthPane,Returns the north pane.
javax.swing.plaf.basic.BasicInternalFrameUI.getPreferredSize,Returns the preferred size.
javax.swing.plaf.basic.BasicInternalFrameUI.getSouthPane,Returns the south pane.
javax.swing.plaf.basic.BasicInternalFrameUI.getWestPane,Returns the west pane.
javax.swing.plaf.basic.BasicInternalFrameUI.iconifyFrame,This method is called when the user wants to iconify the frame.
javax.swing.plaf.basic.BasicInternalFrameUI.installKeyboardActions,Installs the keyboard actions.
javax.swing.plaf.basic.BasicInternalFrameUI.installMouseHandlers,Installs the mouse handlers.
javax.swing.plaf.basic.BasicInternalFrameUI.isKeyBindingActive,Returns whether or no the key binding is active.
javax.swing.plaf.basic.BasicInternalFrameUI.isKeyBindingRegistered,Returns whether or no the key binding is registered.
javax.swing.plaf.basic.BasicInternalFrameUI.maximizeFrame,This method is called when the user wants to maximize the frame.
javax.swing.plaf.basic.BasicInternalFrameUI.minimizeFrame,This method is called when the user wants to minimize the frame.
javax.swing.plaf.basic.BasicInternalFrameUI.replacePane,Installs necessary mouse handlers onnewPaneand adds it to the frame.
javax.swing.plaf.basic.BasicInternalFrameUI.setEastPane,Sets the east pane.
javax.swing.plaf.basic.BasicInternalFrameUI.setKeyBindingActive,Sets the key binding activity.
javax.swing.plaf.basic.BasicInternalFrameUI.setKeyBindingRegistered,Sets the key binding registration.
javax.swing.plaf.basic.BasicInternalFrameUI.setNorthPane,Sets the north pane.
javax.swing.plaf.basic.BasicInternalFrameUI.setSouthPane,Sets the south pane.
javax.swing.plaf.basic.BasicInternalFrameUI.setupMenuCloseKey,Setup the menu close key.
javax.swing.plaf.basic.BasicInternalFrameUI.setupMenuOpenKey,Setup the menu open key.
javax.swing.plaf.basic.BasicInternalFrameUI.setWestPane,Sets the west pane.
javax.swing.plaf.basic.BasicInternalFrameUI.uninstallKeyboardActions,Uninstalls the keyboard actions.
javax.swing.plaf.basic.BasicInternalFrameUI.propertyChange,Detects changes in state from the JInternalFrame and handles  actions.
javax.swing.plaf.basic.BasicLabelUI.createUI,Returns an instance ofBasicLabelUI.
javax.swing.plaf.basic.BasicLabelUI.layoutCL,Forwards the call to SwingUtilities.layoutCompoundLabel().
javax.swing.plaf.basic.BasicLabelUI.paint,"Paints the label text with the foreground color, if the label is opaque  then paints the entire background with the background color."
javax.swing.plaf.basic.BasicLabelUI.paintDisabledText,"Paint clippedText at textX, textY with background.lighter() and then  shifted down and to the right by one pixel with background.darker()."
javax.swing.plaf.basic.BasicLabelUI.paintEnabledText,"Paint clippedText at textX, textY with the labels foreground color."
javax.swing.plaf.basic.BasicListUI.repaintCellFocus,Repaints focused cells.
javax.swing.plaf.basic.BasicListUI.convertRowToY,Return theJListrelative Y coordinate of the origin of the specified  row or -1 if row isn't valid.
javax.swing.plaf.basic.BasicListUI.convertYToRow,"Convert theJListrelative coordinate to the row that contains it,  based on the current layout."
javax.swing.plaf.basic.BasicListUI.createFocusListener,Returns an instance ofFocusListener.
javax.swing.plaf.basic.BasicListUI.createListDataListener,Creates an instance ofListDataListenerthat's added to  theJListsby model as needed.
javax.swing.plaf.basic.BasicListUI.createListSelectionListener,Creates an instance ofListSelectionHandlerthat's added to  theJListsby selectionModel as needed.
javax.swing.plaf.basic.BasicListUI.createMouseInputListener,Creates a delegate that implementsMouseInputListener.
javax.swing.plaf.basic.BasicListUI.createPropertyChangeListener,Creates an instance ofPropertyChangeHandlerthat's added to  theJListbyinstallUI().
javax.swing.plaf.basic.BasicListUI.createUI,Returns a new instance ofBasicListUI.
javax.swing.plaf.basic.BasicListUI.getPreferredSize,The preferredSize of the list depends upon the layout orientation.
javax.swing.plaf.basic.BasicListUI.getRowHeight,Returns the height of the specified row based on the current layout.
javax.swing.plaf.basic.BasicListUI.installDefaults,"Initializes list properties such as font, foreground, and background,  and adds the CellRendererPane."
javax.swing.plaf.basic.BasicListUI.installKeyboardActions,Registers the keyboard bindings on theJListthat theBasicListUIis associated with.
javax.swing.plaf.basic.BasicListUI.installListeners,"Creates and installs the listeners for the JList, its model, and its  selectionModel."
javax.swing.plaf.basic.BasicListUI.installUI,"Initializesthis.listby callinginstallDefaults(),installListeners(), andinstallKeyboardActions()in order."
javax.swing.plaf.basic.BasicListUI.maybeUpdateLayoutState,"If updateLayoutStateNeeded is non zero, call updateLayoutState() and reset  updateLayoutStateNeeded."
javax.swing.plaf.basic.BasicListUI.paint,Paint the rows that intersect the Graphics objects clipRect.
javax.swing.plaf.basic.BasicListUI.paintCell,"Paint one List cell: compute the relevant state, get the ""rubber stamp""  cell renderer component, and then use theCellRendererPaneto paint it."
javax.swing.plaf.basic.BasicListUI.selectNextIndex,Selected the previous row and force it to be visible.
javax.swing.plaf.basic.BasicListUI.uninstallDefaults,Sets the list properties that have not been explicitly overridden tonull.
javax.swing.plaf.basic.BasicListUI.uninstallKeyboardActions,Unregisters keyboard actions installed frominstallKeyboardActions.
javax.swing.plaf.basic.BasicListUI.uninstallListeners,"Removes the listeners from the JList, its model, and its  selectionModel."
javax.swing.plaf.basic.BasicListUI.uninstallUI,"Uninitializesthis.listby callinguninstallListeners(),uninstallKeyboardActions(), anduninstallDefaults()in order."
javax.swing.plaf.basic.BasicListUI.updateLayoutState,"Recompute the value of cellHeight or cellHeights based  and cellWidth, based on the current font and the current  values of fixedCellWidth, fixedCellHeight, and prototypeCellValue."
javax.swing.plaf.basic.BasicLookAndFeel.createAudioAction,Creates and returns anActionused to play a sound.
javax.swing.plaf.basic.BasicLookAndFeel.getAudioActionMap,Returns anActionMapcontaining the audio actions  for this look and feel.
javax.swing.plaf.basic.BasicLookAndFeel.initClassDefaults,Populatestablewith mappings fromuiClassIDto the  fully qualified name of the ui class.
javax.swing.plaf.basic.BasicLookAndFeel.initComponentDefaults,Populatestablewith the defaults for the basic look and  feel.
javax.swing.plaf.basic.BasicLookAndFeel.initSystemColorDefaults,Populatestablewith system colors.
javax.swing.plaf.basic.BasicLookAndFeel.loadSystemColors,Populatestablewith thename-colorpairs insystemColors.
javax.swing.plaf.basic.BasicLookAndFeel.playSound,"If necessary, invokesactionPerformedonaudioActionto play a sound."
javax.swing.plaf.basic.BasicMenuBarUI.createChangeListener,Returns an instance ofChangeListener.
javax.swing.plaf.basic.BasicMenuBarUI.createContainerListener,Returns an instance ofContainerListener.
javax.swing.plaf.basic.BasicMenuBarUI.createUI,Returns a new instance ofBasicMenuBarUI.
javax.swing.plaf.basic.BasicMenuUI.createMenuListener,Returns an instance ofMenuListener.
javax.swing.plaf.basic.BasicMenuUI.createUI,Constructs a new instance ofBasicMenuUI.
javax.swing.plaf.basic.BasicMenuUI.setupPostTimer,Sets timer to themenu.
javax.swing.plaf.basic.BasicMenuUI.mouseDragged,Invoked when a mouse button is pressed on the menu and then dragged.
javax.swing.plaf.basic.BasicMenuUI.mouseEntered,Invoked when the cursor enters the menu.
javax.swing.plaf.basic.BasicMenuUI.mousePressed,Invoked when the mouse has been clicked on the menu.
javax.swing.plaf.basic.BasicMenuUI.mouseReleased,Invoked when the mouse has been released on the menu.
javax.swing.plaf.basic.BasicOptionPaneUI.getCentersChildren,Returns whether or not center children should be used.
javax.swing.plaf.basic.BasicOptionPaneUI.getPadding,Returns the padding.
javax.swing.plaf.basic.BasicOptionPaneUI.getSyncAllWidths,Returns if the width of children should be synchronized.
javax.swing.plaf.basic.BasicOptionPaneUI.setCentersChildren,Sets whether or not center children should be used.
javax.swing.plaf.basic.BasicOptionPaneUI.setPadding,Sets the padding value.
javax.swing.plaf.basic.BasicOptionPaneUI.setSyncAllWidths,Sets if the width of children should be synchronized.
javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents,Creates the appropriate object to represent each of the objects inbuttonsand adds it tocontainer.
javax.swing.plaf.basic.BasicOptionPaneUI.addIcon,Creates and adds a JLabel representing the icon returned fromgetIcontotop.
javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents,Creates the appropriate object to representmsgand places it  intocontainer.
javax.swing.plaf.basic.BasicOptionPaneUI.burstStringInto,Recursively creates newJLabelinstances to representd.
javax.swing.plaf.basic.BasicOptionPaneUI.containsCustomComponents,Returns true if in the last call to validateComponent the message  or buttons contained a subclass of Component.
javax.swing.plaf.basic.BasicOptionPaneUI.createButtonActionListener,Constructs a new instance of aButtonActionListener.
javax.swing.plaf.basic.BasicOptionPaneUI.createButtonArea,Creates and returns aContainercontaining the buttons.
javax.swing.plaf.basic.BasicOptionPaneUI.createMessageArea,Messaged frominstallComponentsto create aContainercontaining the body of the message.
javax.swing.plaf.basic.BasicOptionPaneUI.createSeparator,Returns a separator.
javax.swing.plaf.basic.BasicOptionPaneUI.createUI,Creates a newBasicOptionPaneUIinstance.
javax.swing.plaf.basic.BasicOptionPaneUI.getButtons,Returns the buttons to display from theJOptionPanethe receiver is  providing the look and feel for.
javax.swing.plaf.basic.BasicOptionPaneUI.getIcon,"Returns the icon from theJOptionPanethe receiver is providing  the look and feel for, or the default icon as returned fromgetDefaultIcon."
javax.swing.plaf.basic.BasicOptionPaneUI.getIconForType,Returns the icon to use for the passed in type.
javax.swing.plaf.basic.BasicOptionPaneUI.getInitialValueIndex,Returns the initial index into the buttons to select.
javax.swing.plaf.basic.BasicOptionPaneUI.getMaxCharactersPerLineCount,Returns the maximum number of characters to place on a line.
javax.swing.plaf.basic.BasicOptionPaneUI.getMessage,Returns the message to display from theJOptionPanethe receiver is  providing the look and feel for.
javax.swing.plaf.basic.BasicOptionPaneUI.getMinimumOptionPaneSize,Returns the minimum size the option pane should be.
javax.swing.plaf.basic.BasicOptionPaneUI.getPreferredSize,"Ifcis theJOptionPanethe receiver  is contained in, the preferred  size that is returned is the maximum of the preferred size of  theLayoutManagerfor theJOptionPane, andgetMinimumOptionPaneSize."
javax.swing.plaf.basic.BasicOptionPaneUI.getSizeButtonsToSameWidth,"Returnstrue, basic L&F wants all the buttons to have the same  width."
javax.swing.plaf.basic.BasicOptionPaneUI.installUI,Installs the receiver as the L&F for the passed inJOptionPane.
javax.swing.plaf.basic.BasicOptionPaneUI.resetInputValue,Sets the input value in the option pane the receiver is providing  the look and feel for based on the value in the inputComponent.
javax.swing.plaf.basic.BasicOptionPaneUI.selectInitialValue,"If inputComponent is non-null, the focus is requested on that,  otherwise request focus on the default value"
javax.swing.plaf.basic.BasicOptionPaneUI.uninstallUI,Removes the receiver from the L&F controller of the passed in split  pane.
javax.swing.plaf.basic.BasicOptionPaneUI.propertyChange,"If the source of the PropertyChangeEventeequals the  optionPane and is one of the ICON_PROPERTY, MESSAGE_PROPERTY,  OPTIONS_PROPERTY or INITIAL_VALUE_PROPERTY,  validateComponent is invoked."
javax.swing.plaf.basic.BasicPanelUI.createUI,Returns an instance ofBasicPanelUI.
javax.swing.plaf.basic.BasicPanelUI.installDefaults,Method for installing panel properties.
javax.swing.plaf.basic.BasicPanelUI.uninstallDefaults,Method for uninstalling panel properties.
javax.swing.plaf.basic.BasicPasswordFieldUI.create,Creates a view (PasswordView) for an element.
javax.swing.plaf.basic.BasicPasswordFieldUI.createUI,Creates a UI for a JPasswordField.
javax.swing.plaf.basic.BasicPasswordFieldUI.getPropertyPrefix,Fetches the name used as a key to look up properties through the  UIManager.
javax.swing.plaf.basic.BasicPasswordFieldUI.installDefaults,Installs the necessary properties on the JPasswordField.
javax.swing.plaf.basic.BasicPopupMenuSeparatorUI.createUI,Returns a new instance ofBasicPopupMenuSeparatorUI.
javax.swing.plaf.basic.BasicPopupMenuUI.createUI,Constructs a new instance ofBasicPopupMenuUI.
javax.swing.plaf.basic.BasicProgressBarUI.createUI,Returns a new instance ofBasicProgressBarUI.
javax.swing.plaf.basic.BasicProgressBarUI.getAmountFull,This determines the amount of the progress bar that should be filled  based on the percent done gathered from the model.
javax.swing.plaf.basic.BasicProgressBarUI.getAnimationIndex,Gets the index of the current animation frame.
javax.swing.plaf.basic.BasicProgressBarUI.getBox,Stores the position and size of  the bouncing box that would be painted for the current animation index  inrand returnsr.
javax.swing.plaf.basic.BasicProgressBarUI.getBoxLength,"Returns the length  of the ""bouncing box"" to be painted."
javax.swing.plaf.basic.BasicProgressBarUI.getCellLength,Returns the width (if HORIZONTAL) or height (if VERTICAL)  of each of the individual cells/units to be rendered in the  progress bar.
javax.swing.plaf.basic.BasicProgressBarUI.getCellSpacing,Returns the spacing between each of the cells/units in the  progress bar.
javax.swing.plaf.basic.BasicProgressBarUI.getFrameCount,Returns the number of frames for the complete animation loop  used by an indeterminate JProgessBar.
javax.swing.plaf.basic.BasicProgressBarUI.getMinimumSize,The Minimum size for this component is 10.
javax.swing.plaf.basic.BasicProgressBarUI.getPreferredInnerHorizontal,Returns preferred size of the horizontalJProgressBar.
javax.swing.plaf.basic.BasicProgressBarUI.getPreferredInnerVertical,Returns preferred size of the verticalJProgressBar.
javax.swing.plaf.basic.BasicProgressBarUI.getSelectionBackground,"The ""selectionBackground"" is the color of the text when it is painted  over an unfilled area of the progress bar."
javax.swing.plaf.basic.BasicProgressBarUI.getSelectionForeground,"The ""selectionForeground"" is the color of the text when it is painted  over a filled area of the progress bar."
javax.swing.plaf.basic.BasicProgressBarUI.getStringPlacement,Designate the place where the progress string will be painted.
javax.swing.plaf.basic.BasicProgressBarUI.incrementAnimationIndex,"Sets the index of the current animation frame,  to the next valid value,  which results in the progress bar being repainted."
javax.swing.plaf.basic.BasicProgressBarUI.paint,Delegates painting to one of two methods:  paintDeterminate or paintIndeterminate.
javax.swing.plaf.basic.BasicProgressBarUI.paintDeterminate,"All purpose paint method that should do the right thing for almost  all linear, determinate progress bars."
javax.swing.plaf.basic.BasicProgressBarUI.paintIndeterminate,All purpose paint method that should do the right thing for all  linear bouncing-box progress bars.
javax.swing.plaf.basic.BasicProgressBarUI.paintString,Paints the progress string.
javax.swing.plaf.basic.BasicProgressBarUI.setAnimationIndex,Sets the index of the current animation frame  to the specified value and requests that the  progress bar be repainted.
javax.swing.plaf.basic.BasicProgressBarUI.setCellLength,Sets the cell length.
javax.swing.plaf.basic.BasicProgressBarUI.setCellSpacing,Sets the cell spacing.
javax.swing.plaf.basic.BasicProgressBarUI.startAnimationTimer,"Starts the animation thread, creating and initializing  it if necessary."
javax.swing.plaf.basic.BasicProgressBarUI.stopAnimationTimer,Stops the animation thread.
javax.swing.plaf.basic.BasicProgressBarUI.uninstallDefaults,Unintalls default properties.
javax.swing.plaf.basic.BasicProgressBarUI.uninstallListeners,Removes all listeners installed by this object.
javax.swing.plaf.basic.BasicRadioButtonMenuItemUI.createUI,Returns a new instance ofBasicRadioButtonMenuItemUI.
javax.swing.plaf.basic.BasicRadioButtonUI.createUI,Returns an instance ofBasicRadioButtonUI.
javax.swing.plaf.basic.BasicRadioButtonUI.getPreferredSize,The preferred size of the radio button
javax.swing.plaf.basic.BasicRadioButtonUI.paint,paint the radio button
javax.swing.plaf.basic.BasicRadioButtonUI.paintFocus,Paints focused radio button.
javax.swing.plaf.basic.BasicRootPaneUI.createUI,Returns a new instance ofBasicRootPaneUI.
javax.swing.plaf.basic.BasicRootPaneUI.installComponents,Installs components.
javax.swing.plaf.basic.BasicRootPaneUI.propertyChange,Invoked when a property changes on the root pane.
javax.swing.plaf.basic.BasicScrollBarUI.configureScrollBarColors,Configures the scroll bar colors.
javax.swing.plaf.basic.BasicScrollBarUI.createArrowButtonListener,Creates an arrow button listener.
javax.swing.plaf.basic.BasicScrollBarUI.createDecreaseButton,Creates a decrease button.
javax.swing.plaf.basic.BasicScrollBarUI.createIncreaseButton,Creates an increase button.
javax.swing.plaf.basic.BasicScrollBarUI.createModelListener,Creates a model listener.
javax.swing.plaf.basic.BasicScrollBarUI.createPropertyChangeListener,Creates a property change listener.
javax.swing.plaf.basic.BasicScrollBarUI.createScrollListener,Creates a scroll listener.
javax.swing.plaf.basic.BasicScrollBarUI.createTrackListener,Creates a track listener.
javax.swing.plaf.basic.BasicScrollBarUI.createUI,Creates the UI.
javax.swing.plaf.basic.BasicScrollBarUI.getMaximumThumbSize,Returns the largest acceptable size for the thumb.
javax.swing.plaf.basic.BasicScrollBarUI.getMinimumThumbSize,Returns the smallest acceptable size for the thumb.
javax.swing.plaf.basic.BasicScrollBarUI.getPreferredSize,"A vertical scrollbar's preferred width is the maximum of  preferred widths of the (nonnull)  increment/decrement buttons,  and the minimum width of the thumb."
javax.swing.plaf.basic.BasicScrollBarUI.getSupportsAbsolutePositioning,Indicates whether the user can absolutely position the thumb with  a mouse gesture (usually the middle mouse button).
javax.swing.plaf.basic.BasicScrollBarUI.getThumbBounds,Return the current size/location of the thumb.
javax.swing.plaf.basic.BasicScrollBarUI.getTrackBounds,"Returns the current bounds of the track, i.e. the space in between  the increment and decrement buttons, less the insets."
javax.swing.plaf.basic.BasicScrollBarUI.isThumbRollover,Returns true if the mouse is currently over the thumb.
javax.swing.plaf.basic.BasicScrollBarUI.layoutHScrollbar,Laysouts a  vertical scroll bar.
javax.swing.plaf.basic.BasicScrollBarUI.paintDecreaseHighlight,Paints the decrease highlight.
javax.swing.plaf.basic.BasicScrollBarUI.paintIncreaseHighlight,Paints the increase highlight.
javax.swing.plaf.basic.BasicScrollBarUI.paintThumb,Paints the thumb.
javax.swing.plaf.basic.BasicScrollBarUI.paintTrack,Paints the track.
javax.swing.plaf.basic.BasicScrollBarUI.scrollByBlock,Scrolls by block.
javax.swing.plaf.basic.BasicScrollBarUI.scrollByUnit,Scrolls by unit.
javax.swing.plaf.basic.BasicScrollBarUI.setThumbBounds,Set the bounds of the thumb and force a repaint that includes  the old thumbBounds and the new one.
javax.swing.plaf.basic.BasicScrollBarUI.setThumbRollover,Sets whether or not the mouse is currently over the thumb.
javax.swing.plaf.basic.BasicScrollBarUI.uninstallListeners,Uninstall the listeners.
javax.swing.plaf.basic.BasicScrollBarUI.setDirection,Sets the direction.
javax.swing.plaf.basic.BasicScrollBarUI.setScrollByBlock,Sets the scrolling by block
javax.swing.plaf.basic.BasicScrollBarUI.mouseDragged,"Set the models value to the position of the thumb's top of Vertical  scrollbar, or the left/right of Horizontal scrollbar in  left-to-right/right-to-left scrollbar relative to the origin of the  track."
javax.swing.plaf.basic.BasicScrollBarUI.mouseExited,Invoked when the mouse exits the scrollbar.
javax.swing.plaf.basic.BasicScrollBarUI.mousePressed,"If the mouse is pressed above the ""thumb"" component  then reduce the scrollbars value by one page (""page up""),  otherwise increase it by one page."
javax.swing.plaf.basic.BasicScrollPaneUI.createHSBChangeListener,Returns an instance of horizontal scroll barChangeListener.
javax.swing.plaf.basic.BasicScrollPaneUI.createMouseWheelListener,"Creates an instance of MouseWheelListener, which is added to the  JScrollPane by installUI()."
javax.swing.plaf.basic.BasicScrollPaneUI.createPropertyChangeListener,Creates an instance ofPropertyChangeListenerthat's added to  theJScrollPanebyinstallUI().
javax.swing.plaf.basic.BasicScrollPaneUI.createUI,Returns a new instance ofBasicScrollPaneUI.
javax.swing.plaf.basic.BasicScrollPaneUI.createViewportChangeListener,Returns an instance of viewportChangeListener.
javax.swing.plaf.basic.BasicScrollPaneUI.createVSBChangeListener,Returns an instance of vertical scroll barChangeListener.
javax.swing.plaf.basic.BasicScrollPaneUI.syncScrollPaneWithViewport,Synchronizes theJScrollPanewithViewport.
javax.swing.plaf.basic.BasicScrollPaneUI.updateColumnHeader,Updates column header.
javax.swing.plaf.basic.BasicScrollPaneUI.updateRowHeader,Updates row header.
javax.swing.plaf.basic.BasicScrollPaneUI.updateScrollBarDisplayPolicy,Updates a scroll bar display policy.
javax.swing.plaf.basic.BasicScrollPaneUI.updateViewport,Updates viewport.
javax.swing.plaf.basic.BasicScrollPaneUI.mouseWheelMoved,Called when the mouse wheel is rotated while over a  JScrollPane.
javax.swing.plaf.basic.BasicSeparatorUI.createUI,Returns a new instance ofBasicSeparatorUI.
javax.swing.plaf.basic.BasicSliderUI.calculateContentRect,Calculates the content rectangle.
javax.swing.plaf.basic.BasicSliderUI.calculateFocusRect,Calculates the focus rectangle.
javax.swing.plaf.basic.BasicSliderUI.calculateGeometry,Calculates the geometry.
javax.swing.plaf.basic.BasicSliderUI.calculateLabelRect,Calculates the label rectangle.
javax.swing.plaf.basic.BasicSliderUI.calculateThumbLocation,Calculates the thumb location.
javax.swing.plaf.basic.BasicSliderUI.calculateThumbSize,Calculates the thumb size rectangle.
javax.swing.plaf.basic.BasicSliderUI.calculateTickRect,Calculates the tick rectangle.
javax.swing.plaf.basic.BasicSliderUI.calculateTrackBuffer,Calculates the track buffer.
javax.swing.plaf.basic.BasicSliderUI.calculateTrackRect,Calculates the track rectangle.
javax.swing.plaf.basic.BasicSliderUI.createChangeListener,Creates a change listener.
javax.swing.plaf.basic.BasicSliderUI.createComponentListener,Creates a composite listener.
javax.swing.plaf.basic.BasicSliderUI.createFocusListener,Creates a focus listener.
javax.swing.plaf.basic.BasicSliderUI.createUI,Creates a UI.
javax.swing.plaf.basic.BasicSliderUI.drawInverted,Draws inverted.
javax.swing.plaf.basic.BasicSliderUI.getFocusColor,Returns the focus color.
javax.swing.plaf.basic.BasicSliderUI.getHeightOfHighValueLabel,Returns the height of the highest value label.
javax.swing.plaf.basic.BasicSliderUI.getHeightOfLowValueLabel,Returns the height of the lowest value label.
javax.swing.plaf.basic.BasicSliderUI.getHeightOfTallestLabel,Returns the height of the tallest label.
javax.swing.plaf.basic.BasicSliderUI.getHighestValue,Returns the biggest value that has an entry in the label table.
javax.swing.plaf.basic.BasicSliderUI.getHighestValueLabel,Returns the label that corresponds to the lowest slider value in the  label table.
javax.swing.plaf.basic.BasicSliderUI.getHighlightColor,Returns the highlight color.
javax.swing.plaf.basic.BasicSliderUI.getLowestValue,Returns the smallest value that has an entry in the label table.
javax.swing.plaf.basic.BasicSliderUI.getLowestValueLabel,Returns the label that corresponds to the highest slider value in the  label table.
javax.swing.plaf.basic.BasicSliderUI.getMinimumHorizontalSize,Returns the minimum horizontal size.
javax.swing.plaf.basic.BasicSliderUI.getMinimumVerticalSize,Returns the minimum vertical size.
javax.swing.plaf.basic.BasicSliderUI.getPreferredHorizontalSize,Returns the preferred horizontal size.
javax.swing.plaf.basic.BasicSliderUI.getPreferredVerticalSize,Returns the preferred vertical size.
javax.swing.plaf.basic.BasicSliderUI.getShadowColor,Returns the shadow color.
javax.swing.plaf.basic.BasicSliderUI.getThumbSize,Returns the thumb size.
javax.swing.plaf.basic.BasicSliderUI.getTickLength,Gets the height of the tick area for horizontal sliders and the width of  the tick area for vertical sliders.
javax.swing.plaf.basic.BasicSliderUI.getWidthOfHighValueLabel,Returns the width of the highest value label.
javax.swing.plaf.basic.BasicSliderUI.getWidthOfLowValueLabel,Returns the width of the lowest value label.
javax.swing.plaf.basic.BasicSliderUI.getWidthOfWidestLabel,Returns the width of the widest label.
javax.swing.plaf.basic.BasicSliderUI.installListeners,Installs listeners.
javax.swing.plaf.basic.BasicSliderUI.installUI,Installs a UI.
javax.swing.plaf.basic.BasicSliderUI.isDragging,Returns true if the user is dragging the slider.
javax.swing.plaf.basic.BasicSliderUI.labelsHaveSameBaselines,Returns true if all the labels from the label table have the same  baseline.
javax.swing.plaf.basic.BasicSliderUI.paintFocus,Paints focus.
javax.swing.plaf.basic.BasicSliderUI.paintHorizontalLabel,Called for every label in the label table.
javax.swing.plaf.basic.BasicSliderUI.paintLabels,Paints the labels.
javax.swing.plaf.basic.BasicSliderUI.paintMajorTickForHorizSlider,Paints major tick for horizontal slider.
javax.swing.plaf.basic.BasicSliderUI.paintMajorTickForVertSlider,Paints major tick for vertical slider.
javax.swing.plaf.basic.BasicSliderUI.paintMinorTickForHorizSlider,Paints minor tick for horizontal slider.
javax.swing.plaf.basic.BasicSliderUI.paintMinorTickForVertSlider,Paints minor tick for vertical slider.
javax.swing.plaf.basic.BasicSliderUI.paintTicks,Paints ticks.
javax.swing.plaf.basic.BasicSliderUI.paintTrack,Paints track.
javax.swing.plaf.basic.BasicSliderUI.recalculateIfInsetsChanged,Recalculates if the insets have changed.
javax.swing.plaf.basic.BasicSliderUI.recalculateIfOrientationChanged,Recalculates if the orientation has changed.
javax.swing.plaf.basic.BasicSliderUI.scrollDueToClickInTrack,"This function is called when a mousePressed was detected in the track,  not in the thumb."
javax.swing.plaf.basic.BasicSliderUI.setThumbLocation,Sets the thumb location.
javax.swing.plaf.basic.BasicSliderUI.uninstallKeyboardActions,Uninstalls keyboard actions.
javax.swing.plaf.basic.BasicSliderUI.uninstallListeners,Uninstalls listeners.
javax.swing.plaf.basic.BasicSliderUI.uninstallUI,Uninstalls a UI.
javax.swing.plaf.basic.BasicSliderUI.valueForXPosition,Returns the value at the x position.
javax.swing.plaf.basic.BasicSliderUI.valueForYPosition,Returns the value at the y position.
javax.swing.plaf.basic.BasicSliderUI.xPositionForValue,Returns the x position for a value.
javax.swing.plaf.basic.BasicSliderUI.yPositionForValue,Returns the y position for a value.
javax.swing.plaf.basic.BasicSliderUI.yPositionForValue,Returns the y location for the specified value.
javax.swing.plaf.basic.BasicSliderUI.setScrollByBlock,Sets scrolling by block
javax.swing.plaf.basic.BasicSliderUI.mouseDragged,Set the models value to the position of the top/left  of the thumb relative to the origin of the track.
javax.swing.plaf.basic.BasicSliderUI.shouldScroll,Returns if scrolling should occur
javax.swing.plaf.basic.BasicSpinnerUI.createEditor,This method is called by installUI to get the editor component  of theJSpinner.
javax.swing.plaf.basic.BasicSpinnerUI.createLayout,"Creates aLayoutManagerthat manages theeditor,nextButton, andpreviousButtonchildren of the JSpinner."
javax.swing.plaf.basic.BasicSpinnerUI.createNextButton,"Creates an increment button, i.e. component that replaces the spinner  value with the object returned byspinner.getNextValue."
javax.swing.plaf.basic.BasicSpinnerUI.createPreviousButton,"Creates a decrement button, i.e. component that replaces the spinner  value with the object returned byspinner.getPreviousValue."
javax.swing.plaf.basic.BasicSpinnerUI.createPropertyChangeListener,Creates aPropertyChangeListenerthat can be  added to the JSpinner itself.
javax.swing.plaf.basic.BasicSpinnerUI.createUI,Returns a new instance of BasicSpinnerUI.
javax.swing.plaf.basic.BasicSpinnerUI.installDefaults,"Initialize theJSpinnerborder,foreground, andbackground, properties  based on the corresponding ""Spinner.*"" properties from defaults table."
javax.swing.plaf.basic.BasicSpinnerUI.installKeyboardActions,Installs the keyboard Actions onto the JSpinner.
javax.swing.plaf.basic.BasicSpinnerUI.installListeners,InitializesPropertyChangeListenerwith  a shared object that delegates interesting PropertyChangeEvents  to protected methods.
javax.swing.plaf.basic.BasicSpinnerUI.installNextButtonListeners,"Installs the necessary listeners on the next button,c,  to update theJSpinnerin response to a user gesture."
javax.swing.plaf.basic.BasicSpinnerUI.installPreviousButtonListeners,"Installs the necessary listeners on the previous button,c,  to update theJSpinnerin response to a user gesture."
javax.swing.plaf.basic.BasicSpinnerUI.installUI,"CallsinstallDefaults,installListeners,  and then adds the components returned bycreateNextButton,createPreviousButton, andcreateEditor."
javax.swing.plaf.basic.BasicSpinnerUI.replaceEditor,Called by thePropertyChangeListenerwhen theJSpinnereditor property changes.
javax.swing.plaf.basic.BasicSpinnerUI.uninstallDefaults,Sets theJSpinner'slayout manager to null.
javax.swing.plaf.basic.BasicSpinnerUI.uninstallListeners,Removes thePropertyChangeListeneradded  by installListeners.
javax.swing.plaf.basic.BasicSpinnerUI.uninstallUI,"CallsuninstallDefaults,uninstallListeners,  and then removes all of the spinners children."
javax.swing.plaf.basic.BasicSplitPaneDivider.completeDrag,Messages finishDraggingTo with the new location for the mouse  event.
javax.swing.plaf.basic.BasicSplitPaneDivider.continueDrag,Messages dragDividerTo with the new location for the mouse  event.
javax.swing.plaf.basic.BasicSplitPaneDivider.getNeededLocation,"Returns the x argument, since this is used for horizontal  splits."
javax.swing.plaf.basic.BasicSplitPaneDivider.isValid,Returnstrueif the dragging session is valid.
javax.swing.plaf.basic.BasicSplitPaneDivider.positionForMouseEvent,Returns the new position to put the divider at based on  the passed in MouseEvent.
javax.swing.plaf.basic.BasicSplitPaneDivider.createLeftOneTouchButton,Creates and return an instance ofJButtonthat can be used to  collapse the left component in the split pane.
javax.swing.plaf.basic.BasicSplitPaneDivider.createRightOneTouchButton,Creates and return an instance ofJButtonthat can be used to  collapse the right component in the split pane.
javax.swing.plaf.basic.BasicSplitPaneDivider.dragDividerTo,Messages the BasicSplitPaneUI with dragDividerTo that this instance  is contained in.
javax.swing.plaf.basic.BasicSplitPaneDivider.finishDraggingTo,Messages the BasicSplitPaneUI with finishDraggingTo that this instance  is contained in.
javax.swing.plaf.basic.BasicSplitPaneDivider.getBasicSplitPaneUI,Returns theSplitPaneUIthe receiver is currently in.
javax.swing.plaf.basic.BasicSplitPaneDivider.getBorder,Returns the border of this component or null if no border is  currently set.
javax.swing.plaf.basic.BasicSplitPaneDivider.getDividerSize,"Returns the size of the divider, that is the width if the splitpane  is HORIZONTAL_SPLIT, or the height of VERTICAL_SPLIT."
javax.swing.plaf.basic.BasicSplitPaneDivider.getInsets,"If a border has been set on this component, returns the  border's insets, else calls super.getInsets."
javax.swing.plaf.basic.BasicSplitPaneDivider.getMinimumSize,Returns the minimum size of the divider.
javax.swing.plaf.basic.BasicSplitPaneDivider.getPreferredSize,Returns the preferred size of the divider.
javax.swing.plaf.basic.BasicSplitPaneDivider.isMouseOver,Returns whether or not the mouse is currently over the divider
javax.swing.plaf.basic.BasicSplitPaneDivider.oneTouchExpandableChanged,Messaged when the oneTouchExpandable value of the JSplitPane the  receiver is contained in changes.
javax.swing.plaf.basic.BasicSplitPaneDivider.paint,Paints the divider.
javax.swing.plaf.basic.BasicSplitPaneDivider.prepareForDragging,Message to prepare for dragging.
javax.swing.plaf.basic.BasicSplitPaneDivider.propertyChange,"Property change event, presumably from the JSplitPane, will message  updateOrientation if necessary."
javax.swing.plaf.basic.BasicSplitPaneDivider.setBasicSplitPaneUI,Sets theSplitPaneUIthat is using the receiver.
javax.swing.plaf.basic.BasicSplitPaneDivider.setDividerSize,Sets the size of the divider tonewSize.
javax.swing.plaf.basic.BasicSplitPaneDivider.setMouseOver,Sets whether or not the mouse is currently over the divider.
javax.swing.plaf.basic.BasicSplitPaneDivider.mouseDragged,If dragger is not null it is messaged with continueDrag.
javax.swing.plaf.basic.BasicSplitPaneDivider.mouseMoved,Resets the cursor based on the orientation.
javax.swing.plaf.basic.BasicSplitPaneDivider.mousePressed,Starts the dragging session by creating the appropriate instance  of DragController.
javax.swing.plaf.basic.BasicSplitPaneDivider.mouseReleased,If dragger is not null it is messaged with completeDrag.
javax.swing.plaf.basic.BasicSplitPaneDivider.getNeededLocation,"Returns the y argument, since this is used for vertical  splits."
javax.swing.plaf.basic.BasicSplitPaneUI.addLayoutComponent,Adds the component at place.
javax.swing.plaf.basic.BasicSplitPaneUI.getAvailableSize,Returns the available width based on the container size andInsets.
javax.swing.plaf.basic.BasicSplitPaneUI.getInitialLocation,"Returns the left inset, unless theInsetsare null in which case  0 is returned."
javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSizeOfComponent,Returns the width of the passed in Components preferred size.
javax.swing.plaf.basic.BasicSplitPaneUI.getSizeOfComponent,Returns the width of the passed in component.
javax.swing.plaf.basic.BasicSplitPaneUI.getSizes,Returns the sizes of the components.
javax.swing.plaf.basic.BasicSplitPaneUI.layoutContainer,Does the actual layout.
javax.swing.plaf.basic.BasicSplitPaneUI.maximumLayoutSize,"Returns the maximum layout size, which is Integer.MAX_VALUE  in both directions."
javax.swing.plaf.basic.BasicSplitPaneUI.minimumLayoutSize,Returns the minimum size needed to contain the children.
javax.swing.plaf.basic.BasicSplitPaneUI.preferredLayoutSize,Returns the preferred size needed to contain the children.
javax.swing.plaf.basic.BasicSplitPaneUI.removeLayoutComponent,Removes the specified component from our knowledge.
javax.swing.plaf.basic.BasicSplitPaneUI.resetSizeAt,Resets the size of the Component at the passed in location.
javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes,Marks the receiver so that the next time this instance is  laid out it'll ask for the preferred sizes.
javax.swing.plaf.basic.BasicSplitPaneUI.setComponentToSize,"Sets the width of the componentcto besize, placing its  x location atlocation, y to theinsets.topand height  to thecontainerSize.heightless the top and bottom insets."
javax.swing.plaf.basic.BasicSplitPaneUI.setSizes,Sets the sizes tonewSizes.
javax.swing.plaf.basic.BasicSplitPaneUI.updateComponents,Determines the components.
javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider,Creates the default divider.
javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider,"Returns the default non continuous layout divider, which is an  instance ofCanvasthat fills in the background with dark gray."
javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener,Creates aFocusListenerfor theJSplitPaneUI.
javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener,Deprecated.As of Java 2 platform v1.3.
javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener,Creates aPropertyChangeListenerfor theJSplitPaneUI.
javax.swing.plaf.basic.BasicSplitPaneUI.createUI,Creates a new instance ofBasicSplitPaneUI.
javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo,Messaged during a dragging session to move the divider to the  passed inlocation.
javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo,Messaged to finish the dragging session.
javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren,Called when the specified split pane has finished painting  its children.
javax.swing.plaf.basic.BasicSplitPaneUI.getDivider,Returns the divider between the top Components.
javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize,"Deprecated.As of Java 2 platform v1.3, instead set the border on the  divider."
javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation,"Returns the location of the divider, which may differ from what  the splitpane thinks the location of the divider is."
javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation,Returns the last drag location of theJSplitPane.
javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation,Gets the maximum location of the divider.
javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize,"Returns the maximum size for the passed in component,  This is passed off to the current layout manager."
javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation,Gets the minimum location of the divider.
javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize,"Returns the minimum size for the passed in component,  This is passed off to the current layout manager."
javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider,Returns the divider to use when theJSplitPaneis configured to  not continuously layout.
javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation,Returns the orientation for theJSplitPane.
javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize,"Returns the preferred size for the passed in component,  This is passed off to the current layout manager."
javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane,Returns theJSplitPanethis instance is currently contained  in.
javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults,Installs the UI defaults.
javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions,Installs the keyboard actions for the UI.
javax.swing.plaf.basic.BasicSplitPaneUI.installListeners,Installs the event listeners for the UI.
javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout,Determines whether theJSplitPaneis set to use a continuous layout.
javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager,Resets the layout manager based on orientation and messages it  with invalidateLayout to pull in appropriate Components.
javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes,Messaged to reset the preferred sizes.
javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout,Turn continuous layout on/off.
javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation,Set the last drag location of theJSplitPane.
javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider,Sets the divider to use when theJSplitPaneis configured to  not continuously layout.
javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider,Sets the divider to use.
javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation,Set the orientation for theJSplitPane.
javax.swing.plaf.basic.BasicSplitPaneUI.startDragging,"Should be messaged before the dragging session starts, resets  lastDragLocation and dividerSize."
javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults,Uninstalls the UI defaults.
javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions,Uninstalls the keyboard actions for the UI.
javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners,Uninstalls the event listeners for the UI.
javax.swing.plaf.basic.BasicSplitPaneUI.propertyChange,Messaged from theJSplitPanethe receiver is  contained in.
javax.swing.plaf.basic.BasicTabbedPaneUI.assureRectsCreated,Assure the rectangles are created.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateMaxTabHeight,Calculates the maximum tab height.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateMaxTabWidth,Calculates the maximum tab width.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateTabAreaHeight,Calculates the tab area height.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateTabAreaWidth,Calculates the tab area width.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateTabHeight,Calculates the tab height.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateTabWidth,Calculates the tab width.
javax.swing.plaf.basic.BasicTabbedPaneUI.createLayoutManager,Invoked byinstallUIto create  a layout manager object to manage  theJTabbedPane.
javax.swing.plaf.basic.BasicTabbedPaneUI.createMouseListener,Creates a mouse listener.
javax.swing.plaf.basic.BasicTabbedPaneUI.createScrollButton,Creates and returns a JButton that will provide the user  with a way to scroll the tabs in a particular direction.
javax.swing.plaf.basic.BasicTabbedPaneUI.createUI,Create a UI.
javax.swing.plaf.basic.BasicTabbedPaneUI.expandTabRunsArray,Expands the tab runs array.
javax.swing.plaf.basic.BasicTabbedPaneUI.getBaseline,Returns the baseline for the specified tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.getBaselineOffset,Returns the amount the baseline is offset by.
javax.swing.plaf.basic.BasicTabbedPaneUI.getContentBorderInsets,Returns the content border insets.
javax.swing.plaf.basic.BasicTabbedPaneUI.getFocusIndex,Returns the index of the tab that has focus.
javax.swing.plaf.basic.BasicTabbedPaneUI.getFontMetrics,Returns the font metrics.
javax.swing.plaf.basic.BasicTabbedPaneUI.getIconForTab,Returns the icon for a tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.getNextTabIndex,Returns the next tab index.
javax.swing.plaf.basic.BasicTabbedPaneUI.getNextTabIndexInRun,Returns the next tab index in the run.
javax.swing.plaf.basic.BasicTabbedPaneUI.getNextTabRun,Returns the next tab run.
javax.swing.plaf.basic.BasicTabbedPaneUI.getPreviousTabIndex,Returns the previous tab index.
javax.swing.plaf.basic.BasicTabbedPaneUI.getPreviousTabIndexInRun,Returns the previous tab index in the run.
javax.swing.plaf.basic.BasicTabbedPaneUI.getPreviousTabRun,Returns the previous tab run.
javax.swing.plaf.basic.BasicTabbedPaneUI.getRolloverTab,"Returns the tab the mouse is currently over, or-1if the mouse is no  longer over any tab."
javax.swing.plaf.basic.BasicTabbedPaneUI.getRunForTab,Returns the run for a tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.getSelectedTabPadInsets,Returns the selected tab pad insets.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabAreaInsets,Returns the tab area insets.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabBounds,Returns the bounds of the specified tab in the coordinate space  of the JTabbedPane component.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabBounds,Returns the bounds of the specified tab index.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabInsets,Returns the tab insets.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabLabelShiftX,Returns the tab label shift x.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabLabelShiftY,Returns the tab label shift y.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabRunIndent,Returns the tab run indent.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabRunOffset,Returns the tab run offset.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTabRunOverlay,Returns the tab run overlay.
javax.swing.plaf.basic.BasicTabbedPaneUI.getTextViewForTab,Returns the text View object required to render stylized text (HTML) for  the specified tab or null if no specialized text rendering is needed  for this tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.getVisibleComponent,Returns the visible component.
javax.swing.plaf.basic.BasicTabbedPaneUI.installComponents,Creates and installs any required subcomponents for the JTabbedPane.
javax.swing.plaf.basic.BasicTabbedPaneUI.installDefaults,Install the defaults.
javax.swing.plaf.basic.BasicTabbedPaneUI.installListeners,Install the listeners.
javax.swing.plaf.basic.BasicTabbedPaneUI.lastTabInRun,Returns the last tab in a run.
javax.swing.plaf.basic.BasicTabbedPaneUI.layoutLabel,Laysout a label.
javax.swing.plaf.basic.BasicTabbedPaneUI.navigateSelectedTab,Navigate the selected tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintContentBorder,Paints the content border.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintContentBorderBottomEdge,Paints the content border bottom edge.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintContentBorderLeftEdge,Paints the content border left edge.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintContentBorderRightEdge,Paints the content border right edge.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintContentBorderTopEdge,Paints the content border top edge.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintFocusIndicator,Paints the focus indicator.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintIcon,Paints an icon.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintTab,Paints a tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintTabArea,Paints the tabs in the tab area.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintTabBackground,Paints the tab background.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintTabBorder,this function draws the border around each tab  note that this function does now draw the background of the tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.paintText,Paints text.
javax.swing.plaf.basic.BasicTabbedPaneUI.rotateInsets,Rotates the insets.
javax.swing.plaf.basic.BasicTabbedPaneUI.selectAdjacentRunTab,Selects an adjacent run of tabs.
javax.swing.plaf.basic.BasicTabbedPaneUI.selectNextTab,Select the next tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.selectNextTabInRun,Select the next tab in the run.
javax.swing.plaf.basic.BasicTabbedPaneUI.selectPreviousTab,Select the previous tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.selectPreviousTabInRun,Select the previous tab in the run.
javax.swing.plaf.basic.BasicTabbedPaneUI.setRolloverTab,Sets the tab the mouse is currently over toindex.
javax.swing.plaf.basic.BasicTabbedPaneUI.setVisibleComponent,Sets the visible component.
javax.swing.plaf.basic.BasicTabbedPaneUI.shouldPadTabRun,Returns whether or not the tab run should be padded.
javax.swing.plaf.basic.BasicTabbedPaneUI.shouldRotateTabRuns,Returns whether or not the tab run should be rotated.
javax.swing.plaf.basic.BasicTabbedPaneUI.tabForCoordinate,Returns the tab index which intersects the specified point  in the JTabbedPane's coordinate space.
javax.swing.plaf.basic.BasicTabbedPaneUI.uninstallComponents,Removes any installed subcomponents from the JTabbedPane.
javax.swing.plaf.basic.BasicTabbedPaneUI.uninstallDefaults,Uninstall the defaults.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateLayoutInfo,Calculates the layout info.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateSize,Returns the calculated size.
javax.swing.plaf.basic.BasicTabbedPaneUI.calculateTabRects,Calculate the tab rectangles.
javax.swing.plaf.basic.BasicTabbedPaneUI.normalizeTabRuns,Normalizes the tab runs.
javax.swing.plaf.basic.BasicTabbedPaneUI.padSelectedTab,Pads selected tab.
javax.swing.plaf.basic.BasicTabbedPaneUI.padTabRun,Pads the tab run.
javax.swing.plaf.basic.BasicTabbedPaneUI.preferredTabAreaHeight,Returns the preferred tab area height.
javax.swing.plaf.basic.BasicTabbedPaneUI.preferredTabAreaWidth,Returns the preferred tab area width.
javax.swing.plaf.basic.BasicTabbedPaneUI.rotateTabRuns,Rotates the run-index array so that the selected run is run[0].
javax.swing.plaf.basic.BasicTableHeaderUI.createMouseInputListener,Creates the mouse listener for theJTableHeader.
javax.swing.plaf.basic.BasicTableHeaderUI.createUI,Returns a new instance ofBasicTableHeaderUI.
javax.swing.plaf.basic.BasicTableHeaderUI.getMaximumSize,Return the maximum size of the header.
javax.swing.plaf.basic.BasicTableHeaderUI.getMinimumSize,Return the minimum size of the header.
javax.swing.plaf.basic.BasicTableHeaderUI.getPreferredSize,Return the preferred size of the header.
javax.swing.plaf.basic.BasicTableHeaderUI.getRolloverColumn,Returns the index of the column header over which the mouse  currently is.
javax.swing.plaf.basic.BasicTableHeaderUI.installDefaults,"Initializes JTableHeader properties such as font, foreground, and background."
javax.swing.plaf.basic.BasicTableHeaderUI.installKeyboardActions,Register all keyboard actions on the JTableHeader.
javax.swing.plaf.basic.BasicTableHeaderUI.installListeners,Attaches listeners to the JTableHeader.
javax.swing.plaf.basic.BasicTableHeaderUI.rolloverColumnUpdated,This method gets called every time when a rollover column in the table  header is updated.
javax.swing.plaf.basic.BasicTableHeaderUI.uninstallDefaults,Uninstalls default properties
javax.swing.plaf.basic.BasicTableHeaderUI.uninstallKeyboardActions,Unregisters default key actions.
javax.swing.plaf.basic.BasicTableUI.createFocusListener,Creates the focus listener for handling keyboard navigation in theJTable.
javax.swing.plaf.basic.BasicTableUI.createKeyListener,Creates the key listener for handling keyboard navigation in theJTable.
javax.swing.plaf.basic.BasicTableUI.createMouseInputListener,Creates the mouse listener for theJTable.
javax.swing.plaf.basic.BasicTableUI.createUI,Returns a new instance ofBasicTableUI.
javax.swing.plaf.basic.BasicTableUI.getMaximumSize,Return the maximum size of the table.
javax.swing.plaf.basic.BasicTableUI.getMinimumSize,Return the minimum size of the table.
javax.swing.plaf.basic.BasicTableUI.getPreferredSize,Return the preferred size of the table.
javax.swing.plaf.basic.BasicTableUI.installDefaults,"Initialize JTable properties, e.g. font, foreground, and background."
javax.swing.plaf.basic.BasicTableUI.installKeyboardActions,Register all keyboard actions on the JTable.
javax.swing.plaf.basic.BasicTableUI.installListeners,Attaches listeners to the JTable.
javax.swing.plaf.basic.BasicTableUI.paint,Paint a representation of thetableinstance  that was set in installUI().
javax.swing.plaf.basic.BasicTextAreaUI.create,Creates the view for an element.
javax.swing.plaf.basic.BasicTextAreaUI.createUI,Creates a UI for a JTextArea.
javax.swing.plaf.basic.BasicTextAreaUI.getMinimumSize,The method is overridden to take into account caret width.
javax.swing.plaf.basic.BasicTextFieldUI.create,Creates a view (FieldView) based on an element.
javax.swing.plaf.basic.BasicTextFieldUI.createUI,Creates a UI for a JTextField.
javax.swing.plaf.basic.BasicTextUI.create,Creates a view for an element.
javax.swing.plaf.basic.BasicTextUI.createCaret,Creates the object to use for a caret.
javax.swing.plaf.basic.BasicTextUI.createHighlighter,Creates the object to use for adding highlights.
javax.swing.plaf.basic.BasicTextUI.createKeymap,"Creates the keymap to use for the text component, and installs  any necessary bindings into it."
javax.swing.plaf.basic.BasicTextUI.getComponent,Fetches the text component associated with this  UI implementation.
javax.swing.plaf.basic.BasicTextUI.getKeymapName,Fetches the name of the keymap that will be installed/used  by default for this UI.
javax.swing.plaf.basic.BasicTextUI.getMaximumSize,Gets the maximum size for the editor component.
javax.swing.plaf.basic.BasicTextUI.getMinimumSize,Gets the minimum size for the editor component.
javax.swing.plaf.basic.BasicTextUI.getPreferredSize,Gets the preferred size for the editor component.
javax.swing.plaf.basic.BasicTextUI.getPropertyPrefix,Gets the name used as a key to look up properties through the  UIManager.
javax.swing.plaf.basic.BasicTextUI.getVisibleEditorRect,Gets the allocation to give the root View.
javax.swing.plaf.basic.BasicTextUI.installDefaults,"Initializes component properties, such as font, foreground,  background, caret color, selection color, selected text color,  disabled text color, border, and margin."
javax.swing.plaf.basic.BasicTextUI.installListeners,Installs listeners for the UI.
javax.swing.plaf.basic.BasicTextUI.modelChanged,Flags model changes.
javax.swing.plaf.basic.BasicTextUI.modelToView,"Deprecated.replaced byTextUI.modelToView2D(JTextComponent, int, Position.Bias)"
javax.swing.plaf.basic.BasicTextUI.paint,Paints the interface.
javax.swing.plaf.basic.BasicTextUI.paintBackground,Paints a background for the view.
javax.swing.plaf.basic.BasicTextUI.paintSafely,Paints the interface safely with a guarantee that  the model won't change from the view of this thread.
javax.swing.plaf.basic.BasicTextUI.setView,Sets the current root of the view hierarchy and calls invalidate().
javax.swing.plaf.basic.BasicTextUI.uninstallDefaults,Sets the component properties that have not been explicitly overridden  tonull.
javax.swing.plaf.basic.BasicTextUI.uninstallListeners,Uninstalls listeners for the UI.
javax.swing.plaf.basic.BasicTextUI.update,Superclass paints background in an uncontrollable way  (i.e. one might want an image tiled into the background).
javax.swing.plaf.basic.BasicTextUI.viewToModel,"Deprecated.replaced byTextUI.viewToModel2D(JTextComponent, Point2D, Position.Bias[])"
javax.swing.plaf.basic.BasicToggleButtonUI.createUI,Returns an instance ofBasicToggleButtonUI.
javax.swing.plaf.basic.BasicToggleButtonUI.getTextShiftOffset,Overriden so that the text will not be rendered as shifted for  Toggle buttons and subclasses.
javax.swing.plaf.basic.BasicToggleButtonUI.paintIcon,Paints an icon in the specified location.
javax.swing.plaf.basic.BasicToolBarSeparatorUI.createUI,Returns a new instance ofBasicToolBarSeparatorUI.
javax.swing.plaf.basic.BasicToolBarUI.getBorderColor,Returns the border color.
javax.swing.plaf.basic.BasicToolBarUI.getOrientation,Returns the orientation of the toolbar window when the toolbar is  floating.
javax.swing.plaf.basic.BasicToolBarUI.setBorderColor,Sets the border color.
javax.swing.plaf.basic.BasicToolBarUI.setOffset,Sets the offset.
javax.swing.plaf.basic.BasicToolBarUI.setOrientation,Sets the orientation.
javax.swing.plaf.basic.BasicToolBarUI.canDock,Returnstrueif theJToolBarcan dock at the given position.
javax.swing.plaf.basic.BasicToolBarUI.createDockingListener,Returns an instance ofMouseInputListener.
javax.swing.plaf.basic.BasicToolBarUI.createDragWindow,Returns an instance ofDragWindow.
javax.swing.plaf.basic.BasicToolBarUI.createFloatingFrame,Deprecated.It is recommended thatcreateFloatingWindow(JToolBar)be used instead
javax.swing.plaf.basic.BasicToolBarUI.createFloatingWindow,Creates a window which contains the toolbar after it has been  dragged out from its container
javax.swing.plaf.basic.BasicToolBarUI.createFrameListener,Constructs a new instance ofWindowListener.
javax.swing.plaf.basic.BasicToolBarUI.createNonRolloverBorder,Creates the non rollover border for toolbar components.
javax.swing.plaf.basic.BasicToolBarUI.createRolloverBorder,Creates a rollover border for toolbar components.
javax.swing.plaf.basic.BasicToolBarUI.createUI,Constructs a new instance ofBasicToolBarUI.
javax.swing.plaf.basic.BasicToolBarUI.dragTo,The method is used to dragDragWindowduring theJToolBaris being dragged.
javax.swing.plaf.basic.BasicToolBarUI.floatAt,The method is called at end of dragging to place the frame in either  its original place or in its floating frame.
javax.swing.plaf.basic.BasicToolBarUI.getDockingColor,Gets the color displayed when over a docking area
javax.swing.plaf.basic.BasicToolBarUI.getFloatingColor,Gets the color displayed when over a floating area
javax.swing.plaf.basic.BasicToolBarUI.getNonRolloverBorder,Returns a non-rollover border for the button.
javax.swing.plaf.basic.BasicToolBarUI.getRolloverBorder,Returns a rollover border for the button.
javax.swing.plaf.basic.BasicToolBarUI.installNonRolloverBorders,Installs non-rollover borders on all the child components of the JComponent.
javax.swing.plaf.basic.BasicToolBarUI.installNormalBorders,Installs normal borders on all the child components of the JComponent.
javax.swing.plaf.basic.BasicToolBarUI.installRolloverBorders,Installs rollover borders on all the child components of the JComponent.
javax.swing.plaf.basic.BasicToolBarUI.isFloating,Returnstrueif theJToolBaris floating
javax.swing.plaf.basic.BasicToolBarUI.isRolloverBorders,Returns a flag to determine whether rollover button borders  are enabled.
javax.swing.plaf.basic.BasicToolBarUI.navigateFocusedComp,Navigates the focused component.
javax.swing.plaf.basic.BasicToolBarUI.paintDragWindow,Paints the contents of the window used for dragging.
javax.swing.plaf.basic.BasicToolBarUI.setBorderToNonRollover,Sets the border of the component to have a non-rollover border which  was created by thecreateNonRolloverBorder()method.
javax.swing.plaf.basic.BasicToolBarUI.setBorderToNormal,Sets the border of the component to have a normal border.
javax.swing.plaf.basic.BasicToolBarUI.setBorderToRollover,Sets the border of the component to have a rollover border which  was created by thecreateRolloverBorder()method.
javax.swing.plaf.basic.BasicToolBarUI.setDockingColor,Sets the color displayed when over a docking area
javax.swing.plaf.basic.BasicToolBarUI.setFloating,Sets the floating property.
javax.swing.plaf.basic.BasicToolBarUI.setFloatingColor,Sets the color displayed when over a floating area
javax.swing.plaf.basic.BasicToolBarUI.setFloatingLocation,Sets the floating location.
javax.swing.plaf.basic.BasicToolBarUI.setOrientation,Sets the tool bar's orientation.
javax.swing.plaf.basic.BasicToolBarUI.setRolloverBorders,Sets the flag for enabling rollover borders on the toolbar and it will  also install the appropriate border depending on the state of the flag.
javax.swing.plaf.basic.BasicToolTipUI.createUI,Returns the instance ofBasicToolTipUI.
javax.swing.plaf.basic.BasicTreeUI.editingCanceled,Messaged when editing has been canceled in the tree.
javax.swing.plaf.basic.BasicTreeUI.editingStopped,Messaged when editing has stopped in the tree.
javax.swing.plaf.basic.BasicTreeUI.actionPerformed,Public as a result of Timer.
javax.swing.plaf.basic.BasicTreeUI.getScrollPane,"Returns theJScrollPanehousing theJTree,  or null if one isn't found."
javax.swing.plaf.basic.BasicTreeUI.startTimer,"Creates, if necessary, and starts a Timer to check if need to  resize the bounds."
javax.swing.plaf.basic.BasicTreeUI.focusGained,"Invoked when focus is activated on the tree we're in, redraws the  lead row."
javax.swing.plaf.basic.BasicTreeUI.checkForClickInExpandControl,"If themouseXandmouseYare in the  expand/collapse region of therow, this will toggle  the row."
javax.swing.plaf.basic.BasicTreeUI.completeEditing,Messages to stop the editing session.
javax.swing.plaf.basic.BasicTreeUI.completeEditing,Stops the editing session.
javax.swing.plaf.basic.BasicTreeUI.completeUIInstall,Invoked from installUI after all the defaults/listeners have been  installed.
javax.swing.plaf.basic.BasicTreeUI.completeUIUninstall,Uninstalls UI.
javax.swing.plaf.basic.BasicTreeUI.configureLayoutCache,Resets the TreeState instance based on the tree we're providing the  look and feel for.
javax.swing.plaf.basic.BasicTreeUI.createCellEditorListener,Creates a listener to handle events from the current editor.
javax.swing.plaf.basic.BasicTreeUI.createCellRendererPane,Returns the renderer pane that renderer components are placed in.
javax.swing.plaf.basic.BasicTreeUI.createComponentListener,Creates and returns a new ComponentHandler.
javax.swing.plaf.basic.BasicTreeUI.createDefaultCellEditor,Creates a default cell editor.
javax.swing.plaf.basic.BasicTreeUI.createDefaultCellRenderer,Returns the default cell renderer that is used to do the  stamping of each node.
javax.swing.plaf.basic.BasicTreeUI.createFocusListener,Creates a listener that is responsible for updating the display  when focus is lost/gained.
javax.swing.plaf.basic.BasicTreeUI.createKeyListener,Creates the listener responsible for getting key events from  the tree.
javax.swing.plaf.basic.BasicTreeUI.createLayoutCache,"Creates the object responsible for managing what is expanded, as  well as the size of nodes."
javax.swing.plaf.basic.BasicTreeUI.createMouseListener,Creates the listener responsible for updating the selection based on  mouse events.
javax.swing.plaf.basic.BasicTreeUI.createNodeDimensions,Creates an instance ofNodeDimensionsthat is able to determine  the size of a given node in the tree.
javax.swing.plaf.basic.BasicTreeUI.createPropertyChangeListener,Creates a listener that is responsible that updates the UI based on  how the tree changes.
javax.swing.plaf.basic.BasicTreeUI.createSelectionModelPropertyChangeListener,Creates the listener responsible for getting property change  events from the selection model.
javax.swing.plaf.basic.BasicTreeUI.createTreeExpansionListener,Creates and returns the object responsible for updating the treestate  when nodes expanded state changes.
javax.swing.plaf.basic.BasicTreeUI.createTreeModelListener,Returns a listener that can update the tree when the model changes.
javax.swing.plaf.basic.BasicTreeUI.createTreeSelectionListener,Creates the listener that updates the display based on selection change  methods.
javax.swing.plaf.basic.BasicTreeUI.createUI,Constructs a new instance ofBasicTreeUI.
javax.swing.plaf.basic.BasicTreeUI.drawCentered,"Draws theiconcentered at (x,y)."
javax.swing.plaf.basic.BasicTreeUI.drawDashedHorizontalLine,Draws a horizontal dashed line.
javax.swing.plaf.basic.BasicTreeUI.drawDashedVerticalLine,Draws a vertical dashed line.
javax.swing.plaf.basic.BasicTreeUI.ensureRowsAreVisible,Ensures that the rows identified bybeginRowthroughendRoware visible.
javax.swing.plaf.basic.BasicTreeUI.getCellEditor,"Returns the editor used to edit entries in the drawn tree component, ornullif the tree cannot be edited."
javax.swing.plaf.basic.BasicTreeUI.getCellRenderer,Returns the current instance of theTreeCellRendererthat is  rendering each cell.
javax.swing.plaf.basic.BasicTreeUI.getCollapsedIcon,Returns the collapsed icon.
javax.swing.plaf.basic.BasicTreeUI.getDropLineRect,Returns a unbounding box for the drop line.
javax.swing.plaf.basic.BasicTreeUI.getExpandedIcon,Returns the expanded icon.
javax.swing.plaf.basic.BasicTreeUI.getHashColor,Returns the hash color.
javax.swing.plaf.basic.BasicTreeUI.getHorizontalLegBuffer,The horizontal element of legs between nodes starts at the  right of the left-hand side of the child node by default.
javax.swing.plaf.basic.BasicTreeUI.getLastChildPath,Returns a path to the last child ofparent.
javax.swing.plaf.basic.BasicTreeUI.getLeadSelectionRow,Returns the lead row of the selection.
javax.swing.plaf.basic.BasicTreeUI.getLeftChildIndent,Returns the left child indent.
javax.swing.plaf.basic.BasicTreeUI.getMaximumSize,"Returns the maximum size for this component, which will be the  preferred size if the instance is currently in a JTree, or 0, 0."
javax.swing.plaf.basic.BasicTreeUI.getMinimumSize,Returns the minimum size for this component.
javax.swing.plaf.basic.BasicTreeUI.getModel,Returns the tree model.
javax.swing.plaf.basic.BasicTreeUI.getPreferredMinSize,Returns the minimum preferred size.
javax.swing.plaf.basic.BasicTreeUI.getPreferredSize,"Returns the preferred size to properly display the tree,  this is a cover method forgetPreferredSize(c, true)."
javax.swing.plaf.basic.BasicTreeUI.getPreferredSize,Returns the preferred size to represent the tree inc.
javax.swing.plaf.basic.BasicTreeUI.getRightChildIndent,Returns the right child indent.
javax.swing.plaf.basic.BasicTreeUI.getRowHeight,Returns the height of each row in the drawn tree component.
javax.swing.plaf.basic.BasicTreeUI.getRowX,"Returns the location, along the x-axis, to render a particular row  at."
javax.swing.plaf.basic.BasicTreeUI.getSelectionModel,Returns the current instance of theTreeSelectionModelwhich is  the model for selections.
javax.swing.plaf.basic.BasicTreeUI.getShowsRootHandles,Returnstrueif the root handles are to be displayed.
javax.swing.plaf.basic.BasicTreeUI.getVerticalLegBuffer,The vertical element of legs between nodes starts at the bottom of the  parent node by default.
javax.swing.plaf.basic.BasicTreeUI.handleExpandControlClick,"Messaged when the user clicks the particular row, this invokestoggleExpandState."
javax.swing.plaf.basic.BasicTreeUI.installComponents,"Intalls the subcomponents of the tree, which is the renderer pane."
javax.swing.plaf.basic.BasicTreeUI.isDropLine,Tells if aDropLocationshould be indicated by a line between  nodes.
javax.swing.plaf.basic.BasicTreeUI.isEditable,Returns whether the drawn tree component should be enabled for editing.
javax.swing.plaf.basic.BasicTreeUI.isLargeModel,Returnstrueif large model is set.
javax.swing.plaf.basic.BasicTreeUI.isLeaf,Returnstrueif the node atrowis a leaf.
javax.swing.plaf.basic.BasicTreeUI.isLocationInExpandControl,ReturnstrueifmouseXandmouseYfall  in the area of row that is used to expand/collapse the node and  the node atrowdoes not represent a leaf.
javax.swing.plaf.basic.BasicTreeUI.isMultiSelectEvent,Returningtruesignifies a mouse event on the node should select  from the anchor point.
javax.swing.plaf.basic.BasicTreeUI.isRootVisible,Returns whether the root node of the drawn tree component should be displayed.
javax.swing.plaf.basic.BasicTreeUI.isToggleEvent,Returningtrueindicates the row under the mouse should be toggled  based on the event.
javax.swing.plaf.basic.BasicTreeUI.isToggleSelectionEvent,Returningtruesignifies a mouse event on the node should toggle  the selection of only the row under mouse.
javax.swing.plaf.basic.BasicTreeUI.paintDropLine,Paints the drop line.
javax.swing.plaf.basic.BasicTreeUI.paintExpandControl,Paints the expand (toggle) part of a row.
javax.swing.plaf.basic.BasicTreeUI.paintHorizontalLine,Paints a horizontal line.
javax.swing.plaf.basic.BasicTreeUI.paintHorizontalPartOfLeg,Paints the horizontal part of the leg.
javax.swing.plaf.basic.BasicTreeUI.paintRow,Paints the renderer part of a row.
javax.swing.plaf.basic.BasicTreeUI.paintVerticalLine,Paints a vertical line.
javax.swing.plaf.basic.BasicTreeUI.paintVerticalPartOfLeg,Paints the vertical part of the leg.
javax.swing.plaf.basic.BasicTreeUI.pathWasCollapsed,Messaged from theVisibleTreeNodeafter it has collapsed.
javax.swing.plaf.basic.BasicTreeUI.pathWasExpanded,Messaged from theVisibleTreeNodeafter it has been expanded.
javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall,"Invoked after thetreeinstance variable has been  set, but before any defaults/listeners have been installed."
javax.swing.plaf.basic.BasicTreeUI.prepareForUIUninstall,Invoked before unstallation of UI.
javax.swing.plaf.basic.BasicTreeUI.selectPathForEvent,Messaged to update the selection based on aMouseEventover a  particular row.
javax.swing.plaf.basic.BasicTreeUI.setCellRenderer,Sets theTreeCellRenderertotcr.
javax.swing.plaf.basic.BasicTreeUI.setCollapsedIcon,Sets the collapsed icon.
javax.swing.plaf.basic.BasicTreeUI.setEditable,"Configures the receiver to allow, or not allow, editing."
javax.swing.plaf.basic.BasicTreeUI.setExpandedIcon,Sets the expanded icon.
javax.swing.plaf.basic.BasicTreeUI.setHashColor,Sets the hash color.
javax.swing.plaf.basic.BasicTreeUI.setLargeModel,Sets thelargeModel.
javax.swing.plaf.basic.BasicTreeUI.setLeftChildIndent,Sets the left child indent.
javax.swing.plaf.basic.BasicTreeUI.setModel,Sets theTreeModel.
javax.swing.plaf.basic.BasicTreeUI.setPreferredMinSize,Sets the preferred minimum size.
javax.swing.plaf.basic.BasicTreeUI.setRightChildIndent,Sets the right child indent.
javax.swing.plaf.basic.BasicTreeUI.setRootVisible,Sets the root to being visible.
javax.swing.plaf.basic.BasicTreeUI.setRowHeight,"Sets the row height, this is forwarded to the treeState."
javax.swing.plaf.basic.BasicTreeUI.setSelectionModel,Resets the selection model.
javax.swing.plaf.basic.BasicTreeUI.setShowsRootHandles,Determines whether the node handles are to be displayed.
javax.swing.plaf.basic.BasicTreeUI.shouldPaintExpandControl,Returnstrueif the expand (toggle) control should be drawn for  the specified row.
javax.swing.plaf.basic.BasicTreeUI.startEditing,Will start editing for node if there is acellEditorandshouldSelectCellreturnstrue.
javax.swing.plaf.basic.BasicTreeUI.toggleExpandState,"Expands path if it is not expanded, or collapses row if it is expanded."
javax.swing.plaf.basic.BasicTreeUI.uninstallComponents,Uninstalls the renderer pane.
javax.swing.plaf.basic.BasicTreeUI.updateCachedPreferredSize,"Updates thepreferredSizeinstance variable,  which is returned fromgetPreferredSize()."
javax.swing.plaf.basic.BasicTreeUI.updateCellEditor,Updates the cellEditor based on the editability of the JTree that  we're contained in.
javax.swing.plaf.basic.BasicTreeUI.updateDepthOffset,Updates how much each depth should be offset by.
javax.swing.plaf.basic.BasicTreeUI.updateExpandedDescendants,Updates the expanded state of all the descendants ofpathby getting the expanded descendants from the tree and forwarding  to the tree state.
javax.swing.plaf.basic.BasicTreeUI.updateLayoutCacheExpandedNodes,Makes all the nodes that are expanded in JTree expanded in LayoutCache.
javax.swing.plaf.basic.BasicTreeUI.updateLeadSelectionRow,Updates the lead row of the selection.
javax.swing.plaf.basic.BasicTreeUI.updateRenderer,Messaged from the tree we're in when the renderer has changed.
javax.swing.plaf.basic.BasicTreeUI.updateSize,"Marks the cached size as being invalid, and messages the  tree withtreeDidChange."
javax.swing.plaf.basic.BasicTreeUI.removeFromSource,Removes an event from the source.
javax.swing.plaf.basic.BasicTreeUI.getNodeDimensions,Responsible for getting the size of a particular node.
javax.swing.plaf.basic.BasicTreeUI.getRowX,Returns amount to indent the given row.
javax.swing.plaf.basic.BasicTreeUI.treeCollapsed,Called whenever an item in the tree has been collapsed.
javax.swing.plaf.basic.BasicTreeUI.treeExpanded,Called whenever an item in the tree has been expanded.
javax.swing.plaf.basic.BasicTreeUI.valueChanged,Messaged when the selection changes in the tree we're displaying  for.
javax.swing.plaf.basic.BasicViewportUI.createUI,Returns an instance ofBasicViewportUI.
javax.swing.plaf.basic.BasicViewportUI.installDefaults,Installs view port properties.
javax.swing.plaf.basic.BasicViewportUI.uninstallDefaults,Uninstall view port properties.
javax.swing.plaf.metal.DefaultMetalTheme.getControlTextFont,Returns the control text font.
javax.swing.plaf.metal.DefaultMetalTheme.getMenuTextFont,Returns the menu text font.
javax.swing.plaf.metal.DefaultMetalTheme.getName,Returns the name of this theme.
javax.swing.plaf.metal.DefaultMetalTheme.getPrimary1,Returns the primary 1 color.
javax.swing.plaf.metal.DefaultMetalTheme.getPrimary2,Returns the primary 2 color.
javax.swing.plaf.metal.DefaultMetalTheme.getPrimary3,Returns the primary 3 color.
javax.swing.plaf.metal.DefaultMetalTheme.getSecondary1,Returns the secondary 1 color.
javax.swing.plaf.metal.DefaultMetalTheme.getSecondary2,Returns the secondary 2 color.
javax.swing.plaf.metal.DefaultMetalTheme.getSecondary3,Returns the secondary 3 color.
javax.swing.plaf.metal.DefaultMetalTheme.getSubTextFont,Returns the sub-text font.
javax.swing.plaf.metal.DefaultMetalTheme.getSystemTextFont,Returns the system text font.
javax.swing.plaf.metal.DefaultMetalTheme.getUserTextFont,Returns the user text font.
javax.swing.plaf.metal.DefaultMetalTheme.getWindowTitleFont,Returns the window title font.
javax.swing.plaf.metal.MetalBorders.getDesktopIconBorder,Returns a border instance for a Desktop Icon.
javax.swing.plaf.metal.MetalBorders.getTextBorder,Returns a border instance for a text component.
javax.swing.plaf.metal.MetalButtonUI.createUI,Returns an instance ofMetalButtonUI.
javax.swing.plaf.metal.MetalButtonUI.getDisabledTextColor,Returns the color of a disabled text.
javax.swing.plaf.metal.MetalButtonUI.getFocusColor,Returns the color of the focused button.
javax.swing.plaf.metal.MetalButtonUI.getSelectColor,Returns the color of the selected button.
javax.swing.plaf.metal.MetalButtonUI.update,"If necessary paints the background of the component, then  invokespaint."
javax.swing.plaf.metal.MetalCheckBoxIcon.drawCheck,PaintsMetalCheckBoxIcon.
javax.swing.plaf.metal.MetalCheckBoxIcon.getControlSize,Returns the size of the control.
javax.swing.plaf.metal.MetalCheckBoxUI.createUI,Returns an instance ofMetalCheckBoxUI.
javax.swing.plaf.metal.MetalComboBoxButton.getComboBox,Returns theJComboBox.
javax.swing.plaf.metal.MetalComboBoxButton.getComboIcon,Returns the icon of theJComboBox.
javax.swing.plaf.metal.MetalComboBoxButton.isIconOnly,Returns theisIconOnlyvalue.
javax.swing.plaf.metal.MetalComboBoxButton.setComboBox,Sets theJComboBox.
javax.swing.plaf.metal.MetalComboBoxButton.setComboIcon,Sets the icon of theJComboBox.
javax.swing.plaf.metal.MetalComboBoxButton.setIconOnly,IfisIconOnlyistruethen only icon is painted.
javax.swing.plaf.metal.MetalComboBoxIcon.getIconHeight,Created a stub to satisfy the interface.
javax.swing.plaf.metal.MetalComboBoxIcon.paintIcon,Paints the horizontal bars for the
javax.swing.plaf.metal.MetalComboBoxUI.createUI,Constructs an instance ofMetalComboBoxUI.
javax.swing.plaf.metal.MetalComboBoxUI.editablePropertyChanged,Deprecated.As of Java 2 platform v1.4.
javax.swing.plaf.metal.MetalComboBoxUI.layoutComboBox,Lays out theJComboBoxin theparentcontainer.
javax.swing.plaf.metal.MetalComboBoxUI.paintCurrentValue,If necessary paints the currently selected item.
javax.swing.plaf.metal.MetalComboBoxUI.paintCurrentValueBackground,If necessary paints the background of the currently selected item.
javax.swing.plaf.metal.MetalComboBoxUI.superLayout,Lays out the parent container.
javax.swing.plaf.metal.MetalDesktopIconUI.createUI,Constructs a new instance ofMetalDesktopIconUI.
javax.swing.plaf.metal.MetalFileChooserUI.getDepth,Returns the depth ofi-th file.
javax.swing.plaf.metal.MetalFileChooserUI.setSelectedItem,Set the selected item.
javax.swing.plaf.metal.MetalFileChooserUI.addControlButtons,Adds control buttons to bottom panel.
javax.swing.plaf.metal.MetalFileChooserUI.createActionMap,Constructs an instance ofActionMap.
javax.swing.plaf.metal.MetalFileChooserUI.createDetailsView,Constructs a details view.
javax.swing.plaf.metal.MetalFileChooserUI.createDirectoryComboBoxModel,Constructs a new instance ofDataModelforDirectoryComboBox.
javax.swing.plaf.metal.MetalFileChooserUI.createFilterComboBoxModel,Constructs aDataModelfor typesComboBox.
javax.swing.plaf.metal.MetalFileChooserUI.createFilterComboBoxRenderer,Constructs aRendererfor typesComboBox.
javax.swing.plaf.metal.MetalFileChooserUI.createListSelectionListener,Creates a selection listener for the list of files and directories.
javax.swing.plaf.metal.MetalFileChooserUI.createUI,Constructs a new instance ofMetalFileChooserUI.
javax.swing.plaf.metal.MetalFileChooserUI.getActionMap,Returns an instance ofActionMap.
javax.swing.plaf.metal.MetalFileChooserUI.getBottomPanel,Returns the bottom panel.
javax.swing.plaf.metal.MetalFileChooserUI.getButtonPanel,Returns the button panel.
javax.swing.plaf.metal.MetalFileChooserUI.getMaximumSize,Returns the maximum size of theJFileChooser.
javax.swing.plaf.metal.MetalFileChooserUI.getMinimumSize,Returns the minimum size of theJFileChooser.
javax.swing.plaf.metal.MetalFileChooserUI.getPreferredSize,Returns the preferred size of the specifiedJFileChooser.
javax.swing.plaf.metal.MetalFileChooserUI.removeControlButtons,Removes control buttons from bottom panel.
javax.swing.plaf.metal.MetalFileChooserUI.valueChanged,Invokes whenListSelectionEventoccurs.
javax.swing.plaf.metal.MetalIconFactory.getAdditionalHeight,Returns an additional height of the icon.
javax.swing.plaf.metal.MetalIconFactory.getShift,Returns a shift of the icon.
javax.swing.plaf.metal.MetalIconFactory.getCheckBoxIcon,Returns a checkbox icon.
javax.swing.plaf.metal.MetalIconFactory.getCheckBoxMenuItemIcon,Returns an icon to be used byJCheckBoxMenuItem.
javax.swing.plaf.metal.MetalIconFactory.getFileChooserDetailViewIcon,Returns the instance ofFileChooserDetailViewIcon.
javax.swing.plaf.metal.MetalIconFactory.getFileChooserHomeFolderIcon,Returns the instance ofFileChooserHomeFolderIcon.
javax.swing.plaf.metal.MetalIconFactory.getFileChooserListViewIcon,Returns the instance ofFileChooserListViewIcon.
javax.swing.plaf.metal.MetalIconFactory.getFileChooserNewFolderIcon,Returns the instance ofFileChooserNewFolderIcon.
javax.swing.plaf.metal.MetalIconFactory.getFileChooserUpFolderIcon,Returns the instance ofFileChooserUpFolderIcon.
javax.swing.plaf.metal.MetalIconFactory.getHorizontalSliderThumbIcon,Returns a thumb icon to be used by horizontal slider.
javax.swing.plaf.metal.MetalIconFactory.getInternalFrameAltMaximizeIcon,Constructs a new instance ofInternalFrameAltMaximizeIcon.
javax.swing.plaf.metal.MetalIconFactory.getInternalFrameCloseIcon,Constructs a new instance ofInternalFrameCloseIcon.
javax.swing.plaf.metal.MetalIconFactory.getInternalFrameDefaultMenuIcon,Returns the instance ofInternalFrameDefaultMenuIcon.
javax.swing.plaf.metal.MetalIconFactory.getInternalFrameMaximizeIcon,Constructs a new instance ofInternalFrameMaximizeIcon.
javax.swing.plaf.metal.MetalIconFactory.getInternalFrameMinimizeIcon,Constructs a new instance ofInternalFrameMinimizeIcon.
javax.swing.plaf.metal.MetalIconFactory.getMenuArrowIcon,Returns an icon to be used byJMenu.
javax.swing.plaf.metal.MetalIconFactory.getMenuItemArrowIcon,Returns an icon to be used byJMenuItem.
javax.swing.plaf.metal.MetalIconFactory.getRadioButtonIcon,Returns the instance ofRadioButtonIcon.
javax.swing.plaf.metal.MetalIconFactory.getRadioButtonMenuItemIcon,Returns an icon to be used byJRadioButtonMenuItem.
javax.swing.plaf.metal.MetalIconFactory.getTreeComputerIcon,Returns the instance ofTreeComputerIcon.
javax.swing.plaf.metal.MetalIconFactory.getTreeControlIcon,Constructs a new instance ofTreeControlIcon.
javax.swing.plaf.metal.MetalIconFactory.getTreeFloppyDriveIcon,Returns the instance ofTreeFloppyDriveIcon.
javax.swing.plaf.metal.MetalIconFactory.getTreeFolderIcon,Constructs a new instance ofTreeFolderIcon.
javax.swing.plaf.metal.MetalIconFactory.getTreeHardDriveIcon,Returns the instance ofTreeHardDriveIcon.
javax.swing.plaf.metal.MetalIconFactory.getTreeLeafIcon,Constructs a new instance ofTreeLeafIcon.
javax.swing.plaf.metal.MetalIconFactory.getVerticalSliderThumbIcon,Returns a thumb icon to be used by vertical slider.
javax.swing.plaf.metal.MetalIconFactory.paintMe,Paints theTreeControlIcon.
javax.swing.plaf.metal.MetalInternalFrameTitlePane.addSubComponents,Override the parent's method avoid creating a menu bar.
javax.swing.plaf.metal.MetalInternalFrameTitlePane.addSystemMenuItems,Override the parent's method to do nothing.
javax.swing.plaf.metal.MetalInternalFrameTitlePane.paintPalette,Paints palette.
javax.swing.plaf.metal.MetalInternalFrameTitlePane.setPalette,"Ifbistrue, sets palette icons."
javax.swing.plaf.metal.MetalInternalFrameUI.createBorderListener,Returns theMouseInputAdapterthat will be installed  on the TitlePane.
javax.swing.plaf.metal.MetalInternalFrameUI.createUI,Constructs a newMetalInternalFrameUIinstance.
javax.swing.plaf.metal.MetalInternalFrameUI.setPalette,"IfisPaletteistrue, sets palette border and title"
javax.swing.plaf.metal.MetalLabelUI.createUI,Returns an instance ofMetalLabelUI.
javax.swing.plaf.metal.MetalLabelUI.paintDisabledText,Just paint the text gray (Label.disabledForeground) rather than  in the labels foreground color.
javax.swing.plaf.metal.MetalLookAndFeel.createDefaultTheme,Ensures the currentMetalThemeisnon-null.
javax.swing.plaf.metal.MetalLookAndFeel.getAcceleratorForeground,Returns the accelerator foreground color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getAcceleratorSelectedForeground,Returns the accelerator selected foreground color of the  current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getBlack,Returns the black color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControl,Returns the control color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControlDarkShadow,Returns the control dark shadow color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControlDisabled,Returns the control disabled color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControlHighlight,Returns the control highlight color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControlInfo,Returns the control info color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControlShadow,Returns the control shadow color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControlTextColor,Returns the control text color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getControlTextFont,Returns the control text font of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getCurrentTheme,Return the theme currently being used byMetalLookAndFeel.
javax.swing.plaf.metal.MetalLookAndFeel.getDescription,Returns a short description of this look and feel.
javax.swing.plaf.metal.MetalLookAndFeel.getDesktopColor,Returns the desktop color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getFocusColor,Returns the focus color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getHighlightedTextColor,Returns the highlighted text color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getID,Returns an identifier for this look and feel.
javax.swing.plaf.metal.MetalLookAndFeel.getInactiveControlTextColor,Returns the inactive control text color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getInactiveSystemTextColor,Returns the inactive system text color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getLayoutStyle,Returns aLayoutStyleimplementing the Java look and feel  design guidelines as specified athttp://www.oracle.com/technetwork/java/hig-136467.html.
javax.swing.plaf.metal.MetalLookAndFeel.getMenuBackground,Returns the menu background color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getMenuDisabledForeground,Returns the menu disabled foreground color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getMenuForeground,Returns the menu foreground color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getMenuSelectedBackground,Returns the menu selected background color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getMenuSelectedForeground,Returns the menu selected foreground color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getMenuTextFont,Returns the menu text font of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getName,Returns the name of this look and feel.
javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControl,Returns the primary control color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlDarkShadow,Returns the primary control dark shadow color of the current  theme.
javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlHighlight,Returns the primary control highlight color of the current  theme.
javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlInfo,Returns the primary control info color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlShadow,Returns the primary control shadow color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getSeparatorBackground,Returns the separator background color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getSeparatorForeground,Returns the separator foreground color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getSubTextFont,Returns the sub-text font of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getSupportsWindowDecorations,Returnstrue; metal can provideWindowdecorations.
javax.swing.plaf.metal.MetalLookAndFeel.getSystemTextColor,Returns the system text color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getSystemTextFont,Returns the system text font of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getTextHighlightColor,Returns the text highlight color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getUserTextColor,Returns the user text color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getUserTextFont,Returns the user text font of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getWhite,Returns the white color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getWindowBackground,Returns the window background color of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleBackground,Returns the window title background color of the current  theme.
javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleFont,Returns the window title font of the current theme.
javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleForeground,Returns the window title foreground color of the current  theme.
javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleInactiveBackground,Returns the window title inactive background color of the current  theme.
javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleInactiveForeground,Returns the window title inactive foreground color of the current  theme.
javax.swing.plaf.metal.MetalLookAndFeel.initClassDefaults,Populatestablewith mappings fromuiClassIDto  the fully qualified name of the ui class.
javax.swing.plaf.metal.MetalLookAndFeel.initComponentDefaults,Populatestablewith the defaults for metal.
javax.swing.plaf.metal.MetalLookAndFeel.isNativeLookAndFeel,Returnsfalse;MetalLookAndFeelis not a native  look and feel.
javax.swing.plaf.metal.MetalLookAndFeel.isSupportedLookAndFeel,Returnstrue;MetalLookAndFeelcan be run on  any platform.
javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme,Set the theme used byMetalLookAndFeel.
javax.swing.plaf.metal.MetalMenuBarUI.createUI,Creates theComponentUIimplementation for the passed  in component.
javax.swing.plaf.metal.MetalMenuBarUI.installUI,Configures the specified component appropriate for the metal look and  feel.
javax.swing.plaf.metal.MetalPopupMenuSeparatorUI.createUI,Constructs a newMetalPopupMenuSeparatorUIinstance.
javax.swing.plaf.metal.MetalProgressBarUI.createUI,Constructs an instance ofMetalProgressBarUI.
javax.swing.plaf.metal.MetalProgressBarUI.paintDeterminate,Draws a bit of special highlighting on the progress bar.
javax.swing.plaf.metal.MetalProgressBarUI.paintIndeterminate,Draws a bit of special highlighting on the progress bar  and bouncing box.
javax.swing.plaf.metal.MetalRadioButtonUI.createUI,Returns an instance ofMetalRadioButtonUI.
javax.swing.plaf.metal.MetalRadioButtonUI.getDisabledTextColor,Returns the color of the disabled text.
javax.swing.plaf.metal.MetalRadioButtonUI.getFocusColor,Returns the color of the focusedJRadioButton.
javax.swing.plaf.metal.MetalRadioButtonUI.getSelectColor,Returns the color of the selectedJRadioButton.
javax.swing.plaf.metal.MetalRootPaneUI.createUI,Creates a UI for aJRootPane.
javax.swing.plaf.metal.MetalRootPaneUI.installUI,Invokes supers implementation ofinstallUIto install  the necessary state onto the passed inJRootPaneto render the metal look and feel implementation ofRootPaneUI.
javax.swing.plaf.metal.MetalRootPaneUI.propertyChange,Invoked when a property changes.
javax.swing.plaf.metal.MetalRootPaneUI.uninstallUI,Invokes supers implementation to uninstall any of its state.
javax.swing.plaf.metal.MetalScrollBarUI.createDecreaseButton,Returns the view that represents the decrease view.
javax.swing.plaf.metal.MetalScrollBarUI.createIncreaseButton,Returns the view that represents the increase view.
javax.swing.plaf.metal.MetalScrollBarUI.createUI,Constructs a newMetalScrollBarUIinstance.
javax.swing.plaf.metal.MetalScrollBarUI.setThumbBounds,This is overridden only to increase the invalid area.
javax.swing.plaf.metal.MetalScrollButton.getButtonWidth,Returns the width of the button.
javax.swing.plaf.metal.MetalScrollButton.setFreeStanding,Sets the free standing value.
javax.swing.plaf.metal.MetalScrollPaneUI.createScrollBarSwapListener,Returns a newPropertyChangeListenerfor scroll bar swap events.
javax.swing.plaf.metal.MetalScrollPaneUI.createUI,Constructs a newMetalScrollPaneUI.
javax.swing.plaf.metal.MetalScrollPaneUI.uninstallListeners,Deprecated.- Replaced byBasicScrollPaneUI.uninstallListeners(JComponent)
javax.swing.plaf.metal.MetalSeparatorUI.createUI,Constructs a newMetalSeparatorUIinstance.
javax.swing.plaf.metal.MetalSliderUI.createPropertyChangeListener,ConstructsMetalPropertyListener.
javax.swing.plaf.metal.MetalSliderUI.createUI,Constructs aMetalSliderUIinstance.
javax.swing.plaf.metal.MetalSliderUI.getThumbOverhang,Returns the amount that the thumb goes past the slide bar.
javax.swing.plaf.metal.MetalSliderUI.getTickLength,Gets the height of the tick area for horizontal sliders and the width of the  tick area for vertical sliders.
javax.swing.plaf.metal.MetalSliderUI.getTrackLength,Returns the longer dimension of the slide bar.
javax.swing.plaf.metal.MetalSliderUI.getTrackWidth,Returns the shorter dimension of the track.
javax.swing.plaf.metal.MetalSplitPaneUI.createUI,Creates a newMetalSplitPaneUIinstance
javax.swing.plaf.metal.MetalTabbedPaneUI.createUI,ConstructsMetalTabbedPaneUI.
javax.swing.plaf.metal.MetalTabbedPaneUI.getColorForGap,Returns the color of the gap.
javax.swing.plaf.metal.MetalTabbedPaneUI.getTabLabelShiftX,Overridden to do nothing for the Java L&F.
javax.swing.plaf.metal.MetalTabbedPaneUI.paintBottomTabBorder,Paints the bottom tab border.
javax.swing.plaf.metal.MetalTabbedPaneUI.paintHighlightBelowTab,Paints highlights below tab.
javax.swing.plaf.metal.MetalTabbedPaneUI.paintLeftTabBorder,Paints the left tab border.
javax.swing.plaf.metal.MetalTabbedPaneUI.paintRightTabBorder,Paints the right tab border.
javax.swing.plaf.metal.MetalTabbedPaneUI.paintTopTabBorder,Paints the top tab border.
javax.swing.plaf.metal.MetalTabbedPaneUI.shouldFillGap,Returnstrueif the gap should be filled.
javax.swing.plaf.metal.MetalTabbedPaneUI.shouldRotateTabRuns,Returnstrueif tab runs should be rotated.
javax.swing.plaf.metal.MetalTextFieldUI.createUI,ConstructsMetalTextFieldUI.
javax.swing.plaf.metal.MetalTheme.addCustomEntriesToTable,Adds values specific to this theme to the defaults table.
javax.swing.plaf.metal.MetalTheme.getAcceleratorForeground,Returns the accelerator foreground color.
javax.swing.plaf.metal.MetalTheme.getAcceleratorSelectedForeground,Returns the accelerator selected foreground color.
javax.swing.plaf.metal.MetalTheme.getBlack,Returns the black color.
javax.swing.plaf.metal.MetalTheme.getControl,Returns the control color.
javax.swing.plaf.metal.MetalTheme.getControlDarkShadow,Returns the control dark shadow color.
javax.swing.plaf.metal.MetalTheme.getControlDisabled,Returns the control disabled color.
javax.swing.plaf.metal.MetalTheme.getControlHighlight,Returns the control highlight color.
javax.swing.plaf.metal.MetalTheme.getControlInfo,Returns the control info color.
javax.swing.plaf.metal.MetalTheme.getControlShadow,Returns the control shadow color.
javax.swing.plaf.metal.MetalTheme.getControlTextColor,Returns the control text color.
javax.swing.plaf.metal.MetalTheme.getDesktopColor,Returns the desktop color.
javax.swing.plaf.metal.MetalTheme.getHighlightedTextColor,Returns the highlighted text color.
javax.swing.plaf.metal.MetalTheme.getInactiveControlTextColor,Returns the inactive control text color.
javax.swing.plaf.metal.MetalTheme.getInactiveSystemTextColor,Returns the inactive system text color.
javax.swing.plaf.metal.MetalTheme.getMenuBackground,Returns the menu background color.
javax.swing.plaf.metal.MetalTheme.getMenuDisabledForeground,Returns the menu disabled foreground color.
javax.swing.plaf.metal.MetalTheme.getMenuForeground,Returns the menu foreground color.
javax.swing.plaf.metal.MetalTheme.getMenuSelectedBackground,Returns the menu selected background color.
javax.swing.plaf.metal.MetalTheme.getMenuSelectedForeground,Returns the menu selected foreground color.
javax.swing.plaf.metal.MetalTheme.getPrimaryControl,Returns the primary control color.
javax.swing.plaf.metal.MetalTheme.getPrimaryControlDarkShadow,Returns the primary control dark shadow color.
javax.swing.plaf.metal.MetalTheme.getPrimaryControlHighlight,Returns the primary control highlight color.
javax.swing.plaf.metal.MetalTheme.getPrimaryControlInfo,Returns the primary control info color.
javax.swing.plaf.metal.MetalTheme.getPrimaryControlShadow,Returns the primary control shadow color.
javax.swing.plaf.metal.MetalTheme.getSeparatorBackground,Returns the separator background color.
javax.swing.plaf.metal.MetalTheme.getSeparatorForeground,Returns the separator foreground color.
javax.swing.plaf.metal.MetalTheme.getSystemTextColor,Returns the system text color.
javax.swing.plaf.metal.MetalTheme.getTextHighlightColor,Returns the text highlight color.
javax.swing.plaf.metal.MetalTheme.getUserTextColor,Returns the user text color.
javax.swing.plaf.metal.MetalTheme.getWhite,Returns the white color.
javax.swing.plaf.metal.MetalTheme.getWindowBackground,Returns the window background color.
javax.swing.plaf.metal.MetalTheme.getWindowTitleBackground,Returns the window title background color.
javax.swing.plaf.metal.MetalTheme.getWindowTitleForeground,Returns the window title foreground color.
javax.swing.plaf.metal.MetalTheme.getWindowTitleInactiveBackground,Returns the window title inactive background color.
javax.swing.plaf.metal.MetalTheme.getWindowTitleInactiveForeground,Returns the window title inactive foreground color.
javax.swing.plaf.metal.MetalToggleButtonUI.createUI,Constructs theMetalToogleButtonUI.
javax.swing.plaf.metal.MetalToggleButtonUI.getFocusColor,Returns the color of a focused toggle button.
javax.swing.plaf.metal.MetalToggleButtonUI.getSelectColor,Returns the color of a selected button.
javax.swing.plaf.metal.MetalToggleButtonUI.paintIcon,Paints the appropriate icon of the buttonbin the  spaceiconRect.
javax.swing.plaf.metal.MetalToggleButtonUI.update,"If necessary paints the background of the component, then invokespaint."
javax.swing.plaf.metal.MetalToolBarUI.createContainerListener,Creates a container listener that will be added to the JToolBar.
javax.swing.plaf.metal.MetalToolBarUI.createRolloverListener,Creates a property change listener that will be added to the JToolBar.
javax.swing.plaf.metal.MetalToolBarUI.createUI,Constructs an instance ofMetalToolBarUI.
javax.swing.plaf.metal.MetalToolBarUI.setDragOffset,Sets the offset of the mouse cursor inside the DragWindow.
javax.swing.plaf.metal.MetalToolTipUI.createUI,Returns an instance of theMetalToolTipUI.
javax.swing.plaf.metal.MetalToolTipUI.getAcceleratorString,Returns the accelerator string.
javax.swing.plaf.metal.MetalToolTipUI.isAcceleratorHidden,"If the accelerator is hidden, the method returnstrue,  otherwise, returnsfalse."
javax.swing.plaf.metal.MetalTreeUI.createUI,Constructs theMetalTreeUI.
javax.swing.plaf.metal.MetalTreeUI.decodeLineStyle,Converts between the string passed into the client property  and the internal representation (currently and int)
javax.swing.plaf.metal.MetalTreeUI.isLocationInExpandControl,Returnstrueif a point with X coordinatemouseXand Y coordinatemouseYis in expanded control.
javax.swing.plaf.metal.MetalTreeUI.paintHorizontalSeparators,Paints the horizontal separators.
javax.swing.plaf.metal.OceanTheme.addCustomEntriesToTable,Add this theme's custom entries to the defaults table.
javax.swing.plaf.metal.OceanTheme.getName,"Return the name of this theme, ""Ocean""."
javax.swing.plaf.multi.MultiButtonUI.contains,Invokes thecontainsmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.createUI,Returns a multiplexing UI instance if any of the auxiliaryLookAndFeels supports this UI.
javax.swing.plaf.multi.MultiButtonUI.getAccessibleChild,Invokes thegetAccessibleChildmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.getAccessibleChildrenCount,Invokes thegetAccessibleChildrenCountmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.getMaximumSize,Invokes thegetMaximumSizemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.getMinimumSize,Invokes thegetMinimumSizemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.getPreferredSize,Invokes thegetPreferredSizemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.getUIs,Returns the list of UIs associated with this multiplexing UI.
javax.swing.plaf.multi.MultiButtonUI.installUI,Invokes theinstallUImethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.paint,Invokes thepaintmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.uninstallUI,Invokes theuninstallUImethod on each UI handled by this object.
javax.swing.plaf.multi.MultiButtonUI.update,Invokes theupdatemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiComboBoxUI.isFocusTraversable,Invokes theisFocusTraversablemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiComboBoxUI.isPopupVisible,Invokes theisPopupVisiblemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiComboBoxUI.setPopupVisible,Invokes thesetPopupVisiblemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiFileChooserUI.ensureFileIsVisible,Invokes theensureFileIsVisiblemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiFileChooserUI.getAcceptAllFileFilter,Invokes thegetAcceptAllFileFiltermethod on each UI handled by this object.
javax.swing.plaf.multi.MultiFileChooserUI.getApproveButtonText,Invokes thegetApproveButtonTextmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiFileChooserUI.getDialogTitle,Invokes thegetDialogTitlemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiFileChooserUI.getFileView,Invokes thegetFileViewmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiFileChooserUI.rescanCurrentDirectory,Invokes therescanCurrentDirectorymethod on each UI handled by this object.
javax.swing.plaf.multi.MultiListUI.getCellBounds,Invokes thegetCellBoundsmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiListUI.indexToLocation,Invokes theindexToLocationmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiListUI.locationToIndex,Invokes thelocationToIndexmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiLookAndFeel.createUIs,"Creates theComponentUIobjects  required to present  thetargetcomponent,  placing the objects in theuisvector and  returning theComponentUIobject  that best represents the component's UI."
javax.swing.plaf.multi.MultiLookAndFeel.getDefaults,"Creates, initializes, and returns  the look and feel specific defaults."
javax.swing.plaf.multi.MultiLookAndFeel.getDescription,Returns a one-line description of this look and feel.
javax.swing.plaf.multi.MultiLookAndFeel.getID,"Returns a string, suitable for use by applications/services,  that identifies this look and feel."
javax.swing.plaf.multi.MultiLookAndFeel.getName,"Returns a string, suitable for use in menus,  that identifies this look and feel."
javax.swing.plaf.multi.MultiLookAndFeel.isNativeLookAndFeel,Returnsfalse;  this look and feel is not native to any platform.
javax.swing.plaf.multi.MultiLookAndFeel.isSupportedLookAndFeel,Returnstrue;  every platform permits this look and feel.
javax.swing.plaf.multi.MultiLookAndFeel.uisToArray,"Creates an array,  populates it with UI objects from the passed-in vector,  and returns the array."
javax.swing.plaf.multi.MultiOptionPaneUI.containsCustomComponents,Invokes thecontainsCustomComponentsmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiOptionPaneUI.selectInitialValue,Invokes theselectInitialValuemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiPopupMenuUI.getPopup,Invokes thegetPopupmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiPopupMenuUI.isPopupTrigger,Invokes theisPopupTriggermethod on each UI handled by this object.
javax.swing.plaf.multi.MultiSplitPaneUI.finishedPaintingChildren,Invokes thefinishedPaintingChildrenmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiSplitPaneUI.getDividerLocation,Invokes thegetDividerLocationmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiSplitPaneUI.getMaximumDividerLocation,Invokes thegetMaximumDividerLocationmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiSplitPaneUI.getMinimumDividerLocation,Invokes thegetMinimumDividerLocationmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiSplitPaneUI.resetToPreferredSizes,Invokes theresetToPreferredSizesmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiSplitPaneUI.setDividerLocation,Invokes thesetDividerLocationmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTabbedPaneUI.getTabBounds,Invokes thegetTabBoundsmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTabbedPaneUI.getTabRunCount,Invokes thegetTabRunCountmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTabbedPaneUI.tabForCoordinate,Invokes thetabForCoordinatemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTextUI.damageRange,Invokes thedamageRangemethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTextUI.getEditorKit,Invokes thegetEditorKitmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTextUI.getNextVisualPositionFrom,Invokes thegetNextVisualPositionFrommethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTextUI.getRootView,Invokes thegetRootViewmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTextUI.getToolTipText,Invokes thegetToolTipTextmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.cancelEditing,Invokes thecancelEditingmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.getClosestPathForLocation,Invokes thegetClosestPathForLocationmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.getEditingPath,Invokes thegetEditingPathmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.getPathBounds,Invokes thegetPathBoundsmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.getPathForRow,Invokes thegetPathForRowmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.getRowCount,Invokes thegetRowCountmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.getRowForPath,Invokes thegetRowForPathmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.isEditing,Invokes theisEditingmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.startEditingAtPath,Invokes thestartEditingAtPathmethod on each UI handled by this object.
javax.swing.plaf.multi.MultiTreeUI.stopEditing,Invokes thestopEditingmethod on each UI handled by this object.
javax.swing.plaf.nimbus.AbstractRegionPainter.configureGraphics,Configures the given Graphics2D.
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeAnchorX,"Decodes and returns a float value representing the actual pixel location for  the anchor point given the encoded X value of the control point, and the offset  distance to the anchor from that control point."
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeAnchorY,"Decodes and returns a float value representing the actual pixel location for  the anchor point given the encoded Y value of the control point, and the offset  distance to the anchor from that control point."
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeColor,"Decodes and returns a color, which is derived from a offset between two  other colors."
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeColor,"Decodes and returns a color, which is derived from a base color in UI  defaults."
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeGradient,"Given parameters for creating a LinearGradientPaint, this method will  create and return a linear gradient paint."
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeRadialGradient,"Given parameters for creating a RadialGradientPaint, this method will  create and return a radial gradient paint."
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeX,Decodes and returns a float value representing the actual pixel location for  the given encoded X value.
javax.swing.plaf.nimbus.AbstractRegionPainter.decodeY,Decodes and returns a float value representing the actual pixel location for  the given encoded y value.
javax.swing.plaf.nimbus.AbstractRegionPainter.doPaint,Actually performs the painting operation.
javax.swing.plaf.nimbus.AbstractRegionPainter.getComponentColor,Get a color property from the given JComponent.
javax.swing.plaf.nimbus.AbstractRegionPainter.getExtendedCacheKeys,Get any extra attributes which the painter implementation would like  to include in the image cache lookups.
javax.swing.plaf.nimbus.AbstractRegionPainter.getPaintContext,Gets the PaintContext for this painting operation.
javax.swing.plaf.nimbus.AbstractRegionPainter.paint,Renders to the givenGraphics2Dobject.
javax.swing.plaf.nimbus.NimbusLookAndFeel.getDerivedColor,"Decodes and returns a color, which is derived from an offset between two  other colors."
javax.swing.plaf.nimbus.NimbusLookAndFeel.getDerivedColor,"Get a derived color, derived colors are shared instances and is color  value will change when its parent UIDefault color changes."
javax.swing.plaf.nimbus.NimbusLookAndFeel.getDescription,Returns a textual description of this look and feel.
javax.swing.plaf.nimbus.NimbusLookAndFeel.getName,Return a short string that identifies this look and feel.
javax.swing.plaf.nimbus.NimbusLookAndFeel.getStyle,Gets the style associated with the given component and region.
javax.swing.plaf.nimbus.NimbusLookAndFeel.initialize,Called by UIManager when this look and feel is installed.
javax.swing.plaf.nimbus.NimbusLookAndFeel.register,Registers a third party component with the NimbusLookAndFeel.
javax.swing.plaf.nimbus.NimbusLookAndFeel.shouldUpdateStyleOnAncestorChanged,Returns whether or not the UIs should update theirSynthStylesfrom theSynthStyleFactorywhen the ancestor of theJComponentchanges.
javax.swing.plaf.nimbus.NimbusLookAndFeel.shouldUpdateStyleOnEvent,Returns whether or not the UIs should update their styles when a  particular event occurs.
javax.swing.plaf.nimbus.NimbusLookAndFeel.uninitialize,Called by UIManager when this look and feel is uninstalled.
javax.swing.plaf.nimbus.NimbusStyle.get,Getter for a region specific style property.
javax.swing.plaf.nimbus.NimbusStyle.getBackgroundPainter,"Gets the appropriate background Painter, if there is one, for the state  specified in the given SynthContext."
javax.swing.plaf.nimbus.NimbusStyle.getBorderPainter,"Gets the appropriate border Painter, if there is one, for the state  specified in the given SynthContext."
javax.swing.plaf.nimbus.NimbusStyle.getColorForState,Returns the color for the specified state.
javax.swing.plaf.nimbus.NimbusStyle.getFontForState,Returns the font for the specified state.
javax.swing.plaf.nimbus.NimbusStyle.getForegroundPainter,"Gets the appropriate foreground Painter, if there is one, for the state  specified in the given SynthContext."
javax.swing.plaf.nimbus.NimbusStyle.getInsets,Returns the Insets that are used to calculate sizing information.
javax.swing.plaf.nimbus.NimbusStyle.getPainter,Returns theSynthPainterthat will be used for painting.
javax.swing.plaf.nimbus.NimbusStyle.installDefaults,Installs the necessary state from this Style on theJComponentfromcontext.
javax.swing.plaf.nimbus.NimbusStyle.isOpaque,Returns true if the region is opaque.
javax.swing.plaf.nimbus.State.isInState,Gets whether the specified JComponent is in the custom state represented  by this class.
javax.swing.plaf.synth.ColorType.getID,"Returns a unique id, as an integer, for this ColorType."
javax.swing.plaf.synth.ColorType.toString,Returns the textual description of thisColorType.
javax.swing.plaf.synth.Region.getName,Returns the name of the region.
javax.swing.plaf.synth.Region.isSubregion,"Returns true if the Region is a subregion of a Component, otherwise  false."
javax.swing.plaf.synth.Region.toString,Returns the name of the Region.
javax.swing.plaf.synth.SynthButtonUI.createUI,Creates a new UI object for the given component.
javax.swing.plaf.synth.SynthButtonUI.getContext,Returns the Context for the specified component.
javax.swing.plaf.synth.SynthButtonUI.getIcon,Returns the Icon to use for painting the button.
javax.swing.plaf.synth.SynthButtonUI.getSizingIcon,Returns the Icon used in calculating the  preferred/minimum/maximum size.
javax.swing.plaf.synth.SynthButtonUI.paint,Paints the specified component according to the Look and Feel.
javax.swing.plaf.synth.SynthButtonUI.paintBorder,Paints the border.
javax.swing.plaf.synth.SynthButtonUI.update,Notifies this UI delegate to repaint the specified component.
javax.swing.plaf.synth.SynthComboBoxUI.getDefaultSize,Returns the default size of an empty display area of the combo box using  the current renderer and font.
javax.swing.plaf.synth.SynthContext.getComponent,Returns the hosting component containing the region.
javax.swing.plaf.synth.SynthContext.getComponentState,"Returns the state of the widget, which is a bitmask of the  values defined inSynthConstants."
javax.swing.plaf.synth.SynthContext.getRegion,Returns the Region identifying this state.
javax.swing.plaf.synth.SynthContext.getStyle,Returns the style associated with this Region.
javax.swing.plaf.synth.SynthGraphicsUtils.computeStringWidth,Returns the size of the passed in string.
javax.swing.plaf.synth.SynthGraphicsUtils.drawLine,Draws a line between the two end points.
javax.swing.plaf.synth.SynthGraphicsUtils.getMaximumCharHeight,Returns the maximum height of the Font from the passed in  SynthContext.
javax.swing.plaf.synth.SynthGraphicsUtils.getMaximumSize,Returns the maximum size needed to properly render an icon and text.
javax.swing.plaf.synth.SynthGraphicsUtils.getMinimumSize,Returns the minimum size needed to properly render an icon and text.
javax.swing.plaf.synth.SynthGraphicsUtils.getPreferredSize,Returns the preferred size needed to properly render an icon and text.
javax.swing.plaf.synth.SynthGraphicsUtils.layoutText,"Lays out text and an icon returning, by reference, the location to  place the icon and text."
javax.swing.plaf.synth.SynthGraphicsUtils.paintText,Paints text at the specified location.
javax.swing.plaf.synth.SynthGraphicsUtils.paintText,Paints an icon and text.
javax.swing.plaf.synth.SynthLabelUI.createUI,Returns the LabelUI implementation used for the skins look and feel.
javax.swing.plaf.synth.SynthLookAndFeel.createUI,Creates the Synth look and feelComponentUIfor  the passed inJComponent.
javax.swing.plaf.synth.SynthLookAndFeel.getDefaults,Returns the defaults for this SynthLookAndFeel.
javax.swing.plaf.synth.SynthLookAndFeel.getDescription,Returns a textual description of SynthLookAndFeel.
javax.swing.plaf.synth.SynthLookAndFeel.getRegion,Returns the Region for the JComponentc.
javax.swing.plaf.synth.SynthLookAndFeel.getStyle,Gets a SynthStyle for the specified region of the specified component.
javax.swing.plaf.synth.SynthLookAndFeel.getStyleFactory,Returns the current SynthStyleFactory.
javax.swing.plaf.synth.SynthLookAndFeel.isNativeLookAndFeel,"Returns false, SynthLookAndFeel is not a native look and feel."
javax.swing.plaf.synth.SynthLookAndFeel.isSupportedLookAndFeel,"Returns true, SynthLookAndFeel is always supported."
javax.swing.plaf.synth.SynthLookAndFeel.load,Loads the set ofSynthStyles that will be used by  thisSynthLookAndFeel.
javax.swing.plaf.synth.SynthLookAndFeel.setStyleFactory,Sets the SynthStyleFactory that the UI classes provided by  synth will use to obtain a SynthStyle.
javax.swing.plaf.synth.SynthLookAndFeel.updateStyles,"Updates the style associated withc, and all its children."
javax.swing.plaf.synth.SynthOptionPaneUI.createMessageArea,Called fromBasicOptionPaneUI.installComponents()to create aContainercontaining the body of the message.
javax.swing.plaf.synth.SynthPainter.paintArrowButtonBackground,Paints the background of an arrow button.
javax.swing.plaf.synth.SynthPainter.paintArrowButtonBorder,Paints the border of an arrow button.
javax.swing.plaf.synth.SynthPainter.paintArrowButtonForeground,Paints the foreground of an arrow button.
javax.swing.plaf.synth.SynthPainter.paintButtonBackground,Paints the background of a button.
javax.swing.plaf.synth.SynthPainter.paintButtonBorder,Paints the border of a button.
javax.swing.plaf.synth.SynthPainter.paintCheckBoxBackground,Paints the background of a check box.
javax.swing.plaf.synth.SynthPainter.paintCheckBoxBorder,Paints the border of a check box.
javax.swing.plaf.synth.SynthPainter.paintCheckBoxMenuItemBackground,Paints the background of a check box menu item.
javax.swing.plaf.synth.SynthPainter.paintCheckBoxMenuItemBorder,Paints the border of a check box menu item.
javax.swing.plaf.synth.SynthPainter.paintColorChooserBackground,Paints the background of a color chooser.
javax.swing.plaf.synth.SynthPainter.paintColorChooserBorder,Paints the border of a color chooser.
javax.swing.plaf.synth.SynthPainter.paintComboBoxBackground,Paints the background of a combo box.
javax.swing.plaf.synth.SynthPainter.paintComboBoxBorder,Paints the border of a combo box.
javax.swing.plaf.synth.SynthPainter.paintDesktopIconBackground,Paints the background of a desktop icon.
javax.swing.plaf.synth.SynthPainter.paintDesktopIconBorder,Paints the border of a desktop icon.
javax.swing.plaf.synth.SynthPainter.paintDesktopPaneBackground,Paints the background of a desktop pane.
javax.swing.plaf.synth.SynthPainter.paintEditorPaneBackground,Paints the background of an editor pane.
javax.swing.plaf.synth.SynthPainter.paintEditorPaneBorder,Paints the border of an editor pane.
javax.swing.plaf.synth.SynthPainter.paintFileChooserBackground,Paints the background of a file chooser.
javax.swing.plaf.synth.SynthPainter.paintFileChooserBorder,Paints the border of a file chooser.
javax.swing.plaf.synth.SynthPainter.paintFormattedTextFieldBackground,Paints the background of a formatted text field.
javax.swing.plaf.synth.SynthPainter.paintFormattedTextFieldBorder,Paints the border of a formatted text field.
javax.swing.plaf.synth.SynthPainter.paintInternalFrameBackground,Paints the background of an internal frame.
javax.swing.plaf.synth.SynthPainter.paintInternalFrameBorder,Paints the border of an internal frame.
javax.swing.plaf.synth.SynthPainter.paintInternalFrameTitlePaneBackground,Paints the background of an internal frame title pane.
javax.swing.plaf.synth.SynthPainter.paintInternalFrameTitlePaneBorder,Paints the border of an internal frame title pane.
javax.swing.plaf.synth.SynthPainter.paintLabelBackground,Paints the background of a label.
javax.swing.plaf.synth.SynthPainter.paintLabelBorder,Paints the border of a label.
javax.swing.plaf.synth.SynthPainter.paintListBackground,Paints the background of a list.
javax.swing.plaf.synth.SynthPainter.paintListBorder,Paints the border of a list.
javax.swing.plaf.synth.SynthPainter.paintMenuBackground,Paints the background of a menu.
javax.swing.plaf.synth.SynthPainter.paintMenuBarBackground,Paints the background of a menu bar.
javax.swing.plaf.synth.SynthPainter.paintMenuBarBorder,Paints the border of a menu bar.
javax.swing.plaf.synth.SynthPainter.paintMenuBorder,Paints the border of a menu.
javax.swing.plaf.synth.SynthPainter.paintMenuItemBackground,Paints the background of a menu item.
javax.swing.plaf.synth.SynthPainter.paintMenuItemBorder,Paints the border of a menu item.
javax.swing.plaf.synth.SynthPainter.paintOptionPaneBackground,Paints the background of an option pane.
javax.swing.plaf.synth.SynthPainter.paintOptionPaneBorder,Paints the border of an option pane.
javax.swing.plaf.synth.SynthPainter.paintPanelBackground,Paints the background of a panel.
javax.swing.plaf.synth.SynthPainter.paintPanelBorder,Paints the border of a panel.
javax.swing.plaf.synth.SynthPainter.paintPasswordFieldBackground,Paints the background of a password field.
javax.swing.plaf.synth.SynthPainter.paintPasswordFieldBorder,Paints the border of a password field.
javax.swing.plaf.synth.SynthPainter.paintPopupMenuBackground,Paints the background of a popup menu.
javax.swing.plaf.synth.SynthPainter.paintPopupMenuBorder,Paints the border of a popup menu.
javax.swing.plaf.synth.SynthPainter.paintProgressBarBackground,Paints the background of a progress bar.
javax.swing.plaf.synth.SynthPainter.paintProgressBarBorder,Paints the border of a progress bar.
javax.swing.plaf.synth.SynthPainter.paintProgressBarForeground,Paints the foreground of a progress bar. is responsible for  providing an indication of the progress of the progress bar.
javax.swing.plaf.synth.SynthPainter.paintRadioButtonBackground,Paints the background of a radio button.
javax.swing.plaf.synth.SynthPainter.paintRadioButtonBorder,Paints the border of a radio button.
javax.swing.plaf.synth.SynthPainter.paintRadioButtonMenuItemBackground,Paints the background of a radio button menu item.
javax.swing.plaf.synth.SynthPainter.paintRadioButtonMenuItemBorder,Paints the border of a radio button menu item.
javax.swing.plaf.synth.SynthPainter.paintRootPaneBackground,Paints the background of a root pane.
javax.swing.plaf.synth.SynthPainter.paintRootPaneBorder,Paints the border of a root pane.
javax.swing.plaf.synth.SynthPainter.paintScrollBarBackground,Paints the background of a scrollbar.
javax.swing.plaf.synth.SynthPainter.paintScrollBarBorder,Paints the border of a scrollbar.
javax.swing.plaf.synth.SynthPainter.paintScrollBarThumbBackground,Paints the background of the thumb of a scrollbar.
javax.swing.plaf.synth.SynthPainter.paintScrollBarThumbBorder,Paints the border of the thumb of a scrollbar.
javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBackground,Paints the background of the track of a scrollbar.
javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBorder,Paints the border of the track of a scrollbar.
javax.swing.plaf.synth.SynthPainter.paintScrollPaneBackground,Paints the background of a scroll pane.
javax.swing.plaf.synth.SynthPainter.paintScrollPaneBorder,Paints the border of a scroll pane.
javax.swing.plaf.synth.SynthPainter.paintSeparatorBackground,Paints the background of a separator.
javax.swing.plaf.synth.SynthPainter.paintSeparatorBorder,Paints the border of a separator.
javax.swing.plaf.synth.SynthPainter.paintSeparatorForeground,Paints the foreground of a separator.
javax.swing.plaf.synth.SynthPainter.paintSliderBackground,Paints the background of a slider.
javax.swing.plaf.synth.SynthPainter.paintSliderBorder,Paints the border of a slider.
javax.swing.plaf.synth.SynthPainter.paintSliderThumbBackground,Paints the background of the thumb of a slider.
javax.swing.plaf.synth.SynthPainter.paintSliderThumbBorder,Paints the border of the thumb of a slider.
javax.swing.plaf.synth.SynthPainter.paintSliderTrackBackground,Paints the background of the track of a slider.
javax.swing.plaf.synth.SynthPainter.paintSliderTrackBorder,Paints the border of the track of a slider.
javax.swing.plaf.synth.SynthPainter.paintSpinnerBackground,Paints the background of a spinner.
javax.swing.plaf.synth.SynthPainter.paintSpinnerBorder,Paints the border of a spinner.
javax.swing.plaf.synth.SynthPainter.paintSplitPaneBackground,Paints the background of a split pane.
javax.swing.plaf.synth.SynthPainter.paintSplitPaneBorder,Paints the border of a split pane.
javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerBackground,Paints the background of the divider of a split pane.
javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerForeground,Paints the foreground of the divider of a split pane.
javax.swing.plaf.synth.SynthPainter.paintSplitPaneDragDivider,"Paints the divider, when the user is dragging the divider, of a  split pane."
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneBackground,Paints the background of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneBorder,Paints the border of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneContentBackground,Paints the background of the area that contains the content of the  selected tab of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneContentBorder,Paints the border of the area that contains the content of the  selected tab of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBackground,Paints the background of the area behind the tabs of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBorder,Paints the border of the area behind the tabs of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBackground,Paints the background of a tab of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBorder,Paints the border of a tab of a tabbed pane.
javax.swing.plaf.synth.SynthPainter.paintTableBackground,Paints the background of a table.
javax.swing.plaf.synth.SynthPainter.paintTableBorder,Paints the border of a table.
javax.swing.plaf.synth.SynthPainter.paintTableHeaderBackground,Paints the background of the header of a table.
javax.swing.plaf.synth.SynthPainter.paintTableHeaderBorder,Paints the border of the header of a table.
javax.swing.plaf.synth.SynthPainter.paintTextAreaBackground,Paints the background of a text area.
javax.swing.plaf.synth.SynthPainter.paintTextAreaBorder,Paints the border of a text area.
javax.swing.plaf.synth.SynthPainter.paintTextFieldBackground,Paints the background of a text field.
javax.swing.plaf.synth.SynthPainter.paintTextFieldBorder,Paints the border of a text field.
javax.swing.plaf.synth.SynthPainter.paintTextPaneBackground,Paints the background of a text pane.
javax.swing.plaf.synth.SynthPainter.paintTextPaneBorder,Paints the border of a text pane.
javax.swing.plaf.synth.SynthPainter.paintToggleButtonBackground,Paints the background of a toggle button.
javax.swing.plaf.synth.SynthPainter.paintToggleButtonBorder,Paints the border of a toggle button.
javax.swing.plaf.synth.SynthPainter.paintToolBarBackground,Paints the background of a tool bar.
javax.swing.plaf.synth.SynthPainter.paintToolBarBorder,Paints the border of a tool bar.
javax.swing.plaf.synth.SynthPainter.paintToolBarContentBackground,Paints the background of the tool bar's content area.
javax.swing.plaf.synth.SynthPainter.paintToolBarContentBorder,Paints the border of the content area of a tool bar.
javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBackground,Paints the background of the window containing the tool bar when it  has been detached from its primary frame.
javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBorder,Paints the border of the window containing the tool bar when it  has been detached from it's primary frame.
javax.swing.plaf.synth.SynthPainter.paintToolTipBackground,Paints the background of a tool tip.
javax.swing.plaf.synth.SynthPainter.paintToolTipBorder,Paints the border of a tool tip.
javax.swing.plaf.synth.SynthPainter.paintTreeBackground,Paints the background of a tree.
javax.swing.plaf.synth.SynthPainter.paintTreeBorder,Paints the border of a tree.
javax.swing.plaf.synth.SynthPainter.paintTreeCellBackground,Paints the background of the row containing a cell in a tree.
javax.swing.plaf.synth.SynthPainter.paintTreeCellBorder,Paints the border of the row containing a cell in a tree.
javax.swing.plaf.synth.SynthPainter.paintTreeCellFocus,Paints the focus indicator for a cell in a tree when it has focus.
javax.swing.plaf.synth.SynthPainter.paintViewportBackground,Paints the background of the viewport.
javax.swing.plaf.synth.SynthPainter.paintViewportBorder,Paints the border of a viewport.
javax.swing.plaf.synth.SynthPanelUI.installListeners,Installs listeners into the panel.
javax.swing.plaf.synth.SynthPanelUI.uninstallListeners,Uninstalls listeners from the panel.
javax.swing.plaf.synth.SynthProgressBarUI.paintText,Paints the component's text.
javax.swing.plaf.synth.SynthScrollBarUI.createUI,Returns a UI.
javax.swing.plaf.synth.SynthScrollBarUI.paintThumb,Paints the scrollbar thumb.
javax.swing.plaf.synth.SynthScrollBarUI.paintTrack,Paints the scrollbar track.
javax.swing.plaf.synth.SynthSeparatorUI.installDefaults,Installs default setting.
javax.swing.plaf.synth.SynthSeparatorUI.uninstallDefaults,Uninstalls default setting.
javax.swing.plaf.synth.SynthSliderUI.layout,Lays out the slider.
javax.swing.plaf.synth.SynthSliderUI.paintThumb,Paints the slider thumb.
javax.swing.plaf.synth.SynthSliderUI.paintTrack,Paints the slider track.
javax.swing.plaf.synth.SynthSpinnerUI.createUI,Returns a new instance of SynthSpinnerUI.
javax.swing.plaf.synth.SynthSpinnerUI.installDefaults,"Initializes theJSpinnerborder,foreground, andbackground, properties  based on the corresponding ""Spinner.*"" properties from defaults table."
javax.swing.plaf.synth.SynthSplitPaneUI.createUI,Creates a new SynthSplitPaneUI instance
javax.swing.plaf.synth.SynthSplitPaneUI.uninstallListeners,Uninstalls the event listeners from the UI.
javax.swing.plaf.synth.SynthStyle.getBoolean,Convenience method to get a specific style property whose value is  an Boolean.
javax.swing.plaf.synth.SynthStyle.getFont,Returns the Font for the specified state.
javax.swing.plaf.synth.SynthStyle.getGraphicsUtils,Returns theSynthGraphicUtilsfor the specified context.
javax.swing.plaf.synth.SynthStyle.getIcon,Convenience method to get a specific style property whose value is  an Icon.
javax.swing.plaf.synth.SynthStyle.getInt,Convenience method to get a specific style property whose value is  aNumber.
javax.swing.plaf.synth.SynthStyle.getString,Convenience method to get a specific style property whose value is  a String.
javax.swing.plaf.synth.SynthStyle.uninstallDefaults,Uninstalls any state that this style installed on  theJComponentfromcontext.
javax.swing.plaf.synth.SynthStyleFactory.getStyle,Returns the style for the specified Component.
javax.swing.plaf.synth.SynthTableUI.installDefaults,"Initializes JTable properties, such as font, foreground, and background."
javax.swing.plaf.synth.SynthTextAreaUI.createUI,Creates a UI object for a JTextArea.
javax.swing.plaf.synth.SynthToolBarUI.createLayout,Creates aLayoutManagerto use with the toolbar.
javax.swing.plaf.synth.SynthToolBarUI.paint,Paints the toolbar.
javax.swing.plaf.synth.SynthToolBarUI.paintContent,Paints the toolbar content.
javax.swing.plaf.synth.SynthToolBarUI.setBorderToNonRollover,"This implementation does nothing, because therolloverproperty of theJToolBarclass is not used  in the Synth Look and Feel."
javax.swing.plaf.synth.SynthViewportUI.installDefaults,Installs defaults for a viewport.
javax.swing.plaf.synth.SynthViewportUI.installListeners,Installs listeners into the viewport.
javax.swing.plaf.synth.SynthViewportUI.uninstallDefaults,Uninstalls defaults from a viewport.
javax.swing.plaf.synth.SynthViewportUI.uninstallListeners,Uninstalls listeners from the viewport.
javax.swing.table.AbstractTableModel.findColumn,Returns a column given its name.
javax.swing.table.AbstractTableModel.fireTableCellUpdated,"Notifies all listeners that the value of the cell at[row, column]has been updated."
javax.swing.table.AbstractTableModel.fireTableChanged,Forwards the given notification event to allTableModelListenersthat registered  themselves as listeners for this table model.
javax.swing.table.AbstractTableModel.fireTableDataChanged,Notifies all listeners that all cell values in the table's  rows may have changed.
javax.swing.table.AbstractTableModel.fireTableRowsDeleted,"Notifies all listeners that rows in the range[firstRow, lastRow], inclusive, have been deleted."
javax.swing.table.AbstractTableModel.fireTableRowsInserted,"Notifies all listeners that rows in the range[firstRow, lastRow], inclusive, have been inserted."
javax.swing.table.AbstractTableModel.fireTableRowsUpdated,"Notifies all listeners that rows in the range[firstRow, lastRow], inclusive, have been updated."
javax.swing.table.AbstractTableModel.fireTableStructureChanged,Notifies all listeners that the table's structure has changed.
javax.swing.table.AbstractTableModel.getColumnClass,ReturnsObject.classregardless ofcolumnIndex.
javax.swing.table.AbstractTableModel.getColumnName,"Returns a default name for the column using spreadsheet conventions:   A, B, C, ..."
javax.swing.table.AbstractTableModel.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon thisAbstractTableModel.
javax.swing.table.AbstractTableModel.getTableModelListeners,Returns an array of all the table model listeners  registered on this model.
javax.swing.table.AbstractTableModel.isCellEditable,Returns false.
javax.swing.table.AbstractTableModel.setValueAt,This empty implementation is provided so users don't have to implement   this method if their data model is not editable.
javax.swing.table.DefaultTableCellRenderer.getTableCellRendererComponent,Returns the default table cell renderer.
javax.swing.table.DefaultTableCellRenderer.setBackground,OverridesJComponent.setBackgroundto assign  the unselected-background color to the specified color.
javax.swing.table.DefaultTableCellRenderer.setForeground,OverridesJComponent.setForegroundto assign  the unselected-foreground color to the specified color.
javax.swing.table.DefaultTableCellRenderer.setValue,Sets theStringobject for the cell being rendered tovalue.
javax.swing.table.DefaultTableCellRenderer.updateUI,Notification from theUIManagerthat the look and feel  [L&F] has changed.
javax.swing.table.DefaultTableColumnModel.addColumn,AppendsaColumnto the end of thetableColumnsarray.
javax.swing.table.DefaultTableColumnModel.addColumnModelListener,Adds a listener for table column model events.
javax.swing.table.DefaultTableColumnModel.createSelectionModel,Creates a new default list selection model.
javax.swing.table.DefaultTableColumnModel.getColumn,Returns theTableColumnobject for the column  atcolumnIndex.
javax.swing.table.DefaultTableColumnModel.getColumnCount,Returns the number of columns in thetableColumnsarray.
javax.swing.table.DefaultTableColumnModel.getColumnIndex,"Returns the index of the first column in thetableColumnsarray whose identifier is equal toidentifier,  when compared usingequals."
javax.swing.table.DefaultTableColumnModel.getColumnIndexAtX,"Returns the index of the column that lies at positionx,  or -1 if no column covers this point."
javax.swing.table.DefaultTableColumnModel.getColumnMargin,Returns the width margin forTableColumn.
javax.swing.table.DefaultTableColumnModel.getColumnModelListeners,Returns an array of all the column model listeners  registered on this model.
javax.swing.table.DefaultTableColumnModel.getColumns,Returns anEnumerationof all the columns in the model.
javax.swing.table.DefaultTableColumnModel.getColumnSelectionAllowed,"Returns true if column selection is allowed, otherwise false."
javax.swing.table.DefaultTableColumnModel.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon this model.
javax.swing.table.DefaultTableColumnModel.getSelectedColumnCount,Returns the number of columns selected.
javax.swing.table.DefaultTableColumnModel.getSelectedColumns,Returns an array of selected columns.
javax.swing.table.DefaultTableColumnModel.getSelectionModel,Returns theListSelectionModelthat is used to  maintain column selection state.
javax.swing.table.DefaultTableColumnModel.getTotalColumnWidth,Returns the total combined width of all columns.
javax.swing.table.DefaultTableColumnModel.moveColumn,Moves the column and heading atcolumnIndextonewIndex.
javax.swing.table.DefaultTableColumnModel.recalcWidthCache,Recalculates the total combined width of all columns.
javax.swing.table.DefaultTableColumnModel.removeColumn,Deletes thecolumnfrom thetableColumnsarray.
javax.swing.table.DefaultTableColumnModel.removeColumnModelListener,Removes a listener for table column model events.
javax.swing.table.DefaultTableColumnModel.setColumnMargin,Sets the column margin tonewMargin.
javax.swing.table.DefaultTableColumnModel.setColumnSelectionAllowed,Sets whether column selection is allowed.
javax.swing.table.DefaultTableColumnModel.setSelectionModel,Sets the selection model for thisTableColumnModeltonewModeland registers for listener notifications from the new selection   model.
javax.swing.table.DefaultTableColumnModel.valueChanged,AListSelectionListenerthat forwardsListSelectionEventswhen there is a column  selection change.
javax.swing.table.DefaultTableModel.addColumn,Adds a column to the model.
javax.swing.table.DefaultTableModel.addRow,Adds a row to the end of the model.
javax.swing.table.DefaultTableModel.convertToVector,Returns a vector that contains the same objects as the array.
javax.swing.table.DefaultTableModel.convertToVector,Returns a vector of vectors that contains the same objects as the array.
javax.swing.table.DefaultTableModel.getColumnCount,Returns the number of columns in this data table.
javax.swing.table.DefaultTableModel.getColumnName,Returns the column name.
javax.swing.table.DefaultTableModel.getDataVector,Returns theVectorofVectorsthat contains the table's   data values.
javax.swing.table.DefaultTableModel.getRowCount,Returns the number of rows in this data table.
javax.swing.table.DefaultTableModel.getValueAt,Returns an attribute value for the cell atrowandcolumn.
javax.swing.table.DefaultTableModel.insertRow,Inserts a row atrowin the model.
javax.swing.table.DefaultTableModel.isCellEditable,Returns true regardless of parameter values.
javax.swing.table.DefaultTableModel.moveRow,Moves one or more rows from the inclusive rangestarttoendto thetoposition in the model.
javax.swing.table.DefaultTableModel.newDataAvailable,Equivalent tofireTableChanged.
javax.swing.table.DefaultTableModel.newRowsAdded,Ensures that the new rows have the correct number of columns.
javax.swing.table.DefaultTableModel.removeRow,Removes the row atrowfrom the model.
javax.swing.table.DefaultTableModel.setColumnCount,Sets the number of columns in the model.
javax.swing.table.DefaultTableModel.setColumnIdentifiers,Replaces the column identifiers in the model.
javax.swing.table.DefaultTableModel.setDataVector,Replaces the value in thedataVectorinstance   variable with the values in the arraydataVector.
javax.swing.table.DefaultTableModel.setDataVector,"Replaces the currentdataVectorinstance variable   with the newVectorof rows,dataVector."
javax.swing.table.DefaultTableModel.setNumRows,Obsolete as of Java 2 platform v1.3.
javax.swing.table.DefaultTableModel.setRowCount,Sets the number of rows in the model.
javax.swing.table.DefaultTableModel.setValueAt,Sets the object value for the cell atcolumnandrow.
javax.swing.table.JTableHeader.getAccessibleContext,Get the AccessibleContext associated with this object.
javax.swing.table.JTableHeader.columnAtPoint,"Returns the index of the column thatpointlies in, or -1 if it  lies out of bounds."
javax.swing.table.JTableHeader.createDefaultColumnModel,Returns the default column model object which is   aDefaultTableColumnModel.
javax.swing.table.JTableHeader.createDefaultRenderer,Returns a default renderer to be used when no header renderer   is defined by aTableColumn.
javax.swing.table.JTableHeader.getAccessibleContext,Gets the AccessibleContext associated with this JTableHeader.
javax.swing.table.JTableHeader.getColumnModel,Returns theTableColumnModelthat contains all column information  of this table header.
javax.swing.table.JTableHeader.getDefaultRenderer,Returns the default renderer used when noheaderRendereris defined by aTableColumn.
javax.swing.table.JTableHeader.getDraggedColumn,"Returns the dragged column, if and only if, a drag is in  process, otherwise returnsnull."
javax.swing.table.JTableHeader.getDraggedDistance,"Returns the column's horizontal distance from its original  position, if and only if, a drag is in process."
javax.swing.table.JTableHeader.getHeaderRect,Returns the rectangle containing the header tile atcolumn.
javax.swing.table.JTableHeader.getPreferredSize,Returns the preferred size of the table header.
javax.swing.table.JTableHeader.getReorderingAllowed,"Returns true if the user is allowed to rearrange columns by  dragging their headers, false otherwise."
javax.swing.table.JTableHeader.getResizingAllowed,"Returns true if the user is allowed to resize columns by dragging  between their headers, false otherwise."
javax.swing.table.JTableHeader.getResizingColumn,Returns the resizing column.
javax.swing.table.JTableHeader.getTable,Returns the table associated with this header.
javax.swing.table.JTableHeader.getToolTipText,Allows the renderer's tips to be used if there is text set.
javax.swing.table.JTableHeader.initializeLocalVars,Initializes the local variables and properties with default values.
javax.swing.table.JTableHeader.paramString,Returns a string representation of thisJTableHeader.
javax.swing.table.JTableHeader.resizeAndRepaint,Sizes the header and marks it as needing display.
javax.swing.table.JTableHeader.setColumnModel,Sets the column model for this table tonewModeland registers   for listener notifications from the new column model.
javax.swing.table.JTableHeader.setDefaultRenderer,Sets the default renderer to be used when noheaderRendereris defined by aTableColumn.
javax.swing.table.JTableHeader.setDraggedColumn,Sets the header'sdraggedColumntoaColumn.
javax.swing.table.JTableHeader.setDraggedDistance,Sets the header'sdraggedDistancetodistance.
javax.swing.table.JTableHeader.setReorderingAllowed,Sets whether the user can drag column headers to reorder columns.
javax.swing.table.JTableHeader.setResizingAllowed,Sets whether the user can resize columns by dragging between headers.
javax.swing.table.JTableHeader.setResizingColumn,Sets the header'sresizingColumntoaColumn.
javax.swing.table.JTableHeader.setTable,Sets the table associated with this header.
javax.swing.table.JTableHeader.updateUI,Notification from theUIManagerthat the look and feel  (L&F) has changed.
javax.swing.table.TableColumn.createDefaultHeaderRenderer,"As of Java 2 platform v1.3, this method is not called by theTableColumnconstructor."
javax.swing.table.TableColumn.disableResizedPosting,Deprecated.as of Java 2 platform v1.3
javax.swing.table.TableColumn.getCellEditor,Returns theTableCellEditorused by theJTableto edit values for this column.
javax.swing.table.TableColumn.getCellRenderer,Returns theTableCellRendererused by theJTableto draw  values for this column.
javax.swing.table.TableColumn.getHeaderRenderer,Returns theTableCellRendererused to draw the header of theTableColumn.
javax.swing.table.TableColumn.getHeaderValue,Returns theObjectused as the value for the header  renderer.
javax.swing.table.TableColumn.getIdentifier,Returns theidentifierobject for this column.
javax.swing.table.TableColumn.getMaxWidth,Returns the maximum width for theTableColumn.
javax.swing.table.TableColumn.getMinWidth,Returns the minimum width for theTableColumn.
javax.swing.table.TableColumn.getModelIndex,Returns the model index for this column.
javax.swing.table.TableColumn.getPreferredWidth,Returns the preferred width of theTableColumn.
javax.swing.table.TableColumn.getPropertyChangeListeners,Returns an array of all thePropertyChangeListeners added  to this TableColumn with addPropertyChangeListener().
javax.swing.table.TableColumn.getResizable,"Returns true if the user is allowed to resize theTableColumn's  width, false otherwise."
javax.swing.table.TableColumn.getWidth,Returns the width of theTableColumn.
javax.swing.table.TableColumn.setCellEditor,Sets the editor to used by when a cell in this column is edited.
javax.swing.table.TableColumn.setCellRenderer,Sets theTableCellRendererused byJTableto draw individual values for this column.
javax.swing.table.TableColumn.setHeaderRenderer,Sets theTableCellRendererused to draw theTableColumn's header toheaderRenderer.
javax.swing.table.TableColumn.setHeaderValue,Sets theObjectwhose string representation will be  used as the value for theheaderRenderer.
javax.swing.table.TableColumn.setIdentifier,Sets theTableColumn's identifier toanIdentifier.
javax.swing.table.TableColumn.setMaxWidth,"Sets theTableColumn's maximum width tomaxWidthor,  ifmaxWidthis less than the minimum width,  to the minimum width."
javax.swing.table.TableColumn.setMinWidth,"Sets theTableColumn's minimum width tominWidth,  adjusting the new minimum width if necessary to ensure that  0 <=minWidth<=maxWidth."
javax.swing.table.TableColumn.setModelIndex,Sets the model index for this column.
javax.swing.table.TableColumn.setPreferredWidth,Sets this column's preferred width topreferredWidth.
javax.swing.table.TableColumn.setResizable,Sets whether this column can be resized.
javax.swing.table.TableColumn.setWidth,"This method should not be used to set the widths of columns in theJTable, usesetPreferredWidthinstead."
javax.swing.table.TableColumn.sizeWidthToFit,Resizes theTableColumnto fit the width of its header cell.
javax.swing.table.TableRowSorter.getStringConverter,Returns the object responsible for converting values from the  model to strings.
javax.swing.table.TableRowSorter.setModel,Sets theTableModelto use as the underlying model  for thisTableRowSorter.
javax.swing.table.TableRowSorter.setStringConverter,Sets the object responsible for converting values from the  model to strings.
javax.swing.table.TableStringConverter.toString,Returns the string representation of the value at the specified  location.
javax.swing.text.AbstractDocument.addAttribute,Adds an attribute to the element.
javax.swing.text.AbstractDocument.addAttributes,Adds a set of attributes to the element.
javax.swing.text.AbstractDocument.children,Returns the children of the receiver as anEnumeration.
javax.swing.text.AbstractDocument.containsAttribute,Checks whether a given attribute name/value is defined.
javax.swing.text.AbstractDocument.containsAttributes,Checks whether the element contains all the attributes.
javax.swing.text.AbstractDocument.copyAttributes,Copies a set of attributes.
javax.swing.text.AbstractDocument.dump,Dumps a debugging representation of the element hierarchy.
javax.swing.text.AbstractDocument.getAllowsChildren,Returns true if the receiver allows children.
javax.swing.text.AbstractDocument.getAttribute,Gets the value of an attribute.
javax.swing.text.AbstractDocument.getAttributeCount,Gets the number of attributes that are defined.
javax.swing.text.AbstractDocument.getAttributeNames,Gets the names of all attributes.
javax.swing.text.AbstractDocument.getAttributes,Gets the attributes for the element.
javax.swing.text.AbstractDocument.getChildAt,Returns the childTreeNodeat indexchildIndex.
javax.swing.text.AbstractDocument.getChildCount,Returns the number of childrenTreeNode's  receiver contains.
javax.swing.text.AbstractDocument.getDocument,Retrieves the underlying model.
javax.swing.text.AbstractDocument.getElement,Gets a child element.
javax.swing.text.AbstractDocument.getElementCount,Gets the number of children for the element.
javax.swing.text.AbstractDocument.getElementIndex,Gets the child element index closest to the given model offset.
javax.swing.text.AbstractDocument.getEndOffset,Gets the ending offset in the model for the element.
javax.swing.text.AbstractDocument.getIndex,Returns the index ofnodein the receivers children.
javax.swing.text.AbstractDocument.getName,Gets the name of the element.
javax.swing.text.AbstractDocument.getParent,Returns the parentTreeNodeof the receiver.
javax.swing.text.AbstractDocument.getParentElement,Gets the parent of the element.
javax.swing.text.AbstractDocument.getResolveParent,Gets the resolving parent.
javax.swing.text.AbstractDocument.getStartOffset,Gets the starting offset in the model for the element.
javax.swing.text.AbstractDocument.isDefined,Checks whether a given attribute is defined.
javax.swing.text.AbstractDocument.isEqual,Checks whether two attribute sets are equal.
javax.swing.text.AbstractDocument.isLeaf,Checks whether the element is a leaf.
javax.swing.text.AbstractDocument.removeAttribute,Removes an attribute from the set.
javax.swing.text.AbstractDocument.removeAttributes,Removes a set of attributes for the element.
javax.swing.text.AbstractDocument.setResolveParent,Sets the resolving parent.
javax.swing.text.AbstractDocument.addAttribute,"Adds an attribute to the given set, and returns  the new representative set."
javax.swing.text.AbstractDocument.getEmptySet,Fetches an empty AttributeSet.
javax.swing.text.AbstractDocument.reclaim,Reclaims an attribute set.
javax.swing.text.AbstractDocument.getName,Gets the element name.
javax.swing.text.AbstractDocument.positionToElement,Gets the child element that contains  the given model position.
javax.swing.text.AbstractDocument.replace,Replaces content with a new set of elements.
javax.swing.text.AbstractDocument.toString,Converts the element to a string.
javax.swing.text.AbstractDocument.createPosition,Creates a position within the content that will  track change as the content is mutated.
javax.swing.text.AbstractDocument.getChars,Gets a sequence of characters and copies them into a Segment.
javax.swing.text.AbstractDocument.getString,Fetches a string of characters contained in the sequence.
javax.swing.text.AbstractDocument.insertString,Inserts a string of characters into the sequence.
javax.swing.text.AbstractDocument.length,Current length of the sequence of character content.
javax.swing.text.AbstractDocument.remove,Removes some portion of the sequence.
javax.swing.text.AbstractDocument.addEdit,Adds a document edit.
javax.swing.text.AbstractDocument.getChange,Gets the changes for an element.
javax.swing.text.AbstractDocument.getDocument,Gets the document that sourced the change event.
javax.swing.text.AbstractDocument.getLength,Returns the length of the change.
javax.swing.text.AbstractDocument.getOffset,Returns the offset within the document of the start of the change.
javax.swing.text.AbstractDocument.getPresentationName,"Provides a localized, human readable description of this edit  suitable for use in, say, a change log."
javax.swing.text.AbstractDocument.getRedoPresentationName,"Provides a localized, human readable description of the redoable  form of this edit, e.g. for use as a Redo menu item."
javax.swing.text.AbstractDocument.getUndoPresentationName,"Provides a localized, human readable description of the undoable  form of this edit, e.g. for use as an Undo menu item."
javax.swing.text.AbstractDocument.isSignificant,DefaultDocument events are significant.
javax.swing.text.AbstractDocument.redo,Redoes a change.
javax.swing.text.AbstractDocument.toString,Returns a string description of the change event.
javax.swing.text.AbstractDocument.undo,Undoes a change.
javax.swing.text.AbstractDocument.getChildrenAdded,Gets a list of children that were added.
javax.swing.text.AbstractDocument.getChildrenRemoved,Gets a list of children that were removed.
javax.swing.text.AbstractDocument.getElement,Returns the underlying element.
javax.swing.text.AbstractDocument.getIndex,Returns the index into the list of elements.
javax.swing.text.AbstractDocument.addDocumentListener,Adds a document listener for notification of any changes.
javax.swing.text.AbstractDocument.addUndoableEditListener,Adds an undo listener for notification of any changes.
javax.swing.text.AbstractDocument.createBranchElement,"Creates a document branch element, that can contain other elements."
javax.swing.text.AbstractDocument.createLeafElement,Creates a document leaf element.
javax.swing.text.AbstractDocument.createPosition,Returns a position that will track change as the document  is altered.
javax.swing.text.AbstractDocument.dump,Gives a diagnostic dump.
javax.swing.text.AbstractDocument.getAsynchronousLoadPriority,Gets the asynchronous loading priority.
javax.swing.text.AbstractDocument.getAttributeContext,Fetches the context for managing attributes.
javax.swing.text.AbstractDocument.getBidiRootElement,Returns the root element of the bidirectional structure for this  document.
javax.swing.text.AbstractDocument.getContent,Gets the content for the document.
javax.swing.text.AbstractDocument.getCurrentWriter,Fetches the current writing thread if there is one.
javax.swing.text.AbstractDocument.getDefaultRootElement,Returns the root element that views should be based upon  unless some other mechanism for assigning views to element  structures is provided.
javax.swing.text.AbstractDocument.getDocumentFilter,Returns theDocumentFilterthat is responsible for  filtering of insertion/removal.
javax.swing.text.AbstractDocument.getDocumentListeners,Returns an array of all the document listeners  registered on this document.
javax.swing.text.AbstractDocument.getDocumentProperties,Supports managing a set of properties.
javax.swing.text.AbstractDocument.getEndPosition,Returns a position that represents the end of the document.
javax.swing.text.AbstractDocument.getLength,Returns the length of the data.
javax.swing.text.AbstractDocument.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon this document.
javax.swing.text.AbstractDocument.getParagraphElement,Get the paragraph element containing the given position.
javax.swing.text.AbstractDocument.getProperty,A convenience method for looking up a property value.
javax.swing.text.AbstractDocument.getRootElements,Gets all root elements defined.
javax.swing.text.AbstractDocument.getStartPosition,Returns a position that represents the start of the document.
javax.swing.text.AbstractDocument.getText,Gets a sequence of text from the document.
javax.swing.text.AbstractDocument.getText,Fetches the text contained within the given portion  of the document.
javax.swing.text.AbstractDocument.getUndoableEditListeners,Returns an array of all the undoable edit listeners  registered on this document.
javax.swing.text.AbstractDocument.insertString,Inserts some content into the document.
javax.swing.text.AbstractDocument.insertUpdate,Updates document structure as a result of text insertion.
javax.swing.text.AbstractDocument.postRemoveUpdate,Updates any document structure as a result of text removal.
javax.swing.text.AbstractDocument.putProperty,A convenience method for storing up a property value.
javax.swing.text.AbstractDocument.readLock,Acquires a lock to begin reading some state from the  document.
javax.swing.text.AbstractDocument.readUnlock,Does a read unlock.
javax.swing.text.AbstractDocument.remove,Removes some content from the document.
javax.swing.text.AbstractDocument.removeDocumentListener,Removes a document listener.
javax.swing.text.AbstractDocument.removeUndoableEditListener,Removes an undo listener.
javax.swing.text.AbstractDocument.render,"This allows the model to be safely rendered in the presence  of currency, if the model supports being updated asynchronously."
javax.swing.text.AbstractDocument.replace,"Deletes the region of text fromoffsettooffset + length, and replaces it withtext."
javax.swing.text.AbstractDocument.setAsynchronousLoadPriority,Sets the asynchronous loading priority.
javax.swing.text.AbstractDocument.setDocumentFilter,Sets theDocumentFilter.
javax.swing.text.AbstractDocument.setDocumentProperties,Replaces the document properties dictionary for this document.
javax.swing.text.AbstractDocument.writeLock,Acquires a lock to begin mutating the document this lock  protects.
javax.swing.text.AbstractDocument.writeUnlock,Releases a write lock previously obtained viawriteLock.
javax.swing.text.AbstractDocument.getElementCount,Returns the number of child elements.
javax.swing.text.AbstractWriter.decrIndent,Decrements the indent level.
javax.swing.text.AbstractWriter.getCanWrapLines,Returns whether or not the lines can be wrapped.
javax.swing.text.AbstractWriter.getCurrentLineLength,Returns the current line length.
javax.swing.text.AbstractWriter.getDocument,Fetches the document.
javax.swing.text.AbstractWriter.getElementIterator,Fetches the ElementIterator.
javax.swing.text.AbstractWriter.getEndOffset,Returns the last offset to be output.
javax.swing.text.AbstractWriter.getIndentLevel,Returns the current indentation level.
javax.swing.text.AbstractWriter.getIndentSpace,Returns the amount of space to indent.
javax.swing.text.AbstractWriter.getLineLength,Returns the maximum line length.
javax.swing.text.AbstractWriter.getLineSeparator,Returns the string used to represent newlines.
javax.swing.text.AbstractWriter.getStartOffset,Returns the first offset to be output.
javax.swing.text.AbstractWriter.getText,Returns the text associated with the element.
javax.swing.text.AbstractWriter.getWriter,Returns the Writer that is used to output the content.
javax.swing.text.AbstractWriter.incrIndent,Increments the indent level.
javax.swing.text.AbstractWriter.indent,Does indentation.
javax.swing.text.AbstractWriter.inRange,This method determines whether the current element  is in the range specified.
javax.swing.text.AbstractWriter.isLineEmpty,Returns true if the current line should be considered empty.
javax.swing.text.AbstractWriter.output,The last stop in writing out content.
javax.swing.text.AbstractWriter.setCanWrapLines,Sets whether or not lines can be wrapped.
javax.swing.text.AbstractWriter.setCurrentLineLength,Sets the current line length.
javax.swing.text.AbstractWriter.setIndentSpace,Enables subclasses to specify how many spaces an indent  maps to.
javax.swing.text.AbstractWriter.setLineLength,Enables subclasses to set the number of characters they  want written per line.
javax.swing.text.AbstractWriter.setLineSeparator,Sets the String used to represent newlines.
javax.swing.text.AbstractWriter.text,Writes out text.
javax.swing.text.AbstractWriter.write,This abstract method needs to be implemented  by subclasses.
javax.swing.text.AbstractWriter.write,Writes out a character.
javax.swing.text.AbstractWriter.write,All write methods call into this one.
javax.swing.text.AbstractWriter.write,Writes out a string.
javax.swing.text.AbstractWriter.writeAttributes,"Writes out the set of attributes as "" <name>=<value>""  pairs."
javax.swing.text.AbstractWriter.writeLineSeparator,Writes the line separator.
javax.swing.text.AsyncBoxView.childChanged,Notification that a child changed.
javax.swing.text.AsyncBoxView.getChildAllocation,Fetch the allocation to use for a child view.
javax.swing.text.AsyncBoxView.getViewIndexAtPoint,Fetches the child view index at the given point.
javax.swing.text.AsyncBoxView.getViewIndexAtVisualOffset,Locate the view responsible for an offset into the box  along the major axis.
javax.swing.text.AsyncBoxView.paintChildren,Paint the children that intersect the clip area.
javax.swing.text.AsyncBoxView.setAllocation,Copy the currently allocated shape into the Rectangle  used to store the current allocation.
javax.swing.text.AsyncBoxView.getChildView,Fetch the child view this record represents.
javax.swing.text.AsyncBoxView.getMajorOffset,Get the offset along the major axis.
javax.swing.text.AsyncBoxView.getMajorSpan,What is the span along the major axis.
javax.swing.text.AsyncBoxView.getMinorOffset,What is the offset along the minor axis
javax.swing.text.AsyncBoxView.getMinorSpan,What is the span along the minor axis.
javax.swing.text.AsyncBoxView.isLayoutValid,Has the child view been laid out.
javax.swing.text.AsyncBoxView.preferenceChanged,Mark preferences changed for this child.
javax.swing.text.AsyncBoxView.run,Update the child state.
javax.swing.text.AsyncBoxView.setMajorOffset,"This method should only be called by the ChildLocator,  it is simply a convenient place to hold the cached  location."
javax.swing.text.AsyncBoxView.createChildState,New ChildState records are created through  this method to allow subclasses the extend  the ChildState records to do/hold more.
javax.swing.text.AsyncBoxView.flushRequirementChanges,Publish the changes in preferences upward to the parent  view.
javax.swing.text.AsyncBoxView.getBottomInset,Get the bottom part of the margin around the view.
javax.swing.text.AsyncBoxView.getChildAllocation,Fetches the allocation for the given child view.
javax.swing.text.AsyncBoxView.getChildState,Fetch the object representing the layout state of  of the child at the given index.
javax.swing.text.AsyncBoxView.getEstimatedMajorSpan,Is the major span currently estimated?
javax.swing.text.AsyncBoxView.getInsetSpan,Fetch the span along an axis that is taken up by the insets.
javax.swing.text.AsyncBoxView.getLayoutQueue,Fetch the queue to use for layout.
javax.swing.text.AsyncBoxView.getLeftInset,Get the left part of the margin around the view.
javax.swing.text.AsyncBoxView.getMajorAxis,Fetch the major axis (the axis the children  are tiled along).
javax.swing.text.AsyncBoxView.getMaximumSpan,Determines the maximum span for this view along an  axis.
javax.swing.text.AsyncBoxView.getMinimumSpan,Determines the minimum span for this view along an  axis.
javax.swing.text.AsyncBoxView.getMinorAxis,Fetch the minor axis (the axis orthogonal  to the tiled axis).
javax.swing.text.AsyncBoxView.getPreferredSpan,Determines the preferred span for this view along an  axis.
javax.swing.text.AsyncBoxView.getRightInset,Get the right part of the margin around the view.
javax.swing.text.AsyncBoxView.getTopInset,Get the top part of the margin around the view.
javax.swing.text.AsyncBoxView.getView,Gets the nth child view.
javax.swing.text.AsyncBoxView.getViewCount,Returns the number of views in this view.
javax.swing.text.AsyncBoxView.getViewIndex,Returns the child view index representing the given position in  the model.
javax.swing.text.AsyncBoxView.getViewIndexAtPosition,Fetches the child view index representing the given position in  the model.
javax.swing.text.AsyncBoxView.loadChildren,Loads all of the children to initialize the view.
javax.swing.text.AsyncBoxView.majorRequirementChange,Requirements changed along the major axis.
javax.swing.text.AsyncBoxView.minorRequirementChange,Requirements changed along the minor axis.
javax.swing.text.AsyncBoxView.modelToView,Provides a mapping from the document model coordinate space  to the coordinate space of the view mapped to it.
javax.swing.text.AsyncBoxView.paint,Render the view using the given allocation and  rendering surface.
javax.swing.text.AsyncBoxView.preferenceChanged,Child views can call this on the parent to indicate that  the preference has changed and should be reconsidered  for layout.
javax.swing.text.AsyncBoxView.replace,"Calls the superclass to update the child views, and  updates the status records for the children."
javax.swing.text.AsyncBoxView.setBottomInset,Set the bottom part of the margin around the view.
javax.swing.text.AsyncBoxView.setEstimatedMajorSpan,Set the estimatedMajorSpan property that determines if the  major span should be treated as being estimated.
javax.swing.text.AsyncBoxView.setLeftInset,Set the left part of the margin around the view.
javax.swing.text.AsyncBoxView.setParent,Sets the parent of the view.
javax.swing.text.AsyncBoxView.setRightInset,Set the right part of the margin around the view.
javax.swing.text.AsyncBoxView.setTopInset,Set the top part of the margin around the view.
javax.swing.text.AsyncBoxView.updateLayout,Update the layout in response to receiving notification of  change from the model.
javax.swing.text.BadLocationException.offsetRequested,Returns the offset into the document that was not legal.
javax.swing.text.BoxView.baselineLayout,"Computes the location and extent of each child view  in thisBoxViewgiven thetargetSpan,  which is the width (or height) of the region we have to  work with."
javax.swing.text.BoxView.baselineRequirements,Calculates the size requirements for thisBoxViewby examining the size of each child view.
javax.swing.text.BoxView.calculateMajorAxisRequirements,Calculates the size requirements for the major axisaxis.
javax.swing.text.BoxView.calculateMinorAxisRequirements,Calculates the size requirements for the minor axisaxis.
javax.swing.text.BoxView.childAllocation,Allocates a region for a child view.
javax.swing.text.BoxView.flipEastAndWestAtEnds,Determines in which direction the next view lays.
javax.swing.text.BoxView.forwardUpdate,Forwards the givenDocumentEventto the child views  that need to be notified of the change to the model.
javax.swing.text.BoxView.getAlignment,Determines the desired alignment for this view along an  axis.
javax.swing.text.BoxView.getAxis,Fetches the tile axis property.
javax.swing.text.BoxView.getHeight,Returns the current height of the box.
javax.swing.text.BoxView.getOffset,Fetches the offset of a particular child's current layout.
javax.swing.text.BoxView.getResizeWeight,Gets the resize weight.
javax.swing.text.BoxView.getSpan,Fetches the span of a particular child's current layout.
javax.swing.text.BoxView.getViewAtPoint,Fetches the child view at the given coordinates.
javax.swing.text.BoxView.getWidth,Returns the current width of the box.
javax.swing.text.BoxView.isAfter,Determines if a point falls after an allocated region.
javax.swing.text.BoxView.isAllocationValid,Are the allocations for the children still  valid?
javax.swing.text.BoxView.isBefore,Determines if a point falls before an allocated region.
javax.swing.text.BoxView.isLayoutValid,Determines if the layout is valid along the given axis.
javax.swing.text.BoxView.layout,Perform layout on the box
javax.swing.text.BoxView.layoutChanged,Invalidates the layout along an axis.
javax.swing.text.BoxView.layoutMajorAxis,Performs layout for the major axis of the box (i.e. the  axis that it represents).
javax.swing.text.BoxView.layoutMinorAxis,Performs layout for the minor axis of the box (i.e. the  axis orthogonal to the axis that it represents).
javax.swing.text.BoxView.paint,Renders theBoxViewusing the given  rendering surface and area  on that surface.
javax.swing.text.BoxView.paintChild,Paints a child.
javax.swing.text.BoxView.preferenceChanged,This is called by a child to indicate its  preferred span has changed.
javax.swing.text.BoxView.replace,Invalidates the layout and resizes the cache of  requests/allocations.
javax.swing.text.BoxView.setAxis,Sets the tile axis property.
javax.swing.text.ChangedCharSetException.getCharSetSpec,Returns the char set specification.
javax.swing.text.ChangedCharSetException.keyEqualsCharSet,Returns the char set key.
javax.swing.text.ComponentView.createComponent,Create the component that is associated with  this view.
javax.swing.text.ComponentView.getComponent,Fetch the component associated with the view.
javax.swing.text.ComponentView.modelToView,Provides a mapping from the coordinate space of the model to  that of the view.
javax.swing.text.ComponentView.paint,The real paint behavior occurs naturally from the association  that the component has with its parent container (the same  container hosting this view).
javax.swing.text.ComponentView.setParent,Sets the parent for a child view.
javax.swing.text.CompositeView.childAllocation,Returns the allocation for a given child.
javax.swing.text.CompositeView.getBottomInset,Gets the bottom inset.
javax.swing.text.CompositeView.getChildAllocation,Fetches the allocation for the given child view to  render into.
javax.swing.text.CompositeView.getInsideAllocation,"Translates the immutable allocation given to the view  to a mutable allocation that represents the interior  allocation (i.e. the bounds of the given allocation  with the top, left, bottom, and right insets removed."
javax.swing.text.CompositeView.getLeftInset,Gets the left inset.
javax.swing.text.CompositeView.getNextEastWestVisualPositionFrom,"Returns the next visual position for the cursor, in either the  east or west direction."
javax.swing.text.CompositeView.getNextNorthSouthVisualPositionFrom,"Returns the next visual position for the cursor, in either the  north or south direction."
javax.swing.text.CompositeView.getRightInset,Gets the right inset.
javax.swing.text.CompositeView.getTopInset,Gets the top inset.
javax.swing.text.CompositeView.getView,Returns the n-th view in this container.
javax.swing.text.CompositeView.getViewAtPosition,Fetches the child view that represents the given position in  the model.
javax.swing.text.CompositeView.getViewCount,Returns the number of child views of this view.
javax.swing.text.CompositeView.getViewIndex,Returns the child view index representing the given  position in the model.
javax.swing.text.CompositeView.isAfter,Tests whether a point lies after the rectangle range.
javax.swing.text.CompositeView.isBefore,Tests whether a point lies before the rectangle range.
javax.swing.text.CompositeView.replace,Replaces child views.
javax.swing.text.CompositeView.setInsets,Sets the insets for the view.
javax.swing.text.CompositeView.setParagraphInsets,Sets the insets from the paragraph attributes specified in  the given attributes.
javax.swing.text.DateFormatter.setFormat,Sets the format that dictates the legal values that can be edited  and displayed.
javax.swing.text.DefaultCaret.addChangeListener,Adds a listener to track whenever the caret position has  been changed.
javax.swing.text.DefaultCaret.adjustVisibility,Scrolls the associated view (if necessary) to make  the caret visible.
javax.swing.text.DefaultCaret.damage,Damages the area surrounding the caret to cause  it to be repainted in a new location.
javax.swing.text.DefaultCaret.deinstall,Called when the UI is being removed from the  interface of a JTextComponent.
javax.swing.text.DefaultCaret.focusGained,Called when the component containing the caret gains  focus.
javax.swing.text.DefaultCaret.focusLost,Called when the component containing the caret loses  focus.
javax.swing.text.DefaultCaret.getBlinkRate,Gets the caret blink rate.
javax.swing.text.DefaultCaret.getChangeListeners,Returns an array of all the change listeners  registered on this caret.
javax.swing.text.DefaultCaret.getComponent,Gets the text editor component that this caret is  is bound to.
javax.swing.text.DefaultCaret.getDot,Fetches the current position of the caret.
javax.swing.text.DefaultCaret.getDotBias,Returns the bias of the caret position.
javax.swing.text.DefaultCaret.getListeners,Returns an array of all the objects currently registered  asFooListeners  upon this caret.
javax.swing.text.DefaultCaret.getMagicCaretPosition,Gets the saved caret position.
javax.swing.text.DefaultCaret.getMark,Fetches the current position of the mark.
javax.swing.text.DefaultCaret.getMarkBias,Returns the bias of the mark.
javax.swing.text.DefaultCaret.getSelectionPainter,Gets the painter for the Highlighter.
javax.swing.text.DefaultCaret.getUpdatePolicy,Gets the caret movement policy on document updates.
javax.swing.text.DefaultCaret.install,Called when the UI is being installed into the  interface of a JTextComponent.
javax.swing.text.DefaultCaret.isActive,Determines if the caret is currently active.
javax.swing.text.DefaultCaret.isSelectionVisible,Checks whether the current selection is visible.
javax.swing.text.DefaultCaret.isVisible,Indicates whether or not the caret is currently visible.
javax.swing.text.DefaultCaret.mouseClicked,Called when the mouse is clicked.
javax.swing.text.DefaultCaret.mouseDragged,Moves the caret position  according to the mouse pointer's current  location.
javax.swing.text.DefaultCaret.mouseEntered,Called when the mouse enters a region.
javax.swing.text.DefaultCaret.mouseExited,Called when the mouse exits a region.
javax.swing.text.DefaultCaret.mousePressed,"If button 1 is pressed, this is implemented to  request focus on the associated text component,  and to set the caret position."
javax.swing.text.DefaultCaret.mouseReleased,Called when the mouse is released.
javax.swing.text.DefaultCaret.moveCaret,"Tries to move the position of the caret from  the coordinates of a mouse event, using viewToModel()."
javax.swing.text.DefaultCaret.moveDot,"Moves the caret position to the specified position,  with a forward bias."
javax.swing.text.DefaultCaret.moveDot,"Moves the caret position to the specified position, with the  specified bias."
javax.swing.text.DefaultCaret.paint,Renders the caret as a vertical line.
javax.swing.text.DefaultCaret.positionCaret,"Tries to set the position of the caret from  the coordinates of a mouse event, using viewToModel()."
javax.swing.text.DefaultCaret.removeChangeListener,Removes a listener that was tracking caret position changes.
javax.swing.text.DefaultCaret.repaint,Cause the caret to be painted.
javax.swing.text.DefaultCaret.setBlinkRate,Sets the caret blink rate.
javax.swing.text.DefaultCaret.setDot,"Sets the caret position and mark to the specified position,  with a forward bias."
javax.swing.text.DefaultCaret.setDot,"Sets the caret position and mark to the specified position, with the  specified bias."
javax.swing.text.DefaultCaret.setMagicCaretPosition,Saves the current caret position.
javax.swing.text.DefaultCaret.setSelectionVisible,Changes the selection visibility.
javax.swing.text.DefaultCaret.setUpdatePolicy,Sets the caret movement policy on the document updates.
javax.swing.text.DefaultCaret.setVisible,"Sets the caret visibility, and repaints the caret."
javax.swing.text.DefaultEditorKit.actionPerformed,The operation to perform when this action is triggered.
javax.swing.text.DefaultEditorKit.createCaret,Fetches a caret that can navigate through views  produced by the associated ViewFactory.
javax.swing.text.DefaultEditorKit.createDefaultDocument,Creates an uninitialized text storage model (PlainDocument)  that is appropriate for this type of editor.
javax.swing.text.DefaultEditorKit.getActions,Fetches the set of commands that can be used  on a text component that is using a model and  view produced by this kit.
javax.swing.text.DefaultEditorKit.getContentType,Gets the MIME type of the data that this  kit represents support for.
javax.swing.text.DefaultEditorKit.getViewFactory,Fetches a factory that is suitable for producing  views of any models that are produced by this  kit.
javax.swing.text.DefaultEditorKit.read,Inserts content from the given stream which is expected  to be in a format appropriate for this kind of content  handler.
javax.swing.text.DefaultEditorKit.read,"Inserts content from the given stream, which will be  treated as plain text."
javax.swing.text.DefaultEditorKit.write,Writes content from a document to the given stream  in a format appropriate for this kind of content handler.
javax.swing.text.DefaultEditorKit.write,Writes content from a document to the given stream  as plain text.
javax.swing.text.DefaultFormatter.clone,Creates a copy of the DefaultFormatter.
javax.swing.text.DefaultFormatter.getAllowsInvalid,Returns whether or not the value being edited is allowed to be invalid  for a length of time.
javax.swing.text.DefaultFormatter.getCommitsOnValidEdit,Returns when edits are published back to theJFormattedTextField.
javax.swing.text.DefaultFormatter.getDocumentFilter,Returns theDocumentFilterused to restrict the characters  that can be input into theJFormattedTextField.
javax.swing.text.DefaultFormatter.getNavigationFilter,Returns theNavigationFilterused to restrict where the  cursor can be placed.
javax.swing.text.DefaultFormatter.getOverwriteMode,Returns the behavior when inserting characters.
javax.swing.text.DefaultFormatter.getValueClass,Returns that class that is used to create new Objects.
javax.swing.text.DefaultFormatter.install,Installs theDefaultFormatteronto a particularJFormattedTextField.
javax.swing.text.DefaultFormatter.setAllowsInvalid,"Sets whether or not the value being edited is allowed to be invalid  for a length of time (that is,stringToValuethrows  aParseException)."
javax.swing.text.DefaultFormatter.setCommitsOnValidEdit,Sets when edits are published back to theJFormattedTextField.
javax.swing.text.DefaultFormatter.setOverwriteMode,Configures the behavior when inserting characters.
javax.swing.text.DefaultFormatter.setValueClass,Sets that class that is used to create new Objects.
javax.swing.text.DefaultFormatter.stringToValue,Converts the passed in String into an instance ofgetValueClassby way of the constructor that  takes a String argument.
javax.swing.text.DefaultFormatter.valueToString,Converts the passed in Object into a String by way of thetoStringmethod.
javax.swing.text.DefaultFormatterFactory.getDefaultFormatter,"Returns theJFormattedTextField.AbstractFormatterto use  as a last resort, eg in case a display, edit or nullJFormattedTextField.AbstractFormatterhas not been specified."
javax.swing.text.DefaultFormatterFactory.getDisplayFormatter,"Returns theJFormattedTextField.AbstractFormatterto use  if theJFormattedTextFieldis not being edited and either  the value is not-null, or the value is null and a null formatter has  has not been specified."
javax.swing.text.DefaultFormatterFactory.getEditFormatter,"Returns theJFormattedTextField.AbstractFormatterto use  if theJFormattedTextFieldis being edited and either  the value is not-null, or the value is null and a null formatter has  has not been specified."
javax.swing.text.DefaultFormatterFactory.getFormatter,"Returns either the default formatter, display formatter, editor  formatter or null formatter based on the state of the  JFormattedTextField."
javax.swing.text.DefaultFormatterFactory.getNullFormatter,Returns the formatter to use if the value is null.
javax.swing.text.DefaultFormatterFactory.setDefaultFormatter,"Sets theJFormattedTextField.AbstractFormatterto use as  a last resort, eg in case a display, edit or nullJFormattedTextField.AbstractFormatterhas not been  specified."
javax.swing.text.DefaultFormatterFactory.setDisplayFormatter,"Sets theJFormattedTextField.AbstractFormatterto use if  theJFormattedTextFieldis not being edited and either  the value is not-null, or the value is null and a null formatter has  has not been specified."
javax.swing.text.DefaultFormatterFactory.setEditFormatter,"Sets theJFormattedTextField.AbstractFormatterto use if  theJFormattedTextFieldis being edited and either  the value is not-null, or the value is null and a null formatter has  has not been specified."
javax.swing.text.DefaultFormatterFactory.setNullFormatter,Sets the formatter to use if the value of the JFormattedTextField is  null.
javax.swing.text.DefaultHighlighter.getColor,Returns the color of the highlight.
javax.swing.text.DefaultHighlighter.paint,Paints a highlight.
javax.swing.text.DefaultHighlighter.paintLayer,Paints a portion of a highlight.
javax.swing.text.DefaultHighlighter.addHighlight,Adds a highlight to the view.
javax.swing.text.DefaultHighlighter.changeHighlight,Changes a highlight.
javax.swing.text.DefaultHighlighter.deinstall,Called when the UI is being removed from the interface of  a JTextComponent.
javax.swing.text.DefaultHighlighter.getDrawsLayeredHighlights,Return the draw layered highlights.
javax.swing.text.DefaultHighlighter.getHighlights,Makes a copy of the highlights.
javax.swing.text.DefaultHighlighter.paint,Renders the highlights.
javax.swing.text.DefaultHighlighter.paintLayeredHighlights,When leaf Views (such as LabelView) are rendering they should  call into this method.
javax.swing.text.DefaultHighlighter.removeAllHighlights,Removes all highlights.
javax.swing.text.DefaultHighlighter.removeHighlight,Removes a highlight from the view.
javax.swing.text.DefaultHighlighter.setDrawsLayeredHighlights,"If true, highlights are drawn as the Views draw the text."
javax.swing.text.DefaultStyledDocument.change,Changes content.
javax.swing.text.DefaultStyledDocument.changeUpdate,Updates the element structure in response to a change in the  document.
javax.swing.text.DefaultStyledDocument.clone,"Creates a copy of this element, with a different  parent."
javax.swing.text.DefaultStyledDocument.getRootElement,Gets the root element.
javax.swing.text.DefaultStyledDocument.insert,Inserts new content.
javax.swing.text.DefaultStyledDocument.insertUpdate,Inserts an update into the document.
javax.swing.text.DefaultStyledDocument.remove,Removes content.
javax.swing.text.DefaultStyledDocument.removeUpdate,Updates the element structure in response to a removal from the  associated sequence in the document.
javax.swing.text.DefaultStyledDocument.getArray,Gets the array of characters.
javax.swing.text.DefaultStyledDocument.getAttributes,Gets the element attributes.
javax.swing.text.DefaultStyledDocument.getDirection,Gets the direction.
javax.swing.text.DefaultStyledDocument.getLength,Gets the length.
javax.swing.text.DefaultStyledDocument.getOffset,Gets the starting offset.
javax.swing.text.DefaultStyledDocument.getType,Gets the element type.
javax.swing.text.DefaultStyledDocument.setType,Sets the element type.
javax.swing.text.DefaultStyledDocument.create,Initialize the document to reflect the given element  structure (i.e. the structure reported by thegetDefaultRootElementmethod.
javax.swing.text.DefaultStyledDocument.createDefaultRoot,Creates the root element to be used to represent the  default document structure.
javax.swing.text.DefaultStyledDocument.getBackground,Gets the background color from an attribute set.
javax.swing.text.DefaultStyledDocument.getCharacterElement,Gets a character element based on a position.
javax.swing.text.DefaultStyledDocument.getDefaultRootElement,Gets the default root element.
javax.swing.text.DefaultStyledDocument.getFont,Gets the font from an attribute set.
javax.swing.text.DefaultStyledDocument.getForeground,Gets the foreground color from an attribute set.
javax.swing.text.DefaultStyledDocument.getLogicalStyle,Fetches the logical style assigned to the paragraph  represented by the given position.
javax.swing.text.DefaultStyledDocument.getParagraphElement,Gets the paragraph element at the offsetpos.
javax.swing.text.DefaultStyledDocument.getStyle,Fetches a named style previously added.
javax.swing.text.DefaultStyledDocument.getStyleNames,Fetches the list of style names.
javax.swing.text.DefaultStyledDocument.insert,Inserts new elements in bulk.
javax.swing.text.DefaultStyledDocument.removeElement,Removes an element from this document.
javax.swing.text.DefaultStyledDocument.removeStyle,Removes a named style previously added to the document.
javax.swing.text.DefaultStyledDocument.removeUpdate,Updates document structure as a result of text removal.
javax.swing.text.DefaultStyledDocument.setCharacterAttributes,Sets attributes for some part of the document.
javax.swing.text.DefaultStyledDocument.setLogicalStyle,Sets the logical style to use for the paragraph at the  given position.
javax.swing.text.DefaultStyledDocument.setParagraphAttributes,Sets attributes for a paragraph.
javax.swing.text.DefaultStyledDocument.styleChanged,Called when any of this document's styles have changed.
javax.swing.text.DocumentFilter.getDocument,Returns the Document the mutation is occurring on.
javax.swing.text.DocumentFilter.insertString,"Inserts the specified text, bypassing the  DocumentFilter."
javax.swing.text.DocumentFilter.remove,"Removes the specified region of text, bypassing the  DocumentFilter."
javax.swing.text.DocumentFilter.insertString,Invoked prior to insertion of text into the  specified Document.
javax.swing.text.DocumentFilter.remove,Invoked prior to removal of the specified region in the  specified Document.
javax.swing.text.DocumentFilter.replace,Invoked prior to replacing a region of text in the  specified Document.
javax.swing.text.EditorKit.clone,Creates a copy of the editor kit.
javax.swing.text.EditorKit.createDefaultDocument,Creates an uninitialized text storage model  that is appropriate for this type of editor.
javax.swing.text.EditorKit.deinstall,Called when the kit is being removed from the  JEditorPane.
javax.swing.text.EditorKit.install,Called when the kit is being installed into the  a JEditorPane.
javax.swing.text.ElementIterator.clone,Clones theElementIterator.
javax.swing.text.ElementIterator.current,Fetches the currentElement.
javax.swing.text.ElementIterator.depth,Fetches the current depth of element tree.
javax.swing.text.ElementIterator.first,Fetches the first element.
javax.swing.text.ElementIterator.next,Fetches the nextElement.
javax.swing.text.ElementIterator.previous,Fetches the previousElement.
javax.swing.text.FieldView.adjustAllocation,Adjusts the allocation given to the view  to be a suitable allocation for a text field.
javax.swing.text.FieldView.getFontMetrics,Fetches the font metrics associated with the component hosting  this view.
javax.swing.text.FieldView.getResizeWeight,Determines the resizability of the view along the  given axis.
javax.swing.text.FieldView.insertUpdate,Gives notification that something was inserted into the document  in a location that this view is responsible for.
javax.swing.text.FieldView.paint,Renders using the given rendering surface and area on that surface.
javax.swing.text.FieldView.removeUpdate,Gives notification that something was removed from the document  in a location that this view is responsible for.
javax.swing.text.FlowView.adjustRow,Adjusts the given row if possible to fit within the  layout span.
javax.swing.text.FlowView.changedUpdate,Gives notification from the document that attributes were changed  in a location that this view is responsible for.
javax.swing.text.FlowView.createView,Creates a view that can be used to represent the current piece  of the flow.
javax.swing.text.FlowView.getLogicalView,This method gives flow strategies access to the logical  view of the FlowView.
javax.swing.text.FlowView.insertUpdate,Gives notification that something was inserted into the document  in a location that the given flow view is responsible for.
javax.swing.text.FlowView.layout,Update the flow on the given FlowView.
javax.swing.text.FlowView.layoutRow,Creates a row of views that will fit within the  layout span of the row.
javax.swing.text.FlowView.removeUpdate,Gives notification that something was removed from the document  in a location that the given flow view is responsible for.
javax.swing.text.FlowView.calculateMinorAxisRequirements,Calculate requirements along the minor axis.
javax.swing.text.FlowView.createRow,Create a View that should be used to hold a  a rows worth of children in a flow.
javax.swing.text.FlowView.getFlowAxis,Fetches the axis along which views should be  flowed.
javax.swing.text.FlowView.getFlowSpan,Fetch the constraining span to flow against for  the given child index.
javax.swing.text.FlowView.getFlowStart,Fetch the location along the flow axis that the  flow span will start at.
javax.swing.text.FlowView.layout,Lays out the children.
javax.swing.text.GapContent.allocateArray,Allocate an array to store items of the type  appropriate (which is determined by the subclass).
javax.swing.text.GapContent.getArray,Access to the array.
javax.swing.text.GapContent.getArrayLength,Get the length of the allocated array.
javax.swing.text.GapContent.getChars,Retrieves a portion of the content.
javax.swing.text.GapContent.getGapEnd,Access to the end of the gap.
javax.swing.text.GapContent.getGapStart,Access to the start of the gap.
javax.swing.text.GapContent.getPositionsInRange,Returns a Vector containing instances of UndoPosRef for the  Positions in the rangeoffsettooffset+length.
javax.swing.text.GapContent.insertString,Inserts a string into the content.
javax.swing.text.GapContent.length,Returns the length of the content.
javax.swing.text.GapContent.remove,Removes part of the content.
javax.swing.text.GapContent.replace,Replace the given logical position in the storage with  the given new items.
javax.swing.text.GapContent.resetMarksAtZero,Resets all the marks that have an offset of 0 to have an index of  zero as well.
javax.swing.text.GapContent.shiftEnd,"Make the gap bigger, moving any necessary data and updating  the appropriate marks"
javax.swing.text.GapContent.shiftGap,"Move the start of the gap to a new location,  without changing the size of the gap."
javax.swing.text.GapContent.shiftGapEndUp,Adjust the gap end upward.
javax.swing.text.GapContent.shiftGapStartDown,Adjust the gap end downward.
javax.swing.text.GapContent.updateUndoPositions,Resets the location for all the UndoPosRef instances  inpositions.
javax.swing.text.GlyphView.getAscent,Returns of the ascent.
javax.swing.text.GlyphView.getBoundedPosition,Determines the model location that represents the  maximum advance that fits within the given span.
javax.swing.text.GlyphView.getDescent,Returns of the descent.
javax.swing.text.GlyphView.getHeight,Returns of the height.
javax.swing.text.GlyphView.getPainter,Create a painter to use for the given GlyphView.
javax.swing.text.GlyphView.getSpan,Determine the span the glyphs given a start location  (for tab expansion).
javax.swing.text.GlyphView.paint,Paint the glyphs representing the given range.
javax.swing.text.GlyphView.breakView,Breaks this view on the given axis at the given length.
javax.swing.text.GlyphView.checkPainter,Check to see that a glyph painter exists.
javax.swing.text.GlyphView.clone,Creates a shallow copy.
javax.swing.text.GlyphView.createFragment,Creates a view that represents a portion of the element.
javax.swing.text.GlyphView.getBackground,Fetch the background color to use to render the  glyphs.
javax.swing.text.GlyphView.getBreakWeight,Determines how attractive a break opportunity in  this view is.
javax.swing.text.GlyphView.getEndOffset,Fetches the portion of the model that this view is responsible for.
javax.swing.text.GlyphView.getFont,Fetch the font that the glyphs should be based  upon.
javax.swing.text.GlyphView.getForeground,Fetch the foreground color to use to render the  glyphs.
javax.swing.text.GlyphView.getGlyphPainter,Fetch the currently installed glyph painter.
javax.swing.text.GlyphView.getMinimumSpan,Determines the minimum span for this view along an axis.
javax.swing.text.GlyphView.getPartialSpan,Determines the span along the same axis as tab  expansion for a portion of the view.
javax.swing.text.GlyphView.getTabbedSpan,Determines the desired span when using the given  tab expansion implementation.
javax.swing.text.GlyphView.getTabExpander,Fetch the TabExpander to use if tabs are present in this view.
javax.swing.text.GlyphView.getText,Fetch a reference to the text that occupies  the given range.
javax.swing.text.GlyphView.insertUpdate,Gives notification that something was inserted into  the document in a location that this view is responsible for.
javax.swing.text.GlyphView.isStrikeThrough,Determine if the glyphs should have a strikethrough  line.
javax.swing.text.GlyphView.isSubscript,Determine if the glyphs should be rendered as superscript.
javax.swing.text.GlyphView.isSuperscript,Determine if the glyphs should be rendered as subscript.
javax.swing.text.GlyphView.isUnderline,Determine if the glyphs should be underlined.
javax.swing.text.GlyphView.paint,Renders a portion of a text style run.
javax.swing.text.GlyphView.setGlyphPainter,Sets the painter to use for rendering glyphs.
javax.swing.text.InternationalFormatter.getActions,"IfgetSupportsIncrementreturns true, this returns  two Actions suitable for incrementing/decrementing the value."
javax.swing.text.InternationalFormatter.getFields,Returns theFormat.Fieldconstants associated with  the text atoffset.
javax.swing.text.InternationalFormatter.getFormat,Returns the format that dictates the legal values that can be edited  and displayed.
javax.swing.text.InternationalFormatter.getMaximum,Returns the maximum permissible value.
javax.swing.text.InternationalFormatter.getMinimum,Returns the minimum permissible value.
javax.swing.text.InternationalFormatter.setMaximum,Sets the maximum permissible value.
javax.swing.text.InternationalFormatter.setMinimum,Sets the minimum permissible value.
javax.swing.text.InternationalFormatter.stringToValue,Returns theObjectrepresentation of theStringtext.
javax.swing.text.InternationalFormatter.valueToString,Returns a String representation of the Objectvalue.
javax.swing.text.JTextComponent.caretUpdate,"Handles caret updates (fire appropriate property change event,  which are AccessibleContext.ACCESSIBLE_CARET_PROPERTY and  AccessibleContext.ACCESSIBLE_SELECTION_PROPERTY)."
javax.swing.text.JTextComponent.changedUpdate,"Handles document remove (fire appropriate property change event,  which is AccessibleContext.ACCESSIBLE_TEXT_PROPERTY)."
javax.swing.text.JTextComponent.getAccessibleActionCount,"Returns the number of accessible actions available in this object  If there are more than one, the first one is considered the  ""default"" action of the object."
javax.swing.text.JTextComponent.getAccessibleEditableText,Returns the AccessibleEditableText interface for  this text component.
javax.swing.text.JTextComponent.getAccessibleStateSet,Gets the state set of the JTextComponent.
javax.swing.text.JTextComponent.getTextBounds,Returns theRectangleenclosing the text between  two indicies.
javax.swing.text.JTextComponent.insertTextAtIndex,Inserts the specified string at the given index
javax.swing.text.JTextComponent.insertUpdate,Handles document insert (fire appropriate property change event  which is AccessibleContext.ACCESSIBLE_TEXT_PROPERTY).
javax.swing.text.JTextComponent.getBias,Returns the bias for the drop index.
javax.swing.text.JTextComponent.getIndex,Returns the index where dropped data should be inserted into the  associated component.
javax.swing.text.JTextComponent.addCaretListener,Adds a caret listener for notification of any changes  to the caret.
javax.swing.text.JTextComponent.addKeymap,Adds a new keymap into the keymap hierarchy.
javax.swing.text.JTextComponent.copy,"Transfers the currently selected range in the associated  text model to the system clipboard, leaving the contents  in the text model."
javax.swing.text.JTextComponent.cut,"Transfers the currently selected range in the associated  text model to the system clipboard, removing the contents  from the model."
javax.swing.text.JTextComponent.getAccessibleContext,Gets theAccessibleContextassociated with thisJTextComponent.
javax.swing.text.JTextComponent.getCaret,Fetches the caret that allows text-oriented navigation over  the view.
javax.swing.text.JTextComponent.getCaretColor,Fetches the current color used to render the  caret.
javax.swing.text.JTextComponent.getCaretListeners,Returns an array of all the caret listeners  registered on this text component.
javax.swing.text.JTextComponent.getCaretPosition,Returns the position of the text insertion caret for the  text component.
javax.swing.text.JTextComponent.getDisabledTextColor,Fetches the current color used to render the  disabled text.
javax.swing.text.JTextComponent.getFocusAccelerator,Returns the key accelerator that will cause the receiving  text component to get the focus.
javax.swing.text.JTextComponent.getHighlighter,Fetches the object responsible for making highlights.
javax.swing.text.JTextComponent.getInputMethodRequests,Gets the input method request handler which supports  requests from input methods for this component.
javax.swing.text.JTextComponent.getKeymap,Fetches the keymap currently active in this text  component.
javax.swing.text.JTextComponent.getKeymap,Fetches a named keymap previously added to the document.
javax.swing.text.JTextComponent.getMargin,Returns the margin between the text component's border and  its text.
javax.swing.text.JTextComponent.getNavigationFilter,Returns theNavigationFilter.
javax.swing.text.JTextComponent.getPrintable,Returns aPrintableto use for printing the content of thisJTextComponent.
javax.swing.text.JTextComponent.getScrollableBlockIncrement,"Components that display logical rows or columns should compute  the scroll increment that will completely expose one block  of rows or columns, depending on the value of orientation."
javax.swing.text.JTextComponent.getSelectedText,Returns the selected text contained in thisTextComponent.
javax.swing.text.JTextComponent.getSelectedTextColor,Fetches the current color used to render the  selected text.
javax.swing.text.JTextComponent.getSelectionColor,Fetches the current color used to render the  selection.
javax.swing.text.JTextComponent.getSelectionEnd,Returns the selected text's end position.
javax.swing.text.JTextComponent.getSelectionStart,Returns the selected text's start position.
javax.swing.text.JTextComponent.getText,Fetches a portion of the text represented by the  component.
javax.swing.text.JTextComponent.getUI,Fetches the user-interface factory for this text-oriented editor.
javax.swing.text.JTextComponent.isEditable,Returns the boolean indicating whether thisTextComponentis editable or not.
javax.swing.text.JTextComponent.loadKeymap,Loads a keymap with a bunch of  bindings.
javax.swing.text.JTextComponent.modelToView,Deprecated.replaced bymodelToView2D(int)
javax.swing.text.JTextComponent.moveCaretPosition,"Moves the caret to a new position, leaving behind a mark  defined by the last timesetCaretPositionwas  called."
javax.swing.text.JTextComponent.paramString,Returns a string representation of thisJTextComponent.
javax.swing.text.JTextComponent.paste,Transfers the contents of the system clipboard into the  associated text model.
javax.swing.text.JTextComponent.print,"A convenience print method that displays a print dialog, and then  prints thisJTextComponentininteractivemode with no  header or footer text."
javax.swing.text.JTextComponent.print,"A convenience print method that displays a print dialog, and then  prints thisJTextComponentininteractivemode with  the specified header and footer text."
javax.swing.text.JTextComponent.print,Prints the content of thisJTextComponent.
javax.swing.text.JTextComponent.read,Initializes from a stream.
javax.swing.text.JTextComponent.removeCaretListener,Removes a caret listener.
javax.swing.text.JTextComponent.removeKeymap,Removes a named keymap previously added to the document.
javax.swing.text.JTextComponent.restoreComposedText,Restores composed text previously saved bysaveComposedText.
javax.swing.text.JTextComponent.saveComposedText,Saves composed text around the specified position.
javax.swing.text.JTextComponent.selectAll,Selects all the text in theTextComponent.
javax.swing.text.JTextComponent.setCaret,Sets the caret to be used.
javax.swing.text.JTextComponent.setCaretColor,Sets the current color used to render the caret.
javax.swing.text.JTextComponent.setCaretPosition,Sets the position of the text insertion caret for theTextComponent.
javax.swing.text.JTextComponent.setDisabledTextColor,Sets the current color used to render the  disabled text.
javax.swing.text.JTextComponent.setEditable,Sets the specified boolean to indicate whether or not thisTextComponentshould be editable.
javax.swing.text.JTextComponent.setFocusAccelerator,Sets the key accelerator that will cause the receiving text  component to get the focus.
javax.swing.text.JTextComponent.setHighlighter,Sets the highlighter to be used.
javax.swing.text.JTextComponent.setKeymap,Sets the keymap to use for binding events to  actions.
javax.swing.text.JTextComponent.setMargin,Sets margin space between the text component's border  and its text.
javax.swing.text.JTextComponent.setNavigationFilter,Sets theNavigationFilter.
javax.swing.text.JTextComponent.setSelectedTextColor,Sets the current color used to render the selected text.
javax.swing.text.JTextComponent.setSelectionColor,Sets the current color used to render the selection.
javax.swing.text.JTextComponent.setSelectionEnd,Sets the selection end to the specified position.
javax.swing.text.JTextComponent.setSelectionStart,Sets the selection start to the specified position.
javax.swing.text.JTextComponent.setUI,Sets the user-interface factory for this text-oriented editor.
javax.swing.text.JTextComponent.viewToModel,Deprecated.replaced byviewToModel2D(Point2D)
javax.swing.text.JTextComponent.viewToModel2D,Converts the given place in the view coordinate system  to the nearest representative location in the model.
javax.swing.text.JTextComponent.write,Stores the contents of the model into the given  stream.
javax.swing.text.LabelView.getBackground,Fetches the background color to use to render the glyphs.
javax.swing.text.LabelView.getFont,Fetches the font that the glyphs should be based upon.
javax.swing.text.LabelView.getFontMetrics,Deprecated.FontMetrics are not used for glyph rendering   when running in the JDK.
javax.swing.text.LabelView.getForeground,Fetches the foreground color to use to render the glyphs.
javax.swing.text.LabelView.isStrikeThrough,Determines if the glyphs should have a strikethrough  line.
javax.swing.text.LabelView.isSubscript,Determines if the glyphs should be rendered as superscript.
javax.swing.text.LabelView.isSuperscript,Determines if the glyphs should be rendered as subscript.
javax.swing.text.LabelView.isUnderline,Determines if the glyphs should be underlined.
javax.swing.text.LabelView.setBackground,Sets the background color for the view.
javax.swing.text.LabelView.setPropertiesFromAttributes,Sets the cached properties from the attributes.
javax.swing.text.LabelView.setStrikeThrough,Sets whether or not the view has a strike/line  through it.
javax.swing.text.LabelView.setSubscript,Sets whether or not the view represents a  subscript.
javax.swing.text.LabelView.setSuperscript,Sets whether or not the view represents a  superscript.
javax.swing.text.LabelView.setUnderline,Sets whether or not the view is underlined.
javax.swing.text.LayoutQueue.addTask,Add a task that is not needed immediately because  the results are not believed to be visible.
javax.swing.text.LayoutQueue.getDefaultQueue,Fetch the default layout queue.
javax.swing.text.LayoutQueue.setDefaultQueue,Set the default layout queue.
javax.swing.text.LayoutQueue.waitForWork,Used by the worker thread to get a new task to execute.
javax.swing.text.MaskFormatter.getInvalidCharacters,Returns the characters that are not valid for input.
javax.swing.text.MaskFormatter.getMask,Returns the formatting mask.
javax.swing.text.MaskFormatter.getPlaceholder,Returns the String to use if the value does not completely fill  in the mask.
javax.swing.text.MaskFormatter.getPlaceholderCharacter,"Returns the character to use in place of characters that are not present  in the value, ie the user must fill them in."
javax.swing.text.MaskFormatter.getValidCharacters,Returns the valid characters that can be input.
javax.swing.text.MaskFormatter.getValueContainsLiteralCharacters,Returns true ifstringToValueshould return literal  characters in the mask.
javax.swing.text.MaskFormatter.setInvalidCharacters,Allows for further restricting of the characters that can be input.
javax.swing.text.MaskFormatter.setMask,Sets the mask dictating the legal characters.
javax.swing.text.MaskFormatter.setPlaceholder,Sets the string to use if the value does not completely fill in  the mask.
javax.swing.text.MaskFormatter.setPlaceholderCharacter,"Sets the character to use in place of characters that are not present  in the value, ie the user must fill them in."
javax.swing.text.MaskFormatter.setValueContainsLiteralCharacters,"If true, the returned value and set value will also contain the literal  characters in mask."
javax.swing.text.MaskFormatter.stringToValue,"Parses the text, returning the appropriate Object representation of  the Stringvalue."
javax.swing.text.MaskFormatter.valueToString,Returns a String representation of the Objectvaluebased on the mask.
javax.swing.text.NavigationFilter.getCaret,Returns the Caret that is changing.
javax.swing.text.NavigationFilter.moveDot,"Moves the caret location, bypassing the NavigationFilter."
javax.swing.text.NavigationFilter.setDot,"Sets the caret location, bypassing the NavigationFilter."
javax.swing.text.NavigationFilter.getNextVisualPositionFrom,Returns the next visual position to place the caret at from an  existing position.
javax.swing.text.NavigationFilter.moveDot,Invoked prior to the Caret moving the dot.
javax.swing.text.NavigationFilter.setDot,Invoked prior to the Caret setting the dot.
javax.swing.text.ParagraphView.calculateMinorAxisRequirements,Calculate the needs for the paragraph along the minor axis.
javax.swing.text.ParagraphView.createRow,Create aViewthat should be used to hold a  a row's worth of children in a flow.
javax.swing.text.ParagraphView.findOffsetToCharactersInString,"Finds the next character in the document with a character instring, starting at offsetstart."
javax.swing.text.ParagraphView.getBreakWeight,Gets the break weight for a given location.
javax.swing.text.ParagraphView.getClosestPositionTo,Returns the closest model position tox.
javax.swing.text.ParagraphView.getFlowSpan,Fetches the constraining span to flow against for  the given child index.
javax.swing.text.ParagraphView.getFlowStart,Fetches the location along the flow axis that the  flow span will start at.
javax.swing.text.ParagraphView.getLayoutView,Returns the view at a givenindex.
javax.swing.text.ParagraphView.getLayoutViewCount,Returns the number of views that this view is  responsible for.
javax.swing.text.ParagraphView.getNextNorthSouthVisualPositionFrom,"Returns the next visual position for the cursor, in  either the east or west direction."
javax.swing.text.ParagraphView.getPartialSize,Returns the size used by the views betweenstartOffsetandendOffset.
javax.swing.text.ParagraphView.getTabBase,Returns where the tabs are calculated from.
javax.swing.text.ParagraphView.getTabSet,Gets theTabsetto be used in calculating tabs.
javax.swing.text.ParagraphView.nextTabStop,Returns the next tab stop position given a reference position.
javax.swing.text.ParagraphView.paint,Renders using the given rendering surface and area on that  surface.
javax.swing.text.ParagraphView.setFirstLineIndent,Sets the indent on the first line.
javax.swing.text.ParagraphView.setJustification,Sets the type of justification.
javax.swing.text.ParagraphView.setLineSpacing,Sets the line spacing.
javax.swing.text.ParagraphView.setPropertiesFromAttributes,Set the cached properties from the attributes.
javax.swing.text.PasswordView.drawEchoCharacter,"Renders the echo character, or whatever graphic should be used  to display the password characters."
javax.swing.text.PasswordView.drawEchoCharacter,"Deprecated.replaced bydrawEchoCharacter(Graphics2D, float, float, char)"
javax.swing.text.PasswordView.drawSelectedText,"Deprecated.replaced byPlainView.drawSelectedText(Graphics2D, float, float, int, int)"
javax.swing.text.PasswordView.drawUnselectedText,"Deprecated.replaced byPlainView.drawUnselectedText(Graphics2D, float, float, int, int)"
javax.swing.text.PlainDocument.getDefaultRootElement,Gets the default root element for the document model.
javax.swing.text.PlainView.damageLineRange,Repaint the given line range.
javax.swing.text.PlainView.drawLine,"Renders a line of text, suppressing whitespace at the end  and expanding any tabs."
javax.swing.text.PlainView.drawLine,"Deprecated.replaced bydrawLine(int, Graphics2D, float, float)"
javax.swing.text.PlainView.drawSelectedText,Renders the given range in the model as selected text.
javax.swing.text.PlainView.drawSelectedText,"Deprecated.replaced bydrawSelectedText(Graphics2D, float, float, int, int)"
javax.swing.text.PlainView.drawUnselectedText,Renders the given range in the model as normal unselected  text.
javax.swing.text.PlainView.drawUnselectedText,"Deprecated.replaced bydrawUnselectedText(Graphics2D, float, float, int, int)"
javax.swing.text.PlainView.getLineBuffer,Gives access to a buffer that can be used to fetch  text from the associated document.
javax.swing.text.PlainView.getTabSize,"Returns the tab size set for the document, defaulting to 8."
javax.swing.text.PlainView.lineToRect,Determine the rectangle that represents the given line.
javax.swing.text.PlainView.nextTabStop,Returns the next tab stop position after a given reference position.
javax.swing.text.PlainView.updateDamage,Repaint the region of change covered by the given document  event.
javax.swing.text.PlainView.updateMetrics,Checks to see if the font metrics and longest line  are up-to-date.
javax.swing.text.Segment.charAt,Returns thecharvalue at the specified index.
javax.swing.text.Segment.current,Gets the character at the current position (as returned by getIndex()).
javax.swing.text.Segment.first,Sets the position to getBeginIndex() and returns the character at that  position.
javax.swing.text.Segment.getBeginIndex,Returns the start index of the text.
javax.swing.text.Segment.getEndIndex,Returns the end index of the text.
javax.swing.text.Segment.getIndex,Returns the current index.
javax.swing.text.Segment.isPartialReturn,Flag to indicate that partial returns are valid.
javax.swing.text.Segment.last,Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)  and returns the character at that position.
javax.swing.text.Segment.length,Returns the length of this character sequence.
javax.swing.text.Segment.next,Increments the iterator's index by one and returns the character  at the new index.
javax.swing.text.Segment.previous,Decrements the iterator's index by one and returns the character  at the new index.
javax.swing.text.Segment.setIndex,Sets the position to the specified position in the text and returns that  character.
javax.swing.text.Segment.subSequence,Returns aCharSequencethat is a subsequence of this sequence.
javax.swing.text.Segment.toString,Converts a segment into a String.
javax.swing.text.SimpleAttributeSet.addAttribute,Adds an attribute to the list.
javax.swing.text.SimpleAttributeSet.addAttributes,Adds a set of attributes to the list.
javax.swing.text.SimpleAttributeSet.clone,Clones a set of attributes.
javax.swing.text.SimpleAttributeSet.containsAttribute,Checks whether the attribute list contains a  specified attribute name/value pair.
javax.swing.text.SimpleAttributeSet.containsAttributes,Checks whether the attribute list contains all the  specified name/value pairs.
javax.swing.text.SimpleAttributeSet.copyAttributes,Makes a copy of the attributes.
javax.swing.text.SimpleAttributeSet.getAttributeCount,Gets a count of the number of attributes.
javax.swing.text.SimpleAttributeSet.getAttributeNames,Gets the names of the attributes in the set.
javax.swing.text.SimpleAttributeSet.hashCode,Returns a hashcode for this set of attributes.
javax.swing.text.SimpleAttributeSet.isDefined,Tells whether a given attribute is defined.
javax.swing.text.SimpleAttributeSet.isEmpty,Checks whether the set of attributes is empty.
javax.swing.text.SimpleAttributeSet.isEqual,Compares two attribute sets.
javax.swing.text.SimpleAttributeSet.removeAttribute,Removes an attribute from the list.
javax.swing.text.SimpleAttributeSet.removeAttributes,Removes a set of attributes from the list.
javax.swing.text.SimpleAttributeSet.toString,Converts the attribute set to a String.
javax.swing.text.StyleConstants.getAlignment,Gets the alignment setting.
javax.swing.text.StyleConstants.getBackground,Gets the background color setting from the attribute list.
javax.swing.text.StyleConstants.getBidiLevel,Gets the BidiLevel setting.
javax.swing.text.StyleConstants.getComponent,Gets the component setting from the attribute list.
javax.swing.text.StyleConstants.getFirstLineIndent,Gets the first line indent setting.
javax.swing.text.StyleConstants.getFontFamily,Gets the font family setting from the attribute list.
javax.swing.text.StyleConstants.getFontSize,Gets the font size setting from the attribute list.
javax.swing.text.StyleConstants.getForeground,Gets the foreground color setting from the attribute list.
javax.swing.text.StyleConstants.getIcon,Gets the icon setting from the attribute list.
javax.swing.text.StyleConstants.getLeftIndent,Gets the left indent setting.
javax.swing.text.StyleConstants.getLineSpacing,Gets the line spacing setting.
javax.swing.text.StyleConstants.getRightIndent,Gets the right indent setting.
javax.swing.text.StyleConstants.getSpaceAbove,Gets the space above setting.
javax.swing.text.StyleConstants.getSpaceBelow,Gets the space below setting.
javax.swing.text.StyleConstants.getTabSet,Gets the TabSet.
javax.swing.text.StyleConstants.isBold,Checks whether the bold attribute is set.
javax.swing.text.StyleConstants.isItalic,Checks whether the italic attribute is set.
javax.swing.text.StyleConstants.isStrikeThrough,Checks whether the strikethrough attribute is set.
javax.swing.text.StyleConstants.isSubscript,Checks whether the subscript attribute is set.
javax.swing.text.StyleConstants.isSuperscript,Checks whether the superscript attribute is set.
javax.swing.text.StyleConstants.isUnderline,Checks whether the underline attribute is set.
javax.swing.text.StyleConstants.setAlignment,Sets alignment.
javax.swing.text.StyleConstants.setBackground,Sets the background color.
javax.swing.text.StyleConstants.setBidiLevel,Sets the BidiLevel.
javax.swing.text.StyleConstants.setBold,Sets the bold attribute.
javax.swing.text.StyleConstants.setComponent,Sets the component attribute.
javax.swing.text.StyleConstants.setFirstLineIndent,Sets the first line indent.
javax.swing.text.StyleConstants.setFontFamily,Sets the font attribute.
javax.swing.text.StyleConstants.setFontSize,Sets the font size attribute.
javax.swing.text.StyleConstants.setForeground,Sets the foreground color.
javax.swing.text.StyleConstants.setIcon,Sets the icon attribute.
javax.swing.text.StyleConstants.setItalic,Sets the italic attribute.
javax.swing.text.StyleConstants.setLeftIndent,Sets left indent.
javax.swing.text.StyleConstants.setLineSpacing,Sets line spacing.
javax.swing.text.StyleConstants.setRightIndent,Sets right indent.
javax.swing.text.StyleConstants.setSpaceAbove,Sets space above.
javax.swing.text.StyleConstants.setSpaceBelow,Sets space below.
javax.swing.text.StyleConstants.setStrikeThrough,Sets the strikethrough attribute.
javax.swing.text.StyleConstants.setSubscript,Sets the subscript attribute.
javax.swing.text.StyleConstants.setSuperscript,Sets the superscript attribute.
javax.swing.text.StyleConstants.setTabSet,Sets the TabSet.
javax.swing.text.StyleConstants.setUnderline,Sets the underline attribute.
javax.swing.text.StyleConstants.toString,Returns the string representation.
javax.swing.text.StyleContext.addChangeListener,Adds a listener to track when styles are added  or removed.
javax.swing.text.StyleContext.addStyle,Adds a new style into the style hierarchy.
javax.swing.text.StyleContext.createLargeAttributeSet,Create a large set of attributes that should trade off  space for time.
javax.swing.text.StyleContext.createSmallAttributeSet,Create a compact set of attributes that might be shared.
javax.swing.text.StyleContext.getBackground,Takes a set of attributes and turn it into a background color  specification.
javax.swing.text.StyleContext.getChangeListeners,Returns an array of all theChangeListeners added  to this StyleContext with addChangeListener().
javax.swing.text.StyleContext.getCompressionThreshold,Returns the maximum number of key/value pairs to try and  compress into unique/immutable sets.
javax.swing.text.StyleContext.getDefaultStyleContext,Returns default AttributeContext shared by all documents that  don't bother to define/supply their own context.
javax.swing.text.StyleContext.getFont,Gets a new font.
javax.swing.text.StyleContext.getFontMetrics,Returns font metrics for a font.
javax.swing.text.StyleContext.getForeground,Takes a set of attributes and turn it into a foreground color  specification.
javax.swing.text.StyleContext.getStaticAttribute,Returns the object previously registered withregisterStaticAttributeKey.
javax.swing.text.StyleContext.getStaticAttributeKey,Returns the String thatkeywill be registered with.
javax.swing.text.StyleContext.getStyle,Fetches a named style previously added to the document
javax.swing.text.StyleContext.getStyleNames,Fetches the names of the styles defined.
javax.swing.text.StyleContext.readAttributes,Context-specific handling of reading in attributes
javax.swing.text.StyleContext.readAttributeSet,Reads a set of attributes from the given object input  stream that have been previously written out withwriteAttributeSet.
javax.swing.text.StyleContext.reclaim,Returns a set no longer needed by the MutableAttributeSet implementation.
javax.swing.text.StyleContext.registerStaticAttributeKey,Registers an object as a static object that is being  used as a key in attribute sets.
javax.swing.text.StyleContext.removeChangeListener,Removes a listener that was tracking styles being  added or removed.
javax.swing.text.StyleContext.toString,Converts a StyleContext to a String.
javax.swing.text.StyleContext.writeAttributes,Context-specific handling of writing out attributes
javax.swing.text.StyleContext.writeAttributeSet,Writes a set of attributes to the given object stream  for the purpose of serialization.
javax.swing.text.StyleContext.addAttribute,Adds an attribute.
javax.swing.text.StyleContext.addChangeListener,Adds a change listener.
javax.swing.text.StyleContext.getChangeListeners,Returns an array of all theChangeListeners added  to this NamedStyle with addChangeListener().
javax.swing.text.StyleContext.getName,Fetches the name of the style.
javax.swing.text.StyleContext.getResolveParent,Gets attributes from the parent.
javax.swing.text.StyleContext.removeChangeListener,Removes a change listener.
javax.swing.text.StyleContext.setName,Changes the name of the style.
javax.swing.text.StyleContext.toString,Converts the style to a string.
javax.swing.text.StyleContext.containsAttributes,Checks whether the attribute set contains all of  the given attributes.
javax.swing.text.StyleContext.getResolveParent,"If not overriden, the resolving parent defaults to  the parent element."
javax.swing.text.StyleContext.toString,Returns a string showing the key/value pairs.
javax.swing.text.StyledEditorKit.actionPerformed,Sets the alignment.
javax.swing.text.StyledEditorKit.actionPerformed,Toggles the bold attribute.
javax.swing.text.StyledEditorKit.actionPerformed,Sets the font family.
javax.swing.text.StyledEditorKit.actionPerformed,Sets the font size.
javax.swing.text.StyledEditorKit.createInputAttributes,Copies the key/values inelements AttributeSet intoset.
javax.swing.text.StyledEditorKit.getCharacterAttributeRun,Fetches the element representing the current  run of character attributes for the caret.
javax.swing.text.StyledEditorKit.install,Called when the kit is being installed into  a JEditorPane.
javax.swing.text.StyledEditorKit.actionPerformed,Toggles the italic attribute.
javax.swing.text.StyledEditorKit.getEditor,Gets the target editor for an action.
javax.swing.text.StyledEditorKit.getStyledDocument,Gets the document associated with an editor pane.
javax.swing.text.StyledEditorKit.getStyledEditorKit,Gets the editor kit associated with an editor pane.
javax.swing.text.StyledEditorKit.actionPerformed,Toggles the Underline attribute.
javax.swing.text.TableView.calculateMinorAxisRequirements,Calculate the requirements for the minor axis.
javax.swing.text.TableView.createTableCell,Deprecated.Table cells can now be any arbitrary  View implementation and should be produced by the  ViewFactory rather than the table.
javax.swing.text.TableView.createTableRow,Creates a new table row.
javax.swing.text.TableView.layoutColumns,Lays out the columns to fit within the given target span.
javax.swing.text.TableView.layoutMinorAxis,Perform layout for the minor axis of the box (i.e. the  axis orthogonal to the axis that it represents).
javax.swing.text.TableView.replace,Change the child views.
javax.swing.text.TableView.layoutMajorAxis,Perform layout for the major axis of the box (i.e. the  axis that it represents).
javax.swing.text.TabSet.equals,Indicates whether thisTabSetis equal to another one.
javax.swing.text.TabSet.getTab,Returns the TabStop at indexindex.
javax.swing.text.TabSet.getTabAfter,Returns the Tab instance afterlocation.
javax.swing.text.TabSet.getTabCount,Returns the number of Tab instances the receiver contains.
javax.swing.text.TabSet.getTabIndex,"Returns the index of the TabStoptab, or -1 iftabis not contained in the receiver."
javax.swing.text.TabSet.getTabIndexAfter,Returns the index of the Tab to be used afterlocation.
javax.swing.text.TabSet.hashCode,Returns a hashcode for this set of TabStops.
javax.swing.text.TabSet.toString,Returns the string representation of the set of tabs.
javax.swing.text.TabStop.equals,Returns true if the tabs are equal.
javax.swing.text.TabStop.getAlignment,"Returns the alignment, as an integer, of the tab."
javax.swing.text.TabStop.getLeader,Returns the leader of the tab.
javax.swing.text.TabStop.getPosition,"Returns the position, as a float, of the tab."
javax.swing.text.TabStop.hashCode,Returns the hashCode for the object.
javax.swing.text.TextAction.augmentList,Takes one list of  commands and augments it with another list  of commands.
javax.swing.text.TextAction.getFocusedComponent,Fetches the text component that currently has focus.
javax.swing.text.TextAction.getTextComponent,Determines the component to use for the action.
javax.swing.text.Utilities.drawTabbedText,"Draws the given text, expanding any tabs that are contained  using the given tab expansion technique."
javax.swing.text.Utilities.drawTabbedText,"Deprecated.replaced bydrawTabbedText(Segment, float, float, Graphics2D, TabExpander, int)"
javax.swing.text.Utilities.getBreakLocation,Determine where to break the given text to fit  within the given span.
javax.swing.text.Utilities.getBreakLocation,"Deprecated.replaced bygetBreakLocation(Segment, FontMetrics, float, float, TabExpander, int)"
javax.swing.text.Utilities.getNextWord,Determines the start of the next word for the given location.
javax.swing.text.Utilities.getParagraphElement,Determines the element to use for a paragraph/line.
javax.swing.text.Utilities.getPositionAbove,Determines the position in the model that is closest to the given  view location in the row above.
javax.swing.text.Utilities.getPositionAbove,"Deprecated.replaced bygetPositionAbove(JTextComponent, int, float)"
javax.swing.text.Utilities.getPositionBelow,Determines the position in the model that is closest to the given  view location in the row below.
javax.swing.text.Utilities.getPositionBelow,"Deprecated.replaced bygetPositionBelow(JTextComponent, int, float)"
javax.swing.text.Utilities.getPreviousWord,Determine the start of the prev word for the given location.
javax.swing.text.Utilities.getRowEnd,Determines the ending row model position of the row that contains  the specified model position.
javax.swing.text.Utilities.getRowStart,Determines the starting row model position of the row that contains  the specified model position.
javax.swing.text.Utilities.getTabbedTextOffset,Determines the relative offset into the given text that  best represents the given span in the view coordinate  system.
javax.swing.text.Utilities.getTabbedTextOffset,"Deprecated.replaced bygetTabbedTextOffset(Segment, FontMetrics, float, float, TabExpander, int, boolean)"
javax.swing.text.Utilities.getTabbedTextWidth,Determines the width of the given segment of text taking tabs  into consideration.
javax.swing.text.Utilities.getTabbedTextWidth,"Deprecated.replaced bygetTabbedTextWidth(Segment, FontMetrics, float, TabExpander, int)"
javax.swing.text.Utilities.getWordEnd,Determines the end of a word for the given location.
javax.swing.text.Utilities.getWordStart,Determines the start of a word for the given model location.
javax.swing.text.View.append,Appends a single child view.
javax.swing.text.View.breakView,Tries to break this view on the given axis.
javax.swing.text.View.forwardUpdateToView,Forwards theDocumentEventto the give child view.
javax.swing.text.View.getAttributes,Fetches the attributes to use when rendering.
javax.swing.text.View.getContainer,Fetches the container hosting the view.
javax.swing.text.View.getDocument,Fetches the model associated with the view.
javax.swing.text.View.getElement,Fetches the structural portion of the subject that this  view is mapped to.
javax.swing.text.View.getEndOffset,Fetches the portion of the model for which this view is  responsible.
javax.swing.text.View.getGraphics,Fetch aGraphicsfor rendering.
javax.swing.text.View.getNextVisualPositionFrom,Provides a way to determine the next visually represented model  location at which one might place a caret.
javax.swing.text.View.getParent,Returns the parent of the view.
javax.swing.text.View.getToolTipText,Returns the tooltip text at the specified location.
javax.swing.text.View.getView,Gets thenth child view.
javax.swing.text.View.getViewFactory,Fetches theViewFactoryimplementation that is feeding  the view hierarchy.
javax.swing.text.View.getViewIndex,Returns the child view index representing the given position in  the view.
javax.swing.text.View.insert,Inserts a single child view.
javax.swing.text.View.isVisible,Returns a boolean that indicates whether   the view is visible or not.
javax.swing.text.View.modelToView,"Provides a mapping, for a given character,  from the document model coordinate space  to the view coordinate space."
javax.swing.text.View.modelToView,"Provides a mapping, for a given region,  from the document model coordinate space  to the view coordinate space."
javax.swing.text.View.remove,Removes one of the children at the given position.
javax.swing.text.View.removeAll,Removes all of the children.
javax.swing.text.View.setParent,Establishes the parent view for this view.
javax.swing.text.View.updateChildren,"Updates the child views in response to receiving notification  that the model changed, and there is change record for the  element this view is responsible for."
javax.swing.text.View.updateLayout,Updates the layout in response to receiving notification of  change from the model.
javax.swing.text.WrappedPlainView.calculateBreakPosition,This is called by the nested wrapped line  views to determine the break location.
javax.swing.text.WrappedPlainView.drawLine,"Deprecated.replaced bydrawLine(int, int, Graphics2D, float, float)"
javax.swing.text.WrappedPlainView.insertUpdate,Gives notification that something was inserted into the  document in a location that this view is responsible for.
javax.swing.text.WrappedPlainView.paint,Renders using the given rendering surface and area  on that surface.
javax.swing.text.WrappedPlainView.removeUpdate,Gives notification that something was removed from the  document in a location that this view is responsible for.
javax.swing.text.ZoneView.createZone,Create a view to represent a zone for the given  range within the model (which should be within  the range of this objects responsibility).
javax.swing.text.ZoneView.getMaximumZoneSize,Get the current maximum zone size.
javax.swing.text.ZoneView.getMaxZonesLoaded,Get the current setting of the number of zones  allowed to be loaded at the same time.
javax.swing.text.ZoneView.isZoneLoaded,Determine if a zone is in the loaded state.
javax.swing.text.ZoneView.setMaximumZoneSize,Set the desired maximum zone size.
javax.swing.text.ZoneView.setMaxZonesLoaded,Sets the current setting of the number of zones  allowed to be loaded at the same time.
javax.swing.text.ZoneView.unloadZone,Unload a zone (Convert the zone to its memory saving state).
javax.swing.text.ZoneView.updateChildren,"The superclass behavior will try to update the child views  which is not desired in this case, since the children are  zones and not directly effected by the changes to the  associated element."
javax.swing.text.ZoneView.zoneWasLoaded,Called by a zone when it gets loaded.
javax.swing.text.html.BlockView.calculateMajorAxisRequirements,Calculate the requirements of the block along the major  axis (i.e. the axis along with it tiles).
javax.swing.text.html.BlockView.calculateMinorAxisRequirements,Calculate the requirements of the block along the minor  axis (i.e. the axis orthogonal to the axis along with it tiles).
javax.swing.text.html.BlockView.getAlignment,Gets the alignment.
javax.swing.text.html.BlockView.getStyleSheet,Convenient method to get the StyleSheet.
javax.swing.text.html.BlockView.setPropertiesFromAttributes,Update any cached values that come from attributes.
javax.swing.text.html.CSS.getDefaultValue,Fetch the default value for the attribute.
javax.swing.text.html.CSS.isInherited,Indicates if the attribute should be inherited  from the parent or not.
javax.swing.text.html.CSS.toString,The string representation of the attribute.
javax.swing.text.html.CSS.getAllAttributeKeys,Return the set of all possible CSS attribute keys.
javax.swing.text.html.CSS.getAttribute,Translates a string to aCSS.Attributeobject.
javax.swing.text.html.FormSubmitEvent.getData,Gets the form submission data.
javax.swing.text.html.FormSubmitEvent.getMethod,Gets the form method type.
javax.swing.text.html.FormView.actionPerformed,Responsible for processing the ActionEvent.
javax.swing.text.html.FormView.createComponent,Create the component.
javax.swing.text.html.FormView.imageSubmit,"This method is called to submit a form in response  to a click on an image -- an <INPUT> form  element of type ""image""."
javax.swing.text.html.FormView.submitData,This method is responsible for submitting the form data.
javax.swing.text.html.HTML.toString,Returns the string representation of this attribute.
javax.swing.text.html.HTML.getAllAttributeKeys,Returns the set of HTML attributes recognized.
javax.swing.text.html.HTML.getAllTags,Returns the set of actual HTML tags that  are recognized by the default HTML reader.
javax.swing.text.html.HTML.getAttributeKey,"Fetches an attribute constant for a well-known attribute name  (i.e. one of the attributes in the set {FACE, COMMENT, SIZE,  COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK,  WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET,  SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE,  USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE,  TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE,  STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD,  ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS,  DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN,  COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N,  FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE,  MEDIA, ENDTAG})."
javax.swing.text.html.HTML.getIntegerAttributeValue,Fetches an integer attribute value.
javax.swing.text.html.HTML.getTag,"Fetches a tag constant for a well-known tag name (i.e. one of  the tags in the set {A, ADDRESS, APPLET, AREA, B,  BASE, BASEFONT, BIG,  BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, CODE,  DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME,  FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML,  I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU,  META, NOBR, NOFRAMES, OBJECT, OL, OPTION, P, PARAM,  PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S,  STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA,  TH, TITLE, TR, TT, U, UL, VAR}."
javax.swing.text.html.HTML.breaksFlow,"Returnstrueif this tag causes a  line break to the flow of data, otherwise returnsfalse."
javax.swing.text.html.HTML.isBlock,"Returnstrueif this tag is a block  tag, which is a tag used to add structure to a  document."
javax.swing.text.html.HTML.isPreformatted,"Returnstrueif this tag is pre-formatted,  which is true if the tag is eitherPREorTEXTAREA."
javax.swing.text.html.HTML.toString,Returns the string representation of the  tag.
javax.swing.text.html.HTML.hashCode,Returns the hash code which corresponds to the string  for this tag.
javax.swing.text.html.HTMLDocument.create,Replaces the contents of the document with the given  element specifications.
javax.swing.text.html.HTMLDocument.createLeafElement,Creates a document leaf element that directly represents  text (doesn't have any children).
javax.swing.text.html.HTMLDocument.getBase,Returns the location to resolve relative URLs against.
javax.swing.text.html.HTMLDocument.getElement,Returns the element that has the given idAttribute.
javax.swing.text.html.HTMLDocument.getElement,"Returns the child element ofethat contains the  attribute,attributewith valuevalue, ornullif one isn't found."
javax.swing.text.html.HTMLDocument.getIterator,Fetches an iterator for the specified HTML tag.
javax.swing.text.html.HTMLDocument.getParser,Returns the parser that is used when inserting HTML into the existing  document.
javax.swing.text.html.HTMLDocument.getPreservesUnknownTags,Returns the behavior the parser observes when encountering  unknown tags.
javax.swing.text.html.HTMLDocument.getReader,Fetches the reader for the parser to use when loading the document  with HTML.
javax.swing.text.html.HTMLDocument.getReader,Returns the reader for the parser to use to load the document  with HTML.
javax.swing.text.html.HTMLDocument.getStyleSheet,Fetches theStyleSheetwith the document-specific display  rules (CSS) that were specified in the HTML document itself.
javax.swing.text.html.HTMLDocument.getTokenThreshold,Gets the number of tokens to buffer before trying to update  the documents element structure.
javax.swing.text.html.HTMLDocument.insertAfterEnd,Inserts the HTML specified as a string after the end of the  given element.
javax.swing.text.html.HTMLDocument.insertAfterStart,Inserts the HTML specified as a string at the start  of the element.
javax.swing.text.html.HTMLDocument.insertBeforeEnd,Inserts the HTML specified as a string at the end of  the element.
javax.swing.text.html.HTMLDocument.insertBeforeStart,Inserts the HTML specified as a string before the start of  the given element.
javax.swing.text.html.HTMLDocument.processHTMLFrameHyperlinkEvent,ProcessesHyperlinkEventsthat  are generated by documents in an HTML frame.
javax.swing.text.html.HTMLDocument.setBase,Sets the location to resolve relative URLs against.
javax.swing.text.html.HTMLDocument.setInnerHTML,Replaces the children of the given element with the contents  specified as an HTML string.
javax.swing.text.html.HTMLDocument.setOuterHTML,Replaces the given element in the parent with the contents  specified as an HTML string.
javax.swing.text.html.HTMLDocument.setParser,"Sets the parser that is used by the methods that insert html  into the existing document, such assetInnerHTML,  andsetOuterHTML."
javax.swing.text.html.HTMLDocument.setPreservesUnknownTags,Determines how unknown tags are handled by the parser.
javax.swing.text.html.HTMLDocument.setTokenThreshold,Sets the number of tokens to buffer before trying to update  the documents element structure.
javax.swing.text.html.HTMLDocument.addContent,Adds some text with the current character attributes.
javax.swing.text.html.HTMLDocument.addSpecialElement,Adds content that is basically specified entirely  in the attribute set.
javax.swing.text.html.HTMLDocument.blockClose,Adds an instruction to the parse buffer to close out  a block element of the given type.
javax.swing.text.html.HTMLDocument.blockOpen,Adds an instruction to the parse buffer to create a  block element with the given attributes.
javax.swing.text.html.HTMLDocument.flush,The last method called on the reader.
javax.swing.text.html.HTMLDocument.handleEndOfLineString,"This is invoked after the stream has been parsed, but beforeflush."
javax.swing.text.html.HTMLDocument.handleEndTag,Callback from the parser.
javax.swing.text.html.HTMLDocument.handleText,Called by the parser to indicate a block of text was  encountered.
javax.swing.text.html.HTMLDocument.popCharacterStyle,Pops a previously pushed character style off the stack  to return to a previous style.
javax.swing.text.html.HTMLDocument.preContent,Adds the given content that was encountered in a  PRE element.
javax.swing.text.html.HTMLDocument.pushCharacterStyle,Pushes the current character style on a stack in preparation  for forming a new nested character style.
javax.swing.text.html.HTMLDocument.registerTag,Registers a handler for the given tag.
javax.swing.text.html.HTMLDocument.textAreaContent,Adds the given content to the textarea document.
javax.swing.text.html.HTMLDocument.end,Called when an end tag is seen for the  type of tag this action was registered  to.
javax.swing.text.html.HTMLDocument.start,Called when a start tag is seen for the  type of tag this action was registered  to.
javax.swing.text.html.HTMLDocument.getAttributes,Return the attributes for this tag.
javax.swing.text.html.HTMLDocument.getEndOffset,Returns the end of the range for which the current occurrence of  the tag is defined and has the same attributes.
javax.swing.text.html.HTMLDocument.getStartOffset,Returns the start of the range for which the current occurrence of  the tag is defined and has the same attributes.
javax.swing.text.html.HTMLDocument.getTag,Type of tag this iterator represents.
javax.swing.text.html.HTMLDocument.isValid,Indicates if the iterator is currently  representing an occurrence of a tag.
javax.swing.text.html.HTMLDocument.next,Move the iterator forward to the next occurrence  of the tag it represents.
javax.swing.text.html.HTMLEditorKit.createDefaultDocument,Create an uninitialized text storage model  that is appropriate for this type of editor.
javax.swing.text.html.HTMLEditorKit.getAccessibleContext,returns the AccessibleContext associated with this editor kit
javax.swing.text.html.HTMLEditorKit.getContentType,Get the MIME type of the data that this  kit represents support for.
javax.swing.text.html.HTMLEditorKit.getDefaultCursor,Returns the default cursor.
javax.swing.text.html.HTMLEditorKit.getInputAttributes,Gets the input attributes used for the styled  editing actions.
javax.swing.text.html.HTMLEditorKit.getLinkCursor,Returns the cursor to use over hyper links.
javax.swing.text.html.HTMLEditorKit.getParser,Fetch the parser to use for reading HTML streams.
javax.swing.text.html.HTMLEditorKit.getStyleSheet,Get the set of styles currently being used to render the  HTML elements.
javax.swing.text.html.HTMLEditorKit.getViewFactory,Fetch a factory that is suitable for producing  views of any models that are produced by this  kit.
javax.swing.text.html.HTMLEditorKit.insertHTML,Inserts HTML into an existing document.
javax.swing.text.html.HTMLEditorKit.isAutoFormSubmission,Indicates whether an html form submission is processed automatically  or onlyFormSubmitEventis fired.
javax.swing.text.html.HTMLEditorKit.read,Inserts content from the given stream.
javax.swing.text.html.HTMLEditorKit.setAutoFormSubmission,Specifies if an html form submission is processed  automatically or onlyFormSubmitEventis fired.
javax.swing.text.html.HTMLEditorKit.setDefaultCursor,Sets the default cursor.
javax.swing.text.html.HTMLEditorKit.setLinkCursor,Sets the cursor to use over links.
javax.swing.text.html.HTMLEditorKit.setStyleSheet,Set the set of styles to be used to render the various  HTML elements.
javax.swing.text.html.HTMLEditorKit.write,Write content from a document to the given stream  in a format appropriate for this kind of content handler.
javax.swing.text.html.HTMLEditorKit.create,Creates a view from an element.
javax.swing.text.html.HTMLEditorKit.actionPerformed,Inserts the HTML into the document.
javax.swing.text.html.HTMLEditorKit.insertAtBoundary,This is invoked when inserting at a boundary.
javax.swing.text.html.HTMLEditorKit.insertAtBoundry,"Deprecated.As of Java 2 platform v1.3, use insertAtBoundary"
javax.swing.text.html.HTMLEditorKit.insertHTML,A cover for HTMLEditorKit.insertHTML.
javax.swing.text.html.HTMLEditorKit.activateLink,Calls linkActivated on the associated JEditorPane  if the given position represents a link.
javax.swing.text.html.HTMLEditorKit.mouseClicked,Called for a mouse click event.
javax.swing.text.html.HTMLEditorKit.parse,Parse the given stream and drive the given callback  with the results of the parse.
javax.swing.text.html.HTMLEditorKit.handleComment,Called by the parser to indicate a block of comment was  encountered.
javax.swing.text.html.HTMLFrameHyperlinkEvent.getTarget,returns the target for the link.
javax.swing.text.html.HTMLWriter.closeOutUnwantedEmbeddedTags,Searches the attribute set and for each tag  that is stored in the tag vector.
javax.swing.text.html.HTMLWriter.comment,Writes out comments.
javax.swing.text.html.HTMLWriter.emptyTag,Writes out all empty elements (all tags that have no  corresponding end tag).
javax.swing.text.html.HTMLWriter.endTag,Writes out an end tag for the element.
javax.swing.text.html.HTMLWriter.isBlockTag,Determines if the HTML.Tag associated with the  element is a block tag.
javax.swing.text.html.HTMLWriter.matchNameAttribute,Returns true if the StyleConstants.NameAttribute is  equal to the tag that is passed in as a parameter.
javax.swing.text.html.HTMLWriter.output,"This method is overriden to map any character entities, such as  < to &lt;."
javax.swing.text.html.HTMLWriter.selectContent,Writes out the content of the SELECT form element.
javax.swing.text.html.HTMLWriter.startTag,Writes out a start tag for the element.
javax.swing.text.html.HTMLWriter.synthesizedElement,Returnstrueif the element is a  synthesized element.
javax.swing.text.html.HTMLWriter.textAreaContent,Writes out text that is contained in a TEXTAREA form  element.
javax.swing.text.html.HTMLWriter.write,Iterates over the  Element tree and controls the writing out of  all the tags and its attributes.
javax.swing.text.html.HTMLWriter.writeAttributes,Writes out the attribute set.
javax.swing.text.html.HTMLWriter.writeEmbeddedTags,Searches for embedded tags in the AttributeSet  and writes them out.
javax.swing.text.html.HTMLWriter.writeOption,Writes out the content of the Option form element.
javax.swing.text.html.ImageView.changedUpdate,Invoked when the Elements attributes have changed.
javax.swing.text.html.ImageView.getAltText,Returns the text to display if the image cannot be loaded.
javax.swing.text.html.ImageView.getImage,Returns the image to render.
javax.swing.text.html.ImageView.getImageURL,"Return a URL for the image source,  or null if it could not be determined."
javax.swing.text.html.ImageView.getLoadingImageIcon,Returns the icon to use while in the process of loading the image.
javax.swing.text.html.ImageView.getLoadsSynchronously,Returnstrueif the image should be loaded when first asked for.
javax.swing.text.html.ImageView.getNoImageIcon,Returns the icon to use if the image could not be found.
javax.swing.text.html.ImageView.getToolTipText,For images the tooltip text comes from text specified with theALTattribute.
javax.swing.text.html.ImageView.paint,Paints the View.
javax.swing.text.html.ImageView.setLoadsSynchronously,Sets how the image is loaded.
javax.swing.text.html.ListView.getAlignment,Calculates the desired shape of the list.
javax.swing.text.html.ListView.paintChild,Paints one of the children; called by paint().
javax.swing.text.html.MinimalHTMLWriter.endFontTag,"This is no longer used, instead <span> will be written out."
javax.swing.text.html.MinimalHTMLWriter.inFontTag,Returns true if we are currently in a <font> tag.
javax.swing.text.html.MinimalHTMLWriter.isText,Returns true if the element is a text element.
javax.swing.text.html.MinimalHTMLWriter.write,Generates HTML output  from a StyledDocument.
javax.swing.text.html.MinimalHTMLWriter.writeAttributes,"Writes out all the attributes for the  following types:   StyleConstants.ParagraphConstants,   StyleConstants.CharacterConstants,   StyleConstants.FontConstants,   StyleConstants.ColorConstants."
javax.swing.text.html.MinimalHTMLWriter.writeBody,Iterates over the elements in the document  and processes elements based on whether they are  branch elements or leaf elements.
javax.swing.text.html.MinimalHTMLWriter.writeComponent,Responsible for handling Component Elements;  deliberately unimplemented.
javax.swing.text.html.MinimalHTMLWriter.writeContent,Writes out the attribute set  in an HTML-compliant manner.
javax.swing.text.html.MinimalHTMLWriter.writeEndParagraph,Emits an end tag for a <p>  tag.
javax.swing.text.html.MinimalHTMLWriter.writeEndTag,Writes out an end tag appropriately  indented.
javax.swing.text.html.MinimalHTMLWriter.writeHeader,"Writes out the <head> and <style>  tags, and then invokes writeStyles() to write  out all the named styles as the content of the  <style> tag."
javax.swing.text.html.MinimalHTMLWriter.writeHTMLTags,"Generates  bold <b>, italic <i>, and <u> tags for the  text based on its attribute settings."
javax.swing.text.html.MinimalHTMLWriter.writeImage,Responsible for handling Icon Elements;  deliberately unimplemented.
javax.swing.text.html.MinimalHTMLWriter.writeLeaf,Responsible for writing out other non-text leaf  elements.
javax.swing.text.html.MinimalHTMLWriter.writeNonHTMLAttributes,"Writes out the remaining  character-level attributes (attributes other than bold,  italic, and underline) in an HTML-compliant way."
javax.swing.text.html.MinimalHTMLWriter.writeStartParagraph,Emits the start tag for a paragraph.
javax.swing.text.html.MinimalHTMLWriter.writeStartTag,Writes out a start tag appropriately  indented.
javax.swing.text.html.MinimalHTMLWriter.writeStyles,Writes out all the named styles as the  content of the <style> tag.
javax.swing.text.html.Option.getAttributes,Fetch the attributes associated with this option.
javax.swing.text.html.Option.getLabel,Fetch the label associated with the option.
javax.swing.text.html.Option.getValue,Convenient method to return the string associated  with thevalueattribute.
javax.swing.text.html.Option.isSelected,Fetches the selection state associated with this option.
javax.swing.text.html.Option.setLabel,Sets the label to be used for the option.
javax.swing.text.html.Option.setSelection,Sets the selected state.
javax.swing.text.html.Option.toString,String representation is the label.
javax.swing.text.html.ParagraphView.getPreferredSpan,Determines the preferred span for this view.
javax.swing.text.html.ParagraphView.isVisible,Indicates whether or not this view should be  displayed.
javax.swing.text.html.ParagraphView.setPropertiesFromAttributes,Sets up the paragraph from css attributes instead of  the values found in StyleConstants (i.e. which are used  by the superclass).
javax.swing.text.html.StyleSheet.getInset,"Fetches the inset needed on a given side to  account for the margin, border, and padding."
javax.swing.text.html.StyleSheet.paint,Paints the CSS box according to the attributes  given.
javax.swing.text.html.StyleSheet.addCSSAttribute,Adds a CSS attribute to the given set.
javax.swing.text.html.StyleSheet.addRule,Adds a set of rules to the sheet.
javax.swing.text.html.StyleSheet.addStyleSheet,Adds the rules from the StyleSheetssto those of  the receiver.
javax.swing.text.html.StyleSheet.createLargeAttributeSet,Creates a large set of attributes that should trade off  space for time.
javax.swing.text.html.StyleSheet.createSmallAttributeSet,Creates a compact set of attributes that might be shared.
javax.swing.text.html.StyleSheet.getBase,Returns the base.
javax.swing.text.html.StyleSheet.getBoxPainter,Fetches the box formatter to use for the given set  of CSS attributes.
javax.swing.text.html.StyleSheet.getDeclaration,Translates a CSS declaration to an AttributeSet that represents  the CSS declaration.
javax.swing.text.html.StyleSheet.getFont,Fetches the font to use for the given set of attributes.
javax.swing.text.html.StyleSheet.getIndexOfSize,Returns the index of HTML/CSS size model.
javax.swing.text.html.StyleSheet.getListPainter,Fetches the list formatter to use for the given set  of CSS attributes.
javax.swing.text.html.StyleSheet.getPointSize,"Returns the point size, given a size index."
javax.swing.text.html.StyleSheet.getPointSize,"Given a string such as ""+2"", ""-2"", or ""2"",   returns a point size value."
javax.swing.text.html.StyleSheet.getRule,Fetches the rule that best matches the selector given  in string form.
javax.swing.text.html.StyleSheet.getRule,Fetches the style to use to render the given type  of HTML tag.
javax.swing.text.html.StyleSheet.getStyleSheets,Returns an array of the linked StyleSheets.
javax.swing.text.html.StyleSheet.getViewAttributes,Fetches a set of attributes to use in the view for  displaying.
javax.swing.text.html.StyleSheet.importStyleSheet,Imports a style sheet fromurl.
javax.swing.text.html.StyleSheet.loadRules,Loads a set of rules that have been specified in terms of  CSS1 grammar.
javax.swing.text.html.StyleSheet.removeAttributes,Removes a set of attributes.
javax.swing.text.html.StyleSheet.removeStyleSheet,Removes the StyleSheetssfrom those of the receiver.
javax.swing.text.html.StyleSheet.setBase,Sets the base.
javax.swing.text.html.StyleSheet.setBaseFontSize,"Sets the base font size, with valid values between 1 and 7."
javax.swing.text.html.StyleSheet.setBaseFontSize,Sets the base font size from the passed in String.
javax.swing.text.html.StyleSheet.stringToColor,"Converts a color string such as ""RED"" or ""#NNNNNN"" to a Color."
javax.swing.text.html.StyleSheet.translateHTMLToCSS,Converts a set of HTML attributes to an equivalent  set of CSS attributes.
javax.swing.text.html.StyleSheet.paint,Paints the CSS list decoration according to the  attributes given.
javax.swing.text.html.parser.ContentModel.empty,Return true if the content model could  match an empty input stream.
javax.swing.text.html.parser.ContentModel.first,Return the element that must be next.
javax.swing.text.html.parser.ContentModel.first,Return true if the token could potentially be the  first token in the input stream.
javax.swing.text.html.parser.ContentModel.getElements,Update elemVec with the list of elements that are  part of the this contentModel.
javax.swing.text.html.parser.ContentModel.toString,Convert to a string.
javax.swing.text.html.parser.DocumentParser.handleEmptyTag,Handle Empty Tag.
javax.swing.text.html.parser.DocumentParser.handleEndTag,Handle End Tag.
javax.swing.text.html.parser.DocumentParser.handleStartTag,Handle Start Tag.
javax.swing.text.html.parser.DocumentParser.handleText,Handle Text.
javax.swing.text.html.parser.DocumentParser.parse,"Parse an HTML stream, given a DTD."
javax.swing.text.html.parser.DTD.defAttributeList,Creates and returns anAttributeListresponding to a new attribute.
javax.swing.text.html.parser.DTD.defContentModel,Creates and returns a new content model.
javax.swing.text.html.parser.DTD.defElement,Creates and returns anElement.
javax.swing.text.html.parser.DTD.defEntity,Creates and returns a characterEntity.
javax.swing.text.html.parser.DTD.defEntity,Creates and returns anEntity.
javax.swing.text.html.parser.DTD.defineAttributes,Defines attributes for anElement.
javax.swing.text.html.parser.DTD.defineElement,Returns theElementwhich matches the  specified parameters.
javax.swing.text.html.parser.DTD.defineEntity,Defines an entity.
javax.swing.text.html.parser.DTD.getDTD,Returns a DTD with the specifiedname.
javax.swing.text.html.parser.DTD.getElement,Gets an element by index.
javax.swing.text.html.parser.DTD.getElement,Gets an element by name.
javax.swing.text.html.parser.DTD.getEntity,Gets a character entity.
javax.swing.text.html.parser.DTD.getEntity,Gets an entity by name.
javax.swing.text.html.parser.DTD.getName,Gets the name of the DTD.
javax.swing.text.html.parser.DTD.putDTDHash,Put a name and appropriate DTD to hashtable.
javax.swing.text.html.parser.DTD.read,Recreates a DTD from an archived format.
javax.swing.text.html.parser.DTD.toString,Returns a string representation of this DTD.
javax.swing.text.html.parser.Element.getAttribute,Get an attribute by name.
javax.swing.text.html.parser.Element.getAttributeByValue,Get an attribute by value.
javax.swing.text.html.parser.Element.getAttributes,Get the attributes.
javax.swing.text.html.parser.Element.getContent,Get content model
javax.swing.text.html.parser.Element.getIndex,Get index.
javax.swing.text.html.parser.Element.getName,Get the name of the element.
javax.swing.text.html.parser.Element.getType,Get type.
javax.swing.text.html.parser.Element.isEmpty,Check if empty
javax.swing.text.html.parser.Element.name2type,Convertsnmto type.
javax.swing.text.html.parser.Element.omitEnd,Return true if the end tag can be omitted.
javax.swing.text.html.parser.Element.omitStart,Return true if the start tag can be omitted.
javax.swing.text.html.parser.Entity.getData,Returns thedata.
javax.swing.text.html.parser.Entity.getName,Gets the name of the entity.
javax.swing.text.html.parser.Entity.getString,Returns the data as aString.
javax.swing.text.html.parser.Entity.getType,Gets the type of the entity.
javax.swing.text.html.parser.Entity.isGeneral,Returnstrueif it is a general entity.
javax.swing.text.html.parser.Entity.isParameter,Returnstrueif it is a parameter entity.
javax.swing.text.html.parser.Entity.name2type,Convertsnmstring to the corresponding  entity type.
javax.swing.text.html.parser.ParserDelegator.createDTD,Recreates a DTD from an archived format with the specifiedname.
javax.swing.text.html.parser.ParserDelegator.setDefaultDTD,Sets the default DTD.
javax.swing.text.html.parser.TagElement.fictional,Returnstrueif the tag is fictional.
javax.swing.text.html.parser.TagElement.getElement,Returns the element.
javax.swing.text.html.parser.TagElement.getHTMLTag,Returns the tag constant corresponding to the name of theelement
javax.swing.text.html.parser.TagElement.isPreformatted,Returnstrueif this tag is pre-formatted.
javax.swing.text.rtf.RTFEditorKit.read,Insert content from the given stream which is expected  to be in a format appropriate for this kind of content  handler.
javax.swing.text.rtf.RTFEditorKit.read,"Insert content from the given stream, which will be  treated as plain text."
javax.swing.text.rtf.RTFEditorKit.write,Write content from a document to the given stream  as plain text.
javax.swing.tree.AbstractLayoutCache.getBounds,Returns a rectangle giving the bounds needed to draw path.
javax.swing.tree.AbstractLayoutCache.getExpandedState,"Returns true if the path is expanded, and visible."
javax.swing.tree.AbstractLayoutCache.getNodeDimensions,"Returns the object that renders nodes in the tree, and which is  responsible for calculating the dimensions of individual nodes."
javax.swing.tree.AbstractLayoutCache.getNodeDimensions,"Returns, by reference inplaceIn,  the size needed to representvalue."
javax.swing.tree.AbstractLayoutCache.getPreferredHeight,Returns the preferred height.
javax.swing.tree.AbstractLayoutCache.getPreferredWidth,Returns the preferred width for the passed in region.
javax.swing.tree.AbstractLayoutCache.getRowCount,Number of rows being displayed.
javax.swing.tree.AbstractLayoutCache.getRowsForPaths,Returns the rows that theTreePathinstances inpathare being displayed at.
javax.swing.tree.AbstractLayoutCache.getSelectionModel,Returns the model used to maintain the selection.
javax.swing.tree.AbstractLayoutCache.getVisibleChildCount,Returns the number of visible children for row.
javax.swing.tree.AbstractLayoutCache.getVisiblePathsFrom,Returns anEnumeratorthat increments over the visible  paths starting at the passed in location.
javax.swing.tree.AbstractLayoutCache.invalidatePathBounds,"Instructs theLayoutCachethat the bounds forpathare invalid, and need to be updated."
javax.swing.tree.AbstractLayoutCache.invalidateSizes,Informs theTreeStatethat it needs to recalculate  all the sizes it is referencing.
javax.swing.tree.AbstractLayoutCache.isExpanded,Returns true if the value identified by row is currently expanded.
javax.swing.tree.AbstractLayoutCache.isFixedRowHeight,Returns true if the height of each row is a fixed size.
javax.swing.tree.AbstractLayoutCache.setExpandedState,Marks the pathpathexpanded state toisExpanded.
javax.swing.tree.AbstractLayoutCache.setNodeDimensions,Sets the renderer that is responsible for drawing nodes in the tree  and which is therefore responsible for calculating the dimensions of  individual nodes.
javax.swing.tree.AbstractLayoutCache.setRowHeight,Sets the height of each cell.
javax.swing.tree.AbstractLayoutCache.setSelectionModel,Sets theTreeSelectionModelused to manage the  selection to new LSM.
javax.swing.tree.AbstractLayoutCache.getNodeDimensions,"Returns, by reference in bounds, the size and x origin to  place value at."
javax.swing.tree.DefaultMutableTreeNode.add,RemovesnewChildfrom its parent and makes it a child of  this node by adding it to the end of this node's child array.
javax.swing.tree.DefaultMutableTreeNode.breadthFirstEnumeration,Creates and returns an enumeration that traverses the subtree rooted at  this node in breadth-first order.
javax.swing.tree.DefaultMutableTreeNode.children,Creates and returns a forward-order enumeration of this node's  children.
javax.swing.tree.DefaultMutableTreeNode.clone,Overridden to make clone public.
javax.swing.tree.DefaultMutableTreeNode.depthFirstEnumeration,Creates and returns an enumeration that traverses the subtree rooted at  this node in depth-first order.
javax.swing.tree.DefaultMutableTreeNode.getAllowsChildren,Returns true if this node is allowed to have children.
javax.swing.tree.DefaultMutableTreeNode.getChildAfter,"Returns the child in this node's child array that immediately  followsaChild, which must be a child of this node."
javax.swing.tree.DefaultMutableTreeNode.getChildAt,Returns the child at the specified index in this node's child array.
javax.swing.tree.DefaultMutableTreeNode.getChildBefore,"Returns the child in this node's child array that immediately  precedesaChild, which must be a child of this node."
javax.swing.tree.DefaultMutableTreeNode.getChildCount,Returns the number of children of this node.
javax.swing.tree.DefaultMutableTreeNode.getDepth,Returns the depth of the tree rooted at this node -- the longest  distance from this node to a leaf.
javax.swing.tree.DefaultMutableTreeNode.getFirstChild,Returns this node's first child.
javax.swing.tree.DefaultMutableTreeNode.getFirstLeaf,Finds and returns the first leaf that is a descendant of this node --  either this node or its first child's first leaf.
javax.swing.tree.DefaultMutableTreeNode.getIndex,Returns the index of the specified child in this node's child array.
javax.swing.tree.DefaultMutableTreeNode.getLastChild,Returns this node's last child.
javax.swing.tree.DefaultMutableTreeNode.getLastLeaf,Finds and returns the last leaf that is a descendant of this node --  either this node or its last child's last leaf.
javax.swing.tree.DefaultMutableTreeNode.getLeafCount,Returns the total number of leaves that are descendants of this node.
javax.swing.tree.DefaultMutableTreeNode.getLevel,Returns the number of levels above this node -- the distance from  the root to this node.
javax.swing.tree.DefaultMutableTreeNode.getNextLeaf,Returns the leaf after this node or null if this node is the  last leaf in the tree.
javax.swing.tree.DefaultMutableTreeNode.getNextNode,Returns the node that follows this node in a preorder traversal of this  node's tree.
javax.swing.tree.DefaultMutableTreeNode.getNextSibling,Returns the next sibling of this node in the parent's children array.
javax.swing.tree.DefaultMutableTreeNode.getParent,Returns this node's parent or null if this node has no parent.
javax.swing.tree.DefaultMutableTreeNode.getPath,"Returns the path from the root, to get to this node."
javax.swing.tree.DefaultMutableTreeNode.getPathToRoot,"Builds the parents of node up to and including the root node,  where the original node is the last element in the returned array."
javax.swing.tree.DefaultMutableTreeNode.getPreviousLeaf,Returns the leaf before this node or null if this node is the  first leaf in the tree.
javax.swing.tree.DefaultMutableTreeNode.getPreviousNode,Returns the node that precedes this node in a preorder traversal of  this node's tree.
javax.swing.tree.DefaultMutableTreeNode.getPreviousSibling,Returns the previous sibling of this node in the parent's children  array.
javax.swing.tree.DefaultMutableTreeNode.getRoot,Returns the root of the tree that contains this node.
javax.swing.tree.DefaultMutableTreeNode.getSharedAncestor,Returns the nearest common ancestor to this node andaNode.
javax.swing.tree.DefaultMutableTreeNode.getSiblingCount,Returns the number of siblings of this node.
javax.swing.tree.DefaultMutableTreeNode.getUserObject,Returns this node's user object.
javax.swing.tree.DefaultMutableTreeNode.getUserObjectPath,"Returns the user object path, from the root, to get to this node."
javax.swing.tree.DefaultMutableTreeNode.insert,"RemovesnewChildfrom its present parent (if it has a  parent), sets the child's parent to this node, and then adds the child  to this node's child array at indexchildIndex."
javax.swing.tree.DefaultMutableTreeNode.isLeaf,Returns true if this node has no children.
javax.swing.tree.DefaultMutableTreeNode.isNodeAncestor,"Returns true ifanotherNodeis an ancestor of this node  -- if it is this node, this node's parent, or an ancestor of this  node's parent."
javax.swing.tree.DefaultMutableTreeNode.isNodeChild,Returns true ifaNodeis a child of this node.
javax.swing.tree.DefaultMutableTreeNode.isNodeDescendant,"Returns true ifanotherNodeis a descendant of this node  -- if it is this node, one of this node's children, or a descendant of  one of this node's children."
javax.swing.tree.DefaultMutableTreeNode.isNodeRelated,Returns true if and only ifaNodeis in the same tree  as this node.
javax.swing.tree.DefaultMutableTreeNode.isNodeSibling,Returns true ifanotherNodeis a sibling of (has the  same parent as) this node.
javax.swing.tree.DefaultMutableTreeNode.isRoot,Returns true if this node is the root of the tree.
javax.swing.tree.DefaultMutableTreeNode.pathFromAncestorEnumeration,Creates and returns an enumeration that follows the path fromancestorto this node.
javax.swing.tree.DefaultMutableTreeNode.postorderEnumeration,Creates and returns an enumeration that traverses the subtree rooted at  this node in postorder.
javax.swing.tree.DefaultMutableTreeNode.preorderEnumeration,Creates and returns an enumeration that traverses the subtree rooted at  this node in preorder.
javax.swing.tree.DefaultMutableTreeNode.remove,Removes the child at the specified index from this node's children  and sets that node's parent to null.
javax.swing.tree.DefaultMutableTreeNode.remove,"RemovesaChildfrom this node's child array, giving it a  null parent."
javax.swing.tree.DefaultMutableTreeNode.removeAllChildren,"Removes all of this node's children, setting their parents to null."
javax.swing.tree.DefaultMutableTreeNode.removeFromParent,"Removes the subtree rooted at this node from the tree, giving this  node a null parent."
javax.swing.tree.DefaultMutableTreeNode.setAllowsChildren,Determines whether or not this node is allowed to have children.
javax.swing.tree.DefaultMutableTreeNode.setParent,Sets this node's parent tonewParentbut does not  change the parent's child array.
javax.swing.tree.DefaultMutableTreeNode.setUserObject,Sets the user object for this node touserObject.
javax.swing.tree.DefaultMutableTreeNode.toString,"Returns the result of sendingtoString()to this node's  user object, or the empty string if the node has no user object."
javax.swing.tree.DefaultTreeCellEditor.getBorder,OverridesJComponent.getBorderto  returns the current border.
javax.swing.tree.DefaultTreeCellEditor.getPreferredSize,"OverridesJTextField.getPreferredSizeto  return the preferred size based on current font, if set,  or else use renderer's font."
javax.swing.tree.DefaultTreeCellEditor.doLayout,Lays out thisContainer.
javax.swing.tree.DefaultTreeCellEditor.EditorContainer,Do not use.
javax.swing.tree.DefaultTreeCellEditor.getPreferredSize,Returns the preferred size for theContainer.
javax.swing.tree.DefaultTreeCellEditor.paint,OverridesContainer.paintto paint the node's  icon and use the selection color for the background.
javax.swing.tree.DefaultTreeCellEditor.actionPerformed,"Messaged when the timer fires, this will start the editing  session."
javax.swing.tree.DefaultTreeCellEditor.addCellEditorListener,Adds theCellEditorListener.
javax.swing.tree.DefaultTreeCellEditor.cancelCellEditing,MessagescancelCellEditingto therealEditorand removes it from this instance.
javax.swing.tree.DefaultTreeCellEditor.canEditImmediately,"Returns true ifeventisnull,  or it is aMouseEventwith a click count > 2  andinHitRegionreturns true."
javax.swing.tree.DefaultTreeCellEditor.createContainer,Creates the container to manage placement ofeditingComponent.
javax.swing.tree.DefaultTreeCellEditor.createTreeCellEditor,This is invoked if aTreeCellEditoris not supplied in the constructor.
javax.swing.tree.DefaultTreeCellEditor.determineOffset,Determine the offset.
javax.swing.tree.DefaultTreeCellEditor.getBorderSelectionColor,Returns the color the border is drawn.
javax.swing.tree.DefaultTreeCellEditor.getCellEditorListeners,Returns an array of all theCellEditorListeners added  to this DefaultTreeCellEditor with addCellEditorListener().
javax.swing.tree.DefaultTreeCellEditor.getCellEditorValue,Returns the value currently being edited.
javax.swing.tree.DefaultTreeCellEditor.getFont,Gets the font used for editing.
javax.swing.tree.DefaultTreeCellEditor.getTreeCellEditorComponent,Configures the editor.
javax.swing.tree.DefaultTreeCellEditor.inHitRegion,Returns true if the passed in location is a valid mouse location  to start editing from.
javax.swing.tree.DefaultTreeCellEditor.isCellEditable,"If therealEditorreturns true to this  message,prepareForEditingis messaged and true is returned."
javax.swing.tree.DefaultTreeCellEditor.prepareForEditing,Invoked just before editing is to start.
javax.swing.tree.DefaultTreeCellEditor.removeCellEditorListener,Removes the previously addedCellEditorListener.
javax.swing.tree.DefaultTreeCellEditor.setBorderSelectionColor,Sets the color to use for the border.
javax.swing.tree.DefaultTreeCellEditor.setFont,Sets the font to edit with.
javax.swing.tree.DefaultTreeCellEditor.setTree,Sets the tree currently editing for.
javax.swing.tree.DefaultTreeCellEditor.shouldSelectCell,Messages therealEditorfor the return value.
javax.swing.tree.DefaultTreeCellEditor.shouldStartEditingTimer,Returns true ifeventis aMouseEventand the click count is 1.
javax.swing.tree.DefaultTreeCellEditor.startEditingTimer,Starts the editing timer.
javax.swing.tree.DefaultTreeCellEditor.stopCellEditing,"If therealEditorwill allow editing to stop,  therealEditoris removed and true is returned,  otherwise false is returned."
javax.swing.tree.DefaultTreeCellEditor.valueChanged,ResetslastPath.
javax.swing.tree.DefaultTreeCellRenderer.getBackgroundNonSelectionColor,Returns the background color to be used for non selected nodes.
javax.swing.tree.DefaultTreeCellRenderer.getBackgroundSelectionColor,Returns the color to use for the background if node is selected.
javax.swing.tree.DefaultTreeCellRenderer.getClosedIcon,Returns the icon used to represent non-leaf nodes that are not  expanded.
javax.swing.tree.DefaultTreeCellRenderer.getDefaultClosedIcon,"Returns the default icon, for the current laf, that is used to  represent non-leaf nodes that are not expanded."
javax.swing.tree.DefaultTreeCellRenderer.getDefaultLeafIcon,"Returns the default icon, for the current laf, that is used to  represent leaf nodes."
javax.swing.tree.DefaultTreeCellRenderer.getDefaultOpenIcon,"Returns the default icon, for the current laf, that is used to  represent non-leaf nodes that are expanded."
javax.swing.tree.DefaultTreeCellRenderer.getFont,Gets the font of this component.
javax.swing.tree.DefaultTreeCellRenderer.getLeafIcon,Returns the icon used to represent leaf nodes.
javax.swing.tree.DefaultTreeCellRenderer.getOpenIcon,Returns the icon used to represent non-leaf nodes that are expanded.
javax.swing.tree.DefaultTreeCellRenderer.getPreferredSize,OverridesJComponent.getPreferredSizeto  return slightly wider preferred size value.
javax.swing.tree.DefaultTreeCellRenderer.getTextNonSelectionColor,Returns the color the text is drawn with when the node isn't selected.
javax.swing.tree.DefaultTreeCellRenderer.getTextSelectionColor,Returns the color the text is drawn with when the node is selected.
javax.swing.tree.DefaultTreeCellRenderer.getTreeCellRendererComponent,Configures the renderer based on the passed in components.
javax.swing.tree.DefaultTreeCellRenderer.paint,Paints the value.
javax.swing.tree.DefaultTreeCellRenderer.setBackground,Subclassed to mapColorUIResources to null.
javax.swing.tree.DefaultTreeCellRenderer.setBackgroundNonSelectionColor,Sets the background color to be used for non selected nodes.
javax.swing.tree.DefaultTreeCellRenderer.setBackgroundSelectionColor,Sets the color to use for the background if node is selected.
javax.swing.tree.DefaultTreeCellRenderer.setClosedIcon,Sets the icon used to represent non-leaf nodes that are not expanded.
javax.swing.tree.DefaultTreeCellRenderer.setFont,Subclassed to mapFontUIResources to null.
javax.swing.tree.DefaultTreeCellRenderer.setLeafIcon,Sets the icon used to represent leaf nodes.
javax.swing.tree.DefaultTreeCellRenderer.setOpenIcon,Sets the icon used to represent non-leaf nodes that are expanded.
javax.swing.tree.DefaultTreeCellRenderer.setTextNonSelectionColor,Sets the color the text is drawn with when the node isn't selected.
javax.swing.tree.DefaultTreeCellRenderer.setTextSelectionColor,Sets the color the text is drawn with when the node is selected.
javax.swing.tree.DefaultTreeModel.addTreeModelListener,Adds a listener for the TreeModelEvent posted after the tree changes.
javax.swing.tree.DefaultTreeModel.asksAllowsChildren,Tells how leaf nodes are determined.
javax.swing.tree.DefaultTreeModel.getChild,Returns the child ofparentat indexindexin the parent's  child array.
javax.swing.tree.DefaultTreeModel.getChildCount,Returns the number of children ofparent.
javax.swing.tree.DefaultTreeModel.getIndexOfChild,Returns the index of child in parent.
javax.swing.tree.DefaultTreeModel.getRoot,Returns the root of the tree.
javax.swing.tree.DefaultTreeModel.getTreeModelListeners,Returns an array of all the tree model listeners  registered on this model.
javax.swing.tree.DefaultTreeModel.insertNodeInto,Invoked this to insert newChild at location index in parents children.
javax.swing.tree.DefaultTreeModel.isLeaf,Returns whether the specified node is a leaf node.
javax.swing.tree.DefaultTreeModel.nodeChanged,Invoke this method after you've changed how node is to be  represented in the tree.
javax.swing.tree.DefaultTreeModel.nodesChanged,Invoke this method after you've changed how the children identified by  childIndicies are to be represented in the tree.
javax.swing.tree.DefaultTreeModel.nodeStructureChanged,Invoke this method if you've totally changed the children of  node and its children's children...
javax.swing.tree.DefaultTreeModel.nodesWereInserted,Invoke this method after you've inserted some TreeNodes into  node.
javax.swing.tree.DefaultTreeModel.nodesWereRemoved,Invoke this method after you've removed some TreeNodes from  node.
javax.swing.tree.DefaultTreeModel.reload,Invoke this method if you've modified theTreeNodes upon which  this model depends.
javax.swing.tree.DefaultTreeModel.removeNodeFromParent,Message this to remove node from its parent.
javax.swing.tree.DefaultTreeModel.removeTreeModelListener,Removes a listener previously added withaddTreeModelListener().
javax.swing.tree.DefaultTreeModel.setAsksAllowsChildren,Sets whether or not to test leafness by asking getAllowsChildren()  or isLeaf() to the TreeNodes.
javax.swing.tree.DefaultTreeModel.setRoot,Sets the root toroot.
javax.swing.tree.DefaultTreeModel.valueForPathChanged,This sets the user object of the TreeNode identified by path  and posts a node changed.
javax.swing.tree.DefaultTreeSelectionModel.addSelectionPath,Adds path to the current selection.
javax.swing.tree.DefaultTreeSelectionModel.addSelectionPaths,Adds paths to the current selection.
javax.swing.tree.DefaultTreeSelectionModel.addTreeSelectionListener,Adds x to the list of listeners that are notified each time the  set of selected TreePaths changes.
javax.swing.tree.DefaultTreeSelectionModel.arePathsContiguous,"Returns true if the paths are contiguous,  or this object has no RowMapper."
javax.swing.tree.DefaultTreeSelectionModel.canPathsBeAdded,Used to test if a particular set ofTreePaths can  be added.
javax.swing.tree.DefaultTreeSelectionModel.canPathsBeRemoved,Returns true if the paths can be removed without breaking the  continuity of the model.
javax.swing.tree.DefaultTreeSelectionModel.clearSelection,Empties the current selection.
javax.swing.tree.DefaultTreeSelectionModel.clone,Returns a clone of this object with the same selection.
javax.swing.tree.DefaultTreeSelectionModel.fireValueChanged,Notifies all listeners that are registered for  tree selection events on this object.
javax.swing.tree.DefaultTreeSelectionModel.getLeadSelectionPath,Returns the last path that was added.
javax.swing.tree.DefaultTreeSelectionModel.getMaxSelectionRow,Returns the largest value obtained from the RowMapper for the  current set of selected TreePaths.
javax.swing.tree.DefaultTreeSelectionModel.getMinSelectionRow,Returns the smallest value obtained from the RowMapper for the  current set of selected TreePaths.
javax.swing.tree.DefaultTreeSelectionModel.getPropertyChangeListeners,Returns an array of all the property change listeners  registered on thisDefaultTreeSelectionModel.
javax.swing.tree.DefaultTreeSelectionModel.getRowMapper,Returns the RowMapper instance that is able to map a TreePath to a  row.
javax.swing.tree.DefaultTreeSelectionModel.getSelectionCount,Returns the number of paths that are selected.
javax.swing.tree.DefaultTreeSelectionModel.getSelectionMode,"Returns the selection mode, one ofSINGLE_TREE_SELECTION,DISCONTIGUOUS_TREE_SELECTIONorCONTIGUOUS_TREE_SELECTION."
javax.swing.tree.DefaultTreeSelectionModel.getSelectionPath,Returns the first path in the selection.
javax.swing.tree.DefaultTreeSelectionModel.getSelectionPaths,Returns the selection.
javax.swing.tree.DefaultTreeSelectionModel.getSelectionRows,Returns the selection in terms of rows.
javax.swing.tree.DefaultTreeSelectionModel.getTreeSelectionListeners,Returns an array of all the tree selection listeners  registered on this model.
javax.swing.tree.DefaultTreeSelectionModel.insureRowContinuity,Makes sure the currently selectedTreePaths are valid  for the current selection mode.
javax.swing.tree.DefaultTreeSelectionModel.insureUniqueness,This method is obsolete and its implementation is now a noop.
javax.swing.tree.DefaultTreeSelectionModel.isPathSelected,"Returns true if the path,path,  is in the current selection."
javax.swing.tree.DefaultTreeSelectionModel.isRowSelected,Returns true if the row identified byrowis selected.
javax.swing.tree.DefaultTreeSelectionModel.notifyPathChange,Deprecated.As of JDK version 1.7
javax.swing.tree.DefaultTreeSelectionModel.removeSelectionPath,Removes path from the selection.
javax.swing.tree.DefaultTreeSelectionModel.removeSelectionPaths,Removes paths from the selection.
javax.swing.tree.DefaultTreeSelectionModel.removeTreeSelectionListener,Removes x from the list of listeners that are notified each time  the set of selected TreePaths changes.
javax.swing.tree.DefaultTreeSelectionModel.resetRowSelection,Updates this object's mapping from TreePath to rows.
javax.swing.tree.DefaultTreeSelectionModel.setRowMapper,Sets the RowMapper instance.
javax.swing.tree.DefaultTreeSelectionModel.setSelectionMode,"Sets the selection model, which must be one of SINGLE_TREE_SELECTION,  CONTIGUOUS_TREE_SELECTION or DISCONTIGUOUS_TREE_SELECTION."
javax.swing.tree.DefaultTreeSelectionModel.setSelectionPath,Sets the selection to path.
javax.swing.tree.DefaultTreeSelectionModel.setSelectionPaths,Sets the selection.
javax.swing.tree.DefaultTreeSelectionModel.updateLeadIndex,Updates the leadIndex instance variable.
javax.swing.tree.FixedHeightLayoutCache.getRowCount,Returns the number of visible rows.
javax.swing.tree.FixedHeightLayoutCache.getVisiblePathsFrom,Returns an Enumerator that increments over the visible paths  starting at the passed in location.
javax.swing.tree.FixedHeightLayoutCache.invalidatePathBounds,"Does nothing, FixedHeightLayoutCache doesn't cache width, and that  is all that could change."
javax.swing.tree.FixedHeightLayoutCache.invalidateSizes,Informs the TreeState that it needs to recalculate all the sizes  it is referencing.
javax.swing.tree.FixedHeightLayoutCache.setModel,Sets the TreeModel that will provide the data.
javax.swing.tree.FixedHeightLayoutCache.setRootVisible,Determines whether or not the root node from  the TreeModel is visible.
javax.swing.tree.TreePath.equals,Compares thisTreePathto the specified object.
javax.swing.tree.TreePath.getLastPathComponent,Returns the last element of this path.
javax.swing.tree.TreePath.getParentPath,Returns theTreePathof the parent.
javax.swing.tree.TreePath.getPath,Returns an ordered array of the elements of thisTreePath.
javax.swing.tree.TreePath.getPathComponent,Returns the path element at the specified index.
javax.swing.tree.TreePath.getPathCount,Returns the number of elements in the path.
javax.swing.tree.TreePath.hashCode,Returns the hash code of thisTreePath.
javax.swing.tree.TreePath.isDescendant,Returns true ifaTreePathis a  descendant of thisTreePath.
javax.swing.tree.TreePath.pathByAddingChild,Returns a new path containing all the elements of this path  pluschild.
javax.swing.tree.VariableHeightLayoutCache.getBounds,Returns theRectangleenclosing the label portion  into which the item identified bypathwill be drawn.
javax.swing.tree.VariableHeightLayoutCache.getPathForRow,Returns the path forrow.
javax.swing.tree.VariableHeightLayoutCache.getPreferredWidth,Returns the preferred width and height for the region invisibleRegion.
javax.swing.tree.VariableHeightLayoutCache.getRowForPath,Returns the row where the last item identified in path is visible.
javax.swing.tree.VariableHeightLayoutCache.getVisibleChildCount,Returns the number of visible children forpath.
javax.swing.tree.VariableHeightLayoutCache.getVisiblePathsFrom,Returns anEnumeratorthat increments over the visible paths  starting at the passed in location.
javax.swing.tree.VariableHeightLayoutCache.isExpanded,Returns true if the value identified bypathis  currently expanded.
javax.swing.tree.VariableHeightLayoutCache.setNodeDimensions,Sets the renderer that is responsible for drawing nodes in the tree.
javax.swing.undo.AbstractUndoableEdit.canRedo,Returnstrueif this edit isaliveandhasBeenDoneisfalse.
javax.swing.undo.AbstractUndoableEdit.canUndo,Returns true if this edit isaliveandhasBeenDoneistrue.
javax.swing.undo.AbstractUndoableEdit.die,Setsaliveto false.
javax.swing.undo.AbstractUndoableEdit.getPresentationName,"This default implementation returns """"."
javax.swing.undo.AbstractUndoableEdit.getRedoPresentationName,"Retreives the value from the defaults table with keyAbstractUndoableEdit.redoTextand returns  that value followed by a space, followed bygetPresentationName."
javax.swing.undo.AbstractUndoableEdit.getUndoPresentationName,"Retreives the value from the defaults table with keyAbstractUndoableEdit.undoTextand returns  that value followed by a space, followed bygetPresentationName."
javax.swing.undo.AbstractUndoableEdit.isSignificant,This default implementation returns true.
javax.swing.undo.AbstractUndoableEdit.redo,ThrowsCannotRedoExceptionifcanRedoreturns false.
javax.swing.undo.AbstractUndoableEdit.undo,ThrowsCannotUndoExceptionifcanUndoreturnsfalse.
javax.swing.undo.CompoundEdit.addEdit,"If this edit isinProgress,  acceptsanEditand returns true."
javax.swing.undo.CompoundEdit.canRedo,Returns false ifisInProgressor if super  returns false.
javax.swing.undo.CompoundEdit.die,"Sendsdieto each subedit,  in the reverse of the order that they were added."
javax.swing.undo.CompoundEdit.end,SetsinProgressto false.
javax.swing.undo.CompoundEdit.getPresentationName,ReturnsgetPresentationNamefrom the  lastUndoableEditadded toedits.
javax.swing.undo.CompoundEdit.getRedoPresentationName,ReturnsgetRedoPresentationNamefrom the lastUndoableEditadded toedits.
javax.swing.undo.CompoundEdit.getUndoPresentationName,ReturnsgetUndoPresentationNamefrom the lastUndoableEditadded toedits.
javax.swing.undo.CompoundEdit.isInProgress,"Returns true if this edit is in progress--that is, it has not  received end."
javax.swing.undo.CompoundEdit.isSignificant,Returns true if any of theUndoableEdits  ineditsdo.
javax.swing.undo.CompoundEdit.lastEdit,"Returns the lastUndoableEditinedits, ornullifeditsis empty."
javax.swing.undo.CompoundEdit.redo,Sendsredoto all containedUndoableEdits in the order in  which they were added.
javax.swing.undo.CompoundEdit.undo,Sendsundoto all containedUndoableEditsin the reverse of  the order in which they were added.
javax.swing.undo.StateEdit.end,Gets the post-edit state of the StateEditable object and  ends the edit.
javax.swing.undo.StateEdit.getPresentationName,Gets the presentation name for this edit
javax.swing.undo.StateEdit.init,Initialize the state edit.
javax.swing.undo.StateEdit.redo,Tells the edited object to apply the state after the edit
javax.swing.undo.StateEdit.removeRedundantState,Remove redundant key/values in state hashtables.
javax.swing.undo.StateEdit.undo,Tells the edited object to apply the state prior to the edit
javax.swing.undo.UndoManager.addEdit,"Adds anUndoableEditto thisUndoManager, if it's possible."
javax.swing.undo.UndoManager.canRedo,Returns true if edits may be redone.
javax.swing.undo.UndoManager.canUndo,Returns true if edits may be undone.
javax.swing.undo.UndoManager.canUndoOrRedo,Returns true if it is possible to invokeundoorredo.
javax.swing.undo.UndoManager.discardAllEdits,Empties the undo manager sending each edit adiemessage  in the process.
javax.swing.undo.UndoManager.editToBeRedone,Returns the next significant edit to be redone ifredois invoked.
javax.swing.undo.UndoManager.editToBeUndone,Returns the next significant edit to be undone ifundois invoked.
javax.swing.undo.UndoManager.end,Turns thisUndoManagerinto a normalCompoundEdit.
javax.swing.undo.UndoManager.getLimit,Returns the maximum number of edits thisUndoManagerholds.
javax.swing.undo.UndoManager.getRedoPresentationName,Returns a description of the redoable form of this edit.
javax.swing.undo.UndoManager.getUndoOrRedoPresentationName,Convenience method that returns eithergetUndoPresentationNameorgetRedoPresentationName.
javax.swing.undo.UndoManager.getUndoPresentationName,Returns a description of the undoable form of this edit.
javax.swing.undo.UndoManager.redo,Redoes the appropriate edits.
javax.swing.undo.UndoManager.redoTo,"Redoes all changes from the index of the next edit toedit, updating the index of the next edit appropriately."
javax.swing.undo.UndoManager.setLimit,Sets the maximum number of edits thisUndoManagerholds.
javax.swing.undo.UndoManager.trimEdits,Removes edits in the specified range.
javax.swing.undo.UndoManager.trimForLimit,"Reduces the number of queued edits to a range of size limit,  centered on the index of the next edit."
javax.swing.undo.UndoManager.undo,Undoes the appropriate edits.
javax.swing.undo.UndoManager.undoableEditHappened,AnUndoableEditListenermethod.
javax.swing.undo.UndoManager.undoOrRedo,Convenience method that invokes one ofundoorredo.
javax.swing.undo.UndoManager.undoTo,"Undoes all changes from the index of the next edit toedit, updating the index of the next edit appropriately."
java.lang.instrument.ClassDefinition.getDefinitionClass,Returns the class.
java.lang.instrument.ClassDefinition.getDefinitionClassFile,Returns the array of bytes that contains the new class file.
java.util.logging.ConsoleHandler.close,OverrideStreamHandler.closeto do a flush but not  to close the output stream.
java.util.logging.ConsoleHandler.publish,Publish aLogRecord.
java.util.logging.ErrorManager.error,The error method is called when a Handler failure occurs.
java.util.logging.FileHandler.close,Close all the files.
java.util.logging.FileHandler.publish,Format and publish aLogRecord.
java.util.logging.Formatter.format,Format the given log record and return the formatted string.
java.util.logging.Formatter.formatMessage,Localize and format the message string from a log record.
java.util.logging.Formatter.getHead,Return the header string for a set of formatted records.
java.util.logging.Formatter.getTail,Return the tail string for a set of formatted records.
java.util.logging.Handler.close,Close theHandlerand free all associated resources.
java.util.logging.Handler.flush,Flush any buffered output.
java.util.logging.Handler.getEncoding,Return the character encoding for thisHandler.
java.util.logging.Handler.getErrorManager,Retrieves the ErrorManager for this Handler.
java.util.logging.Handler.getFilter,Get the currentFilterfor thisHandler.
java.util.logging.Handler.getFormatter,Return theFormatterfor thisHandler.
java.util.logging.Handler.getLevel,Get the log level specifying which messages will be  logged by thisHandler.
java.util.logging.Handler.isLoggable,Check if thisHandlerwould actually log a givenLogRecord.
java.util.logging.Handler.reportError,Protected convenience method to report an error to this Handler's  ErrorManager.
java.util.logging.Handler.setEncoding,Set the character encoding used by thisHandler.
java.util.logging.Handler.setErrorManager,Define an ErrorManager for this Handler.
java.util.logging.Handler.setFilter,Set aFilterto control output on thisHandler.
java.util.logging.Handler.setFormatter,Set aFormatter.
java.util.logging.Handler.setLevel,Set the log level specifying which message levels will be  logged by thisHandler.
java.util.logging.Level.equals,Compare two objects for value equality.
java.util.logging.Level.getLocalizedName,"Return the localized string name of the Level, for  the current default locale."
java.util.logging.Level.getName,Return the non-localized string name of the Level.
java.util.logging.Level.getResourceBundleName,"Return the level's localization resource bundle name, or  null if no localization bundle is defined."
java.util.logging.Level.hashCode,Generate a hashcode.
java.util.logging.Level.intValue,Get the integer value for this level.
java.util.logging.Level.parse,Parse a level name string into a Level.
java.util.logging.Level.toString,Returns a string representation of this Level.
java.util.logging.Logger.addHandler,Add a log Handler to receive logging messages.
java.util.logging.Logger.config,Log a CONFIG message.
java.util.logging.Logger.config,"Log a CONFIG message, which is only to be constructed if the logging  level is such that the message will actually be logged."
java.util.logging.Logger.entering,Log a method entry.
java.util.logging.Logger.entering,"Log a method entry, with one parameter."
java.util.logging.Logger.entering,"Log a method entry, with an array of parameters."
java.util.logging.Logger.exiting,Log a method return.
java.util.logging.Logger.exiting,"Log a method return, with result object."
java.util.logging.Logger.fine,Log a FINE message.
java.util.logging.Logger.fine,"Log a FINE message, which is only to be constructed if the logging  level is such that the message will actually be logged."
java.util.logging.Logger.finer,Log a FINER message.
java.util.logging.Logger.finer,"Log a FINER message, which is only to be constructed if the logging  level is such that the message will actually be logged."
java.util.logging.Logger.finest,Log a FINEST message.
java.util.logging.Logger.finest,"Log a FINEST message, which is only to be constructed if the logging  level is such that the message will actually be logged."
java.util.logging.Logger.getAnonymousLogger,Create an anonymous Logger.
java.util.logging.Logger.getFilter,Get the current filter for this Logger.
java.util.logging.Logger.getGlobal,Return global logger object with the name Logger.GLOBAL_LOGGER_NAME.
java.util.logging.Logger.getHandlers,Get the Handlers associated with this logger.
java.util.logging.Logger.getLevel,Get the log Level that has been specified for this Logger.
java.util.logging.Logger.getLogger,Find or create a logger for a named subsystem.
java.util.logging.Logger.getName,Get the name for this logger.
java.util.logging.Logger.getParent,Return the parent for this Logger.
java.util.logging.Logger.getResourceBundle,Retrieve the localization resource bundle for this  logger.
java.util.logging.Logger.getResourceBundleName,Retrieve the localization resource bundle name for this  logger.
java.util.logging.Logger.getUseParentHandlers,Discover whether or not this logger is sending its output  to its parent logger.
java.util.logging.Logger.info,Log an INFO message.
java.util.logging.Logger.info,"Log a INFO message, which is only to be constructed if the logging  level is such that the message will actually be logged."
java.util.logging.Logger.isLoggable,Check if a message of the given level would actually be logged  by this logger.
java.util.logging.Logger.log,"Log a message, with no arguments."
java.util.logging.Logger.log,"Log a message, with one object parameter."
java.util.logging.Logger.log,"Log a message, with an array of object arguments."
java.util.logging.Logger.log,"Log a message, with associated Throwable information."
java.util.logging.Logger.log,"Log a lazily constructed message, with associated Throwable information."
java.util.logging.Logger.log,"Log a message, which is only to be constructed if the logging level  is such that the message will actually be logged."
java.util.logging.Logger.log,Log a LogRecord.
java.util.logging.Logger.logp,"Log a message, specifying source class and method,  with no arguments."
java.util.logging.Logger.logp,"Log a message, specifying source class and method,  with a single object parameter to the log message."
java.util.logging.Logger.logp,"Log a message, specifying source class and method,  with an array of object arguments."
java.util.logging.Logger.logp,"Log a message, specifying source class and method,  with associated Throwable information."
java.util.logging.Logger.logp,"Log a lazily constructed message, specifying source class and method,  with associated Throwable information."
java.util.logging.Logger.logp,"Log a lazily constructed message, specifying source class and method,  with no arguments."
java.util.logging.Logger.logrb,"Deprecated.Uselogrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)instead."
java.util.logging.Logger.logrb,"Deprecated.Uselogrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)instead"
java.util.logging.Logger.logrb,"Deprecated.Uselogrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Throwable)instead."
java.util.logging.Logger.logrb,"Log a message, specifying source class, method, and resource bundle,  with an optional list of message parameters."
java.util.logging.Logger.logrb,"Log a message, specifying source class, method, and resource bundle,  with associated Throwable information."
java.util.logging.Logger.removeHandler,Remove a log Handler.
java.util.logging.Logger.setFilter,Set a filter to control output on this Logger.
java.util.logging.Logger.setLevel,Set the log level specifying which message levels will be  logged by this logger.
java.util.logging.Logger.setParent,Set the parent for this Logger.
java.util.logging.Logger.setResourceBundle,Sets a resource bundle on this logger.
java.util.logging.Logger.setUseParentHandlers,Specify whether or not this logger should send its output  to its parent Logger.
java.util.logging.Logger.severe,Log a SEVERE message.
java.util.logging.Logger.severe,"Log a SEVERE message, which is only to be constructed if the logging  level is such that the message will actually be logged."
java.util.logging.Logger.throwing,Log throwing an exception.
java.util.logging.Logger.warning,Log a WARNING message.
java.util.logging.Logger.warning,"Log a WARNING message, which is only to be constructed if the logging  level is such that the message will actually be logged."
java.util.logging.LogManager.addConfigurationListener,Adds a configuration listener to be invoked each time the logging  configuration is read.
java.util.logging.LogManager.addLogger,Add a named logger.
java.util.logging.LogManager.getLogger,Method to find a named logger.
java.util.logging.LogManager.getLoggerNames,Get an enumeration of known logger names.
java.util.logging.LogManager.getLoggingMXBean,Deprecated.java.util.logging.LoggingMXBeanis deprecated and       replaced withjava.lang.management.PlatformLoggingMXBean.
java.util.logging.LogManager.getLogManager,Returns the global LogManager object.
java.util.logging.LogManager.getProperty,Get the value of a logging property.
java.util.logging.LogManager.readConfiguration,Reads and initializes the logging configuration.
java.util.logging.LogManager.readConfiguration,Reads and initializes the logging configuration from the given input stream.
java.util.logging.LogManager.removeConfigurationListener,Removes a previously registered configuration listener.
java.util.logging.LogManager.reset,Reset the logging configuration.
java.util.logging.LogManager.updateConfiguration,Updates the logging configuration.
java.util.logging.LogRecord.getInstant,Gets the instant that the event occurred.
java.util.logging.LogRecord.getLevel,"Get the logging message level, for example Level.SEVERE."
java.util.logging.LogRecord.getLoggerName,Get the source Logger's name.
java.util.logging.LogRecord.getLongThreadID,Get a thread identifier for the thread where message originated
java.util.logging.LogRecord.getMessage,"Get the ""raw"" log message, before localization or formatting."
java.util.logging.LogRecord.getMillis,Get truncated event time in milliseconds since 1970.
java.util.logging.LogRecord.getParameters,Get the parameters to the log message.
java.util.logging.LogRecord.getResourceBundle,Get the localization resource bundle
java.util.logging.LogRecord.getResourceBundleName,Get the localization resource bundle name
java.util.logging.LogRecord.getSequenceNumber,Get the sequence number.
java.util.logging.LogRecord.getSourceClassName,Get the  name of the class that (allegedly) issued the logging request.
java.util.logging.LogRecord.getSourceMethodName,Get the  name of the method that (allegedly) issued the logging request.
java.util.logging.LogRecord.getThreadID,"Deprecated.Values returned by this method may be synthesized,               and may not correspond to the actualthread id,               usegetLongThreadID()instead."
java.util.logging.LogRecord.getThrown,Get any throwable associated with the log record.
java.util.logging.LogRecord.setInstant,Sets the instant that the event occurred.
java.util.logging.LogRecord.setLevel,"Set the logging message level, for example Level.SEVERE."
java.util.logging.LogRecord.setLoggerName,Set the source Logger's name.
java.util.logging.LogRecord.setLongThreadID,Set an identifier for the thread where the message originated.
java.util.logging.LogRecord.setMessage,"Set the ""raw"" log message, before localization or formatting."
java.util.logging.LogRecord.setMillis,"Deprecated.LogRecord maintains timestamps with nanosecond resolution,              usingInstantvalues."
java.util.logging.LogRecord.setParameters,Set the parameters to the log message.
java.util.logging.LogRecord.setResourceBundle,Set the localization resource bundle.
java.util.logging.LogRecord.setResourceBundleName,Set the localization resource bundle name.
java.util.logging.LogRecord.setSequenceNumber,Set the sequence number.
java.util.logging.LogRecord.setSourceClassName,Set the name of the class that (allegedly) issued the logging request.
java.util.logging.LogRecord.setSourceMethodName,Set the name of the method that (allegedly) issued the logging request.
java.util.logging.LogRecord.setThreadID,"Deprecated.This method doesn't allow to pass a longthread id,               usesetLongThreadID(long)instead."
java.util.logging.LogRecord.setThrown,Set a throwable associated with the log event.
java.util.logging.MemoryHandler.flush,Causes a flush on the targetHandler.
java.util.logging.MemoryHandler.getPushLevel,Get thepushLevel.
java.util.logging.MemoryHandler.isLoggable,Check if thisHandlerwould actually log a givenLogRecordinto its internal buffer.
java.util.logging.MemoryHandler.publish,Store aLogRecordin an internal buffer.
java.util.logging.MemoryHandler.push,Push any buffered output to the targetHandler.
java.util.logging.MemoryHandler.setPushLevel,Set thepushLevel.
java.util.logging.SimpleFormatter.format,Format the given LogRecord.
java.util.logging.SocketHandler.close,Close this output stream.
java.util.logging.StreamHandler.close,Close the current output stream.
java.util.logging.StreamHandler.flush,Flush any buffered messages.
java.util.logging.StreamHandler.setEncoding,Set (or change) the character encoding used by thisHandler.
java.util.logging.StreamHandler.setOutputStream,Change the output stream.
java.util.logging.XMLFormatter.format,Format the given message to XML.
java.util.logging.XMLFormatter.getHead,Return the header string for a set of XML formatted records.
java.util.logging.XMLFormatter.getTail,Return the tail string for a set of XML formatted records.
java.lang.management.LockInfo.from,Returns aLockInfoobject represented by the  givenCompositeData.
java.lang.management.LockInfo.getClassName,Returns the fully qualified name of the class of the lock object.
java.lang.management.LockInfo.getIdentityHashCode,Returns the identity hash code of the lock object  returned from theSystem.identityHashCode(java.lang.Object)method.
java.lang.management.LockInfo.toString,Returns a string representation of a lock.
java.lang.management.ManagementFactory.getClassLoadingMXBean,Returns the managed bean for the class loading system of  the Java virtual machine.
java.lang.management.ManagementFactory.getCompilationMXBean,Returns the managed bean for the compilation system of  the Java virtual machine.
java.lang.management.ManagementFactory.getGarbageCollectorMXBeans,Returns a list ofGarbageCollectorMXBeanobjects  in the Java virtual machine.
java.lang.management.ManagementFactory.getMemoryManagerMXBeans,Returns a list ofMemoryManagerMXBeanobjects  in the Java virtual machine.
java.lang.management.ManagementFactory.getMemoryMXBean,Returns the managed bean for the memory system of  the Java virtual machine.
java.lang.management.ManagementFactory.getMemoryPoolMXBeans,Returns a list ofMemoryPoolMXBeanobjects in the  Java virtual machine.
java.lang.management.ManagementFactory.getOperatingSystemMXBean,Returns the managed bean for the operating system on which  the Java virtual machine is running.
java.lang.management.ManagementFactory.getPlatformManagementInterfaces,"Returns the set ofClassobjects, subinterface ofPlatformManagedObject, representing  all management interfaces for  monitoring and managing the Java platform."
java.lang.management.ManagementFactory.getPlatformMBeanServer,Returns the platformMBeanServer.
java.lang.management.ManagementFactory.getPlatformMXBean,Returns the platform MXBean implementing  the givenmxbeanInterfacewhich is specified  to have one single instance in the Java virtual machine.
java.lang.management.ManagementFactory.getPlatformMXBean,Returns the platform MXBean proxy formxbeanInterfacewhich is specified to have one single  instance in a Java virtual machine and the proxy will  forward the method calls through the givenMBeanServerConnection.
java.lang.management.ManagementFactory.getPlatformMXBeans,Returns the list of platform MXBeans implementing  the givenmxbeanInterfacein the Java  virtual machine.
java.lang.management.ManagementFactory.getPlatformMXBeans,Returns the list of the platform MXBean proxies for  forwarding the method calls of themxbeanInterfacethrough the givenMBeanServerConnection.
java.lang.management.ManagementFactory.getRuntimeMXBean,Returns the managed bean for the runtime system of  the Java virtual machine.
java.lang.management.ManagementFactory.getThreadMXBean,Returns the managed bean for the thread system of  the Java virtual machine.
java.lang.management.ManagementFactory.newPlatformMXBeanProxy,Returns a proxy for a platform MXBean interface of a  givenMXBean namethat forwards its method calls through the givenMBeanServerConnection.
java.lang.management.MemoryNotificationInfo.from,Returns aMemoryNotificationInfoobject represented by the  givenCompositeData.
java.lang.management.MemoryNotificationInfo.getCount,Returns the number of times that the memory usage has crossed  a threshold when the notification was constructed.
java.lang.management.MemoryNotificationInfo.getPoolName,Returns the name of the memory pool that triggers this notification.
java.lang.management.MemoryNotificationInfo.getUsage,Returns the memory usage of the memory pool  when this notification was constructed.
java.lang.management.MemoryUsage.from,Returns aMemoryUsageobject represented by the  givenCompositeData.
java.lang.management.MemoryUsage.getCommitted,Returns the amount of memory in bytes that is committed for  the Java virtual machine to use.
java.lang.management.MemoryUsage.getInit,Returns the amount of memory in bytes that the Java virtual machine  initially requests from the operating system for memory management.
java.lang.management.MemoryUsage.getMax,Returns the maximum amount of memory in bytes that can be  used for memory management.
java.lang.management.MemoryUsage.getUsed,Returns the amount of used memory in bytes.
java.lang.management.MemoryUsage.toString,Returns a descriptive representation of this memory usage.
java.lang.management.MonitorInfo.from,Returns aMonitorInfoobject represented by the  givenCompositeData.
java.lang.management.MonitorInfo.getLockedStackDepth,Returns the depth in the stack trace where the object monitor  was locked.
java.lang.management.MonitorInfo.getLockedStackFrame,Returns the stack frame that locked the object monitor.
java.lang.management.ThreadInfo.from,Returns aThreadInfoobject represented by the  givenCompositeData.
java.lang.management.ThreadInfo.getBlockedCount,Returns the total number of times that  the thread associated with thisThreadInfoblocked to enter or reenter a monitor.
java.lang.management.ThreadInfo.getBlockedTime,Returns the approximate accumulated elapsed time (in milliseconds)  that the thread associated with thisThreadInfohas blocked to enter or reenter a monitor  since thread contention monitoring is enabled.
java.lang.management.ThreadInfo.getLockedMonitors,"Returns an array ofMonitorInfoobjects, each of which  represents an object monitor currently locked by the thread  associated with thisThreadInfo."
java.lang.management.ThreadInfo.getLockedSynchronizers,"Returns an array ofLockInfoobjects, each of which  represents anownable  synchronizercurrently locked by the thread associated with  thisThreadInfo."
java.lang.management.ThreadInfo.getLockInfo,Returns theLockInfoof an object for which  the thread associated with thisThreadInfois blocked waiting.
java.lang.management.ThreadInfo.getLockName,Returns thestring representationof an object for which the thread associated with thisThreadInfois blocked waiting.
java.lang.management.ThreadInfo.getLockOwnerId,Returns the ID of the thread which owns the object  for which the thread associated with thisThreadInfois blocked waiting.
java.lang.management.ThreadInfo.getLockOwnerName,Returns the name of the thread which owns the object  for which the thread associated with thisThreadInfois blocked waiting.
java.lang.management.ThreadInfo.getPriority,Returns thethread priorityof the  thread associated with thisThreadInfo.
java.lang.management.ThreadInfo.getStackTrace,Returns the stack trace of the thread  associated with thisThreadInfo.
java.lang.management.ThreadInfo.getThreadId,Returns the ID of the thread associated with thisThreadInfo.
java.lang.management.ThreadInfo.getThreadName,Returns the name of the thread associated with thisThreadInfo.
java.lang.management.ThreadInfo.getThreadState,Returns the state of the thread associated with thisThreadInfo.
java.lang.management.ThreadInfo.getWaitedCount,Returns the total number of times that  the thread associated with thisThreadInfowaited for notification.
java.lang.management.ThreadInfo.getWaitedTime,Returns the approximate accumulated elapsed time (in milliseconds)  that the thread associated with thisThreadInfohas waited for notification  since thread contention monitoring is enabled.
java.lang.management.ThreadInfo.isDaemon,Tests if the thread associated with thisThreadInfois  adaemon thread.
java.lang.management.ThreadInfo.isInNative,Tests if the thread associated with thisThreadInfois executing native code via the Java Native Interface (JNI).
java.lang.management.ThreadInfo.isSuspended,Tests if the thread associated with thisThreadInfois suspended.
java.lang.management.ThreadInfo.toString,Returns a string representation of this thread info.
javax.management.Attribute.equals,Compares the current Attribute Object with another Attribute Object.
javax.management.Attribute.getName,Returns a String containing the  name of the attribute.
javax.management.Attribute.getValue,Returns an Object that is the value of this attribute.
javax.management.Attribute.toString,Returns a String object representing this Attribute's value.
javax.management.AttributeChangeNotification.getAttributeName,Gets the name of the attribute which has changed.
javax.management.AttributeChangeNotification.getAttributeType,Gets the type of the attribute which has changed.
javax.management.AttributeChangeNotification.getNewValue,Gets the new value of the attribute which has changed.
javax.management.AttributeChangeNotification.getOldValue,Gets the old value of the attribute which has changed.
javax.management.AttributeChangeNotificationFilter.disableAllAttributes,Disables all the attribute names.
javax.management.AttributeChangeNotificationFilter.disableAttribute,Disables all the attribute change notifications the attribute name of which equals  the specified attribute name to be sent to the listener.
javax.management.AttributeChangeNotificationFilter.enableAttribute,Enables all the attribute change notifications the attribute name of which equals  the specified name to be sent to the listener.
javax.management.AttributeChangeNotificationFilter.getEnabledAttributes,Gets all the enabled attribute names for this filter.
javax.management.AttributeChangeNotificationFilter.isNotificationEnabled,Invoked before sending the specified notification to the listener.
javax.management.AttributeList.add,Inserts the attribute specified as an element at the position specified.
javax.management.AttributeList.add,Adds theAttributespecified as the last element of the list.
javax.management.AttributeList.addAll,"Inserts all of the elements in theAttributeListspecified  into this list, starting at the specified position, in the order in which  they are returned by the Iterator of theAttributeListspecified."
javax.management.AttributeList.addAll,"Appends all the elements in theAttributeListspecified to  the end of the list, in the order in which they are returned by the  Iterator of theAttributeListspecified."
javax.management.AttributeList.asList,Return a view of this list as aList<Attribute>.
javax.management.AttributeList.set,Sets the element at the position specified to be the attribute specified.
javax.management.AttributeValueExp.apply,Applies theAttributeValueExpon an MBean.
javax.management.AttributeValueExp.getAttribute,Return the value of the given attribute in the named MBean.
javax.management.AttributeValueExp.getAttributeName,Returns a string representation of the name of the attribute.
javax.management.AttributeValueExp.setMBeanServer,Deprecated.This method has no effect.
javax.management.AttributeValueExp.toString,Returns the string representing its value.
javax.management.BadAttributeValueExpException.toString,Returns the string representing the object.
javax.management.BadBinaryOpValueExpException.getExp,Returns theValueExpthat originated the exception.
javax.management.ImmutableDescriptor.clone,Returns a descriptor which is equal to this descriptor.
javax.management.ImmutableDescriptor.equals,Compares this descriptor to the given object.
javax.management.ImmutableDescriptor.getFieldNames,Returns all the field names in the descriptor.
javax.management.ImmutableDescriptor.getFields,Returns all of the fields contained in this descriptor as a string array.
javax.management.ImmutableDescriptor.getFieldValue,"Returns the value for a specific field name, or null if no value  is present for that name."
javax.management.ImmutableDescriptor.getFieldValues,Returns all the field values in the descriptor as an array of Objects.
javax.management.ImmutableDescriptor.hashCode,Returns the hash code value for this descriptor.
javax.management.ImmutableDescriptor.isValid,Returns true if all of the fields have legal values given their  names.
javax.management.ImmutableDescriptor.removeField,Removes a field from the descriptor.
javax.management.ImmutableDescriptor.setField,This operation is unsupported since this class is immutable.
javax.management.ImmutableDescriptor.union,Return anImmutableDescriptorwhose contents are the union of  the given descriptors.
javax.management.JMX.isMXBeanInterface,Test whether an interface is an MXBean interface.
javax.management.JMX.newMBeanProxy,Make a proxy for a Standard MBean in a local or remote  MBean Server.
javax.management.JMX.newMBeanProxy,Make a proxy for a Standard MBean in a local or remote MBean  Server that may also support the methods ofNotificationEmitter.
javax.management.JMX.newMXBeanProxy,Make a proxy for an MXBean in a local or remote MBean Server.
javax.management.JMX.newMXBeanProxy,Make a proxy for an MXBean in a local or remote MBean  Server that may also support the methods ofNotificationEmitter.
javax.management.MBeanAttributeInfo.clone,Returns a shallow clone of this instance.
javax.management.MBeanAttributeInfo.equals,Compare this MBeanAttributeInfo to another.
javax.management.MBeanAttributeInfo.getType,Returns the class name of the attribute.
javax.management.MBeanAttributeInfo.isIs,"Indicates if this attribute has an ""is"" getter."
javax.management.MBeanAttributeInfo.isReadable,Whether the value of the attribute can be read.
javax.management.MBeanAttributeInfo.isWritable,Whether new values can be written to the attribute.
javax.management.MBeanConstructorInfo.equals,Compare this MBeanConstructorInfo to another.
javax.management.MBeanConstructorInfo.getSignature,Returns the list of parameters for this constructor.
javax.management.MBeanException.getCause,Return the actualExceptionthrown.
javax.management.MBeanFeatureInfo.equals,Compare this MBeanFeatureInfo to another.
javax.management.MBeanFeatureInfo.getDescription,Returns the human-readable description of the feature.
javax.management.MBeanFeatureInfo.getDescriptor,Returns the descriptor for the feature.
javax.management.MBeanFeatureInfo.getName,Returns the name of the feature.
javax.management.MBeanInfo.equals,Compare this MBeanInfo to another.
javax.management.MBeanInfo.getAttributes,Returns the list of attributes exposed for management.
javax.management.MBeanInfo.getClassName,Returns the name of the Java class of the MBean described by  thisMBeanInfo.
javax.management.MBeanInfo.getConstructors,Returns the list of the public constructors of the MBean.
javax.management.MBeanInfo.getDescription,Returns a human readable description of the MBean.
javax.management.MBeanInfo.getDescriptor,Get the descriptor of this MBeanInfo.
javax.management.MBeanInfo.getNotifications,Returns the list of the notifications emitted by the MBean.
javax.management.MBeanInfo.getOperations,Returns the list of operations  of the MBean.
javax.management.MBeanNotificationInfo.equals,Compare this MBeanNotificationInfo to another.
javax.management.MBeanNotificationInfo.getNotifTypes,Returns the array of strings (in dot notation) containing the  notification types that the MBean may emit.
javax.management.MBeanOperationInfo.equals,Compare this MBeanOperationInfo to another.
javax.management.MBeanOperationInfo.getImpact,"Returns the impact of the method, one ofINFO, ACTION, ACTION_INFO, UNKNOWN."
javax.management.MBeanOperationInfo.getReturnType,Returns the type of the method's return value.
javax.management.MBeanOperationInfo.getSignature,Returns the list of parameters for this operation.
javax.management.MBeanParameterInfo.equals,Compare this MBeanParameterInfo to another.
javax.management.MBeanParameterInfo.getType,Returns the type or class name of the data.
javax.management.MBeanPermission.equals,Checks two MBeanPermission objects for equality.
javax.management.MBeanPermission.implies,"Checks if this MBeanPermission object ""implies"" the  specified permission."
javax.management.MBeanServerBuilder.newMBeanServer,This method creates a new MBeanServer implementation object.
javax.management.MBeanServerBuilder.newMBeanServerDelegate,This method creates a new MBeanServerDelegate for a new MBeanServer.
javax.management.MBeanServerDelegate.addNotificationListener,Adds a listener to this MBean.
javax.management.MBeanServerDelegate.getImplementationName,Returns the JMX implementation name (the name of this product).
javax.management.MBeanServerDelegate.getImplementationVendor,Returns the JMX implementation vendor (the vendor of this product).
javax.management.MBeanServerDelegate.getImplementationVersion,Returns the JMX implementation version (the version of this product).
javax.management.MBeanServerDelegate.getMBeanServerId,Returns the MBean server agent identity.
javax.management.MBeanServerDelegate.getNotificationInfo,"Returns an array indicating, for each notification this  MBean may send, the name of the Java class of the notification  and the notification type."
javax.management.MBeanServerDelegate.getSpecificationName,Returns the full name of the JMX specification implemented  by this product.
javax.management.MBeanServerDelegate.getSpecificationVendor,Returns the vendor of the JMX specification implemented  by this product.
javax.management.MBeanServerDelegate.getSpecificationVersion,Returns the version of the JMX specification implemented  by this product.
javax.management.MBeanServerDelegate.removeNotificationListener,Removes a listener from this MBean.
javax.management.MBeanServerDelegate.sendNotification,Enables the MBean server to send a notification.
javax.management.MBeanServerFactory.createMBeanServer,Return a new object implementing the MBeanServer interface  with a standard default domain name.
javax.management.MBeanServerFactory.createMBeanServer,Return a new object implementing theMBeanServerinterface with the specified default domain name.
javax.management.MBeanServerFactory.findMBeanServer,Return a list of registered MBeanServer objects.
javax.management.MBeanServerFactory.getClassLoaderRepository,Return the ClassLoaderRepository used by the given MBeanServer.
javax.management.MBeanServerFactory.newMBeanServer,"Return a new object implementing the MBeanServer interface  with a standard default domain name, without keeping an  internal reference to this new object."
javax.management.MBeanServerFactory.newMBeanServer,"Return a new object implementing the MBeanServer interface  with the specified default domain name, without keeping an  internal reference to this new object."
javax.management.MBeanServerFactory.releaseMBeanServer,Remove internal MBeanServerFactory references to a created  MBeanServer.
javax.management.MBeanServerInvocationHandler.getMBeanServerConnection,The MBean server connection through which the methods of  a proxy using this handler are forwarded.
javax.management.MBeanServerInvocationHandler.getObjectName,The name of the MBean within the MBean server to which methods  are forwarded.
javax.management.MBeanServerInvocationHandler.invoke,Processes a method invocation on a proxy instance and returns  the result.
javax.management.MBeanServerInvocationHandler.isMXBean,"If true, the proxy is for an MXBean, and appropriate mappings  are applied to method parameters and return values."
javax.management.MBeanServerInvocationHandler.newProxyInstance,Return a proxy that implements the given interface by  forwarding its methods through the given MBean server to the  named MBean.
javax.management.MBeanServerNotification.getMBeanName,Returns the  object name of the MBean that caused the notification.
javax.management.MBeanServerPermission.equals,Checks two MBeanServerPermission objects for equality.
javax.management.MBeanServerPermission.implies,"Checks if this MBeanServerPermission object ""implies"" the specified  permission."
javax.management.Notification.getMessage,Get the notification message.
javax.management.Notification.getSequenceNumber,Get the notification sequence number.
javax.management.Notification.getTimeStamp,Get the notification timestamp.
javax.management.Notification.getType,Get the notification type.
javax.management.Notification.getUserData,Get the user data.
javax.management.Notification.setSequenceNumber,Set the notification sequence number.
javax.management.Notification.setSource,Sets the source.
javax.management.Notification.setTimeStamp,Set the notification timestamp.
javax.management.Notification.setUserData,Set the user data.
javax.management.Notification.toString,Returns a String representation of this notification.
javax.management.NotificationBroadcasterSupport.addNotificationListener,Adds a listener.
javax.management.NotificationBroadcasterSupport.handleNotification,This method is called bysendNotificationfor each listener in order to send the  notification to that listener.
javax.management.NotificationBroadcasterSupport.sendNotification,Sends a notification.
javax.management.NotificationFilterSupport.disableAllTypes,Disables all notification types.
javax.management.NotificationFilterSupport.disableType,Removes the given prefix from the prefix list.
javax.management.NotificationFilterSupport.enableType,Enables all the notifications the type of which starts with the specified prefix  to be sent to the listener.
javax.management.NotificationFilterSupport.getEnabledTypes,Gets all the enabled notification types for this filter.
javax.management.ObjectInstance.equals,Compares the current object instance with another object instance.
javax.management.ObjectInstance.getClassName,Returns the class part.
javax.management.ObjectInstance.getObjectName,Returns the object name part.
javax.management.ObjectInstance.toString,Returns a string representing this ObjectInstance object.
javax.management.ObjectName.apply,"Test whether this ObjectName, which may be a pattern,  matches another ObjectName."
javax.management.ObjectName.compareTo,Compares two ObjectName instances.
javax.management.ObjectName.equals,Compares the current object name with another object name.
javax.management.ObjectName.getCanonicalKeyPropertyListString,"Returns a string representation of the list of key properties,  in which the key properties are sorted in lexical order."
javax.management.ObjectName.getCanonicalName,"Returns the canonical form of the name; that is, a string  representation where the properties are sorted in lexical  order."
javax.management.ObjectName.getDomain,Returns the domain part.
javax.management.ObjectName.getInstance,Return an instance of ObjectName that can be used anywhere  an object obtained withnew  ObjectName(name)can be used.
javax.management.ObjectName.getInstance,"Return an instance of ObjectName that can be used anywhere  an object obtained withnew ObjectName(domain, key, value)can be used."
javax.management.ObjectName.getInstance,"Return an instance of ObjectName that can be used anywhere  an object obtained withnew ObjectName(domain, table)can be used."
javax.management.ObjectName.getInstance,Return an instance of ObjectName that can be used anywhere  the given object can be used.
javax.management.ObjectName.getKeyProperty,Obtains the value associated with a key in a key property.
javax.management.ObjectName.getKeyPropertyList,Returns the key properties as a Hashtable.
javax.management.ObjectName.getKeyPropertyListString,Returns a string representation of the list of key  properties specified at creation time.
javax.management.ObjectName.hashCode,Returns a hash code for this object name.
javax.management.ObjectName.isDomainPattern,Checks whether the object name is a pattern on the domain part.
javax.management.ObjectName.isPattern,Checks whether the object name is a pattern.
javax.management.ObjectName.isPropertyListPattern,Checks whether the object name is a pattern on the key property list.
javax.management.ObjectName.isPropertyPattern,Checks whether the object name is a pattern on the key properties.
javax.management.ObjectName.isPropertyValuePattern,Checks whether the object name is a pattern on the value part  of at least one of the key properties.
javax.management.ObjectName.isPropertyValuePattern,Checks whether the value associated with a key in a key  property is a pattern.
javax.management.ObjectName.quote,"Returns a quoted form of the given String, suitable for  inclusion in an ObjectName."
javax.management.ObjectName.setMBeanServer,Sets the MBean server on which the query is to be performed.
javax.management.ObjectName.toString,Returns a string representation of the object name.
javax.management.ObjectName.unquote,Returns an unquoted form of the given String.
javax.management.Query.and,Returns a query expression that is the conjunction of two other query  expressions.
javax.management.Query.anySubString,Returns a query expression that represents a matching constraint on  a string argument.
javax.management.Query.attr,Returns a new attribute expression.
javax.management.Query.attr,Returns a new qualified attribute expression.
javax.management.Query.between,Returns a query expression that represents the constraint that one  value is between two other values.
javax.management.Query.classattr,Returns a new class attribute expression which can be used in any  Query call that expects a ValueExp.
javax.management.Query.div,Returns a binary expression representing the quotient of two numeric  values.
javax.management.Query.eq,Returns a query expression that represents an equality constraint on  two values.
javax.management.Query.geq,"Returns a query expression that represents a ""greater than or equal  to"" constraint on two values."
javax.management.Query.gt,"Returns a query expression that represents a ""greater than"" constraint on  two values."
javax.management.Query.in,Returns an expression constraining a value to be one of an explicit list.
javax.management.Query.isInstanceOf,Returns a query expression that represents an inheritance constraint  on an MBean class.
javax.management.Query.leq,"Returns a query expression that represents a ""less than or equal to""  constraint on two values."
javax.management.Query.lt,"Returns a query expression that represents a ""less than"" constraint on  two values."
javax.management.Query.minus,Returns a binary expression representing the difference between two numeric  values.
javax.management.Query.not,Returns a constraint that is the negation of its argument.
javax.management.Query.or,Returns a query expression that is the disjunction of two other query  expressions.
javax.management.Query.plus,"Returns a binary expression representing the sum of two numeric values,  or the concatenation of two string values."
javax.management.Query.times,Returns a binary expression representing the product of two numeric values.
javax.management.Query.value,Returns a boolean value expression that can be used in any Query call  that expects a ValueExp.
javax.management.Query.value,Returns a numeric value expression that can be used in any Query call  that expects a ValueExp.
javax.management.Query.value,Returns a new string expression.
javax.management.QueryEval.getMBeanServer,Return the MBean server that was most recently given to thesetMBeanServermethod by this thread.
javax.management.ReflectionException.getCause,Returns the actualExceptionthrown.
javax.management.RuntimeErrorException.getCause,Returns the actualErrorthrown.
javax.management.RuntimeMBeanException.getCause,Returns the actualRuntimeExceptionthrown.
javax.management.StandardMBean.cacheMBeanInfo,Customization hook:  cache the MBeanInfo built for this object.
javax.management.StandardMBean.getAttribute,Obtain the value of a specific attribute of the Dynamic MBean.
javax.management.StandardMBean.getAttributes,Get the values of several attributes of the Dynamic MBean.
javax.management.StandardMBean.getCachedMBeanInfo,Customization hook:  Return the MBeanInfo cached for this object.
javax.management.StandardMBean.getClassName,Customization hook:  Get the className that will be used in the MBeanInfo returned by  this MBean.
javax.management.StandardMBean.getConstructors,Customization hook:  Get the MBeanConstructorInfo[] that will be used in the MBeanInfo  returned by this MBean.
javax.management.StandardMBean.getDescription,Customization hook:  Get the description that will be used in the MBeanAttributeInfo  returned by this MBean.
javax.management.StandardMBean.getDescription,Customization hook:  Get the description that will be used in the MBeanConstructorInfo  returned by this MBean.
javax.management.StandardMBean.getDescription,Customization hook:  Get the description that will be used for thesequenceMBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
javax.management.StandardMBean.getDescription,Customization hook:  Get the description that will be used in the MBeanFeatureInfo  returned by this MBean.
javax.management.StandardMBean.getDescription,Customization hook:  Get the description that will be used in the MBeanInfo returned by  this MBean.
javax.management.StandardMBean.getDescription,Customization hook:  Get the description that will be used in the MBeanOperationInfo  returned by this MBean.
javax.management.StandardMBean.getDescription,Customization hook:  Get the description that will be used for thesequenceMBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
javax.management.StandardMBean.getImpact,Customization hook:  Get theimpactflag of the operation that will be used in  the MBeanOperationInfo returned by this MBean.
javax.management.StandardMBean.getImplementation,Get the implementation of this Standard MBean (or MXBean).
javax.management.StandardMBean.getImplementationClass,Get the class of the implementation of this Standard MBean (or MXBean).
javax.management.StandardMBean.getMBeanInfo,Get theMBeanInfofor this MBean.
javax.management.StandardMBean.getMBeanInterface,Get the Management Interface of this Standard MBean (or MXBean).
javax.management.StandardMBean.getParameterName,Customization hook:  Get the name that will be used for thesequenceMBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
javax.management.StandardMBean.getParameterName,Customization hook:  Get the name that will be used for thesequenceMBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
javax.management.StandardMBean.invoke,Allows an action to be invoked on the Dynamic MBean.
javax.management.StandardMBean.postDeregister,Allows the MBean to perform any operations needed after having been  unregistered in the MBean server.
javax.management.StandardMBean.postRegister,Allows the MBean to perform any operations needed after having been  registered in the MBean server or after the registration has failed.
javax.management.StandardMBean.preDeregister,Allows the MBean to perform any operations it needs before  being unregistered by the MBean server.
javax.management.StandardMBean.preRegister,Allows the MBean to perform any operations it needs before  being registered in the MBean server.
javax.management.StandardMBean.setAttribute,Set the value of a specific attribute of the Dynamic MBean.
javax.management.StandardMBean.setAttributes,Sets the values of several attributes of the Dynamic MBean.
javax.management.StandardMBean.setImplementation,Replace the implementation object wrapped in this object.
javax.management.StringValueExp.apply,Applies the ValueExp on a MBean.
javax.management.StringValueExp.getValue,Returns the string represented by theStringValueExpinstance.
javax.management.loading.MLet.addURL,Appends the specified URL to the list of URLs to search for classes and  resources.
javax.management.loading.MLet.check,This method is to be overridden when extending this service to  support caching and versioning.
javax.management.loading.MLet.findClass,This is the main method for class loaders that is being redefined.
javax.management.loading.MLet.getLibraryDirectory,Gets the current directory used by the library loader for  storing native libraries before they are loaded into memory.
javax.management.loading.MLet.getMBeansFromURL,Loads a text file containing MLET tags that define the MBeans to  be added to the MBean server.
javax.management.loading.MLet.loadClass,"Load a class, using the givenClassLoaderRepositoryif  the class is not found in this MLet's URLs."
javax.management.loading.MLet.postDeregister,Allows the m-let to perform any operations needed after having been  unregistered in the MBean server.
javax.management.loading.MLet.postRegister,Allows the m-let to perform any operations needed after having been  registered in the MBean server or after the registration has failed.
javax.management.loading.MLet.preDeregister,Allows the m-let to perform any operations it needs before being unregistered  by the MBean server.
javax.management.loading.MLet.preRegister,Allows the m-let to perform any operations it needs before  being registered in the MBean server.
javax.management.loading.MLet.readExternal,Restore this MLet's contents from the givenObjectInput.
javax.management.loading.MLet.setLibraryDirectory,Sets the directory used by the library loader for storing  native libraries before they are loaded into memory.
javax.management.loading.MLet.writeExternal,Save this MLet's contents to the givenObjectOutput.
javax.management.loading.MLetContent.getAttributes,Gets the attributes of theMLETtag.
javax.management.loading.MLetContent.getCode,Gets the value of theCODEattribute of theMLETtag.
javax.management.loading.MLetContent.getCodeBase,Gets the code base URL.
javax.management.loading.MLetContent.getDocumentBase,Gets the MLet text file's base URL.
javax.management.loading.MLetContent.getJarFiles,Gets the list of.jarfiles specified by theARCHIVEattribute of theMLETtag.
javax.management.loading.MLetContent.getName,Gets the value of theNAMEattribute of theMLETtag.
javax.management.loading.MLetContent.getParameterTypes,Gets the list of values of theTYPEattribute in  each nested <PARAM> tag within theMLETtag.
javax.management.loading.MLetContent.getParameterValues,Gets the list of values of theVALUEattribute in  each nested <PARAM> tag within theMLETtag.
javax.management.loading.MLetContent.getSerializedObject,Gets the value of theOBJECTattribute of theMLETtag.
javax.management.loading.MLetContent.getVersion,Gets the value of theVERSIONattribute of theMLETtag.
javax.management.modelmbean.DescriptorSupport.clone,Returns a new Descriptor which is a duplicate of the Descriptor.
javax.management.modelmbean.DescriptorSupport.setField,Sets the value for a specific field name.
javax.management.modelmbean.DescriptorSupport.setFields,Sets all fields in the field names array to the new value with  the same index in the field values array.
javax.management.modelmbean.DescriptorSupport.toString,Returns a human readable string representing the  descriptor.
javax.management.modelmbean.DescriptorSupport.toXMLString,Returns an XML String representing the descriptor.
javax.management.modelmbean.ModelMBeanAttributeInfo.clone,Creates and returns a new ModelMBeanAttributeInfo which is a duplicate of this ModelMBeanAttributeInfo.
javax.management.modelmbean.ModelMBeanAttributeInfo.getDescriptor,Gets a copy of the associated Descriptor for the  ModelMBeanAttributeInfo.
javax.management.modelmbean.ModelMBeanAttributeInfo.setDescriptor,Sets associated Descriptor (full replace) for the  ModelMBeanAttributeDescriptor.
javax.management.modelmbean.ModelMBeanAttributeInfo.toString,Returns a human-readable version of the  ModelMBeanAttributeInfo instance.
javax.management.modelmbean.ModelMBeanConstructorInfo.clone,Creates and returns a new ModelMBeanConstructorInfo which is a duplicate of this ModelMBeanConstructorInfo.
javax.management.modelmbean.ModelMBeanConstructorInfo.getDescriptor,Returns a copy of the associated Descriptor.
javax.management.modelmbean.ModelMBeanConstructorInfo.setDescriptor,Sets associated Descriptor (full replace) of  ModelMBeanConstructorInfo.
javax.management.modelmbean.ModelMBeanConstructorInfo.toString,Returns a string containing the entire contents of the ModelMBeanConstructorInfo in human readable form.
javax.management.modelmbean.ModelMBeanInfoSupport.getAttribute,Returns a ModelMBeanAttributeInfo requested by name.
javax.management.modelmbean.ModelMBeanInfoSupport.getConstructor,Returns the ModelMBeanConstructorInfo requested by name.
javax.management.modelmbean.ModelMBeanInfoSupport.getDescriptor,Returns a Descriptor requested by name.
javax.management.modelmbean.ModelMBeanInfoSupport.getDescriptor,Returns a Descriptor requested by name and descriptorType.
javax.management.modelmbean.ModelMBeanInfoSupport.getDescriptors,Returns a Descriptor array consisting of all  Descriptors for the ModelMBeanInfo of type inDescriptorType.
javax.management.modelmbean.ModelMBeanInfoSupport.getMBeanDescriptor,Returns the ModelMBean's descriptor which contains MBean wide  policies.
javax.management.modelmbean.ModelMBeanInfoSupport.getNotification,Returns a ModelMBeanNotificationInfo requested by name.
javax.management.modelmbean.ModelMBeanInfoSupport.getOperation,Returns a ModelMBeanOperationInfo requested by name.
javax.management.modelmbean.ModelMBeanInfoSupport.setDescriptor,Sets descriptors in the info array of type inDescriptorType  for the ModelMBean.
javax.management.modelmbean.ModelMBeanInfoSupport.setDescriptors,Adds or replaces descriptors in the ModelMBeanInfo.
javax.management.modelmbean.ModelMBeanInfoSupport.setMBeanDescriptor,Sets the ModelMBean's descriptor.
javax.management.modelmbean.ModelMBeanNotificationInfo.clone,Creates and returns a new ModelMBeanNotificationInfo which is a  duplicate of this ModelMBeanNotificationInfo.
javax.management.modelmbean.ModelMBeanNotificationInfo.getDescriptor,Returns a copy of the associated Descriptor for the  ModelMBeanNotificationInfo.
javax.management.modelmbean.ModelMBeanNotificationInfo.setDescriptor,"Sets associated Descriptor (full replace) for the  ModelMBeanNotificationInfo If the new Descriptor is null,  then the associated Descriptor reverts to a default  descriptor."
javax.management.modelmbean.ModelMBeanNotificationInfo.toString,Returns a human readable string containing  ModelMBeanNotificationInfo.
javax.management.modelmbean.ModelMBeanOperationInfo.clone,Creates and returns a new ModelMBeanOperationInfo which is a  duplicate of this ModelMBeanOperationInfo.
javax.management.modelmbean.ModelMBeanOperationInfo.getDescriptor,Returns a copy of the associated Descriptor of the  ModelMBeanOperationInfo.
javax.management.modelmbean.ModelMBeanOperationInfo.setDescriptor,"Sets associated Descriptor (full replace) for the  ModelMBeanOperationInfo If the new Descriptor is null, then  the associated Descriptor reverts to a default descriptor."
javax.management.modelmbean.ModelMBeanOperationInfo.toString,Returns a string containing the entire contents of the  ModelMBeanOperationInfo in human readable form.
javax.management.modelmbean.RequiredModelMBean.addAttributeChangeNotificationListener,Registers an object which implements the NotificationListener interface as a listener.
javax.management.modelmbean.RequiredModelMBean.addNotificationListener,Registers an object which implements the NotificationListener  interface as a listener.
javax.management.modelmbean.RequiredModelMBean.getAttribute,Returns the value of a specific attribute defined for this  ModelMBean.
javax.management.modelmbean.RequiredModelMBean.getAttributes,Returns the values of several attributes in the ModelMBean.
javax.management.modelmbean.RequiredModelMBean.getClassLoaderRepository,Return the Class Loader Repository used to perform class loading.
javax.management.modelmbean.RequiredModelMBean.getMBeanInfo,"Returns the attributes, operations, constructors and notifications  that this RequiredModelMBean exposes for management."
javax.management.modelmbean.RequiredModelMBean.getNotificationInfo,Returns the array of Notifications always generated by the  RequiredModelMBean.
javax.management.modelmbean.RequiredModelMBean.invoke,Invokes a method on or through a RequiredModelMBean and returns  the result of the method execution.
javax.management.modelmbean.RequiredModelMBean.load,Instantiates this MBean instance with the data found for  the MBean in the persistent store.
javax.management.modelmbean.RequiredModelMBean.removeAttributeChangeNotificationListener,Removes a listener for attributeChangeNotifications from the RequiredModelMBean.
javax.management.modelmbean.RequiredModelMBean.removeNotificationListener,Removes a listener for Notifications from the RequiredModelMBean.
javax.management.modelmbean.RequiredModelMBean.sendAttributeChangeNotification,Sends an attributeChangeNotification which is passed in to  the registered attributeChangeNotification listeners on the  ModelMBean.
javax.management.modelmbean.RequiredModelMBean.sendAttributeChangeNotification,Sends an attributeChangeNotification which contains the old value and new value for the  attribute to the registered AttributeChangeNotification listeners on the ModelMBean.
javax.management.modelmbean.RequiredModelMBean.sendNotification,Sends a Notification which contains the text string that is passed in  to the registered Notification listeners on the ModelMBean.
javax.management.modelmbean.RequiredModelMBean.sendNotification,Sends a Notification which is passed in to the registered  Notification listeners on the ModelMBean as a  jmx.modelmbean.generic notification.
javax.management.modelmbean.RequiredModelMBean.setAttribute,Sets the value of a specific attribute of a named ModelMBean.
javax.management.modelmbean.RequiredModelMBean.setAttributes,Sets the values of an array of attributes of this ModelMBean.
javax.management.modelmbean.RequiredModelMBean.setManagedResource,Sets the instance handle of the object against which to  execute all methods in this ModelMBean management interface  (MBeanInfo and Descriptors).
javax.management.modelmbean.RequiredModelMBean.setModelMBeanInfo,Initializes a ModelMBean object using ModelMBeanInfo passed in.
javax.management.modelmbean.RequiredModelMBean.store,Captures the current state of this MBean instance and writes  it out to the persistent store.
javax.management.monitor.CounterMonitor.getDerivedGauge,"Deprecated.As of JMX 1.2, replaced bygetDerivedGauge(ObjectName)"
javax.management.monitor.CounterMonitor.getDerivedGauge,"Gets the derived gauge of the specified object, if this object is  contained in the set of observed MBeans, ornullotherwise."
javax.management.monitor.CounterMonitor.getDerivedGaugeTimeStamp,"Deprecated.As of JMX 1.2, replaced bygetDerivedGaugeTimeStamp(ObjectName)"
javax.management.monitor.CounterMonitor.getDerivedGaugeTimeStamp,"Gets the derived gauge timestamp of the specified object, if  this object is contained in the set of observed MBeans, or0otherwise."
javax.management.monitor.CounterMonitor.getDifferenceMode,Gets the difference mode flag value common to all observed MBeans.
javax.management.monitor.CounterMonitor.getInitThreshold,Gets the initial threshold value common to all observed objects.
javax.management.monitor.CounterMonitor.getModulus,Gets the modulus value common to all observed MBeans.
javax.management.monitor.CounterMonitor.getNotificationInfo,Returns aNotificationInfoobject containing the  name of the Java class of the notification and the notification  types sent by the counter monitor.
javax.management.monitor.CounterMonitor.getNotify,Gets the notification's on/off switch value common to all  observed MBeans.
javax.management.monitor.CounterMonitor.getOffset,Gets the offset value common to all observed MBeans.
javax.management.monitor.CounterMonitor.getThreshold,"Deprecated.As of JMX 1.2, replaced bygetThreshold(ObjectName)"
javax.management.monitor.CounterMonitor.getThreshold,"Gets the current threshold value of the specified object, if  this object is contained in the set of observed MBeans, ornullotherwise."
javax.management.monitor.CounterMonitor.setDifferenceMode,Sets the difference mode flag value common to all observed MBeans.
javax.management.monitor.CounterMonitor.setInitThreshold,Sets the initial threshold value common to all observed objects.
javax.management.monitor.CounterMonitor.setModulus,Sets the modulus value common to all observed MBeans.
javax.management.monitor.CounterMonitor.setNotify,Sets the notification's on/off switch value common to all  observed MBeans.
javax.management.monitor.CounterMonitor.setOffset,Sets the offset value common to all observed MBeans.
javax.management.monitor.CounterMonitor.setThreshold,"Deprecated.As of JMX 1.2, replaced bysetInitThreshold(java.lang.Number)"
javax.management.monitor.CounterMonitor.start,Starts the counter monitor.
javax.management.monitor.CounterMonitor.stop,Stops the counter monitor.
javax.management.monitor.GaugeMonitor.getHighThreshold,Gets the high threshold value common to all observed MBeans.
javax.management.monitor.GaugeMonitor.getLowThreshold,Gets the low threshold value common to all observed MBeans.
javax.management.monitor.GaugeMonitor.getNotificationInfo,Returns aNotificationInfoobject containing the  name of the Java class of the notification and the notification  types sent by the gauge monitor.
javax.management.monitor.GaugeMonitor.getNotifyHigh,Gets the high notification's on/off switch value common to all  observed MBeans.
javax.management.monitor.GaugeMonitor.getNotifyLow,Gets the low notification's on/off switch value common to all  observed MBeans.
javax.management.monitor.GaugeMonitor.setNotifyHigh,Sets the high notification's on/off switch value common to all  observed MBeans.
javax.management.monitor.GaugeMonitor.setNotifyLow,Sets the low notification's on/off switch value common to all  observed MBeans.
javax.management.monitor.GaugeMonitor.setThresholds,Sets the high and the low threshold values common to all  observed MBeans.
javax.management.monitor.GaugeMonitor.start,Starts the gauge monitor.
javax.management.monitor.GaugeMonitor.stop,Stops the gauge monitor.
javax.management.monitor.Monitor.addObservedObject,"Adds the specified object in the set of observed MBeans, if this object  is not already present."
javax.management.monitor.Monitor.containsObservedObject,Tests whether the specified object is in the set of observed MBeans.
javax.management.monitor.Monitor.getGranularityPeriod,Gets the granularity period (in milliseconds).
javax.management.monitor.Monitor.getObservedAttribute,Gets the attribute being observed.
javax.management.monitor.Monitor.getObservedObject,"Deprecated.As of JMX 1.2, replaced bygetObservedObjects()"
javax.management.monitor.Monitor.getObservedObjects,Returns an array containing the objects being observed.
javax.management.monitor.Monitor.isActive,Tests whether the monitor MBean is active.
javax.management.monitor.Monitor.postDeregister,Allows the monitor MBean to perform any operations needed after  having been unregistered by the MBean server.
javax.management.monitor.Monitor.postRegister,Allows the monitor MBean to perform any operations needed after  having been registered in the MBean server or after the  registration has failed.
javax.management.monitor.Monitor.preDeregister,Allows the monitor MBean to perform any operations it needs  before being unregistered by the MBean server.
javax.management.monitor.Monitor.preRegister,Allows the monitor MBean to perform any operations it needs  before being registered in the MBean server.
javax.management.monitor.Monitor.removeObservedObject,Removes the specified object from the set of observed MBeans.
javax.management.monitor.Monitor.setGranularityPeriod,Sets the granularity period (in milliseconds).
javax.management.monitor.Monitor.setObservedAttribute,Sets the attribute to observe.
javax.management.monitor.Monitor.setObservedObject,"Deprecated.As of JMX 1.2, replaced byaddObservedObject(javax.management.ObjectName)"
javax.management.monitor.Monitor.start,Starts the monitor.
javax.management.monitor.Monitor.stop,Stops the monitor.
javax.management.monitor.MonitorNotification.getDerivedGauge,Gets the derived gauge of this monitor notification.
javax.management.monitor.MonitorNotification.getObservedAttribute,Gets the observed attribute of this monitor notification.
javax.management.monitor.MonitorNotification.getObservedObject,Gets the observed object of this monitor notification.
javax.management.monitor.MonitorNotification.getTrigger,Gets the threshold/string (depending on the monitor type) that triggered off this monitor notification.
javax.management.monitor.StringMonitor.getNotificationInfo,Returns aNotificationInfoobject containing the name of  the Java class of the notification and the notification types sent by  the string monitor.
javax.management.monitor.StringMonitor.getNotifyDiffer,Gets the differing notification's on/off switch value common to  all observed MBeans.
javax.management.monitor.StringMonitor.getNotifyMatch,Gets the matching notification's on/off switch value common to  all observed MBeans.
javax.management.monitor.StringMonitor.getStringToCompare,Gets the string to compare with the observed attribute common  to all observed MBeans.
javax.management.monitor.StringMonitor.setNotifyDiffer,Sets the differing notification's on/off switch value common to  all observed MBeans.
javax.management.monitor.StringMonitor.setNotifyMatch,Sets the matching notification's on/off switch value common to  all observed MBeans.
javax.management.monitor.StringMonitor.setStringToCompare,Sets the string to compare with the observed attribute common  to all observed MBeans.
javax.management.monitor.StringMonitor.start,Starts the string monitor.
javax.management.monitor.StringMonitor.stop,Stops the string monitor.
javax.management.openmbean.ArrayType.equals,Compares the specifiedobjparameter with thisArrayTypeinstance for equality.
javax.management.openmbean.ArrayType.getArrayType,Create anArrayTypeinstance in a type-safe manner.
javax.management.openmbean.ArrayType.getDimension,Returns the dimension of arrays described by thisArrayTypeinstance.
javax.management.openmbean.ArrayType.getElementOpenType,Returns theopen typeof element values contained  in the arrays described by thisArrayTypeinstance.
javax.management.openmbean.ArrayType.hashCode,Returns the hash code value for thisArrayTypeinstance.
javax.management.openmbean.ArrayType.isPrimitiveArray,"Returnstrueif the open data values this open  type describes are primitive arrays,falseotherwise."
javax.management.openmbean.ArrayType.isValue,Tests whetherobjis a value for thisArrayTypeinstance.
javax.management.openmbean.ArrayType.toString,Returns a string representation of thisArrayTypeinstance.
javax.management.openmbean.CompositeDataInvocationHandler.getCompositeData,Return theCompositeDatathat was supplied to the        constructor.
javax.management.openmbean.CompositeDataSupport.containsKey,Returnstrueif and only if thisCompositeDatainstance contains  an item whose name iskey.
javax.management.openmbean.CompositeDataSupport.containsValue,Returnstrueif and only if thisCompositeDatainstance  contains an item  whose value isvalue.
javax.management.openmbean.CompositeDataSupport.equals,Compares the specifiedobjparameter with thisCompositeDataSupportinstance for equality.
javax.management.openmbean.CompositeDataSupport.get,Returns the value of the item whose name iskey.
javax.management.openmbean.CompositeDataSupport.getAll,"Returns an array of the values of the items whose names are specified bykeys, in the same order askeys."
javax.management.openmbean.CompositeDataSupport.getCompositeType,Returns thecomposite typeof thiscomposite datainstance.
javax.management.openmbean.CompositeDataSupport.hashCode,Returns the hash code value for thisCompositeDataSupportinstance.
javax.management.openmbean.CompositeDataSupport.toString,Returns a string representation of thisCompositeDataSupportinstance.
javax.management.openmbean.CompositeDataSupport.values,Returns an unmodifiable Collection view of the item values contained in thisCompositeDatainstance.
javax.management.openmbean.CompositeType.containsKey,Returnstrueif thisCompositeTypeinstance defines an item  whose name isitemName.
javax.management.openmbean.CompositeType.equals,Compares the specifiedobjparameter with thisCompositeTypeinstance for equality.
javax.management.openmbean.CompositeType.getDescription,"Returns the description of the item whose name isitemName,  ornullif thisCompositeTypeinstance does not define any item  whose name isitemName."
javax.management.openmbean.CompositeType.getType,"Returns theopen typeof the item whose name isitemName,  ornullif thisCompositeTypeinstance does not define any item  whose name isitemName."
javax.management.openmbean.CompositeType.hashCode,Returns the hash code value for thisCompositeTypeinstance.
javax.management.openmbean.CompositeType.isValue,Tests whetherobjis a value which could be  described by thisCompositeTypeinstance.
javax.management.openmbean.CompositeType.keySet,Returns an unmodifiable Set view of all the item names defined by thisCompositeTypeinstance.
javax.management.openmbean.CompositeType.toString,Returns a string representation of thisCompositeTypeinstance.
javax.management.openmbean.OpenMBeanAttributeInfoSupport.equals,Compares the specifiedobjparameter with thisOpenMBeanAttributeInfoSupportinstance for equality.
javax.management.openmbean.OpenMBeanAttributeInfoSupport.getDefaultValue,"Returns the default value for the attribute described by thisOpenMBeanAttributeInfoSupportinstance, if specified,  ornullotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.getLegalValues,"Returns an unmodifiable Set of legal values for the attribute  described by thisOpenMBeanAttributeInfoSupportinstance, if specified, ornullotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.getMaxValue,"Returns the maximal value for the attribute described by thisOpenMBeanAttributeInfoSupportinstance, if specified,  ornullotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.getMinValue,"Returns the minimal value for the attribute described by thisOpenMBeanAttributeInfoSupportinstance, if specified,  ornullotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.getOpenType,Returns the open type for the values of the attribute described  by thisOpenMBeanAttributeInfoSupportinstance.
javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasDefaultValue,"Returnstrueif thisOpenMBeanAttributeInfoSupportinstance specifies a non-null  default value for the described attribute,falseotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.hashCode,Returns the hash code value for thisOpenMBeanAttributeInfoSupportinstance.
javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasLegalValues,"Returnstrueif thisOpenMBeanAttributeInfoSupportinstance specifies a non-null  set of legal values for the described attribute,falseotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasMaxValue,"Returnstrueif thisOpenMBeanAttributeInfoSupportinstance specifies a non-null  maximal value for the described attribute,falseotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasMinValue,"Returnstrueif thisOpenMBeanAttributeInfoSupportinstance specifies a non-null  minimal value for the described attribute,falseotherwise."
javax.management.openmbean.OpenMBeanAttributeInfoSupport.isValue,Tests whetherobjis a valid value for the attribute  described by thisOpenMBeanAttributeInfoSupportinstance.
javax.management.openmbean.OpenMBeanAttributeInfoSupport.toString,Returns a string representation of thisOpenMBeanAttributeInfoSupportinstance.
javax.management.openmbean.OpenMBeanConstructorInfoSupport.equals,Compares the specifiedobjparameter with thisOpenMBeanConstructorInfoSupportinstance for  equality.
javax.management.openmbean.OpenMBeanConstructorInfoSupport.hashCode,Returns the hash code value for thisOpenMBeanConstructorInfoSupportinstance.
javax.management.openmbean.OpenMBeanConstructorInfoSupport.toString,Returns a string representation of thisOpenMBeanConstructorInfoSupportinstance.
javax.management.openmbean.OpenMBeanInfoSupport.equals,Compares the specifiedobjparameter with thisOpenMBeanInfoSupportinstance for equality.
javax.management.openmbean.OpenMBeanInfoSupport.hashCode,Returns the hash code value for thisOpenMBeanInfoSupportinstance.
javax.management.openmbean.OpenMBeanInfoSupport.toString,Returns a string representation of thisOpenMBeanInfoSupportinstance.
javax.management.openmbean.OpenMBeanOperationInfoSupport.equals,Compares the specifiedobjparameter with thisOpenMBeanOperationInfoSupportinstance for  equality.
javax.management.openmbean.OpenMBeanOperationInfoSupport.getReturnOpenType,Returns theopen typeof the values returned by the  operation described by thisOpenMBeanOperationInfoinstance.
javax.management.openmbean.OpenMBeanOperationInfoSupport.hashCode,Returns the hash code value for thisOpenMBeanOperationInfoSupportinstance.
javax.management.openmbean.OpenMBeanOperationInfoSupport.toString,Returns a string representation of thisOpenMBeanOperationInfoSupportinstance.
javax.management.openmbean.OpenMBeanParameterInfoSupport.equals,Compares the specifiedobjparameter with thisOpenMBeanParameterInfoSupportinstance for equality.
javax.management.openmbean.OpenMBeanParameterInfoSupport.getDefaultValue,"Returns the default value for the parameter described by thisOpenMBeanParameterInfoSupportinstance, if specified,  ornullotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.getLegalValues,"Returns an unmodifiable Set of legal values for the parameter  described by thisOpenMBeanParameterInfoSupportinstance, if specified, ornullotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.getMaxValue,"Returns the maximal value for the parameter described by thisOpenMBeanParameterInfoSupportinstance, if specified,  ornullotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.getMinValue,"Returns the minimal value for the parameter described by thisOpenMBeanParameterInfoSupportinstance, if specified,  ornullotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.getOpenType,Returns the open type for the values of the parameter described  by thisOpenMBeanParameterInfoSupportinstance.
javax.management.openmbean.OpenMBeanParameterInfoSupport.hasDefaultValue,"Returnstrueif thisOpenMBeanParameterInfoSupportinstance specifies a non-null  default value for the described parameter,falseotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.hashCode,Returns the hash code value for thisOpenMBeanParameterInfoSupportinstance.
javax.management.openmbean.OpenMBeanParameterInfoSupport.hasLegalValues,"Returnstrueif thisOpenMBeanParameterInfoSupportinstance specifies a non-null  set of legal values for the described parameter,falseotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.hasMaxValue,"Returnstrueif thisOpenMBeanParameterInfoSupportinstance specifies a non-null  maximal value for the described parameter,falseotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.hasMinValue,"Returnstrueif thisOpenMBeanParameterInfoSupportinstance specifies a non-null  minimal value for the described parameter,falseotherwise."
javax.management.openmbean.OpenMBeanParameterInfoSupport.isValue,Tests whetherobjis a valid value for the parameter  described by thisOpenMBeanParameterInfoinstance.
javax.management.openmbean.OpenMBeanParameterInfoSupport.toString,Returns a string representation of thisOpenMBeanParameterInfoSupportinstance.
javax.management.openmbean.OpenType.equals,Compares the specifiedobjparameter with this  open type instance for equality.
javax.management.openmbean.OpenType.getClassName,Returns the fully qualified Java class name of the open data values  this open type describes.
javax.management.openmbean.OpenType.getDescription,Returns the text description of thisOpenTypeinstance.
javax.management.openmbean.OpenType.getTypeName,Returns the name of thisOpenTypeinstance.
javax.management.openmbean.OpenType.isArray,"Returnstrueif the open data values this open  type describes are arrays,falseotherwise."
javax.management.openmbean.OpenType.isValue,Tests whetherobjis a value for this open type.
javax.management.openmbean.OpenType.toString,Returns a string representation of this open type instance.
javax.management.openmbean.SimpleType.equals,Compares the specifiedobjparameter with thisSimpleTypeinstance for equality.
javax.management.openmbean.SimpleType.hashCode,Returns the hash code value for thisSimpleTypeinstance.
javax.management.openmbean.SimpleType.isValue,Tests whetherobjis a value for thisSimpleTypeinstance.
javax.management.openmbean.SimpleType.readResolve,Replace an object read from anObjectInputStreamwith the unique instance for that  value.
javax.management.openmbean.SimpleType.toString,Returns a string representation of thisSimpleTypeinstance.
javax.management.openmbean.TabularDataSupport.calculateIndex,Calculates the index that would be used in thisTabularDatainstance to refer  to the specified composite datavalueparameter if it were added to this instance.
javax.management.openmbean.TabularDataSupport.clear,Removes all rows from thisTabularDataSupportinstance.
javax.management.openmbean.TabularDataSupport.clone,"Returns a clone of thisTabularDataSupportinstance:  the clone is obtained by callingsuper.clone(), and then cloning the underlying map."
javax.management.openmbean.TabularDataSupport.containsKey,Returnstrueif and only if thisTabularDatainstance contains aCompositeDatavalue  (ie a row) whose index is the specifiedkey.
javax.management.openmbean.TabularDataSupport.containsValue,Returnstrueif and only if thisTabularDatainstance contains the specified  value.
javax.management.openmbean.TabularDataSupport.containsValue,Returnstrueif and only if thisTabularDatainstance contains the specifiedCompositeDatavalue.
javax.management.openmbean.TabularDataSupport.entrySet,Returns a collection view of the index to row mappings  contained in thisTabularDataSupportinstance.
javax.management.openmbean.TabularDataSupport.equals,Compares the specifiedobjparameter with thisTabularDataSupportinstance for equality.
javax.management.openmbean.TabularDataSupport.get,This method simply callsget((Object[]) key).
javax.management.openmbean.TabularDataSupport.get,"Returns theCompositeDatavalue whose index iskey, ornullif there is no value mapping  tokey, in thisTabularDatainstance."
javax.management.openmbean.TabularDataSupport.getTabularType,Returns thetabular typedescribing thisTabularDatainstance.
javax.management.openmbean.TabularDataSupport.hashCode,Returns the hash code value for thisTabularDataSupportinstance.
javax.management.openmbean.TabularDataSupport.isEmpty,Returnstrueif thisTabularDataSupportinstance contains no rows.
javax.management.openmbean.TabularDataSupport.keySet,Returns a set view of the keys contained in the underlying map of thisTabularDataSupportinstance used to index the rows.
javax.management.openmbean.TabularDataSupport.put,This method simply callsput((CompositeData) value)and  therefore ignores itskeyparameter which can benull.
javax.management.openmbean.TabularDataSupport.put,Addsvalueto thisTabularDatainstance.
javax.management.openmbean.TabularDataSupport.putAll,Add all the values contained in the specified maptto thisTabularDatainstance.
javax.management.openmbean.TabularDataSupport.putAll,Add all the elements invaluesto thisTabularDatainstance.
javax.management.openmbean.TabularDataSupport.remove,This method simply callsremove((Object[]) key).
javax.management.openmbean.TabularDataSupport.remove,"Removes theCompositeDatavalue whose index iskeyfrom thisTabularDatainstance,  and returns the removed value, or returnsnullif there is no value whose index iskey."
javax.management.openmbean.TabularDataSupport.size,Returns the number of rows in thisTabularDataSupportinstance.
javax.management.openmbean.TabularDataSupport.toString,Returns a string representation of thisTabularDataSupportinstance.
javax.management.openmbean.TabularDataSupport.values,Returns a collection view of the rows contained in thisTabularDataSupportinstance.
javax.management.openmbean.TabularType.equals,Compares the specifiedobjparameter with thisTabularTypeinstance for equality.
javax.management.openmbean.TabularType.getIndexNames,"Returns, in the same order as was given to this instance's  constructor, an unmodifiable List of the names of the items the  values of which are used to uniquely index each row element of  tabular data values described by thisTabularTypeinstance."
javax.management.openmbean.TabularType.getRowType,Returns the type of the row elements of tabular data values  described by thisTabularTypeinstance.
javax.management.openmbean.TabularType.hashCode,Returns the hash code value for thisTabularTypeinstance.
javax.management.openmbean.TabularType.isValue,Tests whetherobjis a value which could be  described by thisTabularTypeinstance.
javax.management.openmbean.TabularType.toString,Returns a string representation of thisTabularTypeinstance.
javax.management.relation.MBeanServerNotificationFilter.disableAllObjectNames,Disables any MBeanServerNotification (all ObjectNames are  deselected).
javax.management.relation.MBeanServerNotificationFilter.disableObjectName,Disables MBeanServerNotifications concerning given ObjectName.
javax.management.relation.MBeanServerNotificationFilter.enableAllObjectNames,Enables all MBeanServerNotifications (all ObjectNames are selected).
javax.management.relation.MBeanServerNotificationFilter.enableObjectName,Enables MBeanServerNotifications concerning given ObjectName.
javax.management.relation.MBeanServerNotificationFilter.getDisabledObjectNames,Gets all the ObjectNames disabled.
javax.management.relation.MBeanServerNotificationFilter.getEnabledObjectNames,Gets all the ObjectNames enabled.
javax.management.relation.RelationNotification.getMBeansToUnregister,Returns the list of ObjectNames of MBeans expected to be unregistered  due to a relation removal (only for relation removal).
javax.management.relation.RelationNotification.getNewRoleValue,Returns new value of updated role (only for role update).
javax.management.relation.RelationNotification.getObjectName,Returns the ObjectName of the  created/removed/updated relation.
javax.management.relation.RelationNotification.getOldRoleValue,Returns old value of updated role (only for role update).
javax.management.relation.RelationNotification.getRelationId,Returns the relation identifier of created/removed/updated relation.
javax.management.relation.RelationNotification.getRelationTypeName,Returns the relation type name of created/removed/updated relation.
javax.management.relation.RelationNotification.getRoleName,Returns name of updated role of updated relation (only for role update).
javax.management.relation.RelationService.addRelation,Adds an MBean created by the user (and registered by him in the MBean  Server) as a relation in the Relation Service.
javax.management.relation.RelationService.addRelationType,Adds given object as a relation type.
javax.management.relation.RelationService.checkRoleReading,Checks if given Role can be read in a relation of the given type.
javax.management.relation.RelationService.checkRoleWriting,Checks if given Role can be set in a relation of given type.
javax.management.relation.RelationService.createRelation,"Creates a simple relation (represented by a RelationSupport object) of  given relation type, and adds it in the Relation Service."
javax.management.relation.RelationService.createRelationType,"Creates a relation type (a RelationTypeSupport object) with given  role infos (provided by the RoleInfo objects), and adds it in the  Relation Service."
javax.management.relation.RelationService.findAssociatedMBeans,Retrieves the MBeans associated to given one in a relation.
javax.management.relation.RelationService.findReferencingRelations,Retrieves the relations where a given MBean is referenced.
javax.management.relation.RelationService.findRelationsOfType,Returns the relation ids for relations of the given type.
javax.management.relation.RelationService.getAllRelationIds,Returns all the relation ids for all the relations handled by the  Relation Service.
javax.management.relation.RelationService.getAllRelationTypeNames,Retrieves names of all known relation types.
javax.management.relation.RelationService.getAllRoles,Returns all roles present in the relation.
javax.management.relation.RelationService.getNotificationInfo,Returns a NotificationInfo object containing the name of the Java class  of the notification and the notification types sent.
javax.management.relation.RelationService.getPurgeFlag,"Returns the flag to indicate if when a notification is received for the  unregistration of an MBean referenced in a relation, if an immediate  ""purge"" of the relations (look for the relations no longer valid)  has to be performed , or if that will be performed only when the  purgeRelations method will be explicitly called."
javax.management.relation.RelationService.getReferencedMBeans,Retrieves MBeans referenced in the various roles of the relation.
javax.management.relation.RelationService.getRelationTypeName,Returns name of associated relation type for given relation.
javax.management.relation.RelationService.getRole,Retrieves role value for given role name in given relation.
javax.management.relation.RelationService.getRoleCardinality,Retrieves the number of MBeans currently referenced in the given role.
javax.management.relation.RelationService.getRoleInfo,Retrieves role info for given role name of a given relation type.
javax.management.relation.RelationService.getRoleInfos,Retrieves list of role infos (RoleInfo objects) of a given relation  type.
javax.management.relation.RelationService.getRoles,Retrieves values of roles with given names in given relation.
javax.management.relation.RelationService.handleNotification,Invoked when a JMX notification occurs.
javax.management.relation.RelationService.hasRelation,Checks if there is a relation identified in Relation Service with given  relation id.
javax.management.relation.RelationService.isActive,Checks if the Relation Service is active.
javax.management.relation.RelationService.isRelation,Returns the relation id associated to the given ObjectName if the  MBean has been added as a relation in the Relation Service.
javax.management.relation.RelationService.isRelationMBean,"If the relation is represented by an MBean (created by the user and  added as a relation in the Relation Service), returns the ObjectName of  the MBean."
javax.management.relation.RelationService.preRegister,Allows the MBean to perform any operations it needs before  being registered in the MBean Server.
javax.management.relation.RelationService.purgeRelations,Purges the relations.
javax.management.relation.RelationService.removeRelation,Removes given relation from the Relation Service.
javax.management.relation.RelationService.removeRelationType,Removes given relation type from Relation Service.
javax.management.relation.RelationService.sendRelationCreationNotification,Sends a notification (RelationNotification) for a relation creation.
javax.management.relation.RelationService.sendRelationRemovalNotification,Sends a notification (RelationNotification) for a relation removal.
javax.management.relation.RelationService.sendRoleUpdateNotification,Sends a notification (RelationNotification) for a role update in the  given relation.
javax.management.relation.RelationService.setPurgeFlag,"Sets the flag to indicate if when a notification is received for the  unregistration of an MBean referenced in a relation, if an immediate  ""purge"" of the relations (look for the relations no longer valid)  has to be performed , or if that will be performed only when the  purgeRelations method will be explicitly called."
javax.management.relation.RelationService.setRole,Sets the given role in given relation.
javax.management.relation.RelationService.setRoles,Sets the given roles in given relation.
javax.management.relation.RelationService.updateRoleMap,Handles update of the Relation Service role map for the update of given  role in given relation.
javax.management.relation.RelationSupport.getRelationId,Returns relation identifier (used to uniquely identify the relation  inside the Relation Service).
javax.management.relation.RelationSupport.getRelationServiceName,Returns ObjectName of the Relation Service handling the relation.
javax.management.relation.RelationSupport.getRelationTypeName,Returns name of associated relation type.
javax.management.relation.RelationSupport.getRole,Retrieves role value for given role name.
javax.management.relation.RelationSupport.getRoleCardinality,Returns the number of MBeans currently referenced in the given role.
javax.management.relation.RelationSupport.getRoles,Retrieves values of roles with given names.
javax.management.relation.RelationSupport.handleMBeanUnregistration,Callback used by the Relation Service when a MBean referenced in a role  is unregistered.
javax.management.relation.RelationSupport.isInRelationService,Returns an internal flag specifying if the object is still handled by  the Relation Service.
javax.management.relation.RelationSupport.retrieveAllRoles,Returns all roles in the relation without checking read mode.
javax.management.relation.RelationSupport.setRelationServiceManagementFlag,Specifies whether this relation is handled by the Relation  Service.
javax.management.relation.RelationSupport.setRole,Sets the given role.
javax.management.relation.RelationSupport.setRoles,Sets the given roles.
javax.management.relation.RelationTypeSupport.addRoleInfo,Add a role info.
javax.management.relation.RelationTypeSupport.getRelationTypeName,Returns the relation type name.
javax.management.relation.RelationTypeSupport.getRoleInfo,Returns the role info (RoleInfo object) for the given role info name  (null if not found).
javax.management.relation.RelationTypeSupport.getRoleInfos,Returns the list of role definitions (ArrayList of RoleInfo objects).
javax.management.relation.Role.clone,Clone the role object.
javax.management.relation.Role.getRoleName,Retrieves role name.
javax.management.relation.Role.getRoleValue,Retrieves role value.
javax.management.relation.Role.roleValueToString,Returns a string for the given role value.
javax.management.relation.Role.setRoleName,Sets role name.
javax.management.relation.Role.setRoleValue,Sets role value.
javax.management.relation.Role.toString,Returns a string describing the role.
javax.management.relation.RoleInfo.checkMaxDegree,"Returns true if thevalueparameter is lower than or equal to  the expected maximum degree, false otherwise."
javax.management.relation.RoleInfo.checkMinDegree,"Returns true if thevalueparameter is greater than or equal to  the expected minimum degree, false otherwise."
javax.management.relation.RoleInfo.getDescription,Returns description text for the role.
javax.management.relation.RoleInfo.getMaxDegree,Returns maximum degree for corresponding role reference.
javax.management.relation.RoleInfo.getMinDegree,Returns minimum degree for corresponding role reference.
javax.management.relation.RoleInfo.getName,Returns the name of the role.
javax.management.relation.RoleInfo.getRefMBeanClassName,Returns name of type of MBean expected to be referenced in  corresponding role.
javax.management.relation.RoleInfo.isReadable,Returns read access mode for the role (true if it is readable).
javax.management.relation.RoleInfo.isWritable,Returns write access mode for the role (true if it is writable).
javax.management.relation.RoleInfo.toString,Returns a string describing the role info.
javax.management.relation.RoleList.add,Inserts the role specified as an element at the position specified.
javax.management.relation.RoleList.add,Adds the Role specified as the last element of the list.
javax.management.relation.RoleList.addAll,"Inserts all of the elements in the RoleList specified into this  list, starting at the specified position, in the order in which they are  returned by the Iterator of the RoleList specified."
javax.management.relation.RoleList.addAll,"Appends all the elements in the RoleList specified to the end  of the list, in the order in which they are returned by the Iterator of  the RoleList specified."
javax.management.relation.RoleList.asList,Return a view of this list as aList<Role>.
javax.management.relation.RoleList.set,Sets the element at the position specified to be the role  specified.
javax.management.relation.RoleResult.getRoles,Retrieves list of roles successfully accessed.
javax.management.relation.RoleResult.getRolesUnresolved,Retrieves list of roles unsuccessfully accessed.
javax.management.relation.RoleResult.setRoles,Sets list of roles successfully accessed.
javax.management.relation.RoleResult.setRolesUnresolved,Sets list of roles unsuccessfully accessed.
javax.management.relation.RoleStatus.isRoleStatus,"Returns true if given value corresponds to a known role status, false  otherwise."
javax.management.relation.RoleUnresolved.clone,Clone this object.
javax.management.relation.RoleUnresolved.getProblemType,Retrieves problem type.
javax.management.relation.RoleUnresolved.setProblemType,Sets problem type.
javax.management.relation.RoleUnresolved.toString,Return a string describing this object.
javax.management.relation.RoleUnresolvedList.add,Inserts the unresolved role specified as an element at the position  specified.
javax.management.relation.RoleUnresolvedList.add,Adds the RoleUnresolved specified as the last element of the list.
javax.management.relation.RoleUnresolvedList.addAll,"Inserts all of the elements in the RoleUnresolvedList specified into  this list, starting at the specified position, in the order in which  they are returned by the Iterator of the RoleUnresolvedList specified."
javax.management.relation.RoleUnresolvedList.addAll,"Appends all the elements in the RoleUnresolvedList specified to the end  of the list, in the order in which they are returned by the Iterator of  the RoleUnresolvedList specified."
javax.management.relation.RoleUnresolvedList.asList,Return a view of this list as aList<RoleUnresolved>.
javax.management.relation.RoleUnresolvedList.set,Sets the element at the position specified to be the unresolved role  specified.
javax.management.remote.JMXConnectionNotification.getConnectionId,The connection ID to which this notification pertains.
javax.management.remote.JMXConnectorFactory.connect,Creates a connection to the connector server at the given  address.
javax.management.remote.JMXConnectorFactory.newJMXConnector,Creates a connector client for the connector server at the  given address.
javax.management.remote.JMXConnectorServer.connectionClosed,Called by a subclass when a client connection is closed  normally.
javax.management.remote.JMXConnectorServer.connectionFailed,Called by a subclass when a client connection fails.
javax.management.remote.JMXConnectorServer.connectionOpened,Called by a subclass when a new client connection is opened.
javax.management.remote.JMXConnectorServer.getConnectionIds,The list of IDs for currently-open connections to this  connector server.
javax.management.remote.JMXConnectorServer.getMBeanServer,Returns the MBean server that this connector server is  attached to.
javax.management.remote.JMXConnectorServer.getNotificationInfo,Returns an array indicating the notifications that this MBean  sends.
javax.management.remote.JMXConnectorServer.preDeregister,Called by an MBean server when this connector server is  unregistered from that MBean server.
javax.management.remote.JMXConnectorServer.preRegister,Called by an MBean server when this connector server is  registered in that MBean server.
javax.management.remote.JMXConnectorServer.setMBeanServerForwarder,Inserts an object that intercepts requests for the MBean server  that arrive through this connector server.
javax.management.remote.JMXConnectorServer.toJMXConnector,Returns a client stub for this connector server.
javax.management.remote.JMXConnectorServerFactory.newJMXConnectorServer,Creates a connector server at the given address.
javax.management.remote.JMXPrincipal.equals,Compares the specified Object with thisJMXPrincipalfor equality.
javax.management.remote.JMXPrincipal.getName,Returns the name of this principal.
javax.management.remote.JMXPrincipal.hashCode,Returns a hash code for thisJMXPrincipal.
javax.management.remote.JMXPrincipal.toString,Returns a string representation of thisJMXPrincipal.
javax.management.remote.JMXServiceURL.equals,Indicates whether some other object is equal to this one.
javax.management.remote.JMXServiceURL.getHost,The host part of the Service URL.
javax.management.remote.JMXServiceURL.getPort,The port of the Service URL.
javax.management.remote.JMXServiceURL.getProtocol,The protocol part of the Service URL.
javax.management.remote.JMXServiceURL.getURLPath,The URL Path part of the Service URL.
javax.management.remote.JMXServiceURL.toString,The string representation of this Service URL.
javax.management.remote.NotificationResult.getEarliestSequenceNumber,Returns the sequence number of the earliest notification still  in the buffer.
javax.management.remote.NotificationResult.getNextSequenceNumber,Returns the sequence number of the next notification available  for querying.
javax.management.remote.NotificationResult.getTargetedNotifications,"Returns the notifications resulting from the query, and the  listeners they correspond to."
javax.management.remote.TargetedNotification.getListenerID,The ID of the listener to which the notification is     targeted.
javax.management.remote.TargetedNotification.getNotification,The emitted notification.
javax.management.remote.TargetedNotification.toString,Returns a textual representation of this Targeted Notification.
javax.management.timer.Timer.addNotification,"Creates a new timer notification with the specifiedtype,messageanduserDataand inserts it into the list of notifications with a given date  and a null period and number of occurrences."
javax.management.timer.Timer.addNotification,"Creates a new timer notification with the specifiedtype,messageanduserDataand inserts it into the list of notifications with a given date  and period and a null number of occurrences."
javax.management.timer.Timer.addNotification,"Creates a new timer notification with the specifiedtype,messageanduserDataand inserts it into the list of notifications with a given date,  period and number of occurrences."
javax.management.timer.Timer.getAllNotificationIDs,Gets all timer notification identifiers registered into the list of notifications.
javax.management.timer.Timer.getDate,Gets a copy of the date associated to a timer notification.
javax.management.timer.Timer.getFixedRate,Gets a copy of the flag indicating whether a periodic notification is  executed atfixed-delayor atfixed-rate.
javax.management.timer.Timer.getNbNotifications,Gets the number of timer notifications registered into the list of notifications.
javax.management.timer.Timer.getNbOccurences,Gets a copy of the remaining number of occurrences associated to a timer notification.
javax.management.timer.Timer.getNotificationIDs,Gets all the identifiers of timer notifications corresponding to the specified type.
javax.management.timer.Timer.getNotificationMessage,Gets the timer notification detailed message corresponding to the specified identifier.
javax.management.timer.Timer.getNotificationType,Gets the timer notification type corresponding to the specified identifier.
javax.management.timer.Timer.getNotificationUserData,Gets the timer notification user data object corresponding to the specified identifier.
javax.management.timer.Timer.getPeriod,Gets a copy of the period (in milliseconds) associated to a timer notification.
javax.management.timer.Timer.getSendPastNotifications,Gets the flag indicating whether or not the timer sends past notifications.
javax.management.timer.Timer.isActive,Tests whether the timer MBean is active.
javax.management.timer.Timer.isEmpty,Tests whether the list of timer notifications is empty.
javax.management.timer.Timer.postDeregister,Allows the timer MBean to perform any operations needed after having been  unregistered by the MBean server.
javax.management.timer.Timer.postRegister,Allows the timer MBean to perform any operations needed after having been  registered in the MBean server or after the registration has failed.
javax.management.timer.Timer.preDeregister,Allows the timer MBean to perform any operations it needs before being unregistered  by the MBean server.
javax.management.timer.Timer.preRegister,Allows the timer MBean to perform any operations it needs before being registered  in the MBean server.
javax.management.timer.Timer.removeAllNotifications,Removes all the timer notifications from the list of notifications  and resets the counter used to update the timer notification identifiers.
javax.management.timer.Timer.removeNotification,Removes the timer notification corresponding to the specified identifier from the list of notifications.
javax.management.timer.Timer.removeNotifications,Removes all the timer notifications corresponding to the specified type from the list of notifications.
javax.management.timer.Timer.setSendPastNotifications,Sets the flag indicating whether the timer sends past notifications or not.
javax.management.timer.Timer.start,Starts the timer.
javax.management.timer.Timer.stop,Stops the timer.
javax.management.timer.TimerNotification.getNotificationID,Gets the identifier of this timer notification.
javax.management.remote.rmi.RMIConnectionImpl.addNotificationListener,"Handles the methodMBeanServerConnection.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)."
javax.management.remote.rmi.RMIConnectionImpl.addNotificationListeners,"Handles the methodMBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)."
javax.management.remote.rmi.RMIConnectionImpl.close,Closes this connection.
javax.management.remote.rmi.RMIConnectionImpl.createMBean,"Handles the methodMBeanServerConnection.createMBean(String, ObjectName, Object[], String[])."
javax.management.remote.rmi.RMIConnectionImpl.createMBean,"Handles the methodMBeanServerConnection.createMBean(String, ObjectName, ObjectName, Object[], String[])."
javax.management.remote.rmi.RMIConnectionImpl.createMBean,"Handles the methodMBeanServerConnection.createMBean(String, ObjectName, ObjectName)."
javax.management.remote.rmi.RMIConnectionImpl.createMBean,"Handles the methodMBeanServerConnection.createMBean(String, ObjectName)."
javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications,Retrieves notifications from the connector server.
javax.management.remote.rmi.RMIConnectionImpl.getAttribute,"Handles the methodMBeanServerConnection.getAttribute(ObjectName, String)."
javax.management.remote.rmi.RMIConnectionImpl.getAttributes,"Handles the methodMBeanServerConnection.getAttributes(ObjectName, String[])."
javax.management.remote.rmi.RMIConnectionImpl.getConnectionId,Returns the connection ID.
javax.management.remote.rmi.RMIConnectionImpl.getDefaultDomain,Handles the methodMBeanServerConnection.getDefaultDomain().
javax.management.remote.rmi.RMIConnectionImpl.getDomains,Handles the methodMBeanServerConnection.getDomains().
javax.management.remote.rmi.RMIConnectionImpl.getMBeanCount,Handles the methodMBeanServerConnection.getMBeanCount().
javax.management.remote.rmi.RMIConnectionImpl.getMBeanInfo,Handles the methodMBeanServerConnection.getMBeanInfo(ObjectName).
javax.management.remote.rmi.RMIConnectionImpl.getObjectInstance,Handles the methodMBeanServerConnection.getObjectInstance(ObjectName).
javax.management.remote.rmi.RMIConnectionImpl.invoke,"Handles the methodMBeanServerConnection.invoke(ObjectName, String, Object[], String[])."
javax.management.remote.rmi.RMIConnectionImpl.isInstanceOf,"Handles the methodMBeanServerConnection.isInstanceOf(ObjectName, String)."
javax.management.remote.rmi.RMIConnectionImpl.isRegistered,Handles the methodMBeanServerConnection.isRegistered(ObjectName).
javax.management.remote.rmi.RMIConnectionImpl.queryMBeans,"Handles the methodMBeanServerConnection.queryMBeans(ObjectName, QueryExp)."
javax.management.remote.rmi.RMIConnectionImpl.queryNames,"Handles the methodMBeanServerConnection.queryNames(ObjectName, QueryExp)."
javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener,"Handles the methodMBeanServerConnection.removeNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)."
javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener,"Handles the methodMBeanServerConnection.removeNotificationListener(ObjectName, ObjectName)."
javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListeners,"Handles theremoveNotificationListener(ObjectName, NotificationListener)andremoveNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)methods."
javax.management.remote.rmi.RMIConnectionImpl.setAttribute,"Handles the methodMBeanServerConnection.setAttribute(ObjectName, Attribute)."
javax.management.remote.rmi.RMIConnectionImpl.setAttributes,"Handles the methodMBeanServerConnection.setAttributes(ObjectName, AttributeList)."
javax.management.remote.rmi.RMIConnectionImpl.toString,Returns a string representation of this object.
javax.management.remote.rmi.RMIConnectionImpl.unreferenced,"Called by the RMI runtime sometime after the runtime determines that  the reference list, the list of clients referencing the remote object,  becomes empty."
javax.management.remote.rmi.RMIConnectionImpl.unregisterMBean,Handles the methodMBeanServerConnection.unregisterMBean(ObjectName).
javax.management.remote.rmi.RMIConnector.addConnectionNotificationListener,Adds a listener to be informed of changes in connection  status.
javax.management.remote.rmi.RMIConnector.close,Closes the client connection to its server.
javax.management.remote.rmi.RMIConnector.connect,Establishes the connection to the connector server.
javax.management.remote.rmi.RMIConnector.getAddress,The address of this connector.
javax.management.remote.rmi.RMIConnector.getConnectionId,Gets this connection's ID from the connector server.
javax.management.remote.rmi.RMIConnector.getMBeanServerConnection,Returns anMBeanServerConnectionobject  representing a remote MBean server.
javax.management.remote.rmi.RMIConnector.getMBeanServerConnection,Returns anMBeanServerConnectionobject representing  a remote MBean server on which operations are performed on behalf of  the supplied delegation subject.
javax.management.remote.rmi.RMIConnector.removeConnectionNotificationListener,Removes a listener from the list to be informed of changes  in status.
javax.management.remote.rmi.RMIConnectorServer.getAddress,The address of this connector server.
javax.management.remote.rmi.RMIConnectorServer.getAttributes,The attributes for this connector server.
javax.management.remote.rmi.RMIConnectorServer.isActive,Determines whether the connector server is active.
javax.management.remote.rmi.RMIConnectorServer.start,"Activates the connector server, that is starts listening for  client connections."
javax.management.remote.rmi.RMIConnectorServer.stop,"Deactivates the connector server, that is, stops listening for  client connections."
javax.management.remote.rmi.RMIJRMPServerImpl.closeClient,Closes a client connection made bymakeClient.
javax.management.remote.rmi.RMIJRMPServerImpl.closeServer,Called byRMIServerImpl.close()to close the connector server by  unexporting this object.
javax.management.remote.rmi.RMIJRMPServerImpl.export,Exports this RMI object.
javax.management.remote.rmi.RMIJRMPServerImpl.getProtocol,Returns the protocol string for this object.
javax.management.remote.rmi.RMIJRMPServerImpl.makeClient,Creates a new client connection as an RMI object exported  through JRMP.
javax.management.remote.rmi.RMIJRMPServerImpl.toStub,Returns a serializable stub for thisRMIServerobject.
javax.management.remote.rmi.RMIServerImpl.clientClosed,Method called when a client connection created bymakeClientis closed.
javax.management.remote.rmi.RMIServerImpl.close,Closes this connection server.
javax.management.remote.rmi.RMIServerImpl.closeServer,Called byclose()to close the connector server.
javax.management.remote.rmi.RMIServerImpl.getDefaultClassLoader,Gets the defaultClassLoaderused by this connector  server.
javax.management.remote.rmi.RMIServerImpl.getMBeanServer,TheMBeanServerto which this connector server  is attached.
javax.management.remote.rmi.RMIServerImpl.getVersion,The version of the RMI Connector Protocol understood by this  connector server.
javax.management.remote.rmi.RMIServerImpl.makeClient,Creates a new client connection.
javax.management.remote.rmi.RMIServerImpl.setDefaultClassLoader,Sets the defaultClassLoaderfor this connector  server.
javax.management.remote.rmi.RMIServerImpl.setMBeanServer,Sets theMBeanServerto which this connector  server is attached.
javax.management.remote.rmi.RMIServerImpl.toStub,Returns a remotable stub for this server object.
javax.management.remote.rmi.RMIServerImpl_Stub.newClient,Makes a new connection through this RMI connector.
javax.naming.BinaryRefAddr.equals,Determines whether obj is equal to this address.
javax.naming.BinaryRefAddr.getContent,Retrieves the contents of this address as an Object.
javax.naming.BinaryRefAddr.hashCode,Computes the hash code of this address using its address type and contents.
javax.naming.BinaryRefAddr.toString,Generates the string representation of this address.
javax.naming.Binding.getClassName,Retrieves the class name of the object bound to the name of this binding.
javax.naming.Binding.getObject,Retrieves the object bound to the name of this binding.
javax.naming.Binding.setObject,Sets the object associated with this binding.
javax.naming.Binding.toString,Generates the string representation of this binding.
javax.naming.CannotProceedException.getAltName,Retrieves thealtNamefield of this exception.
javax.naming.CannotProceedException.getAltNameCtx,Retrieves thealtNameCtxfield of this exception.
javax.naming.CannotProceedException.getEnvironment,Retrieves the environment that was in effect when this exception  was created.
javax.naming.CannotProceedException.getRemainingNewName,"Retrieves the ""remaining new name"" field of this exception, which is  used when this exception is thrown during a rename() operation."
javax.naming.CannotProceedException.setAltName,Sets thealtNamefield of this exception.
javax.naming.CannotProceedException.setAltNameCtx,Sets thealtNameCtxfield of this exception.
javax.naming.CannotProceedException.setEnvironment,Sets the environment that will be returned when getEnvironment()  is called.
javax.naming.CannotProceedException.setRemainingNewName,"Sets the ""remaining new name"" field of this exception."
javax.naming.CompositeName.add,Adds a single component at a specified position within this  composite name.
javax.naming.CompositeName.add,Adds a single component to the end of this composite name.
javax.naming.CompositeName.addAll,Adds the components of a composite name -- in order -- at a specified  position within this composite name.
javax.naming.CompositeName.addAll,Adds the components of a composite name -- in order -- to the end of  this composite name.
javax.naming.CompositeName.clone,Generates a copy of this composite name.
javax.naming.CompositeName.compareTo,Compares this CompositeName with the specified Object for order.
javax.naming.CompositeName.endsWith,Determines whether a composite name is a suffix of this composite name.
javax.naming.CompositeName.equals,Determines whether two composite names are equal.
javax.naming.CompositeName.get,Retrieves a component of this composite name.
javax.naming.CompositeName.getAll,Retrieves the components of this composite name as an enumeration  of strings.
javax.naming.CompositeName.getPrefix,Creates a composite name whose components consist of a prefix of the  components in this composite name.
javax.naming.CompositeName.getSuffix,Creates a composite name whose components consist of a suffix of the  components in this composite name.
javax.naming.CompositeName.hashCode,Computes the hash code of this composite name.
javax.naming.CompositeName.isEmpty,Determines whether this composite name is empty.
javax.naming.CompositeName.remove,Deletes a component from this composite name.
javax.naming.CompositeName.size,Retrieves the number of components in this composite name.
javax.naming.CompositeName.startsWith,Determines whether a composite name is a prefix of this composite name.
javax.naming.CompositeName.toString,Generates the string representation of this composite name.
javax.naming.CompoundName.add,Adds a single component at a specified position within this  compound name.
javax.naming.CompoundName.add,Adds a single component to the end of this compound name.
javax.naming.CompoundName.addAll,Adds the components of a compound name -- in order -- at a specified  position within this compound name.
javax.naming.CompoundName.addAll,Adds the components of a compound name -- in order -- to the end of  this compound name.
javax.naming.CompoundName.clone,Creates a copy of this compound name.
javax.naming.CompoundName.compareTo,Compares this CompoundName with the specified Object for order.
javax.naming.CompoundName.endsWith,Determines whether a compound name is a suffix of this compound name.
javax.naming.CompoundName.equals,Determines whether obj is syntactically equal to this compound name.
javax.naming.CompoundName.get,Retrieves a component of this compound name.
javax.naming.CompoundName.getAll,Retrieves the components of this compound name as an enumeration  of strings.
javax.naming.CompoundName.getPrefix,Creates a compound name whose components consist of a prefix of the  components in this compound name.
javax.naming.CompoundName.getSuffix,Creates a compound name whose components consist of a suffix of the  components in this compound name.
javax.naming.CompoundName.hashCode,Computes the hash code of this compound name.
javax.naming.CompoundName.isEmpty,Determines whether this compound name is empty.
javax.naming.CompoundName.remove,Deletes a component from this compound name.
javax.naming.CompoundName.size,Retrieves the number of components in this compound name.
javax.naming.CompoundName.startsWith,Determines whether a compound name is a prefix of this compound name.
javax.naming.CompoundName.toString,"Generates the string representation of this compound name, using  the syntax rules of the compound name."
javax.naming.InitialContext.addToEnvironment,Adds a new environment property to the environment of this  context.
javax.naming.InitialContext.bind,Binds a name to an object.
javax.naming.InitialContext.close,Closes this context.
javax.naming.InitialContext.composeName,Composes the name of this context with a name relative to  this context.
javax.naming.InitialContext.createSubcontext,Creates and binds a new context.
javax.naming.InitialContext.destroySubcontext,Destroys the named context and removes it from the namespace.
javax.naming.InitialContext.doLookup,A static method to retrieve the named object.
javax.naming.InitialContext.getDefaultInitCtx,Retrieves the initial context by callingNamingManager.getInitialContext()and cache it in defaultInitCtx.
javax.naming.InitialContext.getEnvironment,Retrieves the environment in effect for this context.
javax.naming.InitialContext.getNameInNamespace,Retrieves the full name of this context within its own namespace.
javax.naming.InitialContext.getNameParser,Retrieves the parser associated with the named context.
javax.naming.InitialContext.getURLOrDefaultInitCtx,Retrieves a context for resolving the string namename.
javax.naming.InitialContext.getURLOrDefaultInitCtx,Retrieves a context for resolvingname.
javax.naming.InitialContext.init,Initializes the initial context using the supplied environment.
javax.naming.InitialContext.list,"Enumerates the names bound in the named context, along with the  class names of objects bound to them."
javax.naming.InitialContext.listBindings,"Enumerates the names bound in the named context, along with the  objects bound to them."
javax.naming.InitialContext.lookup,Retrieves the named object.
javax.naming.InitialContext.lookupLink,"Retrieves the named object, following links except  for the terminal atomic component of the name."
javax.naming.InitialContext.rebind,"Binds a name to an object, overwriting any existing binding."
javax.naming.InitialContext.removeFromEnvironment,Removes an environment property from the environment of this  context.
javax.naming.InitialContext.rename,"Binds a new name to the object bound to an old name, and unbinds  the old name."
javax.naming.InitialContext.unbind,Unbinds the named object.
javax.naming.LinkException.getLinkExplanation,Retrieves the explanation associated with the problem encountered  when resolving a link.
javax.naming.LinkException.getLinkRemainingName,Retrieves the remaining unresolved portion of the link name.
javax.naming.LinkException.getLinkResolvedName,Retrieves the leading portion of the link name that was resolved  successfully.
javax.naming.LinkException.getLinkResolvedObj,Retrieves the object to which resolution was successful.
javax.naming.LinkException.setLinkExplanation,Sets the explanation associated with the problem encountered  when resolving a link.
javax.naming.LinkException.setLinkRemainingName,Sets the remaining link name field of this exception.
javax.naming.LinkException.setLinkResolvedName,Sets the resolved link name field of this exception.
javax.naming.LinkException.setLinkResolvedObj,Sets the link resolved object field of this exception.
javax.naming.LinkException.toString,Generates the string representation of this exception.
javax.naming.LinkRef.getLinkName,Retrieves the name of this link.
javax.naming.NameClassPair.getName,Retrieves the name of this binding.
javax.naming.NameClassPair.getNameInNamespace,Retrieves the full name of this binding.
javax.naming.NameClassPair.isRelative,Determines whether the name of this binding is  relative to the target context (which is named by  the first parameter of thelist()method).
javax.naming.NameClassPair.setClassName,Sets the class name of this binding.
javax.naming.NameClassPair.setName,Sets the name of this binding.
javax.naming.NameClassPair.setNameInNamespace,Sets the full name of this binding.
javax.naming.NameClassPair.setRelative,Sets whether the name of this binding is relative to the target  context (which is named by the first parameter of thelist()method).
javax.naming.NameClassPair.toString,Generates the string representation of this name/class pair.
javax.naming.NamingException.appendRemainingComponent,Add name as the last component in remaining name.
javax.naming.NamingException.appendRemainingName,Add components from 'name' as the last components in  remaining name.
javax.naming.NamingException.getExplanation,Retrieves the explanation associated with this exception.
javax.naming.NamingException.getRemainingName,Retrieves the remaining unresolved portion of the name.
javax.naming.NamingException.getResolvedName,Retrieves the leading portion of the name that was resolved  successfully.
javax.naming.NamingException.getRootCause,"Retrieves the root cause of this NamingException, if any."
javax.naming.NamingException.initCause,Initializes the cause of this exception to the specified value.
javax.naming.NamingException.setRemainingName,Sets the remaining name field of this exception.
javax.naming.NamingException.setResolvedName,Sets the resolved name field of this exception.
javax.naming.NamingException.setResolvedObj,Sets the resolved object field of this exception.
javax.naming.NamingException.setRootCause,Records the root cause of this NamingException.
javax.naming.NamingException.toString,Generates the string representation in more detail.
javax.naming.RefAddr.equals,Determines whether obj is equal to this RefAddr.
javax.naming.RefAddr.getContent,Retrieves the contents of this address.
javax.naming.RefAddr.getType,Retrieves the address type of this address.
javax.naming.Reference.add,Adds an address to the list of addresses at index posn.
javax.naming.Reference.add,Adds an address to the end of the list of addresses.
javax.naming.Reference.clear,Deletes all addresses from this reference.
javax.naming.Reference.clone,"Makes a copy of this reference using its class name  list of addresses, class factory name and class factory location."
javax.naming.Reference.equals,Determines whether obj is a reference with the same addresses  (in same order) as this reference.
javax.naming.Reference.get,Retrieves the address at index posn.
javax.naming.Reference.get,Retrieves the first address that has the address type 'addrType'.
javax.naming.Reference.getAll,Retrieves an enumeration of the addresses in this reference.
javax.naming.Reference.getClassName,Retrieves the class name of the object to which this reference refers.
javax.naming.Reference.getFactoryClassLocation,Retrieves the location of the factory of the object  to which this reference refers.
javax.naming.Reference.getFactoryClassName,Retrieves the class name of the factory of the object  to which this reference refers.
javax.naming.Reference.hashCode,Computes the hash code of this reference.
javax.naming.Reference.remove,Deletes the address at index posn from the list of addresses.
javax.naming.Reference.size,Retrieves the number of addresses in this reference.
javax.naming.Reference.toString,Generates the string representation of this reference.
javax.naming.ReferralException.getReferralContext,Retrieves the context at which to continue the method.
javax.naming.ReferralException.getReferralContext,Retrieves the context at which to continue the method using  environment properties.
javax.naming.ReferralException.getReferralInfo,Retrieves information (such as URLs) related to this referral.
javax.naming.ReferralException.retryReferral,Retries the referral currently being processed.
javax.naming.ReferralException.skipReferral,Discards the referral about to be processed.
javax.naming.directory.AttributeModificationException.getUnexecutedModifications,Retrieves the unexecuted modification list.
javax.naming.directory.AttributeModificationException.setUnexecutedModifications,Sets the unexecuted modification list to be e.
javax.naming.directory.AttributeModificationException.toString,"The string representation of this exception consists of  information about where the error occurred, and  the first unexecuted modification."
javax.naming.directory.BasicAttribute.add,Adds an attribute value to the ordered list of attribute values.
javax.naming.directory.BasicAttribute.add,Adds a new value to this attribute.
javax.naming.directory.BasicAttribute.clear,Removes all values from this attribute.
javax.naming.directory.BasicAttribute.contains,Determines whether a value is in this attribute.
javax.naming.directory.BasicAttribute.equals,Determines whether obj is equal to this attribute.
javax.naming.directory.BasicAttribute.get,Retrieves one of this attribute's values.
javax.naming.directory.BasicAttribute.get,Retrieves the attribute value from the ordered list of attribute values.
javax.naming.directory.BasicAttribute.getAll,Retrieves an enumeration of this attribute's values.
javax.naming.directory.BasicAttribute.getAttributeDefinition,Retrieves this attribute's schema definition.
javax.naming.directory.BasicAttribute.getAttributeSyntaxDefinition,Retrieves the syntax definition associated with this attribute.
javax.naming.directory.BasicAttribute.getID,Retrieves the id of this attribute.
javax.naming.directory.BasicAttribute.hashCode,Calculates the hash code of this attribute.
javax.naming.directory.BasicAttribute.isOrdered,Determines whether this attribute's values are ordered.
javax.naming.directory.BasicAttribute.remove,Removes an attribute value from the ordered list of attribute values.
javax.naming.directory.BasicAttribute.remove,Removes a specified value from this attribute.
javax.naming.directory.BasicAttribute.set,Sets an attribute value in the ordered list of attribute values.
javax.naming.directory.BasicAttribute.size,Retrieves the number of values in this attribute.
javax.naming.directory.BasicAttribute.toString,Generates the string representation of this attribute.
javax.naming.directory.BasicAttributes.equals,"Determines whether thisBasicAttributesis equal to anotherAttributesTwoAttributesare equal if they are both instances ofAttributes,  treat the case of attribute IDs the same way, and contain the  same attributes."
javax.naming.directory.BasicAttributes.get,Retrieves the attribute with the given attribute id from the  attribute set.
javax.naming.directory.BasicAttributes.getAll,Retrieves an enumeration of the attributes in the attribute set.
javax.naming.directory.BasicAttributes.getIDs,Retrieves an enumeration of the ids of the attributes in the  attribute set.
javax.naming.directory.BasicAttributes.hashCode,Calculates the hash code of this BasicAttributes.
javax.naming.directory.BasicAttributes.isCaseIgnored,Determines whether the attribute set ignores the case of  attribute identifiers when retrieving or adding attributes.
javax.naming.directory.BasicAttributes.put,Adds a new attribute to the attribute set.
javax.naming.directory.BasicAttributes.remove,Removes the attribute with the attribute id 'attrID' from  the attribute set.
javax.naming.directory.BasicAttributes.size,Retrieves the number of attributes in the attribute set.
javax.naming.directory.BasicAttributes.toString,Generates the string representation of this attribute set.
javax.naming.directory.InitialDirContext.bind,"Binds a name to an object, along with associated attributes."
javax.naming.directory.InitialDirContext.createSubcontext,"Creates and binds a new context, along with associated attributes."
javax.naming.directory.InitialDirContext.getAttributes,Retrieves all of the attributes associated with a named object.
javax.naming.directory.InitialDirContext.getAttributes,Retrieves selected attributes associated with a named object.
javax.naming.directory.InitialDirContext.getSchema,Retrieves the schema associated with the named object.
javax.naming.directory.InitialDirContext.getSchemaClassDefinition,Retrieves a context containing the schema objects of the  named object's class definitions.
javax.naming.directory.InitialDirContext.modifyAttributes,Modifies the attributes associated with a named object.
javax.naming.directory.InitialDirContext.modifyAttributes,Modifies the attributes associated with a named object using  an ordered list of modifications.
javax.naming.directory.InitialDirContext.rebind,"Binds a name to an object, along with associated attributes,  overwriting any existing binding."
javax.naming.directory.InitialDirContext.search,Searches in the named context or object for entries that satisfy the  given search filter.
javax.naming.directory.InitialDirContext.search,Searches in a single context for objects that contain a  specified set of attributes.
javax.naming.directory.InitialDirContext.search,"Searches in a single context for objects that contain a  specified set of attributes, and retrieves selected attributes."
javax.naming.directory.ModificationItem.getAttribute,Retrieves the attribute associated with this modification item.
javax.naming.directory.ModificationItem.getModificationOp,Retrieves the modification code of this modification item.
javax.naming.directory.ModificationItem.toString,"Generates the string representation of this modification item,  which consists of the modification operation and its related attribute."
javax.naming.directory.SearchControls.getCountLimit,Retrieves the maximum number of entries that will be returned  as a result of the search.
javax.naming.directory.SearchControls.getDerefLinkFlag,Determines whether links will be dereferenced during the search.
javax.naming.directory.SearchControls.getReturningAttributes,Retrieves the attributes that will be returned as part of the search.
javax.naming.directory.SearchControls.getReturningObjFlag,Determines whether objects will be returned as part of the result.
javax.naming.directory.SearchControls.getSearchScope,Retrieves the search scope of these SearchControls.
javax.naming.directory.SearchControls.getTimeLimit,Retrieves the time limit of these SearchControls in milliseconds.
javax.naming.directory.SearchControls.setCountLimit,Sets the maximum number of entries to be returned  as a result of the search.
javax.naming.directory.SearchControls.setDerefLinkFlag,Enables/disables link dereferencing during the search.
javax.naming.directory.SearchControls.setReturningAttributes,Specifies the attributes that will be returned as part of the search.
javax.naming.directory.SearchControls.setReturningObjFlag,Enables/disables returning objects returned as part of the result.
javax.naming.directory.SearchControls.setSearchScope,"Sets the search scope to one of:  OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE."
javax.naming.directory.SearchControls.setTimeLimit,Sets the time limit of these SearchControls in milliseconds.
javax.naming.directory.SearchResult.getAttributes,Retrieves the attributes in this search result.
javax.naming.directory.SearchResult.setAttributes,Sets the attributes of this search result toattrs.
javax.naming.directory.SearchResult.toString,Generates the string representation of this SearchResult.
javax.naming.event.NamingEvent.dispatch,Invokes the appropriate listener method on this event.
javax.naming.event.NamingEvent.getChangeInfo,Retrieves the change information for this event.
javax.naming.event.NamingEvent.getEventContext,Retrieves the event source that fired this event.
javax.naming.event.NamingEvent.getNewBinding,Retrieves the binding of the object after the change.
javax.naming.event.NamingEvent.getOldBinding,Retrieves the binding of the object before the change.
javax.naming.event.NamingEvent.getType,Returns the type of this event.
javax.naming.event.NamingExceptionEvent.dispatch,Invokes thenamingExceptionThrown()method on  a listener using this event.
javax.naming.event.NamingExceptionEvent.getEventContext,Retrieves theEventContextthat fired this event.
javax.naming.event.NamingExceptionEvent.getException,Retrieves the exception that was thrown.
javax.naming.ldap.BasicControl.getEncodedValue,Retrieves the control's ASN.1 BER encoded value.
javax.naming.ldap.BasicControl.getID,Retrieves the control's object identifier string.
javax.naming.ldap.BasicControl.isCritical,Determines the control's criticality.
javax.naming.ldap.ControlFactory.getControlInstance,Creates a control using this control factory.
javax.naming.ldap.ControlFactory.getControlInstance,Creates a control using known control factories.
javax.naming.ldap.InitialLdapContext.extendedOperation,Performs an extended operation.
javax.naming.ldap.InitialLdapContext.getConnectControls,Retrieves the connection request controls in effect for this context.
javax.naming.ldap.InitialLdapContext.getRequestControls,Retrieves the request controls in effect for this context.
javax.naming.ldap.InitialLdapContext.getResponseControls,Retrieves the response controls produced as a result of the last  method invoked on this context.
javax.naming.ldap.InitialLdapContext.newInstance,Creates a new instance of this context initialized using request controls.
javax.naming.ldap.InitialLdapContext.reconnect,Reconnects to the LDAP server using the supplied controls and  this context's environment.
javax.naming.ldap.InitialLdapContext.setRequestControls,Sets the request controls for methods subsequently  invoked on this context.
javax.naming.ldap.LdapName.add,Adds a single component at a specified position within this  LDAP name.
javax.naming.ldap.LdapName.add,Adds a single RDN at a specified position within this  LDAP name.
javax.naming.ldap.LdapName.add,Adds a single component to the end of this LDAP name.
javax.naming.ldap.LdapName.add,Adds a single RDN to the end of this LDAP name.
javax.naming.ldap.LdapName.addAll,Adds the RDNs of a name -- in order -- at a specified position  within this name.
javax.naming.ldap.LdapName.addAll,Adds the components of a name -- in order -- at a specified position  within this name.
javax.naming.ldap.LdapName.addAll,Adds the RDNs of a name -- in order -- to the end of this name.
javax.naming.ldap.LdapName.addAll,Adds the components of a name -- in order -- to the end of this name.
javax.naming.ldap.LdapName.clone,Generates a new copy of this name.
javax.naming.ldap.LdapName.compareTo,Compares this LdapName with the specified Object for order.
javax.naming.ldap.LdapName.endsWith,Determines whether the specified RDN sequence forms a suffix of this  LDAP name.
javax.naming.ldap.LdapName.endsWith,Determines whether this LDAP name ends with a specified  LDAP name suffix.
javax.naming.ldap.LdapName.equals,Determines whether two LDAP names are equal.
javax.naming.ldap.LdapName.get,Retrieves a component of this LDAP name as a string.
javax.naming.ldap.LdapName.getAll,Retrieves the components of this name as an enumeration  of strings.
javax.naming.ldap.LdapName.getPrefix,Creates a name whose components consist of a prefix of the  components of this LDAP name.
javax.naming.ldap.LdapName.getRdn,Retrieves an RDN of this LDAP name as an Rdn.
javax.naming.ldap.LdapName.getRdns,Retrieves the list of relative distinguished names.
javax.naming.ldap.LdapName.getSuffix,Creates a name whose components consist of a suffix of the  components in this LDAP name.
javax.naming.ldap.LdapName.hashCode,Computes the hash code of this LDAP name.
javax.naming.ldap.LdapName.isEmpty,Determines whether this LDAP name is empty.
javax.naming.ldap.LdapName.remove,Removes a component from this LDAP name.
javax.naming.ldap.LdapName.size,Retrieves the number of components in this LDAP name.
javax.naming.ldap.LdapName.startsWith,Determines whether the specified RDN sequence forms a prefix of this  LDAP name.
javax.naming.ldap.LdapName.startsWith,Determines whether this LDAP name starts with a specified LDAP name  prefix.
javax.naming.ldap.LdapName.toString,Returns a string representation of this LDAP name in a format  defined byRFC 2253and described in the class description.
javax.naming.ldap.LdapReferralException.getReferralContext,Retrieves the context at which to continue the method using the  context's environment and no controls.
javax.naming.ldap.LdapReferralException.getReferralContext,Retrieves the context at which to continue the method using  environment properties and no controls.
javax.naming.ldap.LdapReferralException.getReferralContext,Retrieves the context at which to continue the method using  request controls and environment properties.
javax.naming.ldap.PagedResultsResponseControl.getCookie,Retrieves the server-generated cookie.
javax.naming.ldap.PagedResultsResponseControl.getResultSize,Retrieves (an estimate of) the number of entries in the search result.
javax.naming.ldap.Rdn.compareTo,Compares this Rdn with the specified Object for order.
javax.naming.ldap.Rdn.equals,Compares the specified Object with this Rdn for equality.
javax.naming.ldap.Rdn.escapeValue,"Given the value of an attribute, returns a string escaped according  to the rules specified inRFC 2253."
javax.naming.ldap.Rdn.getType,Retrieves one of this Rdn's type.
javax.naming.ldap.Rdn.getValue,Retrieves one of this Rdn's value.
javax.naming.ldap.Rdn.hashCode,Returns the hash code of this RDN.
javax.naming.ldap.Rdn.size,Retrieves the number of attribute type/value pairs in this Rdn.
javax.naming.ldap.Rdn.toAttributes,Retrieves theAttributesview of the type/value mappings contained in this Rdn.
javax.naming.ldap.Rdn.toString,Returns this Rdn as a string represented in a format defined byRFC 2253and described  in the class description forLdapName.
javax.naming.ldap.Rdn.unescapeValue,"Given an attribute value string formatted according to the rules  specified inRFC 2253,  returns the unformatted value."
javax.naming.ldap.SortKey.getAttributeID,Retrieves the attribute ID of the sort key.
javax.naming.ldap.SortKey.getMatchingRuleID,Retrieves the matching rule ID used to order the attribute values.
javax.naming.ldap.SortKey.isAscending,Determines the sort order.
javax.naming.ldap.SortResponseControl.getAttributeID,Retrieves the ID of the attribute that caused the sort to fail.
javax.naming.ldap.SortResponseControl.getException,Retrieves the NamingException appropriate for the result code.
javax.naming.ldap.SortResponseControl.getResultCode,Retrieves the LDAP result code of the sort operation.
javax.naming.ldap.SortResponseControl.isSorted,Determines if the search results have been successfully sorted.
javax.naming.ldap.StartTlsRequest.createExtendedResponse,Creates an extended response object that corresponds to the  LDAP StartTLS extended request.
javax.naming.ldap.StartTlsRequest.getEncodedValue,Retrieves the StartTLS request's ASN.1 BER encoded value.
javax.naming.ldap.StartTlsRequest.getID,Retrieves the StartTLS request's object identifier string.
javax.naming.ldap.StartTlsResponse.close,Closes the TLS connection gracefully and reverts back to the underlying  connection.
javax.naming.ldap.StartTlsResponse.getEncodedValue,Retrieves the StartTLS response's ASN.1 BER encoded value.
javax.naming.ldap.StartTlsResponse.getID,Retrieves the StartTLS response's object identifier string.
javax.naming.ldap.StartTlsResponse.negotiate,Negotiates a TLS session using the default SSL socket factory.
javax.naming.ldap.StartTlsResponse.negotiate,Negotiates a TLS session using an SSL socket factory.
javax.naming.ldap.StartTlsResponse.setEnabledCipherSuites,Overrides the default list of cipher suites enabled for use on the  TLS connection.
javax.naming.ldap.StartTlsResponse.setHostnameVerifier,Sets the hostname verifier used bynegotiate()after the TLS handshake has completed and the default hostname  verification has failed.
javax.naming.ldap.UnsolicitedNotificationEvent.dispatch,Invokes thenotificationReceived()method on  a listener using this event.
javax.naming.ldap.UnsolicitedNotificationEvent.getNotification,Returns the unsolicited notification.
javax.naming.ldap.spi.LdapDnsProvider.lookupEndpoints,Lookup the endpoints and domain name for the givenContextprovider URLand environment.
javax.naming.ldap.spi.LdapDnsProviderResult.getDomainName,Returns the domain name resolved from the LDAP URL.
javax.naming.ldap.spi.LdapDnsProviderResult.getEndpoints,Returns the possibly empty list of individual server endpoints resolved  from the LDAP URL.
javax.naming.spi.DirectoryManager.getContinuationDirContext,Creates a context in which to continue aDirContextoperation.
javax.naming.spi.DirectoryManager.getObjectInstance,"Creates an instance of an object for the specified object,  attributes, and environment."
javax.naming.spi.DirectoryManager.getStateToBind,Retrieves the state of an object for binding when given the original  object and its attributes.
javax.naming.spi.NamingManager.getContinuationContext,Creates a context in which to continue a context operation.
javax.naming.spi.NamingManager.getInitialContext,Creates an initial context using the specified environment  properties.
javax.naming.spi.NamingManager.getObjectInstance,Creates an instance of an object for the specified object  and environment.
javax.naming.spi.NamingManager.getStateToBind,Retrieves the state of an object for binding.
javax.naming.spi.NamingManager.getURLContext,Creates a context for the given URL scheme id.
javax.naming.spi.NamingManager.hasInitialContextFactoryBuilder,Determines whether an initial context factory builder has  been set.
javax.naming.spi.NamingManager.setInitialContextFactoryBuilder,Sets the InitialContextFactory builder to be builder.
javax.naming.spi.NamingManager.setObjectFactoryBuilder,The ObjectFactoryBuilder determines the policy used when  trying to load object factories.
javax.naming.spi.ResolveResult.appendRemainingComponent,Adds a single component to the end of remaining name.
javax.naming.spi.ResolveResult.appendRemainingName,Adds components to the end of remaining name.
javax.naming.spi.ResolveResult.getResolvedObj,Retrieves the Object to which resolution was successful.
javax.naming.spi.ResolveResult.setRemainingName,Sets the remaining name field of this result to name.
javax.naming.spi.ResolveResult.setResolvedObj,Sets the resolved Object field of this result to obj.
java.net.http.HttpClient.authenticator,Sets an authenticator to use for HTTP authentication.
java.net.http.HttpClient.build,Returns a newHttpClientbuilt from the current state of this  builder.
java.net.http.HttpClient.connectTimeout,Sets the connect timeout duration for this client.
java.net.http.HttpClient.cookieHandler,Sets a cookie handler.
java.net.http.HttpClient.executor,Sets the executor to be used for asynchronous and dependent tasks.
java.net.http.HttpClient.followRedirects,Specifies whether requests will automatically follow redirects issued  by the server.
java.net.http.HttpClient.priority,Sets the default priority for any HTTP/2 requests sent from this  client.
java.net.http.HttpClient.proxy,Sets aProxySelector.
java.net.http.HttpClient.sslContext,Sets anSSLContext.
java.net.http.HttpClient.sslParameters,Sets anSSLParameters.
java.net.http.HttpClient.version,Requests a specific HTTP protocol version where possible.
java.net.http.HttpClient.authenticator,Returns anOptionalcontaining theAuthenticatorset on  this client.
java.net.http.HttpClient.connectTimeout,Returns anOptionalcontaining theconnect timeout durationfor this client.
java.net.http.HttpClient.cookieHandler,Returns anOptionalcontaining this client'sCookieHandler.
java.net.http.HttpClient.executor,Returns anOptionalcontaining this client'sExecutor.
java.net.http.HttpClient.followRedirects,Returns the follow redirects policy for this client.
java.net.http.HttpClient.newBuilder,Creates a newHttpClientbuilder.
java.net.http.HttpClient.newHttpClient,Returns a newHttpClientwith default settings.
java.net.http.HttpClient.newWebSocketBuilder,Creates a newWebSocketbuilder (optional operation).
java.net.http.HttpClient.proxy,Returns anOptionalcontaining theProxySelectorsupplied to this client.
java.net.http.HttpClient.send,"Sends the given request using this client, blocking if necessary to get  the response."
java.net.http.HttpClient.sendAsync,Sends the given request asynchronously using this client with the given  response body handler.
java.net.http.HttpClient.sendAsync,Sends the given request asynchronously using this client with the given  response body handler and push promise handler.
java.net.http.HttpClient.sslContext,Returns this client'sSSLContext.
java.net.http.HttpClient.sslParameters,Returns a copy of this client'sSSLParameters.
java.net.http.HttpClient.version,Returns the preferred HTTP protocol version for this client.
java.net.http.HttpHeaders.allValues,Returns an unmodifiable List of all of the header string values of the  given named header.
java.net.http.HttpHeaders.equals,Tests this HTTP headers instance for equality with the given object.
java.net.http.HttpHeaders.firstValue,Returns anOptionalcontaining the first header string value of  the given named (and possibly multi-valued) header.
java.net.http.HttpHeaders.firstValueAsLong,Returns anOptionalLongcontaining the first header string value  of the named header field.
java.net.http.HttpHeaders.hashCode,Computes a hash code for this HTTP headers instance.
java.net.http.HttpHeaders.map,Returns an unmodifiable multi Map view of this HttpHeaders.
java.net.http.HttpHeaders.of,Returns an HTTP headers from the given map.
java.net.http.HttpHeaders.toString,Returns this HTTP headers as a string.
java.net.http.HttpRequest.contentLength,Returns the content length for this request body.
java.net.http.HttpRequest.concat,Returns aBodyPublisherthat publishes a request  body consisting of the concatenation of the request bodies  published by a sequence of publishers.
java.net.http.HttpRequest.fromPublisher,Returns a request body publisher whose body is retrieved from the  givenFlow.Publisher.
java.net.http.HttpRequest.noBody,A request body publisher which sends no request body.
java.net.http.HttpRequest.ofByteArray,Returns a request body publisher whose body is the given byte array.
java.net.http.HttpRequest.ofByteArray,Returns a request body publisher whose body is the content of the  given byte array oflengthbytes starting from the specifiedoffset.
java.net.http.HttpRequest.ofByteArrays,A request body publisher that takes data from anIterableof byte arrays.
java.net.http.HttpRequest.ofFile,A request body publisher that takes data from the contents of a File.
java.net.http.HttpRequest.ofInputStream,A request body publisher that reads its data from anInputStream.
java.net.http.HttpRequest.ofString,"Returns a request body publisher whose body is the givenString, converted using theUTF_8character set."
java.net.http.HttpRequest.ofString,"Returns a request body publisher whose body is the givenString, converted using the given character set."
java.net.http.HttpRequest.build,Builds and returns anHttpRequest.
java.net.http.HttpRequest.copy,Returns an exact duplicate copy of thisBuilderbased on  current state.
java.net.http.HttpRequest.DELETE,Sets the request method of this builder to DELETE.
java.net.http.HttpRequest.expectContinue,Requests the server to acknowledge the request before sending the  body.
java.net.http.HttpRequest.GET,Sets the request method of this builder to GET.
java.net.http.HttpRequest.header,Adds the given name value pair to the set of headers for this request.
java.net.http.HttpRequest.headers,Adds the given name value pairs to the set of headers for this  request.
java.net.http.HttpRequest.method,Sets the request method and request body of this builder to the  given values.
java.net.http.HttpRequest.POST,Sets the request method of this builder to POST and sets its  request body publisher to the given value.
java.net.http.HttpRequest.PUT,Sets the request method of this builder to PUT and sets its  request body publisher to the given value.
java.net.http.HttpRequest.setHeader,Sets the given name value pair to the set of headers for this  request.
java.net.http.HttpRequest.timeout,Sets a timeout for this request.
java.net.http.HttpRequest.uri,Sets thisHttpRequest's requestURI.
java.net.http.HttpRequest.version,Sets the preferredHttpClient.Versionfor this request.
java.net.http.HttpRequest.bodyPublisher,Returns anOptionalcontaining theHttpRequest.BodyPublisherset on  this request.
java.net.http.HttpRequest.equals,Tests this HTTP request instance for equality with the given object.
java.net.http.HttpRequest.expectContinue,Returns this request'sexpect continuesetting.
java.net.http.HttpRequest.hashCode,Computes a hash code for this HTTP request instance.
java.net.http.HttpRequest.headers,The (user-accessible) request headers that this request was (or will be)  sent with.
java.net.http.HttpRequest.method,Returns the request method for this request.
java.net.http.HttpRequest.newBuilder,Creates anHttpRequestbuilder.
java.net.http.HttpRequest.newBuilder,Creates aBuilderwhose initial state is copied from an existingHttpRequest.
java.net.http.HttpRequest.newBuilder,Creates anHttpRequestbuilder with the given URI.
java.net.http.HttpRequest.timeout,Returns anOptionalcontaining this request's timeout duration.
java.net.http.HttpRequest.uri,Returns this request'sURI.
java.net.http.HttpRequest.version,Returns anOptionalcontaining the HTTP protocol version that  will be requested for thisHttpRequest.
java.net.http.WebSocketHandshakeException.getResponse,Returns the server's counterpart of the opening handshake.
java.util.prefs.AbstractPreferences.absolutePath,Implements theabsolutePathmethod as per the specification inPreferences.absolutePath().
java.util.prefs.AbstractPreferences.addNodeChangeListener,Registers the specified listener to receivenode change eventsfor this node.
java.util.prefs.AbstractPreferences.addPreferenceChangeListener,Registers the specified listener to receivepreference change  eventsfor this preference node.
java.util.prefs.AbstractPreferences.cachedChildren,Returns all known unremoved children of this node.
java.util.prefs.AbstractPreferences.childrenNames,Implements thechildrenmethod as per the specification inPreferences.childrenNames().
java.util.prefs.AbstractPreferences.childrenNamesSpi,Returns the names of the children of this preference node.
java.util.prefs.AbstractPreferences.childSpi,"Returns the named child of this preference node, creating it if it does  not already exist."
java.util.prefs.AbstractPreferences.clear,Implements theclearmethod as per the specification inPreferences.clear().
java.util.prefs.AbstractPreferences.exportNode,Implements theexportNodemethod as per the specification inPreferences.exportNode(OutputStream).
java.util.prefs.AbstractPreferences.exportSubtree,Implements theexportSubtreemethod as per the specification inPreferences.exportSubtree(OutputStream).
java.util.prefs.AbstractPreferences.flush,Implements theflushmethod as per the specification inPreferences.flush().
java.util.prefs.AbstractPreferences.flushSpi,This method is invoked with this node locked.
java.util.prefs.AbstractPreferences.get,"Implements thegetmethod as per the specification inPreferences.get(String,String)."
java.util.prefs.AbstractPreferences.getBoolean,"Implements thegetBooleanmethod as per the specification inPreferences.getBoolean(String,boolean)."
java.util.prefs.AbstractPreferences.getByteArray,"Implements thegetByteArraymethod as per the specification inPreferences.getByteArray(String,byte[])."
java.util.prefs.AbstractPreferences.getChild,"Returns the named child if it exists, ornullif it does not."
java.util.prefs.AbstractPreferences.getDouble,"Implements thegetDoublemethod as per the specification inPreferences.getDouble(String,double)."
java.util.prefs.AbstractPreferences.getFloat,"Implements thegetFloatmethod as per the specification inPreferences.getFloat(String,float)."
java.util.prefs.AbstractPreferences.getInt,"Implements thegetIntmethod as per the specification inPreferences.getInt(String,int)."
java.util.prefs.AbstractPreferences.getLong,"Implements thegetLongmethod as per the specification inPreferences.getLong(String,long)."
java.util.prefs.AbstractPreferences.getSpi,"Return the value associated with the specified key at this preference  node, ornullif there is no association for this key, or the  association cannot be determined at this time."
java.util.prefs.AbstractPreferences.isRemoved,Returnstrueiff this node (or an ancestor) has been  removed with theremoveNode()method.
java.util.prefs.AbstractPreferences.isUserNode,Implements theisUserNodemethod as per the specification inPreferences.isUserNode().
java.util.prefs.AbstractPreferences.keys,Implements thekeysmethod as per the specification inPreferences.keys().
java.util.prefs.AbstractPreferences.keysSpi,Returns all of the keys that have an associated value in this  preference node.
java.util.prefs.AbstractPreferences.name,Implements thenamemethod as per the specification inPreferences.name().
java.util.prefs.AbstractPreferences.node,Implements thenodemethod as per the specification inPreferences.node(String).
java.util.prefs.AbstractPreferences.nodeExists,Implements thenodeExistsmethod as per the specification inPreferences.nodeExists(String).
java.util.prefs.AbstractPreferences.parent,Implements theparentmethod as per the specification inPreferences.parent().
java.util.prefs.AbstractPreferences.put,"Implements theputmethod as per the specification inPreferences.put(String,String)."
java.util.prefs.AbstractPreferences.putBoolean,"Implements theputBooleanmethod as per the specification inPreferences.putBoolean(String,boolean)."
java.util.prefs.AbstractPreferences.putByteArray,"Implements theputByteArraymethod as per the specification inPreferences.putByteArray(String,byte[])."
java.util.prefs.AbstractPreferences.putDouble,"Implements theputDoublemethod as per the specification inPreferences.putDouble(String,double)."
java.util.prefs.AbstractPreferences.putFloat,"Implements theputFloatmethod as per the specification inPreferences.putFloat(String,float)."
java.util.prefs.AbstractPreferences.putInt,"Implements theputIntmethod as per the specification inPreferences.putInt(String,int)."
java.util.prefs.AbstractPreferences.putLong,"Implements theputLongmethod as per the specification inPreferences.putLong(String,long)."
java.util.prefs.AbstractPreferences.putSpi,Put the given key-value association into this preference node.
java.util.prefs.AbstractPreferences.remove,Implements theremove(String)method as per the specification  inPreferences.remove(String).
java.util.prefs.AbstractPreferences.removeNode,Implements theremoveNode()method as per the specification inPreferences.removeNode().
java.util.prefs.AbstractPreferences.removeNodeChangeListener,"Removes the specifiedNodeChangeListener, so it no longer  receives change events."
java.util.prefs.AbstractPreferences.removeNodeSpi,"Removes this preference node, invalidating it and any preferences that  it contains."
java.util.prefs.AbstractPreferences.removePreferenceChangeListener,"Removes the specified preference change listener, so it no longer  receives preference change events."
java.util.prefs.AbstractPreferences.removeSpi,Remove the association (if any) for the specified key at this  preference node.
java.util.prefs.AbstractPreferences.sync,Implements thesyncmethod as per the specification inPreferences.sync().
java.util.prefs.AbstractPreferences.toString,Returns the absolute path name of this preferences node.
java.util.prefs.NodeChangeEvent.getChild,Returns the node that was added or removed.
java.util.prefs.NodeChangeEvent.getParent,Returns the parent of the node that was added or removed.
java.util.prefs.PreferenceChangeEvent.getKey,Returns the key of the preference that was changed.
java.util.prefs.PreferenceChangeEvent.getNewValue,Returns the new value for the preference.
java.util.prefs.PreferenceChangeEvent.getNode,Returns the preference node that emitted the event.
java.util.prefs.Preferences.absolutePath,Returns this preference node's absolute path name.
java.util.prefs.Preferences.childrenNames,"Returns the names of the children of this preference node, relative to  this node."
java.util.prefs.Preferences.clear,Removes all of the preferences (key-value associations) in this  preference node.
java.util.prefs.Preferences.exportNode,Emits on the specified output stream an XML document representing all  of the preferences contained in this node (but not its descendants).
java.util.prefs.Preferences.exportSubtree,Emits an XML document representing all of the preferences contained  in this node and all of its descendants.
java.util.prefs.Preferences.flush,Forces any changes in the contents of this preference node and its  descendants to the persistent store.
java.util.prefs.Preferences.get,Returns the value associated with the specified key in this preference  node.
java.util.prefs.Preferences.getBoolean,Returns the boolean value represented by the string associated with the  specified key in this preference node.
java.util.prefs.Preferences.getByteArray,Returns the byte array value represented by the string associated with  the specified key in this preference node.
java.util.prefs.Preferences.getDouble,Returns the double value represented by the string associated with the  specified key in this preference node.
java.util.prefs.Preferences.getFloat,Returns the float value represented by the string associated with the  specified key in this preference node.
java.util.prefs.Preferences.getInt,Returns the int value represented by the string associated with the  specified key in this preference node.
java.util.prefs.Preferences.getLong,Returns the long value represented by the string associated with the  specified key in this preference node.
java.util.prefs.Preferences.importPreferences,Imports all of the preferences represented by the XML document on the  specified input stream.
java.util.prefs.Preferences.isUserNode,"Returnstrueif this preference node is in the user  preference tree,falseif it's in the system preference tree."
java.util.prefs.Preferences.name,"Returns this preference node's name, relative to its parent."
java.util.prefs.Preferences.node,"Returns the named preference node in the same tree as this node,  creating it and any of its ancestors if they do not already exist."
java.util.prefs.Preferences.nodeExists,Returns true if the named preference node exists in the same tree  as this node.
java.util.prefs.Preferences.parent,"Returns the parent of this preference node, ornullif this is  the root."
java.util.prefs.Preferences.put,Associates the specified value with the specified key in this  preference node.
java.util.prefs.Preferences.putBoolean,Associates a string representing the specified boolean value with the  specified key in this preference node.
java.util.prefs.Preferences.putByteArray,Associates a string representing the specified byte array with the  specified key in this preference node.
java.util.prefs.Preferences.putDouble,Associates a string representing the specified double value with the  specified key in this preference node.
java.util.prefs.Preferences.putFloat,Associates a string representing the specified float value with the  specified key in this preference node.
java.util.prefs.Preferences.putInt,Associates a string representing the specified int value with the  specified key in this preference node.
java.util.prefs.Preferences.putLong,Associates a string representing the specified long value with the  specified key in this preference node.
java.util.prefs.Preferences.remove,"Removes the value associated with the specified key in this preference  node, if any."
java.util.prefs.Preferences.removeNode,"Removes this preference node and all of its descendants, invalidating  any preferences contained in the removed nodes."
java.util.prefs.Preferences.sync,Ensures that future reads from this preference node and its  descendants reflect any changes that were committed to the persistent  store (from any VM) prior to thesyncinvocation.
java.util.prefs.Preferences.systemNodeForPackage,Returns the preference node from the system preference tree that is  associated (by convention) with the specified class's package.
java.util.prefs.Preferences.systemRoot,Returns the root preference node for the system.
java.util.prefs.Preferences.toString,"Returns a string representation of this preferences node,  as if computed by the expression:(this.isUserNode() ? ""User"" :  ""System"") + "" Preference Node: "" + this.absolutePath()."
java.util.prefs.Preferences.userNodeForPackage,Returns the preference node from the calling user's preference tree  that is associated (by convention) with the specified class's package.
java.util.prefs.Preferences.userRoot,Returns the root preference node for the calling user.
java.rmi.MarshalledObject.equals,Compares thisMarshalledObjectto another object.
java.rmi.MarshalledObject.get,Returns a new copy of the contained marshalledobject.
java.rmi.MarshalledObject.hashCode,Return a hash code for thisMarshalledObject.
java.rmi.Naming.bind,Binds the specifiednameto a remote object.
java.rmi.Naming.list,Returns an array of the names bound in the registry.
java.rmi.Naming.lookup,"Returns a reference, a stub, for the remote object associated  with the specifiedname."
java.rmi.Naming.rebind,Rebinds the specified name to a new remote object.
java.rmi.Naming.unbind,Destroys the binding for the specified name that is associated  with a remote object.
java.rmi.RemoteException.getMessage,"Returns the detail message, including the message from the cause, if  any, of this exception."
java.rmi.dgc.Lease.getValue,Returns the lease duration.
java.rmi.dgc.Lease.getVMID,Returns the client VMID associated with the lease.
java.rmi.dgc.VMID.equals,"Compare this VMID to another, and return true if they are the  same identifier."
java.rmi.dgc.VMID.hashCode,Compute hash code for this VMID.
java.rmi.dgc.VMID.toString,Return string representation of this VMID.
java.rmi.registry.LocateRegistry.createRegistry,Creates and exports aRegistryinstance on the local  host that accepts requests on the specifiedport.
java.rmi.registry.LocateRegistry.createRegistry,Creates and exports aRegistryinstance on the local  host that uses custom socket factories for communication with that  instance.
java.rmi.registry.LocateRegistry.getRegistry,Returns a reference to the remote objectRegistryfor  the local host on the default registry port of 1099.
java.rmi.registry.LocateRegistry.getRegistry,Returns a reference to the remote objectRegistryfor  the local host on the specifiedport.
java.rmi.registry.LocateRegistry.getRegistry,Returns a reference to the remote objectRegistryon the  specifiedhoston the default registry port of 1099.
java.rmi.registry.LocateRegistry.getRegistry,Returns a reference to the remote objectRegistryon the  specifiedhostandport.
java.rmi.registry.LocateRegistry.getRegistry,Returns a locally created remote reference to the remote objectRegistryon the specifiedhostandport.
java.rmi.server.LogStream.getDefaultStream,Deprecated.no replacement
java.rmi.server.ObjID.equals,Compares the specified object with thisObjIDfor  equality.
java.rmi.server.ObjID.hashCode,"Returns the hash code value for this object identifier, the  object number."
java.rmi.server.ObjID.read,Constructs and returns a newObjIDinstance by  unmarshalling a binary representation from anObjectInputinstance.
java.rmi.server.ObjID.toString,Returns a string representation of this object identifier.
java.rmi.server.ObjID.write,Marshals a binary representation of thisObjIDto  anObjectOutputinstance.
java.rmi.server.RemoteObject.equals,Compares two remote objects for equality.
java.rmi.server.RemoteObject.getRef,Returns the remote reference for the remote object.
java.rmi.server.RemoteObject.hashCode,Returns a hashcode for a remote object.
java.rmi.server.RemoteObject.toString,Returns a String that represents the value of this remote object.
java.rmi.server.RemoteObject.toStub,Returns the stub for the remote objectobjpassed  as a parameter.
java.rmi.server.RemoteObjectInvocationHandler.invoke,"Processes a method invocation made on the encapsulating  proxy instance,proxy, and returns the result."
java.rmi.server.RemoteServer.getClientHost,Returns a string representation of the client host for the  remote method invocation being processed in the current thread.
java.rmi.server.RemoteServer.getLog,Returns stream for the RMI call log.
java.rmi.server.RemoteServer.setLog,Log RMI calls to the output streamout.
java.rmi.server.RemoteStub.setRef,Deprecated.No replacement.
java.rmi.server.RMIClassLoader.getClassAnnotation,Returns the annotation string (representing a location for  the class definition) that RMI will use to annotate the class  descriptor when marshalling objects of the given class.
java.rmi.server.RMIClassLoader.getClassLoader,Returns a class loader that loads classes from the given codebase  URL path.
java.rmi.server.RMIClassLoader.getDefaultProviderInstance,Returns the canonical instance of the default provider  for the service provider interfaceRMIClassLoaderSpi.
java.rmi.server.RMIClassLoader.getSecurityContext,Deprecated.no replacement.
java.rmi.server.RMIClassLoader.loadClass,"Deprecated.replaced byloadClass(String,String)method"
java.rmi.server.RMIClassLoader.loadClass,Loads a class from a codebase URL path.
java.rmi.server.RMIClassLoader.loadClass,"Loads a class from a codebase URL path, optionally using the  supplied loader."
java.rmi.server.RMIClassLoader.loadClass,Loads a class from a codebase URL.
java.rmi.server.RMIClassLoader.loadProxyClass,Loads a dynamic proxy class (seeProxy)  that implements a set of interfaces with the given names  from a codebase URL path.
java.rmi.server.RMIClassLoaderSpi.getClassAnnotation,Provides the implementation forRMIClassLoader.getClassAnnotation(Class).
java.rmi.server.RMIClassLoaderSpi.getClassLoader,Provides the implementation forRMIClassLoader.getClassLoader(String).
java.rmi.server.RMIClassLoaderSpi.loadClass,"Provides the implementation forRMIClassLoader.loadClass(URL,String),RMIClassLoader.loadClass(String,String), andRMIClassLoader.loadClass(String,String,ClassLoader)."
java.rmi.server.RMIClassLoaderSpi.loadProxyClass,"Provides the implementation forRMIClassLoader.loadProxyClass(String,String[],ClassLoader)."
java.rmi.server.RMISocketFactory.createServerSocket,Create a server socket on the specified port (port 0 indicates  an anonymous port).
java.rmi.server.RMISocketFactory.createSocket,Creates a client socket connected to the specified host and port.
java.rmi.server.RMISocketFactory.getDefaultSocketFactory,Returns a reference to the default socket factory used  by this RMI implementation.
java.rmi.server.RMISocketFactory.getFailureHandler,Returns the handler for socket creation failure set by thesetFailureHandlermethod.
java.rmi.server.RMISocketFactory.getSocketFactory,Returns the socket factory set by thesetSocketFactorymethod.
java.rmi.server.RMISocketFactory.setFailureHandler,Sets the failure handler to be called by the RMI runtime if server  socket creation fails.
java.rmi.server.RMISocketFactory.setSocketFactory,Set the global socket factory from which RMI gets sockets (if the  remote object is not associated with a specific client and/or server  socket factory).
java.rmi.server.UID.equals,Compares the specified object with thisUIDfor  equality.
java.rmi.server.UID.hashCode,Returns the hash code value for thisUID.
java.rmi.server.UID.read,Constructs and returns a newUIDinstance by  unmarshalling a binary representation from anDataInputinstance.
java.rmi.server.UID.toString,Returns a string representation of thisUID.
java.rmi.server.UID.write,Marshals a binary representation of thisUIDto  aDataOutputinstance.
java.rmi.server.UnicastRemoteObject.clone,Returns a clone of the remote object that is distinct from  the original.
java.rmi.server.UnicastRemoteObject.exportObject,Deprecated.This method is deprecated because it supports only static stubs.
java.rmi.server.UnicastRemoteObject.exportObject,"Exports the remote object to make it available to receive incoming  calls, using the particular supplied port."
java.rmi.server.UnicastRemoteObject.exportObject,"Exports the remote object to make it available to receive incoming  calls, using the particular supplied port  andfilter."
java.rmi.server.UnicastRemoteObject.exportObject,"Exports the remote object to make it available to receive incoming  calls, using a transport specified by the given socket factory."
java.rmi.server.UnicastRemoteObject.exportObject,"Exports the remote object to make it available to receive incoming  calls, using a transport specified by the given socket factory  andfilter."
java.rmi.server.UnicastRemoteObject.unexportObject,"Removes the remote object, obj, from the RMI runtime."
javax.rmi.ssl.SslRMIClientSocketFactory.createSocket,Creates an SSL socket.
javax.rmi.ssl.SslRMIClientSocketFactory.hashCode,Returns a hash code value for thisSslRMIClientSocketFactory.
javax.rmi.ssl.SslRMIServerSocketFactory.createServerSocket,Creates a server socket that accepts SSL connections  configured according to this factory's SSL socket configuration  parameters.
javax.rmi.ssl.SslRMIServerSocketFactory.getEnabledCipherSuites,"Returns the names of the cipher suites enabled on SSL  connections accepted by server sockets created by this factory,  ornullif this factory uses the cipher suites  that are enabled by default."
javax.rmi.ssl.SslRMIServerSocketFactory.getEnabledProtocols,"Returns the names of the protocol versions enabled on SSL  connections accepted by server sockets created by this factory,  ornullif this factory uses the protocol versions  that are enabled by default."
javax.rmi.ssl.SslRMIServerSocketFactory.getNeedClientAuth,Returnstrueif client authentication is  required on SSL connections accepted by server sockets created  by this factory.
javax.rmi.ssl.SslRMIServerSocketFactory.hashCode,Returns a hash code value for thisSslRMIServerSocketFactory.
javax.script.AbstractScriptEngine.eval,"eval(Reader)calls the abstracteval(Reader, ScriptContext)passing the value of thecontextfield."
javax.script.AbstractScriptEngine.eval,"eval(Reader, Bindings)calls the abstracteval(Reader, ScriptContext)method, passing it aScriptContextwhose Reader, Writers and Bindings for scopes other thatENGINE_SCOPEare identical to those members of the protectedcontextfield."
javax.script.AbstractScriptEngine.eval,"Same aseval(Reader)except that the abstracteval(String, ScriptContext)is used."
javax.script.AbstractScriptEngine.eval,"Same aseval(Reader, Bindings)except that the abstracteval(String, ScriptContext)is used."
javax.script.AbstractScriptEngine.get,Gets the value for the specified key in theENGINE_SCOPEof the  protectedcontextfield.
javax.script.AbstractScriptEngine.getBindings,Returns theBindingswith the specified scope value in  the protectedcontextfield.
javax.script.AbstractScriptEngine.getContext,Returns the value of the protectedcontextfield.
javax.script.AbstractScriptEngine.getScriptContext,Returns aSimpleScriptContext.
javax.script.AbstractScriptEngine.put,Sets the specified value with the specified key in theENGINE_SCOPEBindingsof the protectedcontextfield.
javax.script.AbstractScriptEngine.setBindings,Sets theBindingswith the corresponding scope value in thecontextfield.
javax.script.AbstractScriptEngine.setContext,Sets the value of the protectedcontextfield to the specifiedScriptContext.
javax.script.CompiledScript.eval,Executes the program stored in theCompiledScriptobject.
javax.script.CompiledScript.eval,Executes the program stored in theCompiledScriptobject using  the suppliedBindingsof attributes as theENGINE_SCOPEof the  associatedScriptEngineduring script execution.
javax.script.CompiledScript.eval,Executes the program stored in thisCompiledScriptobject.
javax.script.CompiledScript.getEngine,Returns theScriptEnginewhosecompilemethod created thisCompiledScript.
javax.script.ScriptEngineManager.get,Gets the value for the specified key in the Global Scope
javax.script.ScriptEngineManager.getBindings,getBindingsreturns the value of theglobalScopefield.
javax.script.ScriptEngineManager.getEngineByExtension,Look up and create aScriptEnginefor a given extension.
javax.script.ScriptEngineManager.getEngineByMimeType,Look up and create aScriptEnginefor a given mime type.
javax.script.ScriptEngineManager.getEngineByName,Looks up and creates aScriptEnginefor a given  name.
javax.script.ScriptEngineManager.getEngineFactories,Returns a list whose elements are instances of all theScriptEngineFactoryclasses  found by the discovery mechanism.
javax.script.ScriptEngineManager.put,Sets the specified key/value pair in the Global Scope.
javax.script.ScriptEngineManager.registerEngineExtension,Registers aScriptEngineFactoryto handle an extension.
javax.script.ScriptEngineManager.registerEngineMimeType,Registers aScriptEngineFactoryto handle a mime type.
javax.script.ScriptEngineManager.registerEngineName,Registers aScriptEngineFactoryto handle a language  name.
javax.script.ScriptEngineManager.setBindings,setBindingsstores the specifiedBindingsin theglobalScopefield.
javax.script.ScriptException.getColumnNumber,Get the column number on which an error occurred.
javax.script.ScriptException.getFileName,Get the source of the script causing the error.
javax.script.ScriptException.getLineNumber,Get the line number on which an error occurred.
javax.script.ScriptException.getMessage,Returns a message containing the String passed to a constructor as well as  line and column numbers and filename if any of these are known.
javax.script.SimpleBindings.get,Returns the value to which this map maps the specified key.
javax.script.SimpleBindings.put,Sets the specified key/value in the underlyingmapfield.
javax.script.SimpleBindings.putAll,putAllis implemented usingMap.putAll.
javax.script.SimpleBindings.remove,Removes the mapping for this key from this map if it is present  (optional operation).
javax.script.SimpleScriptContext.getAttribute,Retrieves the value of the attribute with the given name in  the scope occurring earliest in the search order.
javax.script.SimpleScriptContext.getAttribute,Gets the value of an attribute in a given scope.
javax.script.SimpleScriptContext.getAttributesScope,Get the lowest scope in which an attribute is defined.
javax.script.SimpleScriptContext.getBindings,Returns the value of theengineScopefield if specified scope isENGINE_SCOPE.
javax.script.SimpleScriptContext.getErrorWriter,Returns theWriterused to display error output.
javax.script.SimpleScriptContext.getReader,Returns aReaderto be used by the script to read  input.
javax.script.SimpleScriptContext.getScopes,Returns immutableListof all the valid values for  scope in the ScriptContext.
javax.script.SimpleScriptContext.getWriter,Returns theWriterfor scripts to use when displaying output.
javax.script.SimpleScriptContext.removeAttribute,Remove an attribute in a given scope.
javax.script.SimpleScriptContext.setAttribute,Sets the value of an attribute in a given scope.
javax.script.SimpleScriptContext.setBindings,Sets aBindingsof attributes for the given scope.
javax.script.SimpleScriptContext.setErrorWriter,Sets theWriterused to display error output.
javax.script.SimpleScriptContext.setReader,Sets theReaderfor scripts to read input  .
javax.script.SimpleScriptContext.setWriter,Sets theWriterfor scripts to use when displaying output.
javax.security.auth.kerberos.DelegationPermission.equals,Checks two DelegationPermission objects for equality.
javax.security.auth.kerberos.DelegationPermission.implies,"Checks if this Kerberos delegation permission object ""implies"" the  specified permission."
javax.security.auth.kerberos.DelegationPermission.newPermissionCollection,Returns a PermissionCollection object for storing  DelegationPermission objects.
javax.security.auth.kerberos.EncryptionKey.destroy,Destroys this key by clearing out the key material of this key.
javax.security.auth.kerberos.EncryptionKey.equals,Compares the specified object with this key for equality.
javax.security.auth.kerberos.EncryptionKey.getAlgorithm,Returns the standard algorithm name for this key.
javax.security.auth.kerberos.EncryptionKey.getEncoded,Returns the key material of this key.
javax.security.auth.kerberos.EncryptionKey.getFormat,Returns the name of the encoding format for this key.
javax.security.auth.kerberos.EncryptionKey.getKeyType,Returns the key type for this key.
javax.security.auth.kerberos.EncryptionKey.hashCode,Returns a hash code for thisEncryptionKey.
javax.security.auth.kerberos.EncryptionKey.toString,Returns an informative textual representation of thisEncryptionKey.
javax.security.auth.kerberos.KerberosCredMessage.destroy,Destroys this object by clearing out the message.
javax.security.auth.kerberos.KerberosCredMessage.equals,Compares the specified object with thisKerberosCredMessagefor equality.
javax.security.auth.kerberos.KerberosCredMessage.getEncoded,Returns the DER encoded form of the KRB_CRED message.
javax.security.auth.kerberos.KerberosCredMessage.getRecipient,Returns the recipient of this message.
javax.security.auth.kerberos.KerberosCredMessage.getSender,Returns the sender of this message.
javax.security.auth.kerberos.KerberosCredMessage.hashCode,Returns a hash code for thisKerberosCredMessage.
javax.security.auth.kerberos.KerberosCredMessage.toString,Returns an informative textual representation of thisKerberosCredMessage.
javax.security.auth.kerberos.KerberosKey.destroy,Destroys this key by clearing out the key material of this secret key.
javax.security.auth.kerberos.KerberosKey.equals,Compares the specified object with thisKerberosKeyfor  equality.
javax.security.auth.kerberos.KerberosKey.getKeyType,Returns the key type for this long-term key.
javax.security.auth.kerberos.KerberosKey.getPrincipal,Returns the principal that this key belongs to.
javax.security.auth.kerberos.KerberosKey.getVersionNumber,Returns the key version number.
javax.security.auth.kerberos.KerberosKey.hashCode,Returns a hash code for thisKerberosKey.
javax.security.auth.kerberos.KerberosKey.isDestroyed,Determines if this key has been destroyed.
javax.security.auth.kerberos.KerberosKey.toString,Returns an informative textual representation of thisKerberosKey.
javax.security.auth.kerberos.KerberosPrincipal.equals,Compares the specified object with this principal for equality.
javax.security.auth.kerberos.KerberosPrincipal.getName,The returned string corresponds to the single-string  representation of a Kerberos Principal name as specified in  Section 2.1 ofRFC 1964.
javax.security.auth.kerberos.KerberosPrincipal.getNameType,Returns the name type of theKerberosPrincipal.
javax.security.auth.kerberos.KerberosPrincipal.getRealm,Returns the realm component of this Kerberos principal.
javax.security.auth.kerberos.KerberosPrincipal.hashCode,Returns a hash code for thisKerberosPrincipal.
javax.security.auth.kerberos.KerberosPrincipal.toString,Returns an informative textual representation of thisKerberosPrincipal.
javax.security.auth.kerberos.KerberosTicket.destroy,Destroys the ticket and destroys any sensitive information stored in  it.
javax.security.auth.kerberos.KerberosTicket.equals,Compares the specified object with thisKerberosTicketfor equality.
javax.security.auth.kerberos.KerberosTicket.getAuthTime,Returns the time that the client was authenticated.
javax.security.auth.kerberos.KerberosTicket.getClient,Returns the client principal associated with this ticket.
javax.security.auth.kerberos.KerberosTicket.getClientAddresses,Returns a list of addresses from where the ticket can be used.
javax.security.auth.kerberos.KerberosTicket.getEncoded,Returns an ASN.1 encoding of the entire ticket.
javax.security.auth.kerberos.KerberosTicket.getEndTime,Returns the expiration time for this ticket's validity period.
javax.security.auth.kerberos.KerberosTicket.getFlags,Returns the flags associated with this ticket.
javax.security.auth.kerberos.KerberosTicket.getRenewTill,"Returns the latest expiration time for this ticket, including all  renewals."
javax.security.auth.kerberos.KerberosTicket.getServer,Returns the service principal associated with this ticket.
javax.security.auth.kerberos.KerberosTicket.getSessionKey,Returns the session key associated with this ticket.
javax.security.auth.kerberos.KerberosTicket.getSessionKeyType,Returns the key type of the session key associated with this  ticket as defined by the Kerberos Protocol Specification.
javax.security.auth.kerberos.KerberosTicket.getStartTime,Returns the start time for this ticket's validity period.
javax.security.auth.kerberos.KerberosTicket.hashCode,Returns a hash code for thisKerberosTicket.
javax.security.auth.kerberos.KerberosTicket.isCurrent,Determines if this ticket is still current.
javax.security.auth.kerberos.KerberosTicket.isDestroyed,Determines if this ticket has been destroyed.
javax.security.auth.kerberos.KerberosTicket.isForwardable,Determines if this ticket is forwardable.
javax.security.auth.kerberos.KerberosTicket.isForwarded,Determines if this ticket had been forwarded or was issued based on  authentication involving a forwarded ticket-granting ticket.
javax.security.auth.kerberos.KerberosTicket.isInitial,"Determines if this ticket was issued using the Kerberos AS-Exchange  protocol, and not issued based on some ticket-granting ticket."
javax.security.auth.kerberos.KerberosTicket.isPostdated,Determines is this ticket is post-dated.
javax.security.auth.kerberos.KerberosTicket.isProxiable,Determines if this ticket is proxiable.
javax.security.auth.kerberos.KerberosTicket.isProxy,Determines is this ticket is a proxy-ticket.
javax.security.auth.kerberos.KerberosTicket.isRenewable,Determines is this ticket is renewable.
javax.security.auth.kerberos.KerberosTicket.refresh,Extends the validity period of this ticket.
javax.security.auth.kerberos.KerberosTicket.toString,Returns an informative textual representation of thisKerberosTicket.
javax.security.auth.kerberos.KeyTab.equals,Compares the specified object with thisKeyTabfor equality.
javax.security.auth.kerberos.KeyTab.exists,Checks if the keytab file exists.
javax.security.auth.kerberos.KeyTab.getInstance,Returns the defaultKeyTabinstance that is bound  to an unknown service principal.
javax.security.auth.kerberos.KeyTab.getInstance,Returns aKeyTabinstance from aFileobject  that is bound to an unknown service principal.
javax.security.auth.kerberos.KeyTab.getInstance,Returns the defaultKeyTabinstance that is bound  to the specified service principal.
javax.security.auth.kerberos.KeyTab.getInstance,Returns aKeyTabinstance from aFileobject  that is bound to the specified service principal.
javax.security.auth.kerberos.KeyTab.getKeys,Returns fresh keys for the given Kerberos principal.
javax.security.auth.kerberos.KeyTab.getPrincipal,Returns the service principal thisKeyTabobject  is bound to.
javax.security.auth.kerberos.KeyTab.getUnboundInstance,Returns the default unboundKeyTabinstance.
javax.security.auth.kerberos.KeyTab.getUnboundInstance,Returns an unboundKeyTabinstance from aFileobject.
javax.security.auth.kerberos.KeyTab.hashCode,Returns a hash code for thisKeyTab.
javax.security.auth.kerberos.KeyTab.isBound,Returns if the keytab is bound to a principal
javax.security.auth.kerberos.KeyTab.toString,Returns an informative textual representation of thisKeyTab.
javax.security.auth.kerberos.ServicePermission.equals,Checks two ServicePermission objects for equality.
javax.security.auth.kerberos.ServicePermission.implies,"Checks if this Kerberos service permission object ""implies"" the  specified permission."
javax.security.auth.kerberos.ServicePermission.newPermissionCollection,Returns a PermissionCollection object for storing  ServicePermission objects.
org.ietf.jgss.ChannelBinding.equals,Compares two instances of ChannelBinding.
org.ietf.jgss.ChannelBinding.getAcceptorAddress,Get the acceptor's address for this channel binding.
org.ietf.jgss.ChannelBinding.getApplicationData,Get the application specified data for this channel binding.
org.ietf.jgss.ChannelBinding.getInitiatorAddress,Get the initiator's address for this channel binding.
org.ietf.jgss.ChannelBinding.hashCode,Returns a hashcode value for this ChannelBinding object.
org.ietf.jgss.GSSException.getMajor,Returns the GSS-API level major error code for the problem causing  this exception to be thrown.
org.ietf.jgss.GSSException.getMajorString,Returns a string explaining the GSS-API level major error code in  this exception.
org.ietf.jgss.GSSException.getMessage,Returns a textual representation of both the major and the minor  status codes.
org.ietf.jgss.GSSException.getMinor,Returns the mechanism level error code for the problem causing this  exception to be thrown.
org.ietf.jgss.GSSException.getMinorString,Returns a string explaining the mechanism specific error code.
org.ietf.jgss.GSSException.setMinor,Used by the exception thrower to set the mechanism  level minor error code and its string explanation.
org.ietf.jgss.GSSManager.addProviderAtEnd,This method is used to indicate to the GSSManager that the  application would like a particular provider to be used if no other  provider can be found that supports the given mechanism.
org.ietf.jgss.GSSManager.addProviderAtFront,This method is used to indicate to the GSSManager that the  application would like a particular provider to be used ahead of all  others when support is desired for the given mechanism.
org.ietf.jgss.GSSManager.createContext,Factory method for creating a previously exported context.
org.ietf.jgss.GSSManager.createContext,Factory method for creating a context on the acceptor' side.
org.ietf.jgss.GSSManager.createContext,Factory method for creating a context on the initiator's  side.
org.ietf.jgss.GSSManager.createCredential,Factory method for acquiring default credentials.
org.ietf.jgss.GSSManager.createCredential,Factory method for acquiring credentials over a set of  mechanisms.
org.ietf.jgss.GSSManager.createCredential,Factory method for acquiring a single mechanism credential.
org.ietf.jgss.GSSManager.createName,Factory method to convert a byte array containing a  name from the specified namespace to a GSSName object.
org.ietf.jgss.GSSManager.createName,Factory method to convert a byte array containing a  name from the specified namespace to a GSSName object and canonicalize  it at the same time for a mechanism.
org.ietf.jgss.GSSManager.createName,Factory method to convert a string name from the  specified namespace to a GSSName object.
org.ietf.jgss.GSSManager.createName,Factory method to convert a string name from the  specified namespace to a GSSName object and canonicalize it at the  same time for a mechanism.
org.ietf.jgss.GSSManager.getInstance,Returns the default GSSManager implementation.
org.ietf.jgss.GSSManager.getMechs,Returns a list of mechanisms that are available to GSS-API callers  through this GSSManager.
org.ietf.jgss.GSSManager.getMechsForName,Returns a list of mechanisms that support the indicated name type.
org.ietf.jgss.GSSManager.getNamesForMech,Returns then name types supported by the indicated mechanism.
org.ietf.jgss.MessageProp.getMinorStatus,Retrieves the minor status code that the underlying mechanism might  have set for this per-message operation.
org.ietf.jgss.MessageProp.getMinorString,Retrieves a string explaining the minor status code.
org.ietf.jgss.MessageProp.getPrivacy,Retrieves the privacy state.
org.ietf.jgss.MessageProp.getQOP,Retrieves the QOP value.
org.ietf.jgss.MessageProp.isDuplicateToken,Tests if this is a duplicate of an earlier token.
org.ietf.jgss.MessageProp.isGapToken,"Tests if an expected token was not received, i.e., one or more  predecessor tokens have not yet been successfully processed."
org.ietf.jgss.MessageProp.isOldToken,"Tests if this token's validity period has expired, i.e., the token  is too old to be checked for duplication."
org.ietf.jgss.MessageProp.isUnseqToken,Tests if a later token had already been processed.
org.ietf.jgss.MessageProp.setPrivacy,Sets the privacy state.
org.ietf.jgss.MessageProp.setQOP,Sets the QOP value.
org.ietf.jgss.MessageProp.setSupplementaryStates,This method sets the state for the supplementary information flags  and the minor status in MessageProp.
org.ietf.jgss.Oid.containedIn,A utility method to test if this Oid value is contained within the  supplied Oid array.
org.ietf.jgss.Oid.equals,Tests if two Oid objects represent the same Object identifier  value.
org.ietf.jgss.Oid.getDER,"Returns the full ASN.1 DER encoding for this oid object, which  includes the tag and length."
org.ietf.jgss.Oid.hashCode,Returns a hashcode value for this Oid.
org.ietf.jgss.Oid.toString,Returns a string representation of the oid's integer components  in dot separated notation.
javax.security.sasl.AuthorizeCallback.getAuthenticationID,Returns the authentication id to check.
javax.security.sasl.AuthorizeCallback.getAuthorizationID,Returns the authorization id to check.
javax.security.sasl.AuthorizeCallback.getAuthorizedID,Returns the id of the authorized user.
javax.security.sasl.AuthorizeCallback.isAuthorized,Determines whether the authentication id is allowed to  act on behalf of the authorization id.
javax.security.sasl.AuthorizeCallback.setAuthorized,Sets whether the authorization is allowed.
javax.security.sasl.AuthorizeCallback.setAuthorizedID,Sets the id of the authorized entity.
javax.security.sasl.Sasl.createSaslClient,Creates aSaslClientusing the parameters supplied.
javax.security.sasl.Sasl.createSaslServer,Creates aSaslServerfor the specified mechanism.
javax.security.sasl.Sasl.getSaslClientFactories,Gets an enumeration of known factories for producingSaslClient.
javax.security.sasl.Sasl.getSaslServerFactories,Gets an enumeration of known factories for producingSaslServer.
javax.security.sasl.SaslException.toString,Returns the string representation of this exception.
javax.smartcardio.ATR.equals,Compares the specified object with this ATR for equality.
javax.smartcardio.ATR.getBytes,Returns a copy of the bytes in this ATR.
javax.smartcardio.ATR.getHistoricalBytes,Returns a copy of the historical bytes in this ATR.
javax.smartcardio.ATR.hashCode,Returns the hash code value for this ATR.
javax.smartcardio.ATR.toString,Returns a string representation of this ATR.
javax.smartcardio.Card.beginExclusive,Requests exclusive access to this card.
javax.smartcardio.Card.disconnect,Disconnects the connection with this card.
javax.smartcardio.Card.endExclusive,Releases the exclusive access previously established usingbeginExclusive.
javax.smartcardio.Card.getATR,Returns the ATR of this card.
javax.smartcardio.Card.getBasicChannel,Returns the CardChannel for the basic logical channel.
javax.smartcardio.Card.getProtocol,Returns the protocol in use for this card.
javax.smartcardio.Card.openLogicalChannel,Opens a new logical channel to the card and returns it.
javax.smartcardio.Card.transmitControlCommand,Transmits a control command to the terminal device.
javax.smartcardio.CardChannel.close,Closes this CardChannel.
javax.smartcardio.CardChannel.getCard,Returns the Card this channel is associated with.
javax.smartcardio.CardChannel.getChannelNumber,Returns the channel number of this CardChannel.
javax.smartcardio.CardChannel.transmit,Transmits the command APDU stored in the command ByteBuffer and receives  the response APDU in the response ByteBuffer.
javax.smartcardio.CardChannel.transmit,Transmits the specified command APDU to the Smart Card and returns the  response APDU.
javax.smartcardio.CardPermission.equals,Compares the specified object with this CardPermission for equality.
javax.smartcardio.CardPermission.hashCode,Returns the hash code value for this CardPermission object.
javax.smartcardio.CardPermission.implies,Checks if this CardPermission object implies the specified permission.
javax.smartcardio.CardTerminal.connect,Establishes a connection to the card.
javax.smartcardio.CardTerminal.getName,Returns the unique name of this terminal.
javax.smartcardio.CardTerminal.isCardPresent,Returns whether a card is present in this terminal.
javax.smartcardio.CardTerminal.waitForCardAbsent,Waits until a card is absent in this terminal or the timeout  expires.
javax.smartcardio.CardTerminal.waitForCardPresent,Waits until a card is present in this terminal or the timeout  expires.
javax.smartcardio.CardTerminals.getTerminal,Returns the terminal with the specified name or null if no such  terminal exists.
javax.smartcardio.CardTerminals.list,Returns an unmodifiable list of all available terminals.
javax.smartcardio.CardTerminals.list,Returns an unmodifiable list of all terminals matching the specified  state.
javax.smartcardio.CardTerminals.waitForChange,Waits for card insertion or removal in any of the terminals of this  object.
javax.smartcardio.CardTerminals.waitForChange,Waits for card insertion or removal in any of the terminals of this  object or until the timeout expires.
javax.smartcardio.CommandAPDU.equals,Compares the specified object with this command APDU for equality.
javax.smartcardio.CommandAPDU.getBytes,Returns a copy of the bytes in this APDU.
javax.smartcardio.CommandAPDU.getCLA,Returns the value of the class byte CLA.
javax.smartcardio.CommandAPDU.getData,Returns a copy of the data bytes in the command body.
javax.smartcardio.CommandAPDU.getINS,Returns the value of the instruction byte INS.
javax.smartcardio.CommandAPDU.getNc,Returns the number of data bytes in the command body (Nc) or 0 if this  APDU has no body.
javax.smartcardio.CommandAPDU.getNe,Returns the maximum number of expected data bytes in a response  APDU (Ne).
javax.smartcardio.CommandAPDU.getP1,Returns the value of the parameter byte P1.
javax.smartcardio.CommandAPDU.getP2,Returns the value of the parameter byte P2.
javax.smartcardio.CommandAPDU.hashCode,Returns the hash code value for this command APDU.
javax.smartcardio.CommandAPDU.toString,Returns a string representation of this command APDU.
javax.smartcardio.ResponseAPDU.equals,Compares the specified object with this response APDU for equality.
javax.smartcardio.ResponseAPDU.getData,Returns a copy of the data bytes in the response body.
javax.smartcardio.ResponseAPDU.getNr,Returns the number of data bytes in the response body (Nr) or 0 if this  APDU has no body.
javax.smartcardio.ResponseAPDU.getSW,Returns the value of the status bytes SW1 and SW2 as a single  status word SW.
javax.smartcardio.ResponseAPDU.getSW1,Returns the value of the status byte SW1 as a value between 0 and 255.
javax.smartcardio.ResponseAPDU.getSW2,Returns the value of the status byte SW2 as a value between 0 and 255.
javax.smartcardio.ResponseAPDU.hashCode,Returns the hash code value for this response APDU.
javax.smartcardio.ResponseAPDU.toString,Returns a string representation of this response APDU.
javax.smartcardio.TerminalFactory.getDefault,Returns the default TerminalFactory instance.
javax.smartcardio.TerminalFactory.getDefaultType,Get the default TerminalFactory type.
javax.smartcardio.TerminalFactory.getInstance,Returns a TerminalFactory of the specified type that is initialized  with the specified parameters.
javax.smartcardio.TerminalFactory.getProvider,Returns the provider of this TerminalFactory.
javax.smartcardio.TerminalFactory.getType,Returns the type of this TerminalFactory.
javax.smartcardio.TerminalFactory.terminals,Returns a new CardTerminals object encapsulating the terminals  supported by this factory.
javax.smartcardio.TerminalFactory.toString,Returns a string representation of this TerminalFactory.
javax.smartcardio.TerminalFactorySpi.engineTerminals,Returns the CardTerminals created by this factory.
java.sql.BatchUpdateException.getLargeUpdateCounts,Retrieves the update count for each update statement in the batch  update that executed successfully before this exception occurred.
java.sql.DataTruncation.getDataSize,Gets the number of bytes of data that should have been transferred.
java.sql.DataTruncation.getIndex,Retrieves the index of the column or parameter that was truncated.
java.sql.DataTruncation.getParameter,Indicates whether the value truncated was a parameter value or  a column value.
java.sql.DataTruncation.getRead,Indicates whether or not the value was truncated on a read.
java.sql.DataTruncation.getTransferSize,Gets the number of bytes of data actually transferred.
java.sql.Date.setTime,Sets an existingDateobject  using the given milliseconds time value.
java.sql.Date.toInstant,This method always throws an UnsupportedOperationException and should  not be used because SQLDatevalues do not have a time  component.
java.sql.Date.toLocalDate,"Creates aLocalDateinstance using the year, month and day  from thisDateobject."
java.sql.Date.toString,Formats a date in the date escape format yyyy-mm-dd.
java.sql.Date.valueOf,Converts a string in JDBC date escape format to  aDatevalue.
java.sql.Date.valueOf,"Obtains an instance ofDatefrom aLocalDateobject  with the same year, month and day of month value as the givenLocalDate."
java.sql.DriverManager.deregisterDriver,Removes the specified driver from theDriverManager's list of  registered drivers.
java.sql.DriverManager.drivers,Retrieves a Stream with all of the currently loaded JDBC drivers  to which the current caller has access.
java.sql.DriverManager.getConnection,Attempts to establish a connection to the given database URL.
java.sql.DriverManager.getDriver,Attempts to locate a driver that understands the given URL.
java.sql.DriverManager.getDrivers,Retrieves an Enumeration with all of the currently loaded JDBC drivers  to which the current caller has access.
java.sql.DriverManager.getLoginTimeout,Gets the maximum time in seconds that a driver can wait  when attempting to log in to a database.
java.sql.DriverManager.getLogStream,Deprecated.UsegetLogWriter
java.sql.DriverManager.getLogWriter,Retrieves the log writer.
java.sql.DriverManager.println,Prints a message to the current JDBC log stream.
java.sql.DriverManager.registerDriver,Registers the given driver with theDriverManager.
java.sql.DriverManager.setLoginTimeout,Sets the maximum time in seconds that a driver will wait  while attempting to connect to a database once the driver has  been identified.
java.sql.DriverManager.setLogStream,Deprecated.UsesetLogWriter
java.sql.DriverManager.setLogWriter,Sets the logging/tracingPrintWriterobject  that is used by theDriverManagerand all drivers.
java.sql.SQLClientInfoException.getFailedProperties,Returns the list of client info properties that could not be set.
java.sql.SQLException.getErrorCode,Retrieves the vendor-specific exception code  for thisSQLExceptionobject.
java.sql.SQLException.getNextException,Retrieves the exception chained to thisSQLExceptionobject by setNextException(SQLException ex).
java.sql.SQLException.getSQLState,Retrieves the SQLState for thisSQLExceptionobject.
java.sql.SQLException.iterator,Returns an iterator over the chained SQLExceptions.
java.sql.SQLException.setNextException,Adds anSQLExceptionobject to the end of the chain.
java.sql.SQLWarning.getNextWarning,Retrieves the warning chained to thisSQLWarningobject bysetNextWarning.
java.sql.SQLWarning.setNextWarning,Adds aSQLWarningobject to the end of the chain.
java.sql.Time.setTime,Sets aTimeobject using a milliseconds time value.
java.sql.Time.toInstant,This method always throws an UnsupportedOperationException and should  not be used because SQLTimevalues do not have a date  component.
java.sql.Time.toLocalTime,Converts thisTimeobject to aLocalTime.
java.sql.Time.toString,Formats a time in JDBC time escape format.
java.sql.Time.valueOf,Converts a string in JDBC time escape format to aTimevalue.
java.sql.Time.valueOf,"Obtains an instance ofTimefrom aLocalTimeobject  with the same hour, minute and second time value as the givenLocalTime."
java.sql.Timestamp.after,Indicates whether thisTimestampobject is  later than the givenTimestampobject.
java.sql.Timestamp.before,Indicates whether thisTimestampobject is  earlier than the givenTimestampobject.
java.sql.Timestamp.compareTo,Compares thisTimestampobject to the givenTimestampobject.
java.sql.Timestamp.compareTo,Compares thisTimestampobject to the givenDateobject.
java.sql.Timestamp.equals,Tests to see if thisTimestampobject is  equal to the given object.
java.sql.Timestamp.equals,Tests to see if thisTimestampobject is  equal to the givenTimestampobject.
java.sql.Timestamp.from,Obtains an instance ofTimestampfrom anInstantobject.
java.sql.Timestamp.getNanos,Gets thisTimestampobject'snanosvalue.
java.sql.Timestamp.getTime,"Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT  represented by thisTimestampobject."
java.sql.Timestamp.setNanos,Sets thisTimestampobject'snanosfield  to the given value.
java.sql.Timestamp.setTime,"Sets thisTimestampobject to represent a point in time that istimemilliseconds after January 1, 1970 00:00:00 GMT."
java.sql.Timestamp.toInstant,Converts thisTimestampobject to anInstant.
java.sql.Timestamp.toLocalDateTime,Converts thisTimestampobject to aLocalDateTime.
java.sql.Timestamp.toString,Formats a timestamp in JDBC timestamp escape format.
java.sql.Timestamp.valueOf,Converts aStringobject in JDBC timestamp escape format to aTimestampvalue.
java.sql.Timestamp.valueOf,"Obtains an instance ofTimestampfrom aLocalDateTimeobject, with the same year, month, day of month, hours, minutes,  seconds and nanos date-time value as the providedLocalDateTime."
javax.sql.ConnectionEvent.getSQLException,Retrieves theSQLExceptionfor thisConnectionEventobject.
javax.sql.StatementEvent.getSQLException,Returns theSQLExceptionthe driver is about to throw
javax.sql.StatementEvent.getStatement,Returns thePreparedStatementthat is being closed or is invalid
javax.sql.rowset.BaseRowSet.addRowSetListener,The listener will be notified whenever an event occurs on thisRowSetobject.
javax.sql.rowset.BaseRowSet.clearParameters,Clears all of the current parameter values in thisRowSetobject's internal representation of the parameters to be set in  thisRowSetobject's command when it is executed.
javax.sql.rowset.BaseRowSet.getCommand,Retrieves the SQL query that is the command for thisRowSetobject.
javax.sql.rowset.BaseRowSet.getConcurrency,Returns the concurrency for thisRowSetobject.
javax.sql.rowset.BaseRowSet.getDataSourceName,"Returns the logical name that when supplied to a naming service  that uses the Java Naming and Directory Interface (JNDI) API, will  retrieve ajavax.sql.DataSourceobject."
javax.sql.rowset.BaseRowSet.getEscapeProcessing,Ascertains whether escape processing is enabled for thisRowSetobject.
javax.sql.rowset.BaseRowSet.getFetchDirection,Retrieves thisRowSetobject's current setting for the  fetch direction.
javax.sql.rowset.BaseRowSet.getFetchSize,Returns the fetch size for thisRowSetobject.
javax.sql.rowset.BaseRowSet.getMaxFieldSize,Retrieves the maximum number of bytes that can be used for a column  value in thisRowSetobject.
javax.sql.rowset.BaseRowSet.getMaxRows,Retrieves the maximum number of rows that thisRowSetobject may contain.
javax.sql.rowset.BaseRowSet.getParams,Retrieves an array containing the parameter values (both Objects and  primitives) that have been set for thisRowSetobject's command and throws anSQLExceptionobject  if all parameters have not been set.
javax.sql.rowset.BaseRowSet.getPassword,Returns the password used to create a database connection for thisRowSetobject.
javax.sql.rowset.BaseRowSet.getQueryTimeout,Retrieves the maximum number of seconds the driver will wait for a  query to execute.
javax.sql.rowset.BaseRowSet.getShowDeleted,Retrieves abooleanindicating whether rows marked  for deletion appear in the set of current rows.
javax.sql.rowset.BaseRowSet.getTransactionIsolation,Returns the transaction isolation property for thisRowSetobject's connection.
javax.sql.rowset.BaseRowSet.getType,Returns the type of thisRowSetobject.
javax.sql.rowset.BaseRowSet.getTypeMap,Retrieves the type map associated with theConnectionobject for thisRowSetobject.
javax.sql.rowset.BaseRowSet.getUrl,Retrieves the JDBC URL that thisRowSetobject'sjavax.sql.Readerobject uses to make a connection  with a relational database using a JDBC technology-enabled driver.
javax.sql.rowset.BaseRowSet.getUsername,Returns the user name used to create a database connection.
javax.sql.rowset.BaseRowSet.initParams,Performs the necessary internal configurations and initializations  to allow any JDBCRowSetimplementation to start using  the standard facilities provided by aBaseRowSetinstance.
javax.sql.rowset.BaseRowSet.isReadOnly,Returns abooleanindicating whether thisRowSetobject is read-only.
javax.sql.rowset.BaseRowSet.notifyCursorMoved,Notifies all of the listeners registered with thisRowSetobject that its cursor has moved.
javax.sql.rowset.BaseRowSet.notifyRowChanged,Notifies all of the listeners registered with thisRowSetobject that  one of its rows has changed.
javax.sql.rowset.BaseRowSet.notifyRowSetChanged,Notifies all of the listeners registered with thisRowSetobject that its entire contents have changed.
javax.sql.rowset.BaseRowSet.removeRowSetListener,Removes the designated object from thisRowSetobject's list of listeners.
javax.sql.rowset.BaseRowSet.setArray,Sets the designated parameter to anArrayobject in the  Java programming language.
javax.sql.rowset.BaseRowSet.setAsciiStream,Sets the designated parameter in thisRowSetobject's command  to the given input stream.
javax.sql.rowset.BaseRowSet.setAsciiStream,"Sets the designated parameter to the givenjava.io.InputStreamobject,  which will have the specified number of bytes."
javax.sql.rowset.BaseRowSet.setAsciiStream,Sets the designated parameter to the given input stream.
javax.sql.rowset.BaseRowSet.setAsciiStream,"Sets the designated parameter to the given input stream, which will have  the specified number of bytes."
javax.sql.rowset.BaseRowSet.setBigDecimal,Sets the designated parameter to the givenjava.lang.BigDecimalvalue.
javax.sql.rowset.BaseRowSet.setBigDecimal,Sets the designated parameter to the givenjava.math.BigDecimalvalue.
javax.sql.rowset.BaseRowSet.setBinaryStream,"Sets the designated parameter to the givenjava.io.InputStreamobject, which will have the specified number of bytes."
javax.sql.rowset.BaseRowSet.setBlob,Sets the designated parameter to aInputStreamobject.
javax.sql.rowset.BaseRowSet.setBlob,Sets the designated parameter to the givenBlobobject in  the Java programming language.
javax.sql.rowset.BaseRowSet.setBlob,Sets the designated parameter to the givenjava.sql.Blobobject.
javax.sql.rowset.BaseRowSet.setBoolean,Sets the designated parameter to the givenbooleanin the  Java programming language.
javax.sql.rowset.BaseRowSet.setBoolean,Sets the designated parameter to the given Javabooleanvalue.
javax.sql.rowset.BaseRowSet.setByte,Sets the designated parameter to the givenbytein the Java  programming language.
javax.sql.rowset.BaseRowSet.setByte,Sets the designated parameter to the given Javabytevalue.
javax.sql.rowset.BaseRowSet.setBytes,Sets the designated parameter to the given array of bytes.
javax.sql.rowset.BaseRowSet.setBytes,Sets the designated parameter to the given Java array of bytes.
javax.sql.rowset.BaseRowSet.setCharacterStream,Sets the designated parameter in thisRowSetobject's command  to the givenReaderobject.
javax.sql.rowset.BaseRowSet.setCharacterStream,"Sets the designated parameter to the givenjava.io.Readerobject, which will have the specified number of characters."
javax.sql.rowset.BaseRowSet.setCharacterStream,Sets the designated parameter to the givenReaderobject.
javax.sql.rowset.BaseRowSet.setCharacterStream,"Sets the designated parameter to the givenReaderobject, which is the given number of characters long."
javax.sql.rowset.BaseRowSet.setClob,Sets the designated parameter to aReaderobject.
javax.sql.rowset.BaseRowSet.setClob,Sets the designated parameter to the givenClobobject in  the Java programming language.
javax.sql.rowset.BaseRowSet.setClob,Sets the designated parameter to the givenjava.sql.Clobobject.
javax.sql.rowset.BaseRowSet.setCommand,"Sets thisRowSetobject'scommandproperty to  the givenStringobject and clears the parameters, if any,  that were set for the previous command."
javax.sql.rowset.BaseRowSet.setConcurrency,Sets the concurrency for thisRowSetobject to  the specified concurrency.
javax.sql.rowset.BaseRowSet.setDataSourceName,Sets theDataSourcename property for thisRowSetobject to the given logical name and sets thisRowSetobject's  Url property tonull.
javax.sql.rowset.BaseRowSet.setDate,Sets the designated parameter to the givenjava.sql.Datevalue.
javax.sql.rowset.BaseRowSet.setDate,Sets the designated parameter to the givenjava.sql.Dateobject.
javax.sql.rowset.BaseRowSet.setDate,Sets the designated parameter to the givenjava.sql.Datevalue  using the default time zone of the virtual machine that is running  the application.
javax.sql.rowset.BaseRowSet.setDate,"Sets the designated parameter to the givenjava.sql.Datevalue,  using the givenCalendarobject."
javax.sql.rowset.BaseRowSet.setDouble,Sets the designated parameter to the givendoublein the  Java programming language.
javax.sql.rowset.BaseRowSet.setDouble,Sets the designated parameter to the given Javadoublevalue.
javax.sql.rowset.BaseRowSet.setEscapeProcessing,Sets to the givenbooleanwhether or not the driver will  scan for escape syntax and do escape substitution before sending SQL  statements to the database.
javax.sql.rowset.BaseRowSet.setFetchDirection,Gives the driver a performance hint as to the direction in  which the rows in thisRowSetobject will be  processed.
javax.sql.rowset.BaseRowSet.setFetchSize,Sets the fetch size for thisRowSetobject to the given number of  rows.
javax.sql.rowset.BaseRowSet.setFloat,Sets the designated parameter to the givenfloatin the  Java programming language.
javax.sql.rowset.BaseRowSet.setFloat,Sets the designated parameter to the given Javafloatvalue.
javax.sql.rowset.BaseRowSet.setInt,Sets the designated parameter to anintin the Java  programming language.
javax.sql.rowset.BaseRowSet.setInt,Sets the designated parameter to the given Javaintvalue.
javax.sql.rowset.BaseRowSet.setLong,Sets the designated parameter to the givenlongin the Java  programming language.
javax.sql.rowset.BaseRowSet.setLong,Sets the designated parameter to the given Javalongvalue.
javax.sql.rowset.BaseRowSet.setMaxFieldSize,Sets the maximum number of bytes that can be used for a column  value in thisRowSetobject to the given number.
javax.sql.rowset.BaseRowSet.setMaxRows,Sets the maximum number of rows that thisRowSetobject may contain to  the given number.
javax.sql.rowset.BaseRowSet.setNCharacterStream,Sets the designated parameter in thisRowSetobject's command  to aReaderobject.
javax.sql.rowset.BaseRowSet.setNClob,Sets the designated parameter to ajava.sql.NClobobject.
javax.sql.rowset.BaseRowSet.setNString,Sets the designated parameter to the givenStringobject.
javax.sql.rowset.BaseRowSet.setNull,Sets the designated parameter to SQLNULL.
javax.sql.rowset.BaseRowSet.setObject,Sets the designated parameter to anObjectin the Java  programming language.
javax.sql.rowset.BaseRowSet.setObject,Sets the value of the designated parameter with the givenObjectvalue.
javax.sql.rowset.BaseRowSet.setObject,Sets the value of the designated parameter with the given object.
javax.sql.rowset.BaseRowSet.setPassword,Sets the password used to create a database connection for thisRowSetobject to the givenStringobject.
javax.sql.rowset.BaseRowSet.setQueryTimeout,Sets to the given number the maximum number of seconds the driver will  wait for a query to execute.
javax.sql.rowset.BaseRowSet.setReadOnly,Sets thisRowSetobject's readOnly  property to the givenboolean.
javax.sql.rowset.BaseRowSet.setRef,Sets the designated parameter to the givenRefobject in  the Java programming language.
javax.sql.rowset.BaseRowSet.setRowId,Sets the designated parameter to the givenjava.sql.RowIdobject.
javax.sql.rowset.BaseRowSet.setShort,Sets the designated parameter to the givenshortin the  Java programming language.
javax.sql.rowset.BaseRowSet.setShort,Sets the designated parameter to the given Javashortvalue.
javax.sql.rowset.BaseRowSet.setShowDeleted,"Sets the propertyshowDeletedto the givenbooleanvalue, which determines whether  rows marked for deletion appear in the set of current rows."
javax.sql.rowset.BaseRowSet.setSQLXML,Sets the designated parameter to the givenjava.sql.SQLXMLobject.
javax.sql.rowset.BaseRowSet.setString,Sets the designated parameter to the givenStringvalue.
javax.sql.rowset.BaseRowSet.setString,Sets the designated parameter to the given JavaStringvalue.
javax.sql.rowset.BaseRowSet.setTime,Sets the designated parameter to the givenjava.sql.Timevalue.
javax.sql.rowset.BaseRowSet.setTime,Sets the designated parameter to the givenjava.sql.Timeobject.
javax.sql.rowset.BaseRowSet.setTime,"Sets the designated parameter to the givenjava.sql.Timevalue,  using the givenCalendarobject."
javax.sql.rowset.BaseRowSet.setTimestamp,Sets the designated parameter to the givenjava.sql.Timestampvalue.
javax.sql.rowset.BaseRowSet.setTimestamp,Sets the designated parameter to the givenjava.sql.Timestampobject.
javax.sql.rowset.BaseRowSet.setTimestamp,"Sets the designated parameter to the givenjava.sql.Timestampvalue,  using the givenCalendarobject."
javax.sql.rowset.BaseRowSet.setTransactionIsolation,Sets the transaction isolation property for this JDBCRowSetobject to the given  constant.
javax.sql.rowset.BaseRowSet.setType,Sets the type for thisRowSetobject to the specified type.
javax.sql.rowset.BaseRowSet.setTypeMap,Installs the givenjava.util.Mapobject as the type map  associated with theConnectionobject for thisRowSetobject.
javax.sql.rowset.BaseRowSet.setUnicodeStream,Deprecated.getCharacterStream should be used in its place
javax.sql.rowset.BaseRowSet.setUrl,Sets the Url property for thisRowSetobject  to the givenStringobject and sets the dataSource name  property tonull.
javax.sql.rowset.BaseRowSet.setURL,Sets the designated parameter to the givenjava.net.URLvalue.
javax.sql.rowset.BaseRowSet.setUsername,Sets the username property for thisRowSetobject  to the given user name.
javax.sql.rowset.RowSetMetaDataImpl.getCatalogName,Retrieves the catalog name of the table from which the value  in the designated column was derived.
javax.sql.rowset.RowSetMetaDataImpl.getColumnClassName,Retrieves the fully-qualified name of the class in the Java  programming language to which a value in the designated column  will be mapped.
javax.sql.rowset.RowSetMetaDataImpl.getColumnCount,Retrieves the number of columns in theRowSetobject  for which thisRowSetMetaDataImplobject was created.
javax.sql.rowset.RowSetMetaDataImpl.getColumnDisplaySize,Retrieves the normal maximum width in chars of the designated column.
javax.sql.rowset.RowSetMetaDataImpl.getColumnLabel,Retrieves the suggested column title for the designated  column for use in printouts and displays.
javax.sql.rowset.RowSetMetaDataImpl.getColumnName,Retrieves the name of the designated column.
javax.sql.rowset.RowSetMetaDataImpl.getColumnType,Retrieves the type code (one of thejava.sql.Typesconstants) for the SQL type of the value stored in the  designated column.
javax.sql.rowset.RowSetMetaDataImpl.getColumnTypeName,Retrieves the DBMS-specific type name for values stored in the  designated column.
javax.sql.rowset.RowSetMetaDataImpl.getPrecision,Retrieves the total number of digits for values stored in  the designated column.
javax.sql.rowset.RowSetMetaDataImpl.getScale,Retrieves the number of digits to the right of the decimal point  for values stored in the designated column.
javax.sql.rowset.RowSetMetaDataImpl.getSchemaName,Retrieves the schema name of the table from which the value  in the designated column was derived.
javax.sql.rowset.RowSetMetaDataImpl.getTableName,Retrieves the name of the table from which the value  in the designated column was derived.
javax.sql.rowset.RowSetMetaDataImpl.isAutoIncrement,"Retrieves whether a value stored in the designated column is  automatically numbered, and thus readonly."
javax.sql.rowset.RowSetMetaDataImpl.isCaseSensitive,Indicates whether the case of the designated column's name  matters.
javax.sql.rowset.RowSetMetaDataImpl.isCurrency,Indicates whether a value stored in the designated column  is a cash value.
javax.sql.rowset.RowSetMetaDataImpl.isDefinitelyWritable,Indicates whether a write operation on the designated column  will definitely succeed.
javax.sql.rowset.RowSetMetaDataImpl.isNullable,Retrieves a constant indicating whether it is possible  to store aNULLvalue in the designated column.
javax.sql.rowset.RowSetMetaDataImpl.isReadOnly,"Indicates whether the designated column is definitely  not writable, thus readonly."
javax.sql.rowset.RowSetMetaDataImpl.isSearchable,Indicates whether a value stored in the designated column  can be used in aWHEREclause.
javax.sql.rowset.RowSetMetaDataImpl.isSigned,Indicates whether a value stored in the designated column is  a signed number.
javax.sql.rowset.RowSetMetaDataImpl.isWrapperFor,Returns true if this either implements the interface argument or is directly or indirectly a wrapper  for an object that does.
javax.sql.rowset.RowSetMetaDataImpl.isWritable,Indicates whether it is possible for a write operation on  the designated column to succeed.
javax.sql.rowset.RowSetMetaDataImpl.setAutoIncrement,"Sets whether the designated column is automatically  numbered, thus read-only, to the givenbooleanvalue."
javax.sql.rowset.RowSetMetaDataImpl.setCaseSensitive,Sets whether the name of the designated column is case sensitive to  the givenboolean.
javax.sql.rowset.RowSetMetaDataImpl.setCatalogName,Sets the catalog name of the table from which the designated  column was derived tocatalogName.
javax.sql.rowset.RowSetMetaDataImpl.setColumnCount,Sets to the given number the number of columns in theRowSetobject for which thisRowSetMetaDataImplobject was created.
javax.sql.rowset.RowSetMetaDataImpl.setColumnDisplaySize,Sets the normal maximum number of chars in the designated column  to the given number.
javax.sql.rowset.RowSetMetaDataImpl.setColumnLabel,"Sets the suggested column label for use in printouts and  displays, if any, tolabel."
javax.sql.rowset.RowSetMetaDataImpl.setColumnName,Sets the column name of the designated column to the given name.
javax.sql.rowset.RowSetMetaDataImpl.setColumnType,Sets the SQL type code for values stored in the designated column  to the given type code from the classjava.sql.Types.
javax.sql.rowset.RowSetMetaDataImpl.setColumnTypeName,Sets the type name used by the data source for values stored in the  designated column to the given type name.
javax.sql.rowset.RowSetMetaDataImpl.setCurrency,Sets whether a value stored in the designated column is a cash  value to the givenboolean.
javax.sql.rowset.RowSetMetaDataImpl.setNullable,Sets whether a value stored in the designated column can be set  toNULLto the given constant from the interfaceResultSetMetaData.
javax.sql.rowset.RowSetMetaDataImpl.setPrecision,Sets the total number of decimal digits in a value stored in the  designated column to the given number.
javax.sql.rowset.RowSetMetaDataImpl.setScale,Sets the number of digits to the right of the decimal point in a value  stored in the designated column to the given number.
javax.sql.rowset.RowSetMetaDataImpl.setSchemaName,"Sets the designated column's table's schema name, if any, toschemaName."
javax.sql.rowset.RowSetMetaDataImpl.setSearchable,Sets whether a value stored in the designated column can be used  in aWHEREclause to the givenbooleanvalue.
javax.sql.rowset.RowSetMetaDataImpl.setSigned,Sets whether a value stored in the designated column is a signed  number to the givenboolean.
javax.sql.rowset.RowSetMetaDataImpl.setTableName,Sets the name of the table from which the designated column  was derived to the given table name.
javax.sql.rowset.RowSetMetaDataImpl.unwrap,"Returns an object that implements the given interface to allow access to non-standard methods,  or standard methods not exposed by the proxy."
javax.sql.rowset.RowSetProvider.newFactory,Creates a new instance of aRowSetFactoryimplementation.
javax.sql.rowset.RowSetProvider.newFactory,Creates  a new instance of aRowSetFactoryfrom the  specified factory class name.
javax.sql.rowset.RowSetWarning.getNextWarning,Retrieves the warning chained to thisRowSetWarningobject.
javax.sql.rowset.RowSetWarning.setNextWarning,"Setswarningas the next warning, that is, the warning chained  to thisRowSetWarningobject."
javax.sql.rowset.serial.SerialArray.clone,Returns a clone of thisSerialArray.
javax.sql.rowset.serial.SerialArray.equals,Compares this SerialArray to the specified object.
javax.sql.rowset.serial.SerialArray.free,This method frees theSerialArrayobject and releases the  resources that it holds.
javax.sql.rowset.serial.SerialArray.getArray,Returns a new array that is a copy of thisSerialArrayobject.
javax.sql.rowset.serial.SerialArray.getArray,"Returns a new array that is a copy of a slice  of thisSerialArrayobject, starting with the  element at the given index and containing the given number  of consecutive elements."
javax.sql.rowset.serial.SerialArray.getArray,"Returns a new array that is a copy of thisSerialArrayobject, using the given type map for the custom  mapping of each element when the elements are SQL UDTs."
javax.sql.rowset.serial.SerialArray.getBaseType,Retrieves the SQL type of the elements in thisSerialArrayobject.
javax.sql.rowset.serial.SerialArray.getBaseTypeName,Retrieves the DBMS-specific type name for the elements in thisSerialArrayobject.
javax.sql.rowset.serial.SerialArray.getResultSet,Retrieves aResultSetobject that contains all of  the elements in theARRAYvalue that thisSerialArrayobject represents.
javax.sql.rowset.serial.SerialArray.getResultSet,Retrieves aResultSetobject holding the elements of  the subarray that starts at  indexindexand contains up tocountsuccessive elements.
javax.sql.rowset.serial.SerialArray.getResultSet,"Retrieves a result set holding the elements of the subarray that starts at  Retrieves aResultSetobject that contains a subarray of the  elements in thisSerialArrayobject, starting at  indexindexand containing up tocountsuccessive  elements."
javax.sql.rowset.serial.SerialArray.getResultSet,Retrieves aResultSetobject that contains all of  the elements of the SQLARRAYvalue represented by thisSerialArrayobject.
javax.sql.rowset.serial.SerialArray.hashCode,Returns a hash code for this SerialArray.
javax.sql.rowset.serial.SerialBlob.clone,Returns a clone of thisSerialBlob.
javax.sql.rowset.serial.SerialBlob.equals,Compares this SerialBlob to the specified object.
javax.sql.rowset.serial.SerialBlob.free,This method frees theSerialBlobobject and releases the  resources that it holds.
javax.sql.rowset.serial.SerialBlob.getBinaryStream,Returns thisSerialBlobobject as an input stream.
javax.sql.rowset.serial.SerialBlob.getBinaryStream,"Returns anInputStreamobject that contains a partialBlobvalue, starting with the byte specified by pos, which is  length bytes in length."
javax.sql.rowset.serial.SerialBlob.getBytes,"Copies the specified number of bytes, starting at the given  position, from thisSerialBlobobject to  another array of bytes."
javax.sql.rowset.serial.SerialBlob.hashCode,Returns a hash code for thisSerialBlob.
javax.sql.rowset.serial.SerialBlob.length,Retrieves the number of bytes in thisSerialBlobobject's array of bytes.
javax.sql.rowset.serial.SerialBlob.position,"Returns the position in thisSerialBlobobject where  the given pattern of bytes begins, starting the search at the  specified position."
javax.sql.rowset.serial.SerialBlob.position,"Returns the position in thisSerialBlobobject where  the givenBlobobject begins, starting the search at the  specified position."
javax.sql.rowset.serial.SerialBlob.setBinaryStream,Retrieves a stream that can be used to write to theBLOBvalue that thisBlobobject represents.
javax.sql.rowset.serial.SerialBlob.setBytes,"Writes the given array of bytes to theBLOBvalue that  thisBlobobject represents, starting at positionpos, and returns the number of bytes written."
javax.sql.rowset.serial.SerialBlob.setBytes,Writes all or part of the givenbytearray to theBLOBvalue that thisBlobobject represents  and returns the number of bytes written.
javax.sql.rowset.serial.SerialBlob.truncate,Truncates theBLOBvalue that thisBlobobject represents to belenbytes in length.
javax.sql.rowset.serial.SerialClob.clone,Returns a clone of thisSerialClob.
javax.sql.rowset.serial.SerialClob.equals,Compares this SerialClob to the specified object.
javax.sql.rowset.serial.SerialClob.free,This method frees theSerialClobobject and releases the  resources that it holds.
javax.sql.rowset.serial.SerialClob.getAsciiStream,Retrieves theCLOBvalue designated by thisSerialClobobject as an ascii stream.
javax.sql.rowset.serial.SerialClob.getCharacterStream,Returns thisSerialClobobject's data as a stream  of Unicode characters.
javax.sql.rowset.serial.SerialClob.getCharacterStream,"Returns aReaderobject that contains a partialSerialClobvalue, starting  with the character specified by pos, which is length characters in length."
javax.sql.rowset.serial.SerialClob.getSubString,"Returns a copy of the substring contained in thisSerialClobobject, starting at the given position  and continuing for the specified number or characters."
javax.sql.rowset.serial.SerialClob.hashCode,Returns a hash code for thisSerialClob.
javax.sql.rowset.serial.SerialClob.length,Retrieves the number of characters in thisSerialClobobject's array of characters.
javax.sql.rowset.serial.SerialClob.position,"Returns the position in thisSerialClobobject  where the givenStringobject begins, starting  the search at the specified position."
javax.sql.rowset.serial.SerialClob.position,"Returns the position in thisSerialClobobject  where the givenClobsignature begins, starting  the search at the specified position."
javax.sql.rowset.serial.SerialClob.setAsciiStream,"Retrieves a stream to be used to write Ascii characters to theCLOBvalue that thisSerialClobobject represents,  starting at positionpos."
javax.sql.rowset.serial.SerialClob.setCharacterStream,"Retrieves a stream to be used to write a stream of Unicode characters  to theCLOBvalue that thisSerialClobobject  represents, at positionpos."
javax.sql.rowset.serial.SerialClob.setString,"Writes the given JavaStringto theCLOBvalue that thisSerialClobobject represents, at the positionpos."
javax.sql.rowset.serial.SerialClob.setString,"Writeslencharacters ofstr, starting  at characteroffset, to theCLOBvalue  that thisClobrepresents."
javax.sql.rowset.serial.SerialClob.truncate,Truncates theCLOBvalue that thisSerialClobobject represents so that it has a length oflencharacters.
javax.sql.rowset.serial.SerialDatalink.clone,Returns a clone of thisSerialDatalink.
javax.sql.rowset.serial.SerialDatalink.equals,Compares thisSerialDatalinkto the specified object.
javax.sql.rowset.serial.SerialDatalink.getDatalink,Returns a new URL that is a copy of thisSerialDatalinkobject.
javax.sql.rowset.serial.SerialDatalink.hashCode,Returns a hash code for thisSerialDatalink.
javax.sql.rowset.serial.SerialJavaObject.clone,Returns a clone of thisSerialJavaObject.
javax.sql.rowset.serial.SerialJavaObject.equals,Compares this SerialJavaObject to the specified object.
javax.sql.rowset.serial.SerialJavaObject.getFields,Returns an array ofFieldobjects that contains each  field of the object that this helper class is serializing.
javax.sql.rowset.serial.SerialJavaObject.getObject,Returns anObjectthat is a copy of thisSerialJavaObjectobject.
javax.sql.rowset.serial.SerialJavaObject.hashCode,Returns a hash code for this SerialJavaObject.
javax.sql.rowset.serial.SerialRef.clone,Returns a clone of thisSerialRef.
javax.sql.rowset.serial.SerialRef.equals,Compares this SerialRef to the specified object.
javax.sql.rowset.serial.SerialRef.getBaseTypeName,Returns a string describing the base type name of theRef.
javax.sql.rowset.serial.SerialRef.getObject,Returns anObjectrepresenting the SQL structured type  to which thisSerialRefobject refers.
javax.sql.rowset.serial.SerialRef.hashCode,Returns a hash code for thisSerialRef.
javax.sql.rowset.serial.SerialRef.setObject,Sets the SQL structured type that thisSerialRefobject  references to the givenObjectobject.
javax.sql.rowset.serial.SerialStruct.clone,Returns a clone of thisSerialStruct.
javax.sql.rowset.serial.SerialStruct.equals,Compares this SerialStruct to the specified object.
javax.sql.rowset.serial.SerialStruct.getAttributes,Retrieves an array ofObjectvalues containing the  attributes of the SQL structured type that thisSerialStructobject represents.
javax.sql.rowset.serial.SerialStruct.getAttributes,"Retrieves the attributes for the SQL structured type that  thisSerialStructrepresents as an array ofObjectvalues, using the given type map for  custom mapping if appropriate."
javax.sql.rowset.serial.SerialStruct.getSQLTypeName,Retrieves the SQL type name for thisSerialStructobject.
javax.sql.rowset.serial.SerialStruct.hashCode,Returns a hash code for thisSerialStruct.
javax.sql.rowset.serial.SQLInputImpl.readArray,Reads an SQLARRAYvalue from the stream and  returns it as anArrayobject in the Java programming  language.
javax.sql.rowset.serial.SQLInputImpl.readAsciiStream,Returns the next attribute in thisSQLInputImplobject  as a stream of ASCII characters.
javax.sql.rowset.serial.SQLInputImpl.readBigDecimal,Retrieves the next attribute in thisSQLInputImplobject  as ajava.math.BigDecimal.
javax.sql.rowset.serial.SQLInputImpl.readBinaryStream,Returns the next attribute in thisSQLInputImplobject  as a stream of uninterpreted bytes.
javax.sql.rowset.serial.SQLInputImpl.readBlob,Retrieves theBLOBvalue at the head of thisSQLInputImplobject as aBlobobject  in the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readBoolean,Retrieves the next attribute in thisSQLInputImplobject as  abooleanin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readByte,Retrieves the next attribute in thisSQLInputImplobject as  abytein the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readBytes,Retrieves the next attribute in thisSQLInputImplobject  as an array of bytes.
javax.sql.rowset.serial.SQLInputImpl.readCharacterStream,Retrieves the next attribute in thisSQLInputImplobject  as a stream of Unicode characters.
javax.sql.rowset.serial.SQLInputImpl.readClob,Retrieves theCLOBvalue at the head of thisSQLInputImplobject as aClobobject  in the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readDate,Retrieves the next attribute in thisSQLInputImplas  ajava.sql.Dateobject.
javax.sql.rowset.serial.SQLInputImpl.readDouble,Retrieves the next attribute in thisSQLInputImplobject  as adoublein the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readFloat,Retrieves the next attribute in thisSQLInputImplobject  as afloatin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readInt,Retrieves the next attribute in thisSQLInputImplobject  as anintin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readLong,Retrieves the next attribute in thisSQLInputImplobject  as alongin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readNClob,Reads an SQLNCLOBvalue from the stream and returns it as aClobobject in the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readNString,Reads the next attribute in the stream and returns it as aStringin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readObject,Retrieves the value at the head of thisSQLInputImplobject as anObjectin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readRef,Retrieves the value at the head of thisSQLInputImplobject  as aRefobject in the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readRowId,Reads an SQLROWIDvalue from the stream and returns it as aRowIdobject in the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readShort,Retrieves the next attribute in thisSQLInputImplobject  as ashortin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readSQLXML,Reads an SQLXMLvalue from the stream and returns it as aSQLXMLobject in the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readString,Retrieves the next attribute in thisSQLInputImplobject as  aStringin the Java programming language.
javax.sql.rowset.serial.SQLInputImpl.readTime,Retrieves the next attribute in thisSQLInputImplobject as  ajava.sql.Timeobject.
javax.sql.rowset.serial.SQLInputImpl.readTimestamp,Retrieves the next attribute in thisSQLInputImplobject as  ajava.sql.Timestampobject.
javax.sql.rowset.serial.SQLInputImpl.readURL,Reads an SQLDATALINKvalue from the stream and  returns it as anURLobject in the Java programming  language.
javax.sql.rowset.serial.SQLInputImpl.wasNull,Ascertains whether the last value read from thisSQLInputImplobject wasnull.
javax.sql.rowset.serial.SQLOutputImpl.writeArray,Writes anArrayobject in the Java  programming language to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeAsciiStream,Writes a stream of ASCII characters to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeBigDecimal,Writes ajava.math.BigDecimalobject in the Java programming  language to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeBinaryStream,Writes a stream of uninterpreted bytes to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeBlob,Writes aBlobobject in the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeBoolean,Writes abooleanin the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeByte,Writes abytein the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeBytes,Writes an array ofbytesin the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeCharacterStream,Writes a stream of Unicode characters to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeClob,Writes aClobobject in the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeDate,Writes ajava.sql.Dateobject in the Java programming  language to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeDouble,Writes adoublein the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeFloat,Writes afloatin the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeInt,Writes anintin the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeLong,Writes alongin the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeNClob,Writes an SQLNCLOBvalue to the stream.
javax.sql.rowset.serial.SQLOutputImpl.writeNString,Writes the next attribute to the stream as aStringin the Java programming language.
javax.sql.rowset.serial.SQLOutputImpl.writeObject,Writes to the stream the data contained in the givenSQLDataobject.
javax.sql.rowset.serial.SQLOutputImpl.writeRef,Writes aRefobject in the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeRowId,Writes an SQLROWIDvalue to the stream.
javax.sql.rowset.serial.SQLOutputImpl.writeShort,Writes ashortin the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeSQLXML,Writes an SQLXMLvalue to the stream.
javax.sql.rowset.serial.SQLOutputImpl.writeString,Writes aStringin the Java programming language  to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeStruct,Writes aStructobject in the Java  programming language to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeTime,Writes ajava.sql.Timeobject in the Java programming  language to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeTimestamp,Writes ajava.sql.Timestampobject in the Java programming  language to thisSQLOutputImplobject.
javax.sql.rowset.serial.SQLOutputImpl.writeURL,Writes anjava.sql.Type.DATALINKobject in the Java  programming language to thisSQLOutputImplobject.
javax.sql.rowset.spi.SyncFactory.getInstance,Returns theSyncProviderinstance identified byproviderID.
javax.sql.rowset.spi.SyncFactory.getLogger,Returns the logging object for applications to retrieve  synchronization events posted by SyncProvider implementations.
javax.sql.rowset.spi.SyncFactory.getRegisteredProviders,Returns an Enumeration of currently registered synchronization  providers.
javax.sql.rowset.spi.SyncFactory.getSyncFactory,Returns theSyncFactorysingleton.
javax.sql.rowset.spi.SyncFactory.registerProvider,Adds the given synchronization provider to the factory register.
javax.sql.rowset.spi.SyncFactory.setJNDIContext,Sets the initial JNDI context from which SyncProvider implementations  can be retrieved from a JNDI namespace
javax.sql.rowset.spi.SyncFactory.setLogger,Sets the logging object to be used by theSyncProviderimplementation provided by theSyncFactory.
javax.sql.rowset.spi.SyncFactory.setLogger,Sets the logging object that is used bySyncProviderimplementations provided by theSyncFactorySPI.
javax.sql.rowset.spi.SyncFactory.unregisterProvider,Removes the designated currently registered synchronization provider from the  Factory SPI register.
javax.sql.rowset.spi.SyncProvider.getDataSourceLock,Returns the current data source lock severity level active in thisSyncProviderimplementation.
javax.sql.rowset.spi.SyncProvider.getProviderGrade,Returns a constant indicating the  grade of synchronization aRowSetobject can expect from  thisSyncProviderobject.
javax.sql.rowset.spi.SyncProvider.getProviderID,Returns the unique identifier for thisSyncProviderobject.
javax.sql.rowset.spi.SyncProvider.getRowSetReader,"Returns ajavax.sql.RowSetReaderobject, which can be used to  populate aRowSetobject with data."
javax.sql.rowset.spi.SyncProvider.getRowSetWriter,"Returns ajavax.sql.RowSetWriterobject, which can be  used to write aRowSetobject's data back to the  underlying data source."
javax.sql.rowset.spi.SyncProvider.getVendor,Returns the vendor name of thisSyncProviderinstance
javax.sql.rowset.spi.SyncProvider.getVersion,Returns the release version of thisSyncProviderinstance.
javax.sql.rowset.spi.SyncProvider.setDataSourceLock,Sets a lock on the underlying data source at the level indicated bydatasource_lock.
javax.sql.rowset.spi.SyncProvider.supportsUpdatableView,Returns whether thisSyncProviderimplementation  can perform synchronization between aRowSetobject  and the SQLVIEWin the data source from which  theRowSetobject got its data.
javax.sql.rowset.spi.SyncProviderException.getSyncResolver,"Retrieves theSyncResolverobject that has been set for  thisSyncProviderExceptionobject, or  if none has been set, an instance of the defaultSyncResolverimplementation included in the reference implementation."
javax.sql.rowset.spi.SyncProviderException.setSyncResolver,Sets theSyncResolverobject for thisSyncProviderExceptionobject to the one supplied.
javax.xml.catalog.CatalogFeatures.build,Returns a CatalogFeatures object built by this builder.
javax.xml.catalog.CatalogFeatures.with,Sets the value to a specified Feature.
javax.xml.catalog.CatalogFeatures.defaultValue,Returns the default value of the property.
javax.xml.catalog.CatalogFeatures.getPropertyName,Returns the name of the corresponding System Property.
javax.xml.catalog.CatalogFeatures.builder,Returns an instance of the builder for creating the CatalogFeatures object.
javax.xml.catalog.CatalogFeatures.defaults,Returns a CatalogFeatures instance with default settings.
javax.xml.catalog.CatalogFeatures.get,Returns the value of the specified feature.
javax.xml.catalog.CatalogManager.catalog,Creates aCatalogobject using the specified feature settings and  uri(s) to one or more catalog files.
javax.xml.catalog.CatalogManager.catalogResolver,Creates an instance of aCatalogResolverusing the specified catalog.
javax.xml.catalog.CatalogManager.catalogResolver,Creates an instance of aCatalogResolverusing the specified feature  settings and uri(s) to one or more catalog files.
javax.xml.datatype.DatatypeConstants.getId,Get id of this Field.
javax.xml.datatype.DatatypeConstants.toString,Returns a field name in English.
javax.xml.datatype.DatatypeFactory.newDefaultInstance,Creates a new instance of theDatatypeFactorybuiltin system-default  implementation.
javax.xml.datatype.DatatypeFactory.newDuration,"Obtain a new instance of aDurationspecifying theDurationas isPositive, years, months, days, hours, minutes, seconds."
javax.xml.datatype.DatatypeFactory.newDuration,Obtain a new instance of aDurationspecifying theDurationas milliseconds.
javax.xml.datatype.DatatypeFactory.newDuration,"Obtain a new instance of aDurationspecifying theDurationas its string representation, ""PnYnMnDTnHnMnS"",  as defined in XML Schema 1.0 section 3.2.6.1."
javax.xml.datatype.DatatypeFactory.newDurationDayTime,"Create aDurationof typexdt:dayTimeDurationusing the specifiedday,hour,minuteandsecondas defined inXQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration."
javax.xml.datatype.DatatypeFactory.newDurationDayTime,"Create aDurationof typexdt:dayTimeDurationusing the specified milliseconds as defined inXQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration."
javax.xml.datatype.DatatypeFactory.newDurationDayTime,"Create aDurationof typexdt:dayTimeDurationby parsing itsStringrepresentation,  ""PnDTnHnMnS"",XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration."
javax.xml.datatype.DatatypeFactory.newDurationYearMonth,"Create aDurationof typexdt:yearMonthDurationusing the specifiedyearandmonthas defined inXQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration."
javax.xml.datatype.DatatypeFactory.newDurationYearMonth,"Create aDurationof typexdt:yearMonthDurationusing the specified milliseconds as defined inXQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration."
javax.xml.datatype.DatatypeFactory.newDurationYearMonth,"Create aDurationof typexdt:yearMonthDurationby parsing itsStringrepresentation,  ""PnYnM"",XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration."
javax.xml.datatype.DatatypeFactory.newInstance,Obtain a new instance of aDatatypeFactory.
javax.xml.datatype.DatatypeFactory.newInstance,Obtain a new instance of aDatatypeFactoryfrom class name.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar,Create a new instance of anXMLGregorianCalendar.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar,Constructor of value spaces that ajava.util.GregorianCalendarinstance would need to convert to anXMLGregorianCalendarinstance.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar,Create a new XMLGregorianCalendar by parsing the String as a lexical representation.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar,Constructor allowing for complete value spaces allowed by  W3C XML Schema 1.0 recommendation for xsd:dateTime and related  builtin datatypes.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar,Create anXMLGregorianCalendarfrom aGregorianCalendar.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarDate,Create a Java representation of XML Schema builtin datatypedateorg*.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime,Create a Java instance of XML Schema builtin datatypetime.
javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime,Create a Java instance of XML Schema builtin datatype time.
javax.xml.datatype.Duration.add,Computes a new duration whose value isthis+rhs.
javax.xml.datatype.Duration.addTo,Adds this duration to aCalendarobject.
javax.xml.datatype.Duration.addTo,Adds this duration to aDateobject.
javax.xml.datatype.Duration.compare,Partial order relation comparison with thisDurationinstance.
javax.xml.datatype.Duration.equals,Checks if this duration object has the same duration  as anotherDurationobject.
javax.xml.datatype.Duration.getDays,"Obtains the value of the DAYS field as an integer value,  or 0 if not present."
javax.xml.datatype.Duration.getField,Gets the value of a field.
javax.xml.datatype.Duration.getHours,"Obtains the value of the HOURS field as an integer value,  or 0 if not present."
javax.xml.datatype.Duration.getMinutes,"Obtains the value of the MINUTES field as an integer value,  or 0 if not present."
javax.xml.datatype.Duration.getMonths,"Obtains the value of the MONTHS field as an integer value,  or 0 if not present."
javax.xml.datatype.Duration.getSeconds,"Obtains the value of the SECONDS field as an integer value,  or 0 if not present."
javax.xml.datatype.Duration.getSign,"Returns the sign of this duration in -1,0, or 1."
javax.xml.datatype.Duration.getTimeInMillis,Returns the length of the duration in milli-seconds.
javax.xml.datatype.Duration.getXMLSchemaType,Return the name of the XML Schema date/time type that this instance  maps to.
javax.xml.datatype.Duration.getYears,Get the years value of thisDurationas anintor0if not present.
javax.xml.datatype.Duration.hashCode,Returns a hash code consistent with the definition of the equals method.
javax.xml.datatype.Duration.isLongerThan,Checks if this duration object is strictly longer than  anotherDurationobject.
javax.xml.datatype.Duration.isSet,Checks if a field is set.
javax.xml.datatype.Duration.isShorterThan,Checks if this duration object is strictly shorter than  anotherDurationobject.
javax.xml.datatype.Duration.multiply,Computes a new duration whose value isfactortimes  longer than the value of this duration.
javax.xml.datatype.Duration.negate,Returns a newDurationobject whose  value is-this.
javax.xml.datatype.Duration.normalizeWith,Converts the years and months fields into the days field  by using a specific time instant as the reference point.
javax.xml.datatype.Duration.subtract,Computes a new duration whose value isthis-rhs.
javax.xml.datatype.Duration.toString,Returns aStringrepresentation of thisDuration Object.
javax.xml.datatype.XMLGregorianCalendar.add,Adddurationto this instance.
javax.xml.datatype.XMLGregorianCalendar.clear,Unset all fields to undefined.
javax.xml.datatype.XMLGregorianCalendar.compare,"Compare two instances of W3C XML Schema 1.0 date/time datatypes  according to partial order relation defined inW3C XML Schema 1.0 Part 2, Section 3.2.7.3,Order relation on dateTime."
javax.xml.datatype.XMLGregorianCalendar.equals,Compares this calendar to the specified object.
javax.xml.datatype.XMLGregorianCalendar.getDay,Returns the day of month orDatatypeConstants.FIELD_UNDEFINED.
javax.xml.datatype.XMLGregorianCalendar.getEon,Returns the high order component for XML Schema 1.0 dateTime datatype field foryear.
javax.xml.datatype.XMLGregorianCalendar.getEonAndYear,Returns the XML Schema 1.0 dateTime datatype field foryear.
javax.xml.datatype.XMLGregorianCalendar.getFractionalSecond,Returns fractional seconds.
javax.xml.datatype.XMLGregorianCalendar.getHour,Returns the hour of day orDatatypeConstants.FIELD_UNDEFINEDif this field is not defined.
javax.xml.datatype.XMLGregorianCalendar.getMillisecond,Returns the millisecond precision ofgetFractionalSecond().
javax.xml.datatype.XMLGregorianCalendar.getMinute,Returns the minute of hour orDatatypeConstants.FIELD_UNDEFINEDif this field is not defined.
javax.xml.datatype.XMLGregorianCalendar.getMonth,Returns the month of this calendar orDatatypeConstants.FIELD_UNDEFINED.
javax.xml.datatype.XMLGregorianCalendar.getSecond,Returns the second of minute orDatatypeConstants.FIELD_UNDEFINEDif this field is not defined.
javax.xml.datatype.XMLGregorianCalendar.getTimezone,Returns the Timezone offset in minutes orDatatypeConstants.FIELD_UNDEFINEDif this optional field is not defined.
javax.xml.datatype.XMLGregorianCalendar.getTimeZone,Returns ajava.util.TimeZonefor this class.
javax.xml.datatype.XMLGregorianCalendar.getYear,Returns the low order component for XML Schema 1.0 dateTime datatype field foryearorDatatypeConstants.FIELD_UNDEFINED.
javax.xml.datatype.XMLGregorianCalendar.isValid,Validate instance bygetXMLSchemaType()constraints.
javax.xml.datatype.XMLGregorianCalendar.normalize,Normalize this instance to UTC.
javax.xml.datatype.XMLGregorianCalendar.reset,Reset thisXMLGregorianCalendarto its original values.
javax.xml.datatype.XMLGregorianCalendar.setDay,Set days in month.
javax.xml.datatype.XMLGregorianCalendar.setFractionalSecond,Set fractional seconds.
javax.xml.datatype.XMLGregorianCalendar.setHour,Set hours.
javax.xml.datatype.XMLGregorianCalendar.setMillisecond,Set milliseconds.
javax.xml.datatype.XMLGregorianCalendar.setMinute,Set minutes.
javax.xml.datatype.XMLGregorianCalendar.setMonth,Set month.
javax.xml.datatype.XMLGregorianCalendar.setSecond,Set seconds.
javax.xml.datatype.XMLGregorianCalendar.setTime,Set time as one unit.
javax.xml.datatype.XMLGregorianCalendar.setTime,"Set time as one unit, including optional milliseconds."
javax.xml.datatype.XMLGregorianCalendar.setTime,"Set time as one unit, including the optional infinite precision  fractional seconds."
javax.xml.datatype.XMLGregorianCalendar.setTimezone,Set the number of minutes in the timezone offset.
javax.xml.datatype.XMLGregorianCalendar.setYear,Set year of XSDdateTimeyear field.
javax.xml.datatype.XMLGregorianCalendar.setYear,Set low and high order component of XSDdateTimeyear field.
javax.xml.datatype.XMLGregorianCalendar.toGregorianCalendar,Convert thisXMLGregorianCalendarto aGregorianCalendar.
javax.xml.datatype.XMLGregorianCalendar.toGregorianCalendar,Convert thisXMLGregorianCalendaralong with provided parameters  to aGregorianCalendarinstance.
javax.xml.datatype.XMLGregorianCalendar.toString,Returns aStringrepresentation of thisXMLGregorianCalendarObject.
javax.xml.datatype.XMLGregorianCalendar.toXMLFormat,Return the lexical representation ofthisinstance.
javax.xml.namespace.QName.equals,Test thisQNamefor equality with anotherObject.
javax.xml.namespace.QName.getLocalPart,Get the local part of thisQName.
javax.xml.namespace.QName.getNamespaceURI,Get the Namespace URI of thisQName.
javax.xml.namespace.QName.getPrefix,Get the prefix of thisQName.
javax.xml.namespace.QName.hashCode,Generate the hash code for thisQName.
javax.xml.namespace.QName.toString,Stringrepresentation of thisQName.
javax.xml.namespace.QName.valueOf,QNamederived from parsing the formattedString.
javax.xml.parsers.DocumentBuilder.getDOMImplementation,Obtain an instance of aDOMImplementationobject.
javax.xml.parsers.DocumentBuilder.getSchema,Get a reference to the theSchemabeing used by  the XML processor.
javax.xml.parsers.DocumentBuilder.isNamespaceAware,Indicates whether or not this parser is configured to  understand namespaces.
javax.xml.parsers.DocumentBuilder.isValidating,Indicates whether or not this parser is configured to  validate XML documents.
javax.xml.parsers.DocumentBuilder.isXIncludeAware,Get the XInclude processing mode for this parser.
javax.xml.parsers.DocumentBuilder.newDocument,Obtain a new instance of a DOMDocumentobject  to build a DOM tree with.
javax.xml.parsers.DocumentBuilder.parse,Parse the content of the given file as an XML document  and return a new DOMDocumentobject.
javax.xml.parsers.DocumentBuilder.parse,Parse the content of the givenInputStreamas an XML  document and return a new DOMDocumentobject.
javax.xml.parsers.DocumentBuilder.parse,Parse the content of the givenInputStreamas an  XML document and return a new DOMDocumentobject.
javax.xml.parsers.DocumentBuilder.parse,Parse the content of the given URI as an XML document  and return a new DOMDocumentobject.
javax.xml.parsers.DocumentBuilder.parse,Parse the content of the given input source as an XML document  and return a new DOMDocumentobject.
javax.xml.parsers.DocumentBuilder.reset,Reset thisDocumentBuilderto its original configuration.
javax.xml.parsers.DocumentBuilder.setEntityResolver,Specify theEntityResolverto be used to resolve  entities present in the XML document to be parsed.
javax.xml.parsers.DocumentBuilder.setErrorHandler,Specify theErrorHandlerto be used by the parser.
javax.xml.parsers.DocumentBuilderFactory.getAttribute,Allows the user to retrieve specific attributes on the underlying  implementation.
javax.xml.parsers.DocumentBuilderFactory.getFeature,Get the state of the named feature.
javax.xml.parsers.DocumentBuilderFactory.getSchema,Gets theSchemaobject specified through  thesetSchema(Schema schema)method.
javax.xml.parsers.DocumentBuilderFactory.isCoalescing,Indicates whether or not the factory is configured to produce  parsers which converts CDATA nodes to Text nodes and appends it to  the adjacent (if any) Text node.
javax.xml.parsers.DocumentBuilderFactory.isExpandEntityReferences,Indicates whether or not the factory is configured to produce  parsers which expand entity reference nodes.
javax.xml.parsers.DocumentBuilderFactory.isIgnoringComments,Indicates whether or not the factory is configured to produce  parsers which ignores comments.
javax.xml.parsers.DocumentBuilderFactory.isIgnoringElementContentWhitespace,Indicates whether or not the factory is configured to produce  parsers which ignore ignorable whitespace in element content.
javax.xml.parsers.DocumentBuilderFactory.isNamespaceAware,Indicates whether or not the factory is configured to produce  parsers which are namespace aware.
javax.xml.parsers.DocumentBuilderFactory.isValidating,Indicates whether or not the factory is configured to produce  parsers which validate the XML content during parse.
javax.xml.parsers.DocumentBuilderFactory.isXIncludeAware,Get state of XInclude processing.
javax.xml.parsers.DocumentBuilderFactory.newDefaultInstance,Creates a new instance of theDocumentBuilderFactorybuiltin  system-default implementation.
javax.xml.parsers.DocumentBuilderFactory.newDefaultNSInstance,Creates a new NamespaceAware instance of theDocumentBuilderFactorybuiltin system-default implementation.
javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder,Creates a new instance of aDocumentBuilderusing the currently configured parameters.
javax.xml.parsers.DocumentBuilderFactory.newInstance,Obtains a new instance of aDocumentBuilderFactory.
javax.xml.parsers.DocumentBuilderFactory.newInstance,Obtain a new instance of aDocumentBuilderFactoryfrom class name.
javax.xml.parsers.DocumentBuilderFactory.newNSInstance,Creates a new NamespaceAware instance of aDocumentBuilderFactory.
javax.xml.parsers.DocumentBuilderFactory.newNSInstance,Creates a new NamespaceAware instance of aDocumentBuilderFactoryfrom the class name.
javax.xml.parsers.DocumentBuilderFactory.setAttribute,Allows the user to set specific attributes on the underlying  implementation.
javax.xml.parsers.DocumentBuilderFactory.setCoalescing,Specifies that the parser produced by this code will  convert CDATA nodes to Text nodes and append it to the  adjacent (if any) text node.
javax.xml.parsers.DocumentBuilderFactory.setExpandEntityReferences,Specifies that the parser produced by this code will  expand entity reference nodes.
javax.xml.parsers.DocumentBuilderFactory.setFeature,Set a feature for thisDocumentBuilderFactoryandDocumentBuilders created by this factory.
javax.xml.parsers.DocumentBuilderFactory.setIgnoringComments,Specifies that the parser produced by this code will  ignore comments.
javax.xml.parsers.DocumentBuilderFactory.setIgnoringElementContentWhitespace,Specifies that the parsers created by this  factory must eliminate  whitespace in element content (sometimes known loosely as  'ignorable whitespace') when parsing XML documents (see XML Rec  2.10).
javax.xml.parsers.DocumentBuilderFactory.setNamespaceAware,Specifies that the parser produced by this code will  provide support for XML namespaces.
javax.xml.parsers.DocumentBuilderFactory.setSchema,Set theSchemato be used by parsers created  from this factory.
javax.xml.parsers.DocumentBuilderFactory.setValidating,Specifies that the parser produced by this code will  validate documents as they are parsed.
javax.xml.parsers.DocumentBuilderFactory.setXIncludeAware,Set state of XInclude processing.
javax.xml.parsers.FactoryConfigurationError.getCause,use the exception chaining mechanism of JDK1.4
javax.xml.parsers.FactoryConfigurationError.getException,Return the actual exception (if any) that caused this exception to  be raised.
javax.xml.parsers.FactoryConfigurationError.getMessage,Return the message (if any) for this error .
javax.xml.parsers.SAXParser.getParser,Returns the SAX parser that is encapsulated by the  implementation of this class.
javax.xml.parsers.SAXParser.getProperty,Returns the particular property requested for in the underlying  implementation ofXMLReader.
javax.xml.parsers.SAXParser.getXMLReader,Returns theXMLReaderthat is encapsulated by the  implementation of this class.
javax.xml.parsers.SAXParser.parse,Parse the content of the file specified as XML using the  specifiedHandlerBase.
javax.xml.parsers.SAXParser.parse,Parse the content of the file specified as XML using the  specifiedDefaultHandler.
javax.xml.parsers.SAXParser.parse,Parse the content of the givenInputStreaminstance as XML using the specifiedHandlerBase.
javax.xml.parsers.SAXParser.parse,Parse the content of the givenInputStreaminstance as XML using the specifiedDefaultHandler.
javax.xml.parsers.SAXParser.parse,Parse the content described by the giving Uniform Resource  Identifier (URI) as XML using the specifiedHandlerBase.
javax.xml.parsers.SAXParser.parse,Parse the content described by the giving Uniform Resource  Identifier (URI) as XML using the specifiedDefaultHandler.
javax.xml.parsers.SAXParser.parse,Parse the content givenInputSourceas XML using the specifiedHandlerBase.
javax.xml.parsers.SAXParser.parse,Parse the content givenInputSourceas XML using the specifiedDefaultHandler.
javax.xml.parsers.SAXParser.reset,Reset thisSAXParserto its original configuration.
javax.xml.parsers.SAXParser.setProperty,Sets the particular property in the underlying implementation ofXMLReader.
javax.xml.parsers.SAXParserFactory.getFeature,Returns the particular property requested for in the underlying  implementation of org.xml.sax.XMLReader.
javax.xml.parsers.SAXParserFactory.newDefaultInstance,Creates a new instance of theSAXParserFactorybuiltin  system-default implementation.
javax.xml.parsers.SAXParserFactory.newDefaultNSInstance,Creates a new NamespaceAware instance of theSAXParserFactorybuiltin system-default implementation.
javax.xml.parsers.SAXParserFactory.newInstance,Obtains a new instance of aSAXParserFactory.
javax.xml.parsers.SAXParserFactory.newInstance,Obtain a new instance of aSAXParserFactoryfrom class name.
javax.xml.parsers.SAXParserFactory.newNSInstance,Creates a new NamespaceAware instance of aSAXParserFactory.
javax.xml.parsers.SAXParserFactory.newNSInstance,Creates a new NamespaceAware instance of aSAXParserFactoryfrom  the class name.
javax.xml.parsers.SAXParserFactory.newSAXParser,Creates a new instance of a SAXParser using the currently  configured factory parameters.
javax.xml.parsers.SAXParserFactory.setFeature,Sets the particular feature in the underlying implementation of  org.xml.sax.XMLReader.
javax.xml.stream.FactoryConfigurationError.getException,Return the nested exception (if any)
javax.xml.stream.FactoryConfigurationError.getMessage,Report the message associated with this error
javax.xml.stream.XMLEventFactory.createAttribute,Create a new Attribute
javax.xml.stream.XMLEventFactory.createCData,Create a Characters event with the CData flag set to true
javax.xml.stream.XMLEventFactory.createCharacters,"Create a Characters event, this method does not check if the content  is all whitespace."
javax.xml.stream.XMLEventFactory.createComment,Create a comment.
javax.xml.stream.XMLEventFactory.createDTD,Create a document type definition event  This string contains the entire document type declaration that matches  the doctypedecl in the XML 1.0 specification
javax.xml.stream.XMLEventFactory.createEndDocument,Creates a new instance of an EndDocument event
javax.xml.stream.XMLEventFactory.createEndElement,Create a new EndElement
javax.xml.stream.XMLEventFactory.createEntityReference,Creates a new instance of a EntityReference event
javax.xml.stream.XMLEventFactory.createIgnorableSpace,Create an ignorable space
javax.xml.stream.XMLEventFactory.createNamespace,Create a new default Namespace
javax.xml.stream.XMLEventFactory.createNamespace,Create a new Namespace
javax.xml.stream.XMLEventFactory.createProcessingInstruction,Create a processing instruction
javax.xml.stream.XMLEventFactory.createSpace,Create a Characters event with the isSpace flag set to true
javax.xml.stream.XMLEventFactory.createStartDocument,Creates a new instance of a StartDocument event
javax.xml.stream.XMLEventFactory.createStartElement,Create a new StartElement.
javax.xml.stream.XMLEventFactory.newDefaultFactory,Creates a new instance of theXMLEventFactorybuiltin  system-default implementation.
javax.xml.stream.XMLEventFactory.newFactory,Creates a new instance of the factory.
javax.xml.stream.XMLEventFactory.newFactory,Create a new instance of the factory.
javax.xml.stream.XMLEventFactory.newInstance,Creates a new instance of the factory in exactly the same manner as thenewFactory()method.
javax.xml.stream.XMLEventFactory.newInstance,Deprecated.This method has been deprecated to maintain API consistency.
javax.xml.stream.XMLEventFactory.setLocation,This method allows setting of the Location on each event that  is created by this factory.
javax.xml.stream.XMLInputFactory.createFilteredReader,Create a filtered event reader that wraps the filter around the event reader
javax.xml.stream.XMLInputFactory.createFilteredReader,Create a filtered reader that wraps the filter around the reader
javax.xml.stream.XMLInputFactory.createXMLEventReader,Create a new XMLEventReader from a java.io.InputStream
javax.xml.stream.XMLInputFactory.createXMLEventReader,Create a new XMLEventReader from a reader.
javax.xml.stream.XMLInputFactory.createXMLEventReader,Create a new XMLEventReader from an XMLStreamReader.
javax.xml.stream.XMLInputFactory.createXMLEventReader,Create a new XMLEventReader from a JAXP source.
javax.xml.stream.XMLInputFactory.createXMLStreamReader,Create a new XMLStreamReader from a java.io.InputStream.
javax.xml.stream.XMLInputFactory.createXMLStreamReader,Create a new XMLStreamReader from a reader.
javax.xml.stream.XMLInputFactory.createXMLStreamReader,Create a new XMLStreamReader from a JAXP source.
javax.xml.stream.XMLInputFactory.getEventAllocator,Gets the allocator used by streams created with this factory
javax.xml.stream.XMLInputFactory.getProperty,Get the value of a feature/property from the underlying implementation
javax.xml.stream.XMLInputFactory.getXMLReporter,The reporter that will be set on any XMLStreamReader or XMLEventReader created  by this factory instance.
javax.xml.stream.XMLInputFactory.getXMLResolver,The resolver that will be set on any XMLStreamReader or XMLEventReader created  by this factory instance.
javax.xml.stream.XMLInputFactory.isPropertySupported,Query the set of properties that this factory supports.
javax.xml.stream.XMLInputFactory.newDefaultFactory,Creates a new instance of theXMLInputFactorybuiltin  system-default implementation.
javax.xml.stream.XMLInputFactory.setEventAllocator,Set a user defined event allocator for events
javax.xml.stream.XMLInputFactory.setProperty,Allows the user to set specific feature/property on the underlying  implementation.
javax.xml.stream.XMLOutputFactory.createXMLEventWriter,Create a new XMLEventWriter that writes to a stream
javax.xml.stream.XMLOutputFactory.createXMLEventWriter,Create a new XMLEventWriter that writes to a writer
javax.xml.stream.XMLOutputFactory.createXMLEventWriter,Create a new XMLEventWriter that writes to a JAXP result.
javax.xml.stream.XMLOutputFactory.createXMLStreamWriter,Create a new XMLStreamWriter that writes to a stream
javax.xml.stream.XMLOutputFactory.createXMLStreamWriter,Create a new XMLStreamWriter that writes to a writer
javax.xml.stream.XMLOutputFactory.createXMLStreamWriter,Create a new XMLStreamWriter that writes to a JAXP result.
javax.xml.stream.XMLOutputFactory.getProperty,Get a feature/property on the underlying implementation
javax.xml.stream.XMLOutputFactory.newDefaultFactory,Creates a new instance of theXMLOutputFactorybuiltin  system-default implementation.
javax.xml.stream.XMLOutputFactory.newInstance,"Deprecated.This method has been deprecated because it returns an               instance of XMLInputFactory, which is of the wrong class."
javax.xml.stream.XMLOutputFactory.setProperty,Allows the user to set specific features/properties on the underlying implementation.
javax.xml.stream.XMLStreamException.getLocation,Gets the location of the exception
javax.xml.stream.XMLStreamException.getNestedException,Gets the nested exception.
javax.xml.stream.util.EventReaderDelegate.close,Frees any resources associated with this Reader.
javax.xml.stream.util.EventReaderDelegate.getElementText,Reads the content of a text-only element.
javax.xml.stream.util.EventReaderDelegate.getParent,Get the parent of this instance.
javax.xml.stream.util.EventReaderDelegate.hasNext,Check if there are more events.
javax.xml.stream.util.EventReaderDelegate.nextEvent,Gets the next XMLEvent.
javax.xml.stream.util.EventReaderDelegate.nextTag,Skips any insignificant space events until a START_ELEMENT or  END_ELEMENT is reached.
javax.xml.stream.util.EventReaderDelegate.peek,Check the next XMLEvent without reading it from the stream.
javax.xml.stream.util.EventReaderDelegate.setParent,Set the parent of this instance.
javax.xml.stream.util.StreamReaderDelegate.getAttributeCount,"Returns the count of attributes on this START_ELEMENT,  this method is only valid on a START_ELEMENT or ATTRIBUTE."
javax.xml.stream.util.StreamReaderDelegate.getAttributeLocalName,Returns the localName of the attribute at the provided  index
javax.xml.stream.util.StreamReaderDelegate.getAttributeName,Returns the qname of the attribute at the provided index
javax.xml.stream.util.StreamReaderDelegate.getAttributeNamespace,Returns the namespace of the attribute at the provided  index
javax.xml.stream.util.StreamReaderDelegate.getAttributePrefix,Returns the prefix of this attribute at the  provided index
javax.xml.stream.util.StreamReaderDelegate.getAttributeType,Returns the XML type of the attribute at the provided  index
javax.xml.stream.util.StreamReaderDelegate.getAttributeValue,Returns the value of the attribute at the  index
javax.xml.stream.util.StreamReaderDelegate.getAttributeValue,Returns the normalized attribute value of the  attribute with the namespace and localName  If the namespaceURI is null the namespace  is not checked for equality
javax.xml.stream.util.StreamReaderDelegate.getCharacterEncodingScheme,Returns the character encoding declared on the xml declaration  Returns null if none was declared
javax.xml.stream.util.StreamReaderDelegate.getElementText,"Reads the content of a text-only element, an exception is thrown if this is  not a text-only element."
javax.xml.stream.util.StreamReaderDelegate.getEncoding,Return input encoding if known or null if unknown.
javax.xml.stream.util.StreamReaderDelegate.getEventType,Returns an integer code that indicates the type of the event the cursor is  pointing to.
javax.xml.stream.util.StreamReaderDelegate.getLocalName,Returns the (local) name of the current event.
javax.xml.stream.util.StreamReaderDelegate.getLocation,Return the current location of the processor.
javax.xml.stream.util.StreamReaderDelegate.getName,Returns a QName for the current START_ELEMENT or END_ELEMENT event
javax.xml.stream.util.StreamReaderDelegate.getNamespaceContext,Returns a read only namespace context for the current  position.
javax.xml.stream.util.StreamReaderDelegate.getNamespaceCount,"Returns the count of namespaces declared on this START_ELEMENT or END_ELEMENT,  this method is only valid on a START_ELEMENT, END_ELEMENT or NAMESPACE."
javax.xml.stream.util.StreamReaderDelegate.getNamespacePrefix,Returns the prefix for the namespace declared at the  index.
javax.xml.stream.util.StreamReaderDelegate.getNamespaceURI,If the current event is a START_ELEMENT or END_ELEMENT  this method  returns the URI of the prefix or the default namespace.
javax.xml.stream.util.StreamReaderDelegate.getNamespaceURI,Returns the uri for the namespace declared at the  index.
javax.xml.stream.util.StreamReaderDelegate.getNamespaceURI,Return the uri for the given prefix.
javax.xml.stream.util.StreamReaderDelegate.getPIData,Get the data section of a processing instruction
javax.xml.stream.util.StreamReaderDelegate.getPITarget,Get the target of a processing instruction
javax.xml.stream.util.StreamReaderDelegate.getPrefix,Returns the prefix of the current event or null if the event does not have a prefix
javax.xml.stream.util.StreamReaderDelegate.getText,"Returns the current value of the parse event as a string,  this returns the string value of a CHARACTERS event,  returns the value of a COMMENT, the replacement value  for an ENTITY_REFERENCE, the string value of a CDATA section,  the string value for a SPACE event,  or the String value of the internal subset of the DTD."
javax.xml.stream.util.StreamReaderDelegate.getTextCharacters,Returns an array which contains the characters from this event.
javax.xml.stream.util.StreamReaderDelegate.getTextCharacters,"Gets the the text associated with a CHARACTERS, SPACE or CDATA event."
javax.xml.stream.util.StreamReaderDelegate.getTextLength,Returns the length of the sequence of characters for this  Text event within the text character array.
javax.xml.stream.util.StreamReaderDelegate.getTextStart,Returns the offset into the text character array where the first  character (of this text event) is stored.
javax.xml.stream.util.StreamReaderDelegate.getVersion,Get the xml version declared on the xml declaration  Returns null if none was declared
javax.xml.stream.util.StreamReaderDelegate.hasName,returns a boolean indicating whether the current event has a name  (is a START_ELEMENT or END_ELEMENT).
javax.xml.stream.util.StreamReaderDelegate.hasNext,Returns true if there are more parsing events and false  if there are no more events.
javax.xml.stream.util.StreamReaderDelegate.hasText,Return a boolean indicating whether the current event has text.
javax.xml.stream.util.StreamReaderDelegate.isAttributeSpecified,Returns a boolean which indicates if this  attribute was created by default
javax.xml.stream.util.StreamReaderDelegate.isCharacters,Returns true if the cursor points to a character data event
javax.xml.stream.util.StreamReaderDelegate.isEndElement,Returns true if the cursor points to an end tag (otherwise false)
javax.xml.stream.util.StreamReaderDelegate.isStandalone,Get the standalone declaration from the xml declaration
javax.xml.stream.util.StreamReaderDelegate.isStartElement,Returns true if the cursor points to a start tag (otherwise false)
javax.xml.stream.util.StreamReaderDelegate.isWhiteSpace,Returns true if the cursor points to a character data event  that consists of all whitespace
javax.xml.stream.util.StreamReaderDelegate.next,"Get next parsing event - a processor may return all contiguous  character data in a single chunk, or it may split it into several chunks."
javax.xml.stream.util.StreamReaderDelegate.nextTag,"Skips any white space (isWhiteSpace() returns true), COMMENT,  or PROCESSING_INSTRUCTION,  until a START_ELEMENT or END_ELEMENT is reached."
javax.xml.stream.util.StreamReaderDelegate.require,Test if the current event is of the given type and if the namespace and name match the current  namespace and name of the current event.
javax.xml.stream.util.StreamReaderDelegate.standaloneSet,Checks if standalone was set in the document
javax.xml.transform.Transformer.clearParameters,Clear all parameters set with setParameter.
javax.xml.transform.Transformer.getErrorListener,Get the error event handler in effect for the transformation.
javax.xml.transform.Transformer.getOutputProperties,Get a copy of the output properties for the transformation.
javax.xml.transform.Transformer.getOutputProperty,Get an output property that is in effect for the transformer.
javax.xml.transform.Transformer.getParameter,Get a parameter that was explicitly set with setParameter.
javax.xml.transform.Transformer.getURIResolver,Get an object that will be used to resolve URIs used in  document().
javax.xml.transform.Transformer.reset,Reset thisTransformerto its original configuration.
javax.xml.transform.Transformer.setErrorListener,Set the error event listener in effect for the transformation.
javax.xml.transform.Transformer.setOutputProperties,Set the output properties for the transformation.
javax.xml.transform.Transformer.setOutputProperty,Set an output property that will be in effect for the  transformation.
javax.xml.transform.Transformer.setParameter,Add a parameter for the transformation.
javax.xml.transform.Transformer.setURIResolver,Set an object that will be used to resolve URIs used in  document().
javax.xml.transform.Transformer.transform,Transform the XMLSourceto aResult.
javax.xml.transform.TransformerException.getException,This method retrieves an exception that this exception wraps.
javax.xml.transform.TransformerException.getLocationAsString,Get the location information as a string.
javax.xml.transform.TransformerException.getLocator,Method getLocator retrieves an instance of a SourceLocator  object that specifies where an error occurred.
javax.xml.transform.TransformerException.getMessageAndLocation,Get the error message with location information  appended.
javax.xml.transform.TransformerException.printStackTrace,Print the the trace of methods from where the error  originated.
javax.xml.transform.TransformerException.setLocator,Method setLocator sets an instance of a SourceLocator  object that specifies where an error occurred.
javax.xml.transform.TransformerFactory.getAssociatedStylesheet,Get the stylesheet specification(s) associated with the  XMLSourcedocument via thexml-stylesheet processing instructionthat match the given criteria.
javax.xml.transform.TransformerFactory.getErrorListener,Get the error event handler for the TransformerFactory.
javax.xml.transform.TransformerFactory.getFeature,Look up the value of a feature.
javax.xml.transform.TransformerFactory.getURIResolver,"Get the object that is used by default during the transformation  to resolve URIs used in document(), xsl:import, or xsl:include."
javax.xml.transform.TransformerFactory.newDefaultInstance,Creates a new instance of theTransformerFactorybuiltin  system-default implementation.
javax.xml.transform.TransformerFactory.newInstance,Obtains a new instance of aTransformerFactory.
javax.xml.transform.TransformerFactory.newInstance,Obtain a new instance of aTransformerFactoryfrom factory class name.
javax.xml.transform.TransformerFactory.newTemplates,"Process the Source into a Templates object, which is a  a compiled representation of the source."
javax.xml.transform.TransformerFactory.newTransformer,"Create a newTransformerthat performs a copy  of theSourceto theResult,  i.e. the ""identity transform""."
javax.xml.transform.TransformerFactory.newTransformer,Process theSourceinto aTransformerObject.
javax.xml.transform.TransformerFactory.setErrorListener,"Set the error event listener for the TransformerFactory, which  is used for the processing of transformation instructions,  and not for the transformation itself."
javax.xml.transform.TransformerFactory.setFeature,Set a feature for thisTransformerFactoryandTransformers  orTemplates created by this factory.
javax.xml.transform.TransformerFactory.setURIResolver,"Set an object that is used by default during the transformation  to resolve URIs used in document(), xsl:import, or xsl:include."
javax.xml.transform.dom.DOMResult.getNextSibling,Get the child node before which the result nodes will be inserted.
javax.xml.transform.dom.DOMResult.getNode,Get the node that will contain the result DOM tree.
javax.xml.transform.dom.DOMResult.getSystemId,Get the System Identifier.
javax.xml.transform.dom.DOMResult.setNextSibling,Set the child node before which the result nodes will be inserted.
javax.xml.transform.dom.DOMResult.setNode,Set the node that will contain the result DOM tree.
javax.xml.transform.dom.DOMResult.setSystemId,Set the systemId that may be used in association with the node.
javax.xml.transform.dom.DOMSource.getNode,Get the node that represents a Source DOM tree.
javax.xml.transform.dom.DOMSource.getSystemId,Get the base ID (URL or system ID) from where URLs  will be resolved.
javax.xml.transform.dom.DOMSource.isEmpty,Indicates whether theDOMSourceobject is empty.
javax.xml.transform.dom.DOMSource.setNode,Set the node that will represents a Source DOM tree.
javax.xml.transform.dom.DOMSource.setSystemId,Set the base ID (URL or system ID) from where URLs  will be resolved.
javax.xml.transform.sax.SAXResult.getHandler,Get theContentHandlerthat is the Result.
javax.xml.transform.sax.SAXResult.getLexicalHandler,Get a SAX2LexicalHandlerfor the output.
javax.xml.transform.sax.SAXResult.getSystemId,Get the system identifier that was set with setSystemId.
javax.xml.transform.sax.SAXResult.setHandler,Set the target to be a SAX2ContentHandler.
javax.xml.transform.sax.SAXResult.setLexicalHandler,Set the SAX2LexicalHandlerfor the output.
javax.xml.transform.sax.SAXResult.setSystemId,Method setSystemId Set the systemID that may be used in association  with theContentHandler.
javax.xml.transform.sax.SAXSource.getInputSource,Get the SAX InputSource to be used for the Source.
javax.xml.transform.sax.SAXSource.getSystemId,Get the base ID (URI or system ID) from where URIs  will be resolved.
javax.xml.transform.sax.SAXSource.getXMLReader,Get the XMLReader to be used for the Source.
javax.xml.transform.sax.SAXSource.isEmpty,Indicates whether theSAXSourceobject is empty.
javax.xml.transform.sax.SAXSource.setInputSource,Set the SAX InputSource to be used for the Source.
javax.xml.transform.sax.SAXSource.setSystemId,Set the system identifier for this Source.
javax.xml.transform.sax.SAXSource.setXMLReader,Set the XMLReader to be used for the Source.
javax.xml.transform.sax.SAXSource.sourceToInputSource,Attempt to obtain a SAX InputSource object from a Source  object.
javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler,Get a TemplatesHandler object that can process SAX  ContentHandler events into a Templates object.
javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler,Get a TransformerHandler object that can process SAX  ContentHandler events into a Result.
javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler,"Get a TransformerHandler object that can process SAX  ContentHandler events into a Result, based on the transformation  instructions specified by the argument."
javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler,"Get a TransformerHandler object that can process SAX  ContentHandler events into a Result, based on the Templates argument."
javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter,Create an XMLFilter that uses the given Source as the  transformation instructions.
javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter,"Create an XMLFilter, based on the Templates argument.."
javax.xml.transform.stax.StAXResult.getSystemId,The returned system identifier is alwaysnull.
javax.xml.transform.stax.StAXResult.getXMLEventWriter,Get theXMLEventWriterused by thisStAXResult.
javax.xml.transform.stax.StAXResult.getXMLStreamWriter,Get theXMLStreamWriterused by thisStAXResult.
javax.xml.transform.stax.StAXResult.setSystemId,"In the context of aStAXResult, it is not appropriate  to explicitly set the system identifier."
javax.xml.transform.stax.StAXSource.getSystemId,Get the system identifier used by thisStAXSource.
javax.xml.transform.stax.StAXSource.getXMLEventReader,Get theXMLEventReaderused by thisStAXSource.
javax.xml.transform.stax.StAXSource.getXMLStreamReader,Get theXMLStreamReaderused by thisStAXSource.
javax.xml.transform.stax.StAXSource.isEmpty,Indicates whether theStAXSourceobject is empty.
javax.xml.transform.stax.StAXSource.setSystemId,"In the context of aStAXSource, it is not appropriate  to explicitly set the system identifier."
javax.xml.transform.stream.StreamResult.getOutputStream,Get the byte stream that was set with setOutputStream.
javax.xml.transform.stream.StreamResult.getWriter,Get the character stream that was set with setWriter.
javax.xml.transform.stream.StreamResult.setOutputStream,Set the ByteStream that is to be written to.
javax.xml.transform.stream.StreamResult.setSystemId,Set the system ID from aFilereference.
javax.xml.transform.stream.StreamResult.setSystemId,"Set the systemID that may be used in association  with the byte or character stream, or, if neither is set, use  this value as a writeable URI (probably a file name)."
javax.xml.transform.stream.StreamResult.setWriter,Set the writer that is to receive the result.
javax.xml.transform.stream.StreamSource.getInputStream,Get the byte stream that was set with setByteStream.
javax.xml.transform.stream.StreamSource.getPublicId,Get the public identifier that was set with setPublicId.
javax.xml.transform.stream.StreamSource.getReader,Get the character stream that was set with setReader.
javax.xml.transform.stream.StreamSource.isEmpty,Indicates whether theStreamSourceobject is empty.
javax.xml.transform.stream.StreamSource.setInputStream,Set the byte stream to be used as input.
javax.xml.transform.stream.StreamSource.setPublicId,Set the public identifier for this Source.
javax.xml.transform.stream.StreamSource.setReader,Set the input to be a character reader.
javax.xml.transform.stream.StreamSource.setSystemId,Set the system ID from a File reference.
javax.xml.validation.Schema.newValidator,Creates a newValidatorfor thisSchema.
javax.xml.validation.Schema.newValidatorHandler,Creates a newValidatorHandlerfor thisSchema.
javax.xml.validation.SchemaFactory.getErrorHandler,Gets the currentErrorHandlerset to thisSchemaFactory.
javax.xml.validation.SchemaFactory.getFeature,Look up the value of a feature flag.
javax.xml.validation.SchemaFactory.getProperty,Look up the value of a property.
javax.xml.validation.SchemaFactory.getResourceResolver,Gets the currentLSResourceResolverset to thisSchemaFactory.
javax.xml.validation.SchemaFactory.isSchemaLanguageSupported,Is specified schema supported by thisSchemaFactory?
javax.xml.validation.SchemaFactory.newDefaultInstance,Creates a new instance of theSchemaFactorybuiltin  system-default implementation.
javax.xml.validation.SchemaFactory.newInstance,Obtains a new instance of aSchemaFactorythat supports  the specified schema language.
javax.xml.validation.SchemaFactory.newInstance,Obtain a new instance of aSchemaFactoryfrom class name.
javax.xml.validation.SchemaFactory.newSchema,Creates a specialSchemaobject.
javax.xml.validation.SchemaFactory.newSchema,Parses the specifiedFileas a schema and returns it as aSchema.
javax.xml.validation.SchemaFactory.newSchema,Parses the specifiedURLas a schema and returns it as aSchema.
javax.xml.validation.SchemaFactory.newSchema,Parses the specified source as a schema and returns it as a schema.
javax.xml.validation.SchemaFactory.newSchema,Parses the specified source(s) as a schema and returns it as a schema.
javax.xml.validation.SchemaFactory.setErrorHandler,Sets theErrorHandlerto receive errors encountered  during thenewSchemamethod invocation.
javax.xml.validation.SchemaFactory.setFeature,"Set a feature for thisSchemaFactory,Schemas created by this factory, and by extension,Validators andValidatorHandlers created by  thoseSchemas."
javax.xml.validation.SchemaFactory.setProperty,Set the value of a property.
javax.xml.validation.SchemaFactory.setResourceResolver,Sets theLSResourceResolverto customize  resource resolution when parsing schemas.
javax.xml.validation.SchemaFactoryLoader.newFactory,Creates a newSchemaFactoryobject for the specified  schema language.
javax.xml.validation.TypeInfoProvider.getAttributeTypeInfo,Returns the immutableTypeInfoobject for the specified  attribute of the current element.
javax.xml.validation.TypeInfoProvider.getElementTypeInfo,Returns the immutableTypeInfoobject for the current  element.
javax.xml.validation.TypeInfoProvider.isIdAttribute,Returnstrueif the specified attribute is determined  to be ID.
javax.xml.validation.TypeInfoProvider.isSpecified,Returnsfalseif the attribute was added by the validator.
javax.xml.validation.Validator.getErrorHandler,Gets the currentErrorHandlerset to thisValidator.
javax.xml.validation.Validator.getResourceResolver,Gets the currentLSResourceResolverset to thisValidator.
javax.xml.validation.Validator.reset,Reset thisValidatorto its original configuration.
javax.xml.validation.Validator.setErrorHandler,Sets theErrorHandlerto receive errors encountered  during thevalidatemethod invocation.
javax.xml.validation.Validator.setFeature,Set the value of a feature flag.
javax.xml.validation.Validator.setResourceResolver,Sets theLSResourceResolverto customize  resource resolution while in a validation episode.
javax.xml.validation.Validator.validate,Validates the specified input.
javax.xml.validation.Validator.validate,Validates the specified input and send the augmented validation  result to the specified output.
javax.xml.validation.ValidatorHandler.getContentHandler,Gets theContentHandlerwhich receives the  augmented validation result.
javax.xml.validation.ValidatorHandler.getErrorHandler,Gets the currentErrorHandlerset to thisValidatorHandler.
javax.xml.validation.ValidatorHandler.getResourceResolver,Gets the currentLSResourceResolverset to thisValidatorHandler.
javax.xml.validation.ValidatorHandler.getTypeInfoProvider,Obtains theTypeInfoProviderimplementation of thisValidatorHandler.
javax.xml.validation.ValidatorHandler.setContentHandler,Sets theContentHandlerwhich receives  the augmented validation result.
javax.xml.validation.ValidatorHandler.setErrorHandler,Sets theErrorHandlerto receive errors encountered  during the validation.
javax.xml.validation.ValidatorHandler.setFeature,Set a feature for thisValidatorHandler.
javax.xml.xpath.XPathException.getCause,Get the cause of this XPathException.
javax.xml.xpath.XPathException.printStackTrace,Print stack trace toSystem.err.
javax.xml.xpath.XPathException.printStackTrace,Print stack trace to specifiedPrintStream.
javax.xml.xpath.XPathException.printStackTrace,Print stack trace to specifiedPrintWriter.
javax.xml.xpath.XPathFactory.isObjectModelSupported,Is specified object model supported by thisXPathFactory?
javax.xml.xpath.XPathFactory.newDefaultInstance,Creates a new instance of theXPathFactorybuiltin  system-default implementation.
javax.xml.xpath.XPathFactory.newInstance,"Get a newXPathFactoryinstance using the default object model,DEFAULT_OBJECT_MODEL_URI,  the W3C DOM."
javax.xml.xpath.XPathFactory.newInstance,Obtains a newXPathFactoryinstance using the specified object model.
javax.xml.xpath.XPathFactory.newInstance,Obtain a new instance of aXPathFactoryfrom a factory class name.
javax.xml.xpath.XPathFactory.newXPath,Return a newXPathusing the underlying object  model determined when theXPathFactorywas instantiated.
javax.xml.xpath.XPathFactory.setFeature,Set a feature for thisXPathFactoryandXPaths created by this factory.
javax.xml.xpath.XPathFactory.setXPathFunctionResolver,Establish a default function resolver.
javax.xml.xpath.XPathFactory.setXPathVariableResolver,Establish a default variable resolver.
org.w3c.dom.bootstrap.DOMImplementationRegistry.addSource,Register an implementation.
org.w3c.dom.bootstrap.DOMImplementationRegistry.getDOMImplementation,"Return the first implementation that has the desired  features, ornullif none is found."
org.w3c.dom.bootstrap.DOMImplementationRegistry.getDOMImplementationList,Return a list of implementations that support the  desired features.
org.w3c.dom.bootstrap.DOMImplementationRegistry.newInstance,Obtain a new instance of aDOMImplementationRegistry.
org.xml.sax.InputSource.getByteStream,Get the byte stream for this input source.
org.xml.sax.InputSource.getCharacterStream,Get the character stream for this input source.
org.xml.sax.InputSource.getEncoding,Get the character encoding for a byte stream or URI.
org.xml.sax.InputSource.getPublicId,Get the public identifier for this input source.
org.xml.sax.InputSource.getSystemId,Get the system identifier for this input source.
org.xml.sax.InputSource.isEmpty,Indicates whether theInputSourceobject is empty.
org.xml.sax.InputSource.setByteStream,Set the byte stream for this input source.
org.xml.sax.InputSource.setCharacterStream,Set the character stream for this input source.
org.xml.sax.InputSource.setEncoding,"Set the character encoding, if known."
org.xml.sax.InputSource.setPublicId,Set the public identifier for this input source.
org.xml.sax.InputSource.setSystemId,Set the system identifier for this input source.
org.xml.sax.SAXException.getCause,Return the cause of the exception
org.xml.sax.SAXException.getException,"Return the embedded exception, if any."
org.xml.sax.SAXException.getMessage,Return a detail message for this exception.
org.xml.sax.SAXException.toString,Override toString to pick up any embedded exception.
org.xml.sax.SAXParseException.getColumnNumber,The column number of the end of the text where the exception occurred.
org.xml.sax.SAXParseException.getLineNumber,The line number of the end of the text where the exception occurred.
org.xml.sax.SAXParseException.getPublicId,Get the public identifier of the entity where the exception occurred.
org.xml.sax.SAXParseException.getSystemId,Get the system identifier of the entity where the exception occurred.
org.xml.sax.SAXParseException.toString,Override toString to provide more detailed error message.
org.xml.sax.ext.Attributes2Impl.addAttribute,"Add an attribute to the end of the list, setting its  ""specified"" flag to true."
org.xml.sax.ext.Attributes2Impl.isDeclared,"Returns the current value of the attribute's ""declared"" flag."
org.xml.sax.ext.Attributes2Impl.isSpecified,"Returns the current value of an attribute's ""specified"" flag."
org.xml.sax.ext.Attributes2Impl.setAttributes,Copy an entire Attributes object.
org.xml.sax.ext.Attributes2Impl.setDeclared,"Assign a value to the ""declared"" flag of a specific attribute."
org.xml.sax.ext.Attributes2Impl.setSpecified,"Assign a value to the ""specified"" flag of a specific attribute."
org.xml.sax.ext.DefaultHandler2.attributeDecl,Report an attribute type declaration.
org.xml.sax.ext.DefaultHandler2.comment,Report an XML comment anywhere in the document.
org.xml.sax.ext.DefaultHandler2.elementDecl,Report an element type declaration.
org.xml.sax.ext.DefaultHandler2.endCDATA,Report the end of a CDATA section.
org.xml.sax.ext.DefaultHandler2.endDTD,Report the end of DTD declarations.
org.xml.sax.ext.DefaultHandler2.endEntity,Report the end of an entity.
org.xml.sax.ext.DefaultHandler2.externalEntityDecl,Report a parsed external entity declaration.
org.xml.sax.ext.DefaultHandler2.getExternalSubset,"Tells the parser that if no external subset has been declared  in the document text, none should be used."
org.xml.sax.ext.DefaultHandler2.internalEntityDecl,Report an internal entity declaration.
org.xml.sax.ext.DefaultHandler2.resolveEntity,InvokesEntityResolver2.resolveEntity()with null entity name and base URI.
org.xml.sax.ext.DefaultHandler2.resolveEntity,Tells the parser to resolve the systemId against the baseURI  and read the entity text from that resulting absolute URI.
org.xml.sax.ext.DefaultHandler2.startCDATA,Report the start of a CDATA section.
org.xml.sax.ext.DefaultHandler2.startDTD,"Report the start of DTD declarations, if any."
org.xml.sax.ext.DefaultHandler2.startEntity,Report the beginning of some internal and external XML entities.
org.xml.sax.ext.Locator2Impl.getEncoding,Returns the current value of the encoding property.
org.xml.sax.ext.Locator2Impl.getXMLVersion,Returns the current value of the version property.
org.xml.sax.ext.Locator2Impl.setEncoding,Assigns the current value of the encoding property.
org.xml.sax.ext.Locator2Impl.setXMLVersion,Assigns the current value of the version property.
org.xml.sax.helpers.AttributesImpl.addAttribute,Add an attribute to the end of the list.
org.xml.sax.helpers.AttributesImpl.clear,Clear the attribute list for reuse.
org.xml.sax.helpers.AttributesImpl.getIndex,Look up an attribute's index by qualified (prefixed) name.
org.xml.sax.helpers.AttributesImpl.getIndex,Look up an attribute's index by Namespace name.
org.xml.sax.helpers.AttributesImpl.getLength,Return the number of attributes in the list.
org.xml.sax.helpers.AttributesImpl.getLocalName,Return an attribute's local name.
org.xml.sax.helpers.AttributesImpl.getQName,Return an attribute's qualified (prefixed) name.
org.xml.sax.helpers.AttributesImpl.getType,Return an attribute's type by index.
org.xml.sax.helpers.AttributesImpl.getType,Look up an attribute's type by qualified (prefixed) name.
org.xml.sax.helpers.AttributesImpl.getType,Look up an attribute's type by Namespace-qualified name.
org.xml.sax.helpers.AttributesImpl.getURI,Return an attribute's Namespace URI.
org.xml.sax.helpers.AttributesImpl.getValue,Return an attribute's value by index.
org.xml.sax.helpers.AttributesImpl.getValue,Look up an attribute's value by qualified (prefixed) name.
org.xml.sax.helpers.AttributesImpl.getValue,Look up an attribute's value by Namespace-qualified name.
org.xml.sax.helpers.AttributesImpl.removeAttribute,Remove an attribute from the list.
org.xml.sax.helpers.AttributesImpl.setAttribute,Set an attribute in the list.
org.xml.sax.helpers.AttributesImpl.setLocalName,Set the local name of a specific attribute.
org.xml.sax.helpers.AttributesImpl.setQName,Set the qualified name of a specific attribute.
org.xml.sax.helpers.AttributesImpl.setType,Set the type of a specific attribute.
org.xml.sax.helpers.AttributesImpl.setURI,Set the Namespace URI of a specific attribute.
org.xml.sax.helpers.AttributesImpl.setValue,Set the value of a specific attribute.
org.xml.sax.helpers.DefaultHandler.characters,Receive notification of character data inside an element.
org.xml.sax.helpers.DefaultHandler.endDocument,Receive notification of the end of the document.
org.xml.sax.helpers.DefaultHandler.endElement,Receive notification of the end of an element.
org.xml.sax.helpers.DefaultHandler.endPrefixMapping,Receive notification of the end of a Namespace mapping.
org.xml.sax.helpers.DefaultHandler.error,Receive notification of a recoverable parser error.
org.xml.sax.helpers.DefaultHandler.fatalError,Report a fatal XML parsing error.
org.xml.sax.helpers.DefaultHandler.ignorableWhitespace,Receive notification of ignorable whitespace in element content.
org.xml.sax.helpers.DefaultHandler.notationDecl,Receive notification of a notation declaration.
org.xml.sax.helpers.DefaultHandler.processingInstruction,Receive notification of a processing instruction.
org.xml.sax.helpers.DefaultHandler.resolveEntity,Resolve an external entity.
org.xml.sax.helpers.DefaultHandler.setDocumentLocator,Receive a Locator object for document events.
org.xml.sax.helpers.DefaultHandler.skippedEntity,Receive notification of a skipped entity.
org.xml.sax.helpers.DefaultHandler.startDocument,Receive notification of the beginning of the document.
org.xml.sax.helpers.DefaultHandler.startElement,Receive notification of the start of an element.
org.xml.sax.helpers.DefaultHandler.startPrefixMapping,Receive notification of the start of a Namespace mapping.
org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl,Receive notification of an unparsed entity declaration.
org.xml.sax.helpers.DefaultHandler.warning,Receive notification of a parser warning.
org.xml.sax.helpers.LocatorImpl.getColumnNumber,Return the saved column number (1-based).
org.xml.sax.helpers.LocatorImpl.getLineNumber,Return the saved line number (1-based).
org.xml.sax.helpers.LocatorImpl.getPublicId,Return the saved public identifier.
org.xml.sax.helpers.LocatorImpl.getSystemId,Return the saved system identifier.
org.xml.sax.helpers.LocatorImpl.setColumnNumber,Set the column number for this locator (1-based).
org.xml.sax.helpers.LocatorImpl.setLineNumber,Set the line number for this locator (1-based).
org.xml.sax.helpers.LocatorImpl.setPublicId,Set the public identifier for this locator.
org.xml.sax.helpers.LocatorImpl.setSystemId,Set the system identifier for this locator.
org.xml.sax.helpers.NamespaceSupport.declarePrefix,Declare a Namespace prefix.
org.xml.sax.helpers.NamespaceSupport.getDeclaredPrefixes,Return an enumeration of all prefixes declared in this context.
org.xml.sax.helpers.NamespaceSupport.getPrefix,Return one of the prefixes mapped to a Namespace URI.
org.xml.sax.helpers.NamespaceSupport.getPrefixes,Return an enumeration of all prefixes whose declarations are  active in the current context.
org.xml.sax.helpers.NamespaceSupport.getPrefixes,Return an enumeration of all prefixes for a given URI whose  declarations are active in the current context.
org.xml.sax.helpers.NamespaceSupport.getURI,Look up a prefix and get the currently-mapped Namespace URI.
org.xml.sax.helpers.NamespaceSupport.isNamespaceDeclUris,Returns true if namespace declaration attributes are placed into  a namespace.
org.xml.sax.helpers.NamespaceSupport.popContext,Revert to the previous Namespace context.
org.xml.sax.helpers.NamespaceSupport.processName,"Process a raw XML qualified name, after all declarations in the  current context have been handled bydeclarePrefix()."
org.xml.sax.helpers.NamespaceSupport.pushContext,Start a new Namespace context.
org.xml.sax.helpers.NamespaceSupport.reset,Reset this Namespace support object for reuse.
org.xml.sax.helpers.NamespaceSupport.setNamespaceDeclUris,Controls whether namespace declaration attributes are placed  into theNSDECLnamespace  byprocessName().
org.xml.sax.helpers.ParserAdapter.characters,Adapter implementation method; do not call.
org.xml.sax.helpers.ParserAdapter.getContentHandler,Return the current content handler.
org.xml.sax.helpers.ParserAdapter.getDTDHandler,Return the current DTD handler.
org.xml.sax.helpers.ParserAdapter.getEntityResolver,Return the current entity resolver.
org.xml.sax.helpers.ParserAdapter.getErrorHandler,Return the current error handler.
org.xml.sax.helpers.ParserAdapter.getFeature,Check a parser feature flag.
org.xml.sax.helpers.ParserAdapter.getProperty,Get a parser property.
org.xml.sax.helpers.ParserAdapter.parse,Parse an XML document.
org.xml.sax.helpers.ParserAdapter.setContentHandler,Set the content handler.
org.xml.sax.helpers.ParserAdapter.setDTDHandler,Set the DTD handler.
org.xml.sax.helpers.ParserAdapter.setEntityResolver,Set the entity resolver.
org.xml.sax.helpers.ParserAdapter.setErrorHandler,Set the error handler.
org.xml.sax.helpers.ParserAdapter.setFeature,Set a feature flag for the parser.
org.xml.sax.helpers.ParserAdapter.setProperty,Set a parser property.
org.xml.sax.helpers.XMLFilterImpl.characters,Filter a character data event.
org.xml.sax.helpers.XMLFilterImpl.endDocument,Filter an end document event.
org.xml.sax.helpers.XMLFilterImpl.endElement,Filter an end element event.
org.xml.sax.helpers.XMLFilterImpl.endPrefixMapping,Filter an end Namespace prefix mapping event.
org.xml.sax.helpers.XMLFilterImpl.error,Filter an error event.
org.xml.sax.helpers.XMLFilterImpl.fatalError,Filter a fatal error event.
org.xml.sax.helpers.XMLFilterImpl.getContentHandler,Get the content event handler.
org.xml.sax.helpers.XMLFilterImpl.getDTDHandler,Get the current DTD event handler.
org.xml.sax.helpers.XMLFilterImpl.getEntityResolver,Get the current entity resolver.
org.xml.sax.helpers.XMLFilterImpl.getErrorHandler,Get the current error event handler.
org.xml.sax.helpers.XMLFilterImpl.getParent,Get the parent reader.
org.xml.sax.helpers.XMLFilterImpl.ignorableWhitespace,Filter an ignorable whitespace event.
org.xml.sax.helpers.XMLFilterImpl.notationDecl,Filter a notation declaration event.
org.xml.sax.helpers.XMLFilterImpl.parse,Parse a document.
org.xml.sax.helpers.XMLFilterImpl.processingInstruction,Filter a processing instruction event.
org.xml.sax.helpers.XMLFilterImpl.resolveEntity,Filter an external entity resolution.
org.xml.sax.helpers.XMLFilterImpl.setContentHandler,Set the content event handler.
org.xml.sax.helpers.XMLFilterImpl.setDocumentLocator,Filter a new document locator event.
org.xml.sax.helpers.XMLFilterImpl.setDTDHandler,Set the DTD event handler.
org.xml.sax.helpers.XMLFilterImpl.setErrorHandler,Set the error event handler.
org.xml.sax.helpers.XMLFilterImpl.setFeature,Set the value of a feature.
org.xml.sax.helpers.XMLFilterImpl.setParent,Set the parent reader.
org.xml.sax.helpers.XMLFilterImpl.skippedEntity,Filter a skipped entity event.
org.xml.sax.helpers.XMLFilterImpl.startDocument,Filter a start document event.
org.xml.sax.helpers.XMLFilterImpl.startElement,Filter a start element event.
org.xml.sax.helpers.XMLFilterImpl.startPrefixMapping,Filter a start Namespace prefix mapping event.
org.xml.sax.helpers.XMLFilterImpl.unparsedEntityDecl,Filter an unparsed entity declaration event.
org.xml.sax.helpers.XMLFilterImpl.warning,Filter a warning event.
org.xml.sax.helpers.XMLReaderAdapter.characters,Adapt a SAX2 characters event.
org.xml.sax.helpers.XMLReaderAdapter.endDocument,End document event.
org.xml.sax.helpers.XMLReaderAdapter.endElement,Adapt a SAX2 end element event.
org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping,Adapt a SAX2 end prefix mapping event.
org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace,Adapt a SAX2 ignorable whitespace event.
org.xml.sax.helpers.XMLReaderAdapter.parse,Parse the document.
org.xml.sax.helpers.XMLReaderAdapter.processingInstruction,Adapt a SAX2 processing instruction event.
org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler,Register the SAX1 document event handler.
org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator,Set a document locator.
org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler,Register the DTD event handler.
org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver,Register the entity resolver.
org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler,Register the error event handler.
org.xml.sax.helpers.XMLReaderAdapter.setLocale,Set the locale for error reporting.
org.xml.sax.helpers.XMLReaderAdapter.skippedEntity,Adapt a SAX2 skipped entity event.
org.xml.sax.helpers.XMLReaderAdapter.startDocument,Start document event.
org.xml.sax.helpers.XMLReaderAdapter.startElement,Adapt a SAX2 start element event.
org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping,Adapt a SAX2 start prefix mapping event.
javax.xml.crypto.KeySelector.select,Attempts to find a key that satisfies the specified constraints.
javax.xml.crypto.KeySelector.singletonKeySelector,"Returns aKeySelectorthat always selects the specified  key, regardless of theKeyInfopassed to it."
javax.xml.crypto.KeySelector.toString,"Returns a string representation of this purpose (""sign"",  ""verify"", ""encrypt"", or ""decrypt"")."
javax.xml.crypto.KeySelectorException.getCause,Returns the cause of thisKeySelectorExceptionornullif the cause is nonexistent or unknown.
javax.xml.crypto.KeySelectorException.printStackTrace,"Prints thisKeySelectorException, its backtrace and  the cause's backtrace to the standard error stream."
javax.xml.crypto.KeySelectorException.printStackTrace,"Prints thisKeySelectorException, its backtrace and  the cause's backtrace to the specified print stream."
javax.xml.crypto.KeySelectorException.printStackTrace,"Prints thisKeySelectorException, its backtrace and  the cause's backtrace to the specified print writer."
javax.xml.crypto.MarshalException.getCause,Returns the cause of thisMarshalExceptionornullif the cause is nonexistent or unknown.
javax.xml.crypto.MarshalException.printStackTrace,"Prints thisMarshalException, its backtrace and  the cause's backtrace to the standard error stream."
javax.xml.crypto.MarshalException.printStackTrace,"Prints thisMarshalException, its backtrace and  the cause's backtrace to the specified print stream."
javax.xml.crypto.MarshalException.printStackTrace,"Prints thisMarshalException, its backtrace and  the cause's backtrace to the specified print writer."
javax.xml.crypto.NoSuchMechanismException.getCause,Returns the cause of thisNoSuchMechanismExceptionornullif the cause is nonexistent or unknown.
javax.xml.crypto.NoSuchMechanismException.printStackTrace,"Prints thisNoSuchMechanismException, its backtrace and  the cause's backtrace to the standard error stream."
javax.xml.crypto.NoSuchMechanismException.printStackTrace,"Prints thisNoSuchMechanismException, its backtrace and  the cause's backtrace to the specified print stream."
javax.xml.crypto.NoSuchMechanismException.printStackTrace,"Prints thisNoSuchMechanismException, its backtrace and  the cause's backtrace to the specified print writer."
javax.xml.crypto.OctetStreamData.getMimeType,Returns the MIME type associated with the data object represented by thisOctetStreamData.
javax.xml.crypto.OctetStreamData.getOctetStream,Returns the input stream of thisOctetStreamData.
javax.xml.crypto.OctetStreamData.getURI,Returns the URI String identifying the data object represented by thisOctetStreamData.
javax.xml.crypto.URIReferenceException.getCause,Returns the cause of thisURIReferenceExceptionornullif the cause is nonexistent or unknown.
javax.xml.crypto.URIReferenceException.getURIReference,Returns theURIReferencethat was being dereferenced  when the exception was thrown.
javax.xml.crypto.URIReferenceException.printStackTrace,"Prints thisURIReferenceException, its backtrace and  the cause's backtrace to the standard error stream."
javax.xml.crypto.URIReferenceException.printStackTrace,"Prints thisURIReferenceException, its backtrace and  the cause's backtrace to the specified print stream."
javax.xml.crypto.URIReferenceException.printStackTrace,"Prints thisURIReferenceException, its backtrace and  the cause's backtrace to the specified print writer."
javax.xml.crypto.dom.DOMCryptoContext.get,This implementation uses an internalHashMapto get the object  that the specified key maps to.
javax.xml.crypto.dom.DOMCryptoContext.getBaseURI,Returns the base URI.
javax.xml.crypto.dom.DOMCryptoContext.getDefaultNamespacePrefix,Returns the default namespace prefix.
javax.xml.crypto.dom.DOMCryptoContext.getElementById,Returns theElementwith the specified ID attribute value.
javax.xml.crypto.dom.DOMCryptoContext.getKeySelector,Returns the key selector for finding a key.
javax.xml.crypto.dom.DOMCryptoContext.getNamespacePrefix,This implementation uses an internalHashMapto get the prefix  that the specified URI maps to.
javax.xml.crypto.dom.DOMCryptoContext.getProperty,This implementation uses an internalHashMapto get the object  that the specified name maps to.
javax.xml.crypto.dom.DOMCryptoContext.getURIDereferencer,Returns aURIDereferencerthat is used to dereferenceURIReferences.
javax.xml.crypto.dom.DOMCryptoContext.iterator,Returns a read-only iterator over the set of Id/Element mappings of  thisDOMCryptoContext.
javax.xml.crypto.dom.DOMCryptoContext.put,This implementation uses an internalHashMapto map the key  to the specified object.
javax.xml.crypto.dom.DOMCryptoContext.putNamespacePrefix,This implementation uses an internalHashMapto map the URI  to the specified prefix.
javax.xml.crypto.dom.DOMCryptoContext.setBaseURI,Sets the base URI.
javax.xml.crypto.dom.DOMCryptoContext.setDefaultNamespacePrefix,Sets the default namespace prefix.
javax.xml.crypto.dom.DOMCryptoContext.setIdAttributeNS,Registers the element's attribute specified by the namespace URI and  local name to be of type ID.
javax.xml.crypto.dom.DOMCryptoContext.setKeySelector,Sets the key selector for finding a key.
javax.xml.crypto.dom.DOMCryptoContext.setProperty,This implementation uses an internalHashMapto map the name  to the specified object.
javax.xml.crypto.dom.DOMCryptoContext.setURIDereferencer,Sets aURIDereferencerthat is used to dereferenceURIReferences.
javax.xml.crypto.dom.DOMStructure.getNode,Returns the node contained in thisDOMStructure.
javax.xml.crypto.dom.DOMStructure.isFeatureSupported,Indicates whether a specified feature is supported.
javax.xml.crypto.dsig.TransformException.getCause,Returns the cause of thisTransformExceptionornullif the cause is nonexistent or unknown.
javax.xml.crypto.dsig.TransformException.printStackTrace,"Prints thisTransformException, its backtrace and  the cause's backtrace to the standard error stream."
javax.xml.crypto.dsig.TransformException.printStackTrace,"Prints thisTransformException, its backtrace and  the cause's backtrace to the specified print stream."
javax.xml.crypto.dsig.TransformException.printStackTrace,"Prints thisTransformException, its backtrace and  the cause's backtrace to the specified print writer."
javax.xml.crypto.dsig.TransformService.getAlgorithm,Returns the URI of the algorithm supported by thisTransformService.
javax.xml.crypto.dsig.TransformService.getInstance,Returns aTransformServicethat supports the specified  algorithm URI (ex:Transform.XPATH2) and mechanism type  (ex: DOM).
javax.xml.crypto.dsig.TransformService.getInstance,Returns aTransformServicethat supports the specified  algorithm URI (ex:Transform.XPATH2) and mechanism type  (ex: DOM) as supplied by the specified provider.
javax.xml.crypto.dsig.TransformService.getMechanismType,Returns the mechanism type supported by thisTransformService.
javax.xml.crypto.dsig.TransformService.getProvider,Returns the provider of thisTransformService.
javax.xml.crypto.dsig.TransformService.init,Initializes thisTransformServicewith the specified  parameters.
javax.xml.crypto.dsig.TransformService.init,Initializes thisTransformServicewith the specified  parameters and document context.
javax.xml.crypto.dsig.TransformService.marshalParams,Marshals the algorithm-specific parameters.
javax.xml.crypto.dsig.XMLSignatureException.getCause,Returns the cause of thisXMLSignatureExceptionornullif the cause is nonexistent or unknown.
javax.xml.crypto.dsig.XMLSignatureException.printStackTrace,"Prints thisXMLSignatureException, its backtrace and  the cause's backtrace to the standard error stream."
javax.xml.crypto.dsig.XMLSignatureException.printStackTrace,"Prints thisXMLSignatureException, its backtrace and  the cause's backtrace to the specified print stream."
javax.xml.crypto.dsig.XMLSignatureException.printStackTrace,"Prints thisXMLSignatureException, its backtrace and  the cause's backtrace to the specified print writer."
javax.xml.crypto.dsig.XMLSignatureFactory.getInstance,"Returns anXMLSignatureFactorythat supports the  default XML processing mechanism and representation type (""DOM"")."
javax.xml.crypto.dsig.XMLSignatureFactory.getInstance,"Returns anXMLSignatureFactorythat supports the  specified XML processing mechanism and representation type (ex: ""DOM"")."
javax.xml.crypto.dsig.XMLSignatureFactory.getInstance,"Returns anXMLSignatureFactorythat supports the  requested XML processing mechanism and representation type (ex: ""DOM""),  as supplied by the specified provider."
javax.xml.crypto.dsig.XMLSignatureFactory.getKeyInfoFactory,Returns aKeyInfoFactorythat createsKeyInfoobjects.
javax.xml.crypto.dsig.XMLSignatureFactory.getMechanismType,"Returns the type of the XML processing mechanism and representation  supported by thisXMLSignatureFactory(ex: ""DOM"")."
javax.xml.crypto.dsig.XMLSignatureFactory.getProvider,Returns the provider of thisXMLSignatureFactory.
javax.xml.crypto.dsig.XMLSignatureFactory.getURIDereferencer,Returns a reference to theURIDereferencerthat is used by  default to dereference URIs inReferenceobjects.
javax.xml.crypto.dsig.XMLSignatureFactory.newCanonicalizationMethod,Creates aCanonicalizationMethodfor the specified  algorithm URI and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.newDigestMethod,Creates aDigestMethodfor the specified algorithm URI  and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.newManifest,Creates aManifestcontaining the specified  list ofReferences.
javax.xml.crypto.dsig.XMLSignatureFactory.newManifest,Creates aManifestcontaining the specified  list ofReferences and optional id.
javax.xml.crypto.dsig.XMLSignatureFactory.newReference,Creates aReferencewith the specified URI and digest  method.
javax.xml.crypto.dsig.XMLSignatureFactory.newReference,Creates aReferencewith the specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.newReference,Creates aReferencewith the specified parameters and  pre-calculated digest value.
javax.xml.crypto.dsig.XMLSignatureFactory.newSignatureMethod,Creates aSignatureMethodfor the specified algorithm URI  and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.newSignatureProperties,Creates aSignaturePropertiescontaining the specified  list ofSignaturePropertys and optional id.
javax.xml.crypto.dsig.XMLSignatureFactory.newSignatureProperty,"Creates aSignaturePropertycontaining the specified  list ofXMLStructures, target URI and optional id."
javax.xml.crypto.dsig.XMLSignatureFactory.newSignedInfo,"Creates aSignedInfowith the specified canonicalization  and signature methods, and list of one or more references."
javax.xml.crypto.dsig.XMLSignatureFactory.newSignedInfo,Creates aSignedInfowith the specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.newTransform,Creates aTransformfor the specified algorithm URI  and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.newXMLObject,Creates anXMLObjectfrom the specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.newXMLSignature,Creates anXMLSignatureand initializes it with the contents  of the specifiedSignedInfoandKeyInfoobjects.
javax.xml.crypto.dsig.XMLSignatureFactory.newXMLSignature,Creates anXMLSignatureand initializes it with the  specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory.unmarshalXMLSignature,Unmarshals a newXMLSignatureinstance from a  mechanism-specificXMLValidateContextinstance.
javax.xml.crypto.dsig.XMLSignatureFactory.unmarshalXMLSignature,Unmarshals a newXMLSignatureinstance from a  mechanism-specificXMLStructureinstance.
javax.xml.crypto.dsig.dom.DOMSignContext.getNextSibling,Returns the nextSibling node.
javax.xml.crypto.dsig.dom.DOMSignContext.getParent,Returns the parent node.
javax.xml.crypto.dsig.dom.DOMSignContext.setNextSibling,Sets the next sibling node.
javax.xml.crypto.dsig.dom.DOMSignContext.setParent,Sets the parent node.
javax.xml.crypto.dsig.dom.DOMValidateContext.getNode,Returns the node.
javax.xml.crypto.dsig.dom.DOMValidateContext.setNode,Sets the node.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getInstance,"Returns aKeyInfoFactorythat supports the  default XML processing mechanism and representation type (""DOM"")."
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getInstance,"Returns aKeyInfoFactorythat supports the  specified XML processing mechanism and representation type (ex: ""DOM"")."
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getInstance,"Returns aKeyInfoFactorythat supports the  requested XML processing mechanism and representation type (ex: ""DOM""),  as supplied by the specified provider."
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getMechanismType,"Returns the type of the XML processing mechanism and representation  supported by thisKeyInfoFactory(ex: ""DOM"")"
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getProvider,Returns the provider of thisKeyInfoFactory.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getURIDereferencer,Returns a reference to theURIDereferencerthat is used by  default to dereference URIs inRetrievalMethodobjects.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyInfo,Creates aKeyInfocontaining the specified list of  key information types.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyInfo,Creates aKeyInfocontaining the specified list of key  information types and optional id.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyName,Creates aKeyNamefrom the specified name.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyValue,Creates aKeyValuefrom the specified public key.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newPGPData,Creates aPGPDatafrom the specified PGP public key  identifier.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newPGPData,"Creates aPGPDatafrom the specified PGP public key  identifier, and optional key material packet and list of external  elements."
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newPGPData,Creates aPGPDatafrom the specified PGP key material  packet and optional list of external elements.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newRetrievalMethod,Creates aRetrievalMethodfrom the specified URI.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newRetrievalMethod,Creates aRetrievalMethodfrom the specified parameters.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newX509Data,Creates aX509Datacontaining the specified list of  X.509 content.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newX509IssuerSerial,Creates anX509IssuerSerialfrom the specified X.500 issuer  distinguished name and serial number.
javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.unmarshalKeyInfo,Unmarshals a newKeyInfoinstance from a  mechanism-specificXMLStructure(ex:DOMStructure)  instance.
javax.xml.crypto.dsig.spec.ExcC14NParameterSpec.getPrefixList,Returns the inclusive namespace prefix list.
javax.xml.crypto.dsig.spec.HMACParameterSpec.getOutputLength,Returns the truncation length.
javax.xml.crypto.dsig.spec.RSAPSSParameterSpec.getPSSParameterSpec,Returns thePSSParameterSpecobject inside.
javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec.getXPathList,Returns a list of one or moreXPathTypeobjects.
javax.xml.crypto.dsig.spec.XPathFilterParameterSpec.getNamespaceMap,Returns a map of namespace prefixes.
javax.xml.crypto.dsig.spec.XPathFilterParameterSpec.getXPath,Returns the XPath expression to be evaluated.
javax.xml.crypto.dsig.spec.XPathType.toString,Returns the string form of the operation.
javax.xml.crypto.dsig.spec.XPathType.getFilter,Returns the filter operation.
javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec.getStylesheet,Returns the stylesheet.
com.sun.java.accessibility.util.AccessibilityEventMonitor.addPropertyChangeListener,Adds the specified listener to receive all PropertyChange events on  each UI object instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.AccessibilityEventMonitor.removePropertyChangeListener,Removes the specified listener so it no longer receives PropertyChange  events when they occur.
com.sun.java.accessibility.util.AccessibilityListenerList.add,Add the listener as a listener of the specified type.
com.sun.java.accessibility.util.AccessibilityListenerList.getListenerCount,Return the total number of listeners of the supplied type  for this listener list.
com.sun.java.accessibility.util.AccessibilityListenerList.getListenerList,"Passes back the event listener list as an array of listener type, listener pairs."
com.sun.java.accessibility.util.AccessibilityListenerList.remove,Remove the listener as a listener of the specified type.
com.sun.java.accessibility.util.AccessibilityListenerList.toString,Return a string representation of theAccessibilityListenerList.
com.sun.java.accessibility.util.AWTEventMonitor.addActionListener,Adds the specified listener to receive allACTIONevents on each component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addAdjustmentListener,Adds the specified listener to receive allADJUSTMENTevents on each component instance  in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addComponentListener,Adds the specified listener to receive allCOMPONENTevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addContainerListener,Adds the specified listener to receive allCONTAINERevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addFocusListener,Adds the specified listener to receive allFOCUSevents  on each component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addItemListener,Adds the specified listener to receive allITEMevents  on each component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addKeyListener,Adds the specified listener to receive allKEYevents on each  component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addMouseListener,Adds the specified listener to receive allMOUSEevents  on each component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addMouseMotionListener,Adds the specified listener to receive all mouseMOTIONevents on each component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addTextListener,Adds the specified listener to receive allTEXTevents  on each component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.addWindowListener,Adds the specified listener to receive allWINDOWevents on each component instance in the Java Virtual Machine when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.getComponentWithFocus,Returns the component that currently has keyboard focus.
com.sun.java.accessibility.util.AWTEventMonitor.removeActionListener,Removes the specified listener so it no longer receivesACTIONevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeAdjustmentListener,Removes the specified listener so it no longer receivesADJUSTMENTevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeComponentListener,Removes the specified listener so it no longer receivesCOMPONENTevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeContainerListener,Removes the specified listener so it no longer receivesCONTAINERevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeFocusListener,Removes the specified listener so it no longer receivesFOCUSevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeItemListener,Removes the specified listener so it no longer receivesITEMevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeKeyListener,Removes the specified listener so it no longer receivesKEYevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeMouseListener,Removes the specified listener so it no longer receivesMOUSEevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeMouseMotionListener,Removes the specified listener so it no longer receivesMOTIONevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeTextListener,Removes the specified listener so it no longer receivesTEXTevents when they occur.
com.sun.java.accessibility.util.AWTEventMonitor.removeWindowListener,Removes the specified listener so it no longer receivesWINDOWevents when they occur.
com.sun.java.accessibility.util.EventQueueMonitor.addGUIInitializedListener,Adds the specified listener to be notified when the GUI subsystem  is initialized.
com.sun.java.accessibility.util.EventQueueMonitor.addTopLevelWindowListener,Adds the specified listener to be notified when a top level window  is created or destroyed.
com.sun.java.accessibility.util.EventQueueMonitor.eventDispatched,Handle events as a result of registering a listener  on theEventQueueinmaybeInitialize().
com.sun.java.accessibility.util.EventQueueMonitor.getAccessibleAt,Obtain theAccessibleobject at the given point on the Screen.
com.sun.java.accessibility.util.EventQueueMonitor.getCurrentMousePosition,Return the last recorded position of the mouse in screen coordinates.
com.sun.java.accessibility.util.EventQueueMonitor.getTopLevelWindows,Return the list of top level Windows in use in the Java Virtual Machine.
com.sun.java.accessibility.util.EventQueueMonitor.getTopLevelWindowWithFocus,Return the top levelWindowthat currently has keyboard focus.
com.sun.java.accessibility.util.EventQueueMonitor.isGUIInitialized,Says whether the GUI subsystem has been initialized or not.
com.sun.java.accessibility.util.EventQueueMonitor.maybeInitialize,Tell theEventQueueMonitorto start listening for events.
com.sun.java.accessibility.util.EventQueueMonitor.removeGUIInitializedListener,Removes the specified listener to be notified when the GUI subsystem  is initialized.
com.sun.java.accessibility.util.EventQueueMonitor.removeTopLevelWindowListener,Removes the specified listener to be notified when a top level window  is created or destroyed.
com.sun.java.accessibility.util.SwingEventMonitor.addAncestorListener,Adds the specified listener to receive allANCESTORevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addCaretListener,Adds the specified listener to receive allCARETevents  on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addCellEditorListener,Adds the specified listener to receive allCELLEDITORevents on each  component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addChangeListener,Adds the specified listener to receive allCHANGEevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addColumnModelListener,Adds the specified listener to receive allCOLUMNMODELevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addDocumentListener,Adds the specified listener to receive allDOCUMENTevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addInternalFrameListener,Adds the specified listener to receive allINTERNALFRAMEevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addListDataListener,Adds the specified listener to receive allLISTDATAevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addListSelectionListener,Adds the specified listener to receive allLISTSELECTIONevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addMenuListener,Adds the specified listener to receive allMENUevents  on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addPopupMenuListener,Adds the specified listener to receive allPOPUPMENUevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addPropertyChangeListener,Adds the specified listener to receive allPROPERTYCHANGEevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addTableModelListener,Adds the specified listener to receive allTABLEMODELevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addTreeExpansionListener,Adds the specified listener to receive allTREEEXPANSIONevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addTreeModelListener,Adds the specified listener to receive allTREEMODELevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addTreeSelectionListener,Adds the specified listener to receive allTREESELECTIONevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addUndoableEditListener,Adds the specified listener to receive allUNDOABLEEDITevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.addVetoableChangeListener,Adds the specified listener to receive allVETOABLECHANGEevents on each component instance in the Java Virtual Machine as they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeAncestorListener,Removes the specified listener so it no longer receivesANCESTORevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeCaretListener,Removes the specified listener so it no longer receivesCARETevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeCellEditorListener,Removes the specified listener so it no longer receivesCELLEDITORevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeChangeListener,Removes the specified listener so it no longer receivesCHANGEevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeColumnModelListener,Removes the specified listener so it no longer receivesCOLUMNMODELevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeDocumentListener,Removes the specified listener so it no longer receivesDOCUMENTevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeInternalFrameListener,Removes the specified listener so it no longer receivesINTERNALFRAMEevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeListDataListener,Removes the specified listener so it no longer receivesLISTDATAevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeListSelectionListener,Removes the specified listener so it no longer receivesLISTSELECTIONevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeMenuListener,Removes the specified listener so it no longer receivesMENUevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removePopupMenuListener,Removes the specified listener so it no longer receivesPOPUPMENUevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removePropertyChangeListener,Removes the specified listener so it no longer receivesPROPERTYCHANGEevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeTableModelListener,Removes the specified listener so it no longer receivesTABLEMODELevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeTreeExpansionListener,Removes the specified listener so it no longer receivesTREEEXPANSIONevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeTreeModelListener,Removes the specified listener so it no longer receivesTREEMODELevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeTreeSelectionListener,Removes the specified listener so it no longer receivesTREESELECTIONevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeUndoableEditListener,Removes the specified listener so it no longer receivesUNDOABLEEDITevents when they occur.
com.sun.java.accessibility.util.SwingEventMonitor.removeVetoableChangeListener,Removes the specified listener so it no longer receivesVETOABLECHANGEevents when they occur.
com.sun.java.accessibility.util.Translator.addFocusListener,Adds the specifiedFocusListenerto receive focus events from  this component.
com.sun.java.accessibility.util.Translator.addPropertyChangeListener,Add aPropertyChangeListenerto the listener list.
com.sun.java.accessibility.util.Translator.contains,"Checks whether the specifiedPointis within this  object's bounds, where thePointis relative to the coordinate  system of the object."
com.sun.java.accessibility.util.Translator.equals,Returns true if this object is the same as the one passed in.
com.sun.java.accessibility.util.Translator.getAccessible,Obtain an object that implements interfaceAccessible.
com.sun.java.accessibility.util.Translator.getAccessibleAt,"Returns the accessible child contained at the local coordinate  Point, if one exists."
com.sun.java.accessibility.util.Translator.getAccessibleChild,Return the nth accessible child of the object.
com.sun.java.accessibility.util.Translator.getAccessibleContext,Returns this object.
com.sun.java.accessibility.util.Translator.getAccessibleParent,Get the accessible parent of this object.
com.sun.java.accessibility.util.Translator.getAccessibleStateSet,"Get the state of this object, given an already populated state."
com.sun.java.accessibility.util.Translator.getBackground,Get the backgroundColorof this object.
com.sun.java.accessibility.util.Translator.getBounds,Returns the current bounds of this object.
com.sun.java.accessibility.util.Translator.getCursor,Get theCursorof this object.
com.sun.java.accessibility.util.Translator.getFont,Get theFontof this object.
com.sun.java.accessibility.util.Translator.getFontMetrics,Get theFontMetricsof this object.
com.sun.java.accessibility.util.Translator.getForeground,Get the foregroundColorof this object.
com.sun.java.accessibility.util.Translator.getLocale,Gets theLocaleof the component.
com.sun.java.accessibility.util.Translator.getLocation,Returns the location of the object relative to parent.
com.sun.java.accessibility.util.Translator.getSize,Returns the current size of this object.
com.sun.java.accessibility.util.Translator.getSource,Get the sourceObjectof theTranslator.
com.sun.java.accessibility.util.Translator.getTranslatorClass,Find a translator for this class.
com.sun.java.accessibility.util.Translator.hashCode,Return hashcode.
com.sun.java.accessibility.util.Translator.removePropertyChangeListener,Remove thePropertyChangeListenerfrom the listener list.
com.sun.java.accessibility.util.Translator.setAccessibleName,Set the name of this object.
com.sun.java.accessibility.util.Translator.setBackground,Set the backgroundColorof this object.
com.sun.java.accessibility.util.Translator.setBounds,Sets the current bounds of this object.
com.sun.java.accessibility.util.Translator.setCursor,Set theCursorof this object.
com.sun.java.accessibility.util.Translator.setFont,Set theFontof this object.
com.sun.java.accessibility.util.Translator.setForeground,Set the foregroundColorof this object.
com.sun.java.accessibility.util.Translator.setLocation,Sets the location of the object relative to parent.
com.sun.java.accessibility.util.Translator.setSize,Sets the current size of this object.
com.sun.java.accessibility.util.Translator.setSource,Set the source object of theTranslator.
com.sun.tools.attach.AgentInitializationException.returnValue,"If the exception was created with the return value from the agentAgent_OnAttachfunction then this returns that value,  otherwise returns0."
com.sun.tools.attach.VirtualMachine.attach,Attaches to a Java virtual machine.
com.sun.tools.attach.VirtualMachine.detach,Detach from the virtual machine.
com.sun.tools.attach.VirtualMachine.equals,Tests this VirtualMachine for equality with another object.
com.sun.tools.attach.VirtualMachine.getAgentProperties,Returns the currentagent propertiesin the target virtual  machine.
com.sun.tools.attach.VirtualMachine.getSystemProperties,Returns the current system properties in the target virtual machine.
com.sun.tools.attach.VirtualMachine.hashCode,Returns a hash-code value for this VirtualMachine.
com.sun.tools.attach.VirtualMachine.id,Returns the identifier for this Java virtual machine.
com.sun.tools.attach.VirtualMachine.list,Return a list of Java virtual machines.
com.sun.tools.attach.VirtualMachine.loadAgent,Loads an agent.
com.sun.tools.attach.VirtualMachine.loadAgentLibrary,Loads an agent library.
com.sun.tools.attach.VirtualMachine.loadAgentPath,Load a native agent library by full pathname.
com.sun.tools.attach.VirtualMachine.provider,Returns the provider that created this virtual machine.
com.sun.tools.attach.VirtualMachine.startLocalManagementAgent,Starts the local JMX management agent in the target virtual machine.
com.sun.tools.attach.VirtualMachine.startManagementAgent,Starts the JMX management agent in the target virtual machine.
com.sun.tools.attach.VirtualMachine.toString,Returns the string representation of theVirtualMachine.
com.sun.tools.attach.VirtualMachineDescriptor.displayName,Return thedisplay namecomponent of this descriptor.
com.sun.tools.attach.VirtualMachineDescriptor.equals,Tests this VirtualMachineDescriptor for equality with another object.
com.sun.tools.attach.VirtualMachineDescriptor.hashCode,Returns a hash-code value for this VirtualMachineDescriptor.
com.sun.tools.attach.VirtualMachineDescriptor.id,Return the identifier component of this descriptor.
com.sun.tools.attach.VirtualMachineDescriptor.provider,Return theAttachProviderthat this descriptor references.
com.sun.tools.attach.VirtualMachineDescriptor.toString,Returns the string representation of theVirtualMachineDescriptor.
com.sun.tools.attach.spi.AttachProvider.listVirtualMachines,Lists the Java virtual machines known to this provider.
com.sun.tools.attach.spi.AttachProvider.name,Return this provider's name.
com.sun.tools.attach.spi.AttachProvider.providers,Returns a list of the installed attach providers.
com.sun.tools.attach.spi.AttachProvider.type,Return this provider's type.
com.sun.source.util.DocTreePath.getDocComment,Returns theDocCommentTreeassociated with this path.
com.sun.source.util.DocTreePath.getLeaf,Returns the leaf node for this path.
com.sun.source.util.DocTreePath.getParentPath,"Returns the path for the enclosing node, ornullif there is no enclosing node."
com.sun.source.util.DocTreePath.getPath,"Returns a documentation tree path for a tree node within a subtree  identified by aDocTreePathobject, ornullif the node is not found."
com.sun.source.util.DocTreePath.getPath,"Returns a documentation tree path for a tree node within a compilation unit,  ornullif the node is not found."
com.sun.source.util.DocTreePath.getTreePath,Returns theTreePathassociated with this path.
com.sun.source.util.DocTreePath.iterator,Returns an iterator over elements of typeT.
com.sun.source.util.DocTreePathScanner.getCurrentPath,"Returns the current path for the node, as built up by the currently  active set of scan calls."
com.sun.source.util.DocTreePathScanner.scan,Scans a single node.
com.sun.source.util.DocTreePathScanner.scan,Scans a tree from a position identified by a tree path.
com.sun.source.util.DocTrees.getBreakIterator,Returns the break iterator used to compute the first sentence of  documentation comments.
com.sun.source.util.DocTrees.getCharacters,"Returns a string containing the characters for the entity in a given entity tree,  ornullif the tree does not represent a valid series of characters."
com.sun.source.util.DocTrees.getDocCommentTree,"Returns the doc comment tree, if any, for the Tree node identified by a given TreePath."
com.sun.source.util.DocTrees.getDocCommentTree,Returns the doc comment tree of the given element.
com.sun.source.util.DocTrees.getDocCommentTree,Returns the doc comment tree of the given file whose path is  specified relative to the given element.
com.sun.source.util.DocTrees.getDocCommentTree,Returns the doc comment tree of the given file.
com.sun.source.util.DocTrees.getDocTreeFactory,Returns a utility object for creatingDocTreeobjects.
com.sun.source.util.DocTrees.getDocTreePath,Returns a doc tree path containing the doc comment tree of the given file.
com.sun.source.util.DocTrees.getElement,"Returns the language model element referred to by the leaf node of the givenDocTreePath, ornullif unknown."
com.sun.source.util.DocTrees.getFirstSentence,Returns the list ofDocTreerepresenting the first sentence of  a comment.
com.sun.source.util.DocTrees.getSourcePositions,Returns a utility object for accessing the source positions  of documentation tree nodes.
com.sun.source.util.DocTrees.getType,"Returns the language model type referred to by the leaf node of the givenDocTreePath, ornullif unknown."
com.sun.source.util.DocTrees.instance,Returns a DocTrees object for a given ProcessingEnvironment.
com.sun.source.util.DocTrees.instance,Returns a DocTrees object for a given CompilationTask.
com.sun.source.util.DocTrees.printMessage,Prints a message of the specified kind at the location of the  tree within the provided compilation unit
com.sun.source.util.DocTrees.setBreakIterator,Sets the break iterator to compute the first sentence of  documentation comments.
com.sun.source.util.DocTreeScanner.reduce,Reduces two results into a combined result.
com.sun.source.util.DocTreeScanner.scan,Scans a sequence of nodes.
com.sun.source.util.DocTreeScanner.visitAttribute,Visits an AttributeTree node.
com.sun.source.util.DocTreeScanner.visitAuthor,Visits an AuthorTree node.
com.sun.source.util.DocTreeScanner.visitComment,Visits a CommentTree node.
com.sun.source.util.DocTreeScanner.visitDeprecated,Visits a DeprecatedTree node.
com.sun.source.util.DocTreeScanner.visitDocComment,Visits a DocCommentTree node.
com.sun.source.util.DocTreeScanner.visitDocRoot,Visits a DocRootTree node.
com.sun.source.util.DocTreeScanner.visitDocType,Visits a DocTypeTree node.
com.sun.source.util.DocTreeScanner.visitEndElement,Visits an EndElementTree node.
com.sun.source.util.DocTreeScanner.visitEntity,Visits an EntityTree node.
com.sun.source.util.DocTreeScanner.visitErroneous,Visits an ErroneousTree node.
com.sun.source.util.DocTreeScanner.visitHidden,Visits a HiddenTree node.
com.sun.source.util.DocTreeScanner.visitIdentifier,Visits an IdentifierTree node.
com.sun.source.util.DocTreeScanner.visitIndex,Visits an IndexTree node.
com.sun.source.util.DocTreeScanner.visitInheritDoc,Visits an InheritDocTree node.
com.sun.source.util.DocTreeScanner.visitLink,Visits a LinkTree node.
com.sun.source.util.DocTreeScanner.visitLiteral,Visits an LiteralTree node.
com.sun.source.util.DocTreeScanner.visitOther,Visits an unknown type of DocTree node.
com.sun.source.util.DocTreeScanner.visitParam,Visits a ParamTree node.
com.sun.source.util.DocTreeScanner.visitProvides,Visits a ProvidesTree node.
com.sun.source.util.DocTreeScanner.visitReference,Visits a ReferenceTree node.
com.sun.source.util.DocTreeScanner.visitReturn,Visits a ReturnTree node.
com.sun.source.util.DocTreeScanner.visitSee,Visits a SeeTree node.
com.sun.source.util.DocTreeScanner.visitSerial,Visits a SerialTree node.
com.sun.source.util.DocTreeScanner.visitSerialData,Visits a SerialDataTree node.
com.sun.source.util.DocTreeScanner.visitSerialField,Visits a SerialFieldTree node.
com.sun.source.util.DocTreeScanner.visitSince,Visits a SinceTree node.
com.sun.source.util.DocTreeScanner.visitStartElement,Visits a StartElementTree node.
com.sun.source.util.DocTreeScanner.visitSummary,Visits a SummaryTree node.
com.sun.source.util.DocTreeScanner.visitSystemProperty,Visits a SystemPropertyTree node.
com.sun.source.util.DocTreeScanner.visitText,Visits a TextTree node.
com.sun.source.util.DocTreeScanner.visitThrows,Visits a ThrowsTree node.
com.sun.source.util.DocTreeScanner.visitUnknownBlockTag,Visits an UnknownBlockTagTree node.
com.sun.source.util.DocTreeScanner.visitUnknownInlineTag,Visits an UnknownInlineTagTree node.
com.sun.source.util.DocTreeScanner.visitUses,Visits a UsesTree node.
com.sun.source.util.DocTreeScanner.visitValue,Visits a ValueTree node.
com.sun.source.util.DocTreeScanner.visitVersion,Visits a VersionTree node.
com.sun.source.util.JavacTask.addTaskListener,Adds a specified listener so that it receives notification of events  describing the progress of this compilation task.
com.sun.source.util.JavacTask.analyze,Completes all analysis.
com.sun.source.util.JavacTask.generate,Generates code.
com.sun.source.util.JavacTask.getElements,Returns a utility object for dealing with program elements.
com.sun.source.util.JavacTask.getTypeMirror,Returns a type mirror of the tree node determined by the specified path.
com.sun.source.util.JavacTask.getTypes,Returns a utility object for dealing with type mirrors.
com.sun.source.util.JavacTask.instance,Returns theJavacTaskfor aProcessingEnvironment.
com.sun.source.util.JavacTask.parse,Parses the specified files returning a list of abstract syntax trees.
com.sun.source.util.JavacTask.removeTaskListener,Removes the specified listener so that it no longer receives  notification of events describing the progress of this  compilation task.
com.sun.source.util.JavacTask.setParameterNameProvider,Sets the specifiedParameterNameProvider.
com.sun.source.util.JavacTask.setTaskListener,Sets a specified listener to receive notification of events  describing the progress of this compilation task.
com.sun.source.util.SimpleDocTreeVisitor.defaultAction,"The default action, used by all visit methods that are not overridden."
com.sun.source.util.SimpleDocTreeVisitor.visit,Invokes the appropriate visit method specific to the type of the node.
com.sun.source.util.SimpleDocTreeVisitor.visit,Invokes the appropriate visit method on each of a sequence of nodes.
com.sun.source.util.TaskEvent.getCompilationUnit,Returns the compilation unit for this event.
com.sun.source.util.TaskEvent.getKind,Returns the kind for this event.
com.sun.source.util.TaskEvent.getSourceFile,Returns the source file for this event.
com.sun.source.util.TaskEvent.getTypeElement,Returns the type element for this event.
com.sun.source.util.TreePath.getCompilationUnit,Returns the compilation unit associated with this path.
com.sun.source.util.TreePath.getPath,"Returns a tree path for a tree node within a compilation unit,  ornullif the node is not found."
com.sun.source.util.TreePath.getPath,Returns a tree path for a tree node within a subtree identified by a TreePath object.
com.sun.source.util.TreePath.iterator,Iterates from leaves to root.
com.sun.source.util.TreePathScanner.scan,Scans a tree from a position identified by a TreePath.
com.sun.source.util.Trees.getDocComment,"Returns the doc comment, if any, for the Tree node identified by a given TreePath."
com.sun.source.util.Trees.getElement,Returns the Element for the Tree node identified by a given TreePath.
com.sun.source.util.Trees.getLub,Returns the lub of an exception parameter declared in a catch clause.
com.sun.source.util.Trees.getOriginalType,Returns the original type from the ErrorType object.
com.sun.source.util.Trees.getPath,Returns the path to tree node within the specified compilation unit.
com.sun.source.util.Trees.getPath,Returns the TreePath node for a given Element.
com.sun.source.util.Trees.getPath,Returns the TreePath node for an AnnotationMirror on a given Element.
com.sun.source.util.Trees.getPath,Returns the TreePath node for an AnnotationValue for an AnnotationMirror on a given Element.
com.sun.source.util.Trees.getScope,Returns the Scope for the Tree node identified by a given TreePath.
com.sun.source.util.Trees.getSourcePositions,Returns a utility object for obtaining source positions.
com.sun.source.util.Trees.getTree,Returns the Tree node for a given Element.
com.sun.source.util.Trees.getTree,Returns the Tree node for an AnnotationMirror on a given Element.
com.sun.source.util.Trees.getTree,Returns the Tree node for an AnnotationValue for an AnnotationMirror on a given Element.
com.sun.source.util.Trees.getTree,Returns the MethodTree node for a given ExecutableElement.
com.sun.source.util.Trees.getTree,Returns the ClassTree node for a given TypeElement.
com.sun.source.util.Trees.getTypeMirror,Returns the TypeMirror for the Tree node identified by a given TreePath.
com.sun.source.util.Trees.instance,Returns a Trees object for a given ProcessingEnvironment.
com.sun.source.util.Trees.instance,Returns a Trees object for a given CompilationTask.
com.sun.source.util.Trees.isAccessible,Checks whether the given element is accessible as a member of the given  type in a given scope.
com.sun.source.util.Trees.isAccessible,Checks whether a given type is accessible in a given scope.
com.sun.tools.javac.Main.compile,"Programmatic interface to the Java Programming Language  compiler, javac."
com.sun.tools.javac.Main.main,Main entry point for the launcher.
jdk.dynalink.CallSiteDescriptor.changeMethodType,Finds or creates a call site descriptor that only differs in its  method type from this descriptor.
jdk.dynalink.CallSiteDescriptor.changeOperation,Finds or creates a call site descriptor that only differs in its  operation from this descriptor.
jdk.dynalink.CallSiteDescriptor.equals,Returns true if this call site descriptor is equal to the passed object.
jdk.dynalink.CallSiteDescriptor.getMethodType,The type of the method at the call site.
jdk.dynalink.CallSiteDescriptor.getOperation,Returns the operation at the call site.
jdk.dynalink.CallSiteDescriptor.hashCode,"Returns a value-based hash code of this call site descriptor computed  from its operation, method type, and lookup object's lookup class and  lookup modes."
jdk.dynalink.CallSiteDescriptor.toString,"Returns the string representation of this call site descriptor, of the  formatname(parameterTypes)returnType@lookup."
jdk.dynalink.DynamicLinker.getLinkedCallSiteLocation,Returns a stack trace element describing the location of theinvokedynamiccall site currently being linked on the current  thread.
jdk.dynalink.DynamicLinker.getLinkerServices,Returns the object representing the linker services of this class that  are normally exposed to individuallanguage-specific linkers.
jdk.dynalink.DynamicLinker.link,Links an invokedynamic call site.
jdk.dynalink.DynamicLinkerFactory.createLinker,Creates a new dynamic linker based on the current configuration.
jdk.dynalink.DynamicLinkerFactory.getAutoLoadingErrors,Returns a list ofServiceConfigurationErrors that were  encountered while loading automatically discovered linkers during the  last invocation ofcreateLinker().
jdk.dynalink.DynamicLinkerFactory.setAutoConversionStrategy,Sets an object representing the conversion strategy for automatic type  conversions.
jdk.dynalink.DynamicLinkerFactory.setClassLoader,Sets the class loader for automatic discovery of available guarding  dynamic linkers.
jdk.dynalink.DynamicLinkerFactory.setFallbackLinkers,Sets the fallback guarding dynamic linkers.
jdk.dynalink.DynamicLinkerFactory.setInternalObjectsFilter,Sets a method handle transformer that is supposed to act as the  implementation ofLinkerServices.filterInternalObjects(MethodHandle)for linker  services of dynamic linkers created by this factory.
jdk.dynalink.DynamicLinkerFactory.setPrelinkTransformer,Set the pre-link transformer.
jdk.dynalink.DynamicLinkerFactory.setPrioritizedLinker,Sets a single prioritized linker.
jdk.dynalink.DynamicLinkerFactory.setPrioritizedLinkers,Sets the prioritized guarding dynamic linkers.
jdk.dynalink.DynamicLinkerFactory.setSyncOnRelink,Sets whether the dynamic linker created by this factory will invokeMutableCallSite.syncAll(MutableCallSite[])after a call site is  relinked.
jdk.dynalink.DynamicLinkerFactory.setUnstableRelinkThreshold,"Sets the unstable relink threshold; the number of times a call site is  relinked after which it will be considered unstable, and subsequent link  requests for it will indicate this."
jdk.dynalink.NamedOperation.changeName,Finds or creates a named operation that differs from this one only in the name.
jdk.dynalink.NamedOperation.equals,Compares this named operation to another object.
jdk.dynalink.NamedOperation.getBaseOperation,Returns the base operation of this named operation.
jdk.dynalink.NamedOperation.getBaseOperation,"If the passed operation is a named operation, returns itsgetBaseOperation(), otherwise returns the operation as is."
jdk.dynalink.NamedOperation.getName,Returns the name of this named operation.
jdk.dynalink.NamedOperation.getName,"If the passed operation is a named operation, returns itsgetName(), otherwise returns null."
jdk.dynalink.NamedOperation.hashCode,Returns the hash code of this named operation.
jdk.dynalink.NamedOperation.toString,Returns the string representation of this named operation.
jdk.dynalink.NamespaceOperation.contains,Returns true if this namespace operation contains a namespace equal to  the specified namespace.
jdk.dynalink.NamespaceOperation.contains,"Returns true if the specified operation is aNamespaceOperationand its base operation is equal to the specified operation, and it  contains the specified namespace."
jdk.dynalink.NamespaceOperation.equals,Returns true if the other object is also a namespace operation and their  base operation and namespaces are equal.
jdk.dynalink.NamespaceOperation.getBaseOperation,"If the passed operation is a namespace operation, returns itsgetBaseOperation(), otherwise returns the operation as is."
jdk.dynalink.NamespaceOperation.getNamespace,Returns the i-th namespace in this namespace operation.
jdk.dynalink.NamespaceOperation.getNamespaceCount,Returns the number of namespaces in this namespace operation.
jdk.dynalink.NamespaceOperation.getNamespaces,Returns the namespaces in this namespace operation.
jdk.dynalink.NamespaceOperation.getNamespaces,"If the passed operation is a namespace operation, returns itsgetNamespaces(), otherwise returns an empty array."
jdk.dynalink.NamespaceOperation.hashCode,Returns the hash code of this namespace operation.
jdk.dynalink.NamespaceOperation.toString,Returns the string representation of this namespace operation.
jdk.dynalink.SecureLookupSupplier.getLookup,Returns the lookup secured by thisSecureLookupSupplier.
jdk.dynalink.SecureLookupSupplier.getLookupPrivileged,Returns the value ofgetLookup()without a security check.
jdk.dynalink.beans.BeansLinker.getConstructorMethod,Return the dynamic method of constructor of the given class and the given  signature.
jdk.dynalink.beans.BeansLinker.getGuardedInvocation,Creates a guarded invocation appropriate for a particular invocation with  the specified arguments at a call site.
jdk.dynalink.beans.BeansLinker.getInstanceMethodNames,Returns a set of names of all instance methods of a class.
jdk.dynalink.beans.BeansLinker.getLinkerForClass,Returns a bean linker for a particular single class.
jdk.dynalink.beans.BeansLinker.getReadableInstancePropertyNames,Returns a set of names of all readable instance properties of a class.
jdk.dynalink.beans.BeansLinker.getReadableStaticPropertyNames,Returns a set of names of all readable static properties of a class.
jdk.dynalink.beans.BeansLinker.getStaticMethodNames,Returns a set of names of all static methods of a class.
jdk.dynalink.beans.BeansLinker.getWritableInstancePropertyNames,Returns a set of names of all writable instance properties of a class.
jdk.dynalink.beans.BeansLinker.getWritableStaticPropertyNames,Returns a set of names of all writable static properties of a class.
jdk.dynalink.beans.BeansLinker.isDynamicConstructor,"Returns true if the object is a Java constructor (obtained throughgetConstructorMethod(Class, String)}."
jdk.dynalink.beans.BeansLinker.isDynamicMethod,"Returns true if the object is a Java dynamic method (e.g., one  obtained through aGET:METHODoperation on a Java object orStaticClassor throughgetConstructorMethod(Class, String)."
jdk.dynalink.beans.StaticClass.forClass,Retrieves theStaticClassinstance for the specified class.
jdk.dynalink.beans.StaticClass.getRepresentedClass,Returns the represented Java class.
jdk.dynalink.linker.GuardedInvocation.addSwitchPoint,Create a new guarded invocation with an added switch point.
jdk.dynalink.linker.GuardedInvocation.asType,"Changes the type of the invocation, as ifMethodHandle.asType(MethodType)was applied to its invocation  and its guard, if it has one (with return type changed to boolean, and  parameter count potentially truncated for the guard)."
jdk.dynalink.linker.GuardedInvocation.asType,"Changes the type of the invocation, as ifMethodHandle.asType(MethodType)was applied to its invocation  and its guard, if it has one (with return type changed to boolean for  guard)."
jdk.dynalink.linker.GuardedInvocation.asType,"Changes the type of the invocation, as ifLinkerServices.asType(MethodHandle, MethodType)was applied to  its invocation and its guard, if it has one (with return type changed to  boolean, and parameter count potentially truncated for the guard)."
jdk.dynalink.linker.GuardedInvocation.asTypeSafeReturn,"Changes the type of the invocation, as ifLinkerServices.asTypeLosslessReturn(MethodHandle, MethodType)was  applied to its invocation andLinkerServices.asType(MethodHandle, MethodType)applied to its  guard, if it has one (with return type changed to boolean, and parameter  count potentially truncated for the guard)."
jdk.dynalink.linker.GuardedInvocation.compose,"Composes the invocation, guard, switch points, and the exception into a  composite method handle that knows how to fall back when the guard fails  or the invocation is invalidated."
jdk.dynalink.linker.GuardedInvocation.dropArguments,"Makes an invocation that drops arguments in both the invocation and the  guard (if it exists and has at leastposparameters) withMethodHandles.dropArguments(MethodHandle, int, Class...)."
jdk.dynalink.linker.GuardedInvocation.dropArguments,"Makes an invocation that drops arguments in both the invocation and the  guard (if it exists and has at leastposparameters) withMethodHandles.dropArguments(MethodHandle, int, List)."
jdk.dynalink.linker.GuardedInvocation.filterArguments,"Applies argument filters to both the invocation and the guard  (if it exists and has at leastpos + 1parameters) withMethodHandles.filterArguments(MethodHandle, int, MethodHandle...)."
jdk.dynalink.linker.GuardedInvocation.getException,Returns the exception type that if thrown by the invocation should  invalidate the linkage of this guarded invocation.
jdk.dynalink.linker.GuardedInvocation.getGuard,Returns the guard method handle.
jdk.dynalink.linker.GuardedInvocation.getInvocation,Returns the invocation method handle.
jdk.dynalink.linker.GuardedInvocation.getSwitchPoints,Returns the switch points that can be used to invalidate the linkage of  this invocation handle.
jdk.dynalink.linker.GuardedInvocation.hasBeenInvalidated,Returns true if and only if this guarded invocation has at least one  invalidated switch point.
jdk.dynalink.linker.GuardedInvocation.replaceMethods,"Creates a new guarded invocation with different methods, preserving the switch point."
jdk.dynalink.linker.support.CompositeGuardingDynamicLinker.getGuardedInvocation,Delegates the call to its component linkers.
jdk.dynalink.linker.support.CompositeTypeBasedGuardingDynamicLinker.canLinkType,Returns true if at least one of the composite linkers returns true fromTypeBasedGuardingDynamicLinker.canLinkType(Class)for the type.
jdk.dynalink.linker.support.CompositeTypeBasedGuardingDynamicLinker.optimize,Optimizes a list of type-based linkers.
jdk.dynalink.linker.support.DefaultInternalObjectFilter.transform,Transforms a method handle.
jdk.dynalink.linker.support.Guards.asType,"Takes a method handle intended to be used as a guard, and adapts it to  the requested type, but returning a boolean."
jdk.dynalink.linker.support.Guards.getClassGuard,Creates a guard method that tests its only argument for being of an exact particular class.
jdk.dynalink.linker.support.Guards.getIdentityGuard,Creates a guard method that tests its only argument for being referentially identical to another object
jdk.dynalink.linker.support.Guards.getInstanceOfGuard,Creates a guard method that tests its only argument for being an instance of a particular class.
jdk.dynalink.linker.support.Guards.isArray,Creates a method handle that returns true if the argument in the specified position is a Java array.
jdk.dynalink.linker.support.Guards.isInstance,"Creates a method handle with arguments of a specified type, but with boolean return value."
jdk.dynalink.linker.support.Guards.isNotNull,Returns a guard that tests whether the first argument is not null.
jdk.dynalink.linker.support.Guards.isNull,Returns a guard that tests whether the first argument is null.
jdk.dynalink.linker.support.Guards.isOfClass,"Creates a guard method handle with arguments of a specified type, but with boolean return value."
jdk.dynalink.linker.support.Lookup.findGetter,"Performs aMethodHandles.Lookup.findGetter(Class, String, Class),  converting any encounteredIllegalAccessExceptioninto anIllegalAccessErrorandNoSuchFieldExceptioninto aNoSuchFieldError."
jdk.dynalink.linker.support.Lookup.findOwnSpecial,"Given a lookup, finds usingfindSpecial(Class, String, MethodType)a method on that lookup's class."
jdk.dynalink.linker.support.Lookup.findOwnSpecial,"Finds usingfindSpecial(Class, String, MethodType)a method on  that lookup's class."
jdk.dynalink.linker.support.Lookup.findOwnStatic,"Given a lookup, finds usingfindStatic(Class, String, MethodType)a method on that lookup's class."
jdk.dynalink.linker.support.Lookup.findOwnStatic,"Finds usingfindStatic(Class, String, MethodType)a method on  that lookup's class."
jdk.dynalink.linker.support.Lookup.findSpecial,"Performs aMethodHandles.Lookup.findSpecial(Class, String, MethodType, Class)on the underlying lookup."
jdk.dynalink.linker.support.Lookup.findStatic,"Performs aMethodHandles.Lookup.findStatic(Class, String, MethodType)on the underlying lookup."
jdk.dynalink.linker.support.Lookup.findVirtual,"Performs aMethodHandles.Lookup.findVirtual(Class, String, MethodType)on the underlying lookup."
jdk.dynalink.linker.support.Lookup.unreflect,"Performs aMethodHandles.Lookup.unreflect(Method),  converting any encounteredIllegalAccessExceptioninto anIllegalAccessError."
jdk.dynalink.linker.support.Lookup.unreflectConstructor,"Performs aMethodHandles.Lookup.unreflectConstructor(Constructor),  converting any encounteredIllegalAccessExceptioninto anIllegalAccessError."
jdk.dynalink.linker.support.Lookup.unreflectGetter,"Performs aMethodHandles.Lookup.unreflectGetter(Field),  converting any encounteredIllegalAccessExceptioninto anIllegalAccessError."
jdk.dynalink.linker.support.Lookup.unreflectSetter,"Performs aMethodHandles.Lookup.unreflectSetter(Field),  converting any encounteredIllegalAccessExceptioninto anIllegalAccessError."
jdk.dynalink.linker.support.SimpleLinkRequest.getArguments,Returns the arguments for the invocation being linked.
jdk.dynalink.linker.support.SimpleLinkRequest.getCallSiteDescriptor,Returns the call site descriptor for the call site being linked.
jdk.dynalink.linker.support.SimpleLinkRequest.getReceiver,Returns the first argument for the invocation being linked; this is  typically the receiver object.
jdk.dynalink.linker.support.SimpleLinkRequest.isCallSiteUnstable,"Returns true if the call site is considered unstable, that is, it has been relinked more times than was  specified inDynamicLinkerFactory.setUnstableRelinkThreshold(int)."
jdk.dynalink.linker.support.SimpleLinkRequest.replaceArguments,Returns a request identical to this one with call site descriptor and arguments replaced with the ones specified.
jdk.dynalink.linker.support.TypeUtilities.getPrimitiveType,"When passed a class representing a wrapper for a primitive type, returns  the class representing the corresponding primitive type."
jdk.dynalink.linker.support.TypeUtilities.getPrimitiveTypeByName,Given a name of a primitive type returns the class representing it.
jdk.dynalink.linker.support.TypeUtilities.getWrapperType,"When passed a class representing a primitive type, returns the class representing the corresponding  wrapper type."
jdk.dynalink.linker.support.TypeUtilities.isConvertibleWithoutLoss,Determines whether a type can be converted to another without losing any  precision.
jdk.dynalink.linker.support.TypeUtilities.isMethodInvocationConvertible,"Determines whether one type can be converted to another type using a method invocation conversion, as per JLS 5.3  ""Method Invocation Conversion""."
jdk.dynalink.linker.support.TypeUtilities.isSubtype,"Determines whether one type is a subtype of another type, as per JLS  4.10 ""Subtyping""."
jdk.dynalink.linker.support.TypeUtilities.isWrapperType,Returns true if the passed type is a wrapper for a primitive type.
jdk.dynalink.support.AbstractRelinkableCallSite.getDescriptor,Returns the descriptor for this call site.
jdk.dynalink.support.AbstractRelinkableCallSite.initialize,Invoked by dynamic linker to initialize the relinkable call site by  setting a relink-and-invoke method handle.
jdk.dynalink.support.ChainedCallSite.getMaxChainLength,The maximum number of method handles in the chain.
jdk.dynalink.support.ChainedCallSite.relink,"This method will be called by the dynamic linker every time the call site  is relinked (but seeRelinkableCallSite.resetAndRelink(GuardedInvocation, MethodHandle)for an  exception)."
jdk.dynalink.support.ChainedCallSite.resetAndRelink,"This method will be called by the dynamic linker every time the call site  is relinkedandthe linker wishes the call site to throw away any  prior linkage state (that is how it differs fromRelinkableCallSite.relink(GuardedInvocation, MethodHandle))."
com.sun.net.httpserver.Authenticator.getResponseCode,Returns the response code to send to the client.
com.sun.net.httpserver.Authenticator.authenticate,Called to authenticate each incoming request.
com.sun.net.httpserver.Authenticator.getPrincipal,Returns the authenticated userPrincipal.
com.sun.net.httpserver.BasicAuthenticator.checkCredentials,Called for each incoming request to verify the  given name and password in the context of this  authenticator's realm.
com.sun.net.httpserver.BasicAuthenticator.getRealm,Returns the realm thisBasicAuthenticatorwas created with.
com.sun.net.httpserver.Filter.doFilter,"Calls the next filter in the chain, or else the users exchange  handler, if this is the final filter in the chain."
com.sun.net.httpserver.Filter.afterHandler,Returns a post-processingFilterwith the given description and  operation.
com.sun.net.httpserver.Filter.beforeHandler,Returns a pre-processingFilterwith the given description and  operation.
com.sun.net.httpserver.Filter.description,Returns a short description of thisFilter.
com.sun.net.httpserver.Filter.doFilter,Asks this filter to pre/post-process the given exchange.
com.sun.net.httpserver.Headers.add,Adds the given value to the list of headers for the given key.
com.sun.net.httpserver.Headers.getFirst,Returns the first value from theListofStringvalues for the given key (if at least one exists).
com.sun.net.httpserver.Headers.set,Sets the given value as the sole header value for the given  key.
com.sun.net.httpserver.HttpContext.getAttributes,"Returns a mutableMap, which can be used to pass configuration  and other data toFiltermodules and to the context's exchange  handler."
com.sun.net.httpserver.HttpContext.getAuthenticator,Returns the currently setAuthenticatorfor this context  if one exists.
com.sun.net.httpserver.HttpContext.getFilters,Returns this context'sListoffilters.
com.sun.net.httpserver.HttpContext.getHandler,Returns the handler for this context.
com.sun.net.httpserver.HttpContext.getPath,Returns the path this context was created with.
com.sun.net.httpserver.HttpContext.getServer,Returns the server this context was created with.
com.sun.net.httpserver.HttpContext.setAuthenticator,Sets theAuthenticatorfor thisHttpContext.
com.sun.net.httpserver.HttpContext.setHandler,"Sets the handler for this context, if not already set."
com.sun.net.httpserver.HttpExchange.close,"Ends this exchange by doing the following in sequence:          close the requestInputStream, if not already closed."
com.sun.net.httpserver.HttpExchange.getAttribute,Filtermodules may store arbitrary objects withHttpExchangeinstances as an out-of-band communication mechanism.
com.sun.net.httpserver.HttpExchange.getHttpContext,Get theHttpContextfor this exchange.
com.sun.net.httpserver.HttpExchange.getLocalAddress,Returns the local address on which the request was received.
com.sun.net.httpserver.HttpExchange.getPrincipal,"If an authenticator is set on theHttpContextthat owns this exchange,  then this method will return theHttpPrincipalthat represents  the authenticated user for thisHttpExchange."
com.sun.net.httpserver.HttpExchange.getProtocol,Returns the protocol string from the request in the formprotocol/majorVersion.minorVersion.
com.sun.net.httpserver.HttpExchange.getRemoteAddress,Returns the address of the remote entity invoking this request.
com.sun.net.httpserver.HttpExchange.getRequestBody,Returns a stream from which the request body can be read.
com.sun.net.httpserver.HttpExchange.getRequestHeaders,Returns an immutableMapcontaining the HTTP headers that were  included with this request.
com.sun.net.httpserver.HttpExchange.getRequestURI,Get the requestURI.
com.sun.net.httpserver.HttpExchange.getResponseBody,Returns a stream to which the response body must be  written.
com.sun.net.httpserver.HttpExchange.getResponseCode,"Returns the response code, if it has already been set."
com.sun.net.httpserver.HttpExchange.getResponseHeaders,Returns a mutableMapinto which the HTTP response headers can be  stored and which will be transmitted as part of this response.
com.sun.net.httpserver.HttpExchange.sendResponseHeaders,Starts sending the response back to the client using the current set of  response headers and the numeric response code as specified in this  method.
com.sun.net.httpserver.HttpExchange.setStreams,"Used byFiltersto wrap either  (or both) of this exchange'sInputStreamandOutputStream, with the given filtered streams so that  subsequent calls togetRequestBody()will return the givenInputStream, and calls togetResponseBody()will return  the givenOutputStream."
com.sun.net.httpserver.HttpPrincipal.equals,Compare two instances ofHttpPrincipal.
com.sun.net.httpserver.HttpPrincipal.getName,Returns the contents of this principal in the formrealm:username.
com.sun.net.httpserver.HttpPrincipal.getRealm,Returns therealmthis object was created with.
com.sun.net.httpserver.HttpPrincipal.getUsername,Returns theusernamethis object was created with.
com.sun.net.httpserver.HttpPrincipal.hashCode,Returns a hashcode for thisHttpPrincipal.
com.sun.net.httpserver.HttpPrincipal.toString,Returns the same string asgetName().
com.sun.net.httpserver.HttpsConfigurator.configure,Called by theHttpsServerto configure the parameters for a https  connection currently being established.
com.sun.net.httpserver.HttpsConfigurator.getSSLContext,Returns theSSLContextfor thisHttpsConfigurator.
com.sun.net.httpserver.HttpServer.bind,Binds a currently unboundHttpServerto the given address and  port number.
com.sun.net.httpserver.HttpServer.create,Creates aHttpServerinstance which is initially not bound to any  local address/port.
com.sun.net.httpserver.HttpServer.create,Create aHttpServerinstance which will bind to the  specifiedInetSocketAddress(IP address and port number).
com.sun.net.httpserver.HttpServer.createContext,Creates a HttpContext without initially specifying a handler.
com.sun.net.httpserver.HttpServer.createContext,Creates aHttpContext.
com.sun.net.httpserver.HttpServer.getAddress,Returns the address this server is listening on
com.sun.net.httpserver.HttpServer.getExecutor,"Returns this server'sExecutorobject if one was specified withsetExecutor(Executor), ornullif none was specified."
com.sun.net.httpserver.HttpServer.removeContext,Removes the given context from the server.
com.sun.net.httpserver.HttpServer.removeContext,Removes the context identified by the given path from the server.
com.sun.net.httpserver.HttpServer.setExecutor,Sets this server'sExecutorobject.
com.sun.net.httpserver.HttpServer.start,Starts this server in a new background thread.
com.sun.net.httpserver.HttpServer.stop,Stops this server by closing the listening socket and disallowing  any new exchanges from being processed.
com.sun.net.httpserver.HttpsExchange.getSSLSession,Get theSSLSessionfor this exchange.
com.sun.net.httpserver.HttpsParameters.getCipherSuites,Returns a copy of the array of ciphersuites ornullif none  have been set.
com.sun.net.httpserver.HttpsParameters.getClientAddress,Returns the address of the remote client initiating the connection.
com.sun.net.httpserver.HttpsParameters.getHttpsConfigurator,Returns theHttpsConfiguratorfor thisHttpsParameters.
com.sun.net.httpserver.HttpsParameters.getProtocols,Returns a copy of the array of protocols ornullif none have been  set.
com.sun.net.httpserver.HttpsParameters.setSSLParameters,Sets theSSLParametersto use for thisHttpsParameters.
com.sun.net.httpserver.HttpsServer.create,Creates aHttpsServerinstance which is initially not bound to any  local address/port.
com.sun.net.httpserver.HttpsServer.create,Create aHttpsServerinstance which will bind to the specifiedInetSocketAddress(IP address and port number).
com.sun.net.httpserver.HttpsServer.getHttpsConfigurator,"Gets this server'sHttpsConfiguratorobject, if it has been set."
com.sun.net.httpserver.HttpsServer.setHttpsConfigurator,Sets this server'sHttpsConfiguratorobject.
com.sun.net.httpserver.spi.HttpServerProvider.createHttpServer,creates a HttpServer from this provider
com.sun.net.httpserver.spi.HttpServerProvider.createHttpsServer,creates a HttpsServer from this provider
com.sun.net.httpserver.spi.HttpServerProvider.provider,Returns the system wide default HttpServerProvider for this invocation of  the Java virtual machine.
jdk.incubator.foreign.FunctionDescriptor.argumentLayouts,Returns the argument layouts associated with this function.
jdk.incubator.foreign.FunctionDescriptor.attribute,Returns the attribute with the given name (if it exists).
jdk.incubator.foreign.FunctionDescriptor.attributes,Returns a stream of the attribute names associated with this function descriptor.
jdk.incubator.foreign.FunctionDescriptor.describeConstable,"Returns anOptionalcontaining the nominal descriptor for this  instance, if one can be constructed, or an emptyOptionalif one cannot be constructed."
jdk.incubator.foreign.FunctionDescriptor.equals,Compares the specified object with this function descriptor for equality.
jdk.incubator.foreign.FunctionDescriptor.hashCode,Returns the hash code value for this function descriptor.
jdk.incubator.foreign.FunctionDescriptor.of,Create a function descriptor with given return and argument layouts.
jdk.incubator.foreign.FunctionDescriptor.ofVoid,Create a function descriptor with given argument layouts and no return layout.
jdk.incubator.foreign.FunctionDescriptor.returnLayout,Returns the return layout associated with this function.
jdk.incubator.foreign.FunctionDescriptor.toString,Returns a string representation of this function descriptor.
jdk.incubator.foreign.FunctionDescriptor.withAppendedArgumentLayouts,Create a new function descriptor with the given argument layouts appended to the argument layout array  of this function descriptor.
jdk.incubator.foreign.FunctionDescriptor.withAttribute,"Returns a new function descriptor which features the same attributes as this descriptor, plus the newly specified attribute."
jdk.incubator.foreign.FunctionDescriptor.withReturnLayout,Create a new function descriptor with the given memory layout as the new return layout.
jdk.incubator.foreign.FunctionDescriptor.withVoidReturnLayout,Create a new function descriptor with the return layout dropped.
jdk.incubator.foreign.GroupLayout.attributes,Returns a stream of the attribute names associated with this layout.
jdk.incubator.foreign.GroupLayout.bitAlignment,"Returns the alignment constraint associated with this layout, expressed in bits."
jdk.incubator.foreign.GroupLayout.bitSize,"Computes the layout size, in bits."
jdk.incubator.foreign.GroupLayout.describeConstable,"Returns anOptionalcontaining the nominal descriptor for this  layout, if one can be constructed, or an emptyOptionalif one cannot be constructed."
jdk.incubator.foreign.GroupLayout.hasSize,Does this layout have a specified size?
jdk.incubator.foreign.GroupLayout.isPadding,Is this a padding layout (e.g. a layout created fromMemoryLayout.paddingLayout(long)) ?
jdk.incubator.foreign.GroupLayout.isStruct,Is this group layout astruct?
jdk.incubator.foreign.GroupLayout.isUnion,Is this group layout aunion?
jdk.incubator.foreign.GroupLayout.memberLayouts,Returns the member layouts associated with this group.
jdk.incubator.foreign.GroupLayout.name,Return thename(if any) associated with this layout.
jdk.incubator.foreign.GroupLayout.withAttribute,"Returns a new memory layout which features the same attributes as this layout, plus the newly specified attribute."
jdk.incubator.foreign.GroupLayout.withBitAlignment,Creates a new layout which features the desired alignment constraint.
jdk.incubator.foreign.GroupLayout.withName,Creates a new layout which features the desired layoutname.
jdk.incubator.foreign.MemoryAccess.getAddress,"Reads a memory address from given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getAddressAtIndex,"Reads a memory address from given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getAddressAtOffset,"Reads a memory address from given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getByte,Reads a byte from given segment.
jdk.incubator.foreign.MemoryAccess.getByteAtOffset,Reads a byte from given segment and offset.
jdk.incubator.foreign.MemoryAccess.getChar,"Reads a char from given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getChar,"Reads a char from given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.getCharAtIndex,"Reads a char from given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getCharAtIndex,"Reads a char from given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.getCharAtOffset,"Reads a char from given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getCharAtOffset,Reads a char from given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.getDouble,"Reads a double from given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getDouble,"Reads a double from given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.getDoubleAtIndex,"Reads a double from given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getDoubleAtIndex,"Reads a double from given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.getDoubleAtOffset,"Reads a double from given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getDoubleAtOffset,Reads a double from given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.getFloat,"Reads a float from given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getFloat,"Reads a float from given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.getFloatAtIndex,"Reads a float from given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getFloatAtIndex,"Reads a float from given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.getFloatAtOffset,"Reads a float from given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getFloatAtOffset,Reads a float from given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.getInt,"Reads an int from given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getInt,"Reads an int from given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.getIntAtIndex,"Reads an int from given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getIntAtIndex,"Reads an int from given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.getIntAtOffset,"Reads an int from given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getIntAtOffset,Reads an int from given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.getLong,"Reads a long from given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getLong,"Reads a long from given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.getLongAtIndex,"Reads a long from given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getLongAtIndex,"Reads a long from given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.getLongAtOffset,"Reads a long from given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getLongAtOffset,Reads a long from given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.getShort,"Reads a short from given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getShort,"Reads a short from given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.getShortAtIndex,"Reads a short from given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getShortAtIndex,"Reads a short from given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.getShortAtOffset,"Reads a short from given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.getShortAtOffset,Reads a short from given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.setAddress,"Writes a memory address at given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setAddressAtIndex,"Writes a memory address at given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setAddressAtOffset,"Writes a memory address at given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setByte,Writes a byte at given segment.
jdk.incubator.foreign.MemoryAccess.setByteAtOffset,Writes a byte at given segment and offset.
jdk.incubator.foreign.MemoryAccess.setChar,"Writes a char at given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setChar,"Writes a char at given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.setCharAtIndex,"Writes a char at given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setCharAtIndex,"Writes a char at given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.setCharAtOffset,"Writes a char at given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setCharAtOffset,Writes a char at given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.setDouble,"Writes a double at given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setDouble,"Writes a double at given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.setDoubleAtIndex,"Writes a double at given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setDoubleAtIndex,"Writes a double at given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.setDoubleAtOffset,"Writes a double at given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setDoubleAtOffset,Writes a double at given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.setFloat,"Writes a float at given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setFloat,"Writes a float at given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.setFloatAtIndex,"Writes a float at given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setFloatAtIndex,"Writes a float at given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.setFloatAtOffset,"Writes a float at given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setFloatAtOffset,Writes a float at given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.setInt,"Writes an int at given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setInt,"Writes an int at given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.setIntAtIndex,"Writes an int at given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setIntAtIndex,"Writes an int at given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.setIntAtOffset,"Writes an int at given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setIntAtOffset,Writes an int at given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.setLong,"Writes a long at given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setLong,"Writes a long at given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.setLongAtIndex,"Writes a long at given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setLongAtIndex,"Writes a long at given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.setLongAtOffset,"Writes a long at given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setLongAtOffset,Writes a long at given segment and offset with given byte order.
jdk.incubator.foreign.MemoryAccess.setShort,"Writes a short at given segment, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setShort,"Writes a short at given segment, with given byte order."
jdk.incubator.foreign.MemoryAccess.setShortAtIndex,"Writes a short at given segment and element index, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setShortAtIndex,"Writes a short at given segment and element index, with given byte order."
jdk.incubator.foreign.MemoryAccess.setShortAtOffset,"Writes a short at given segment and offset, with byte order set toByteOrder.nativeOrder()."
jdk.incubator.foreign.MemoryAccess.setShortAtOffset,Writes a short at given segment and offset with given byte order.
jdk.incubator.foreign.MemoryHandles.asAddressVarHandle,Adapt an existing var handle into a new var handle whose carrier type isMemorySegment.
jdk.incubator.foreign.MemoryHandles.asUnsigned,"Adapts a target var handle by narrowing incoming values and widening  outgoing values, to and from the given type, respectively."
jdk.incubator.foreign.MemoryHandles.collectCoordinates,Adapts a target var handle handle by pre-processing  a sub-sequence of its coordinate values with a filter (a method handle).
jdk.incubator.foreign.MemoryHandles.dropCoordinates,Returns a var handle which will discard some dummy coordinates before delegating to the  target var handle.
jdk.incubator.foreign.MemoryHandles.filterCoordinates,Adapts a target var handle by pre-processing incoming coordinate values using unary filter functions.
jdk.incubator.foreign.MemoryHandles.filterValue,Adapts a target var handle by pre-processing incoming and outgoing values using a pair of filter functions.
jdk.incubator.foreign.MemoryHandles.insertCoordinates,Provides a target var handle with one or morebound coordinatesin advance of the var handle's invocation.
jdk.incubator.foreign.MemoryHandles.permuteCoordinates,"Provides a var handle which adapts the coordinate values of the target var handle, by re-arranging them  so that the new coordinates match the provided ones."
jdk.incubator.foreign.MemoryHandles.varHandle,"Creates a memory access var handle with the given carrier type, alignment constraint, and byte order."
jdk.incubator.foreign.MemoryHandles.varHandle,Creates a memory access var handle with the given carrier type and byte order.
jdk.incubator.foreign.SequenceLayout.elementCount,Returns the element count of this sequence layout (if any).
jdk.incubator.foreign.SequenceLayout.elementLayout,Returns the element layout associated with this sequence layout.
jdk.incubator.foreign.SequenceLayout.flatten,"Returns a new, flattened sequence layout whose element layout is the first non-sequence  element layout found by recursively traversing the element layouts of this sequence layout."
jdk.incubator.foreign.SequenceLayout.reshape,Returns a new sequence layout where element layouts in the flattened projection of this  sequence layout (seeflatten()) are re-arranged into one or more nested sequence layouts  according to the provided element counts.
jdk.incubator.foreign.SequenceLayout.withElementCount,"Obtains a new sequence layout with same element layout, alignment constraints and name as this sequence layout  but with the new specified element count."
jdk.incubator.foreign.ValueLayout.order,Returns the value's byte order.
jdk.incubator.foreign.ValueLayout.withOrder,Returns a new value layout with given byte order.
jdk.incubator.vector.ByteVector.abs,Returns the absolute value of this vector.
jdk.incubator.vector.ByteVector.add,Adds this vector to the broadcast of an input scalar.
jdk.incubator.vector.ByteVector.add,"Adds this vector to the broadcast of an input scalar,  selecting lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.add,Adds this vector to a second input vector.
jdk.incubator.vector.ByteVector.add,"Adds this vector to a second input vector, selecting lanes  under the control of a mask."
jdk.incubator.vector.ByteVector.addIndex,"Adds the lanes of this vector to their corresponding  lane numbers, scaled by a given constant."
jdk.incubator.vector.ByteVector.and,Computes the bitwise logical conjunction (&)  of this vector and a scalar.
jdk.incubator.vector.ByteVector.and,Computes the bitwise logical conjunction (&)  of this vector and a second input vector.
jdk.incubator.vector.ByteVector.bitwiseBlend,"Blends together the bits of a vector and a scalar under  the control of another scalar, which supplies mask bits."
jdk.incubator.vector.ByteVector.bitwiseBlend,"Blends together the bits of a vector and a scalar under  the control of another vector, which supplies mask bits."
jdk.incubator.vector.ByteVector.bitwiseBlend,"Blends together the bits of two vectors under  the control of a scalar, which supplies mask bits."
jdk.incubator.vector.ByteVector.bitwiseBlend,"Blends together the bits of two vectors under  the control of a third, which supplies mask bits."
jdk.incubator.vector.ByteVector.blend,Replaces selected lanes of this vector with  a scalar value  under the control of a mask.
jdk.incubator.vector.ByteVector.blend,Replaces selected lanes of this vector with  corresponding lanes from a second input vector  under the control of a mask.
jdk.incubator.vector.ByteVector.broadcast,Returns a vector of the same species as this one  where all lane elements are set to  the primitive valuee.
jdk.incubator.vector.ByteVector.broadcast,Returns a vector of the given species  where all lane elements are set to  the primitive valuee.
jdk.incubator.vector.ByteVector.castShape,"Convenience method for converting a vector from one lane type  to another, reshaping as needed when lane sizes change."
jdk.incubator.vector.ByteVector.check,"Checks that this vector has the given element type,  and returns this vector unchanged."
jdk.incubator.vector.ByteVector.check,"Checks that this vector has the given species,  and returns this vector unchanged."
jdk.incubator.vector.ByteVector.compare,"Tests this vector by comparing it with an input scalar,  according to the given comparison operation."
jdk.incubator.vector.ByteVector.compare,"Tests this vector by comparing it with an input scalar,  according to the given comparison operation,  in lanes selected by a mask."
jdk.incubator.vector.ByteVector.compare,"Tests this vector by comparing it with another input vector,  according to the given comparison operation."
jdk.incubator.vector.ByteVector.compare,"Tests this vector by comparing it with another input vector,  according to the given comparison operation,  in lanes selected by a mask."
jdk.incubator.vector.ByteVector.convert,"Convert this vector to a vector of the same shape and a new  element type, converting lane values from the currentETYPEto a new lane type (calledFTYPEhere) according to the  indicatedconversion."
jdk.incubator.vector.ByteVector.convertShape,"Converts this vector to a vector of the given species, shape and  element type, converting lane values from the currentETYPEto a new lane type (calledFTYPEhere) according to the  indicatedconversion."
jdk.incubator.vector.ByteVector.div,Divides this vector by the broadcast of an input scalar.
jdk.incubator.vector.ByteVector.div,"Divides this vector by the broadcast of an input scalar,  selecting lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.div,Divides this vector by a second input vector.
jdk.incubator.vector.ByteVector.div,Divides this vector by a second input vector  under the control of a mask.
jdk.incubator.vector.ByteVector.eq,Tests if this vector is equal to an input scalar.
jdk.incubator.vector.ByteVector.eq,Tests if this vector is equal to another input vector.
jdk.incubator.vector.ByteVector.equals,Indicates whether this vector is identical to some other object.
jdk.incubator.vector.ByteVector.fromArray,Loads a vector from an array of typebyte[]starting at an offset.
jdk.incubator.vector.ByteVector.fromArray,"Gathers a new vector composed of elements from an array of typebyte[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ByteVector.fromArray,"Gathers a new vector composed of elements from an array of typebyte[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ByteVector.fromArray,Loads a vector from an array of typebyte[]starting at an offset and using a mask.
jdk.incubator.vector.ByteVector.fromBooleanArray,Loads a vector from an array of typeboolean[]starting at an offset.
jdk.incubator.vector.ByteVector.fromBooleanArray,"Gathers a new vector composed of elements from an array of typeboolean[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ByteVector.fromBooleanArray,"Gathers a new vector composed of elements from an array of typeboolean[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ByteVector.fromBooleanArray,Loads a vector from an array of typeboolean[]starting at an offset and using a mask.
jdk.incubator.vector.ByteVector.fromByteArray,Loads a vector from a byte array starting at an offset.
jdk.incubator.vector.ByteVector.fromByteArray,Loads a vector from a byte array starting at an offset  and using a mask.
jdk.incubator.vector.ByteVector.fromByteBuffer,Loads a vector from abyte bufferstarting at an offset into the byte buffer.
jdk.incubator.vector.ByteVector.fromByteBuffer,Loads a vector from abyte bufferstarting at an offset into the byte buffer  and using a mask.
jdk.incubator.vector.ByteVector.hashCode,Returns a hash code value for the vector.
jdk.incubator.vector.ByteVector.intoArray,Stores this vector into an array of typebyte[]starting at an offset.
jdk.incubator.vector.ByteVector.intoArray,Scatters this vector into an array of typebyte[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.ByteVector.intoArray,"Scatters this vector into an array of typebyte[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ByteVector.intoArray,Stores this vector into an array of typebyte[]starting at offset and using a mask.
jdk.incubator.vector.ByteVector.intoBooleanArray,Stores this vector into an array of typeboolean[]starting at an offset.
jdk.incubator.vector.ByteVector.intoBooleanArray,Scatters this vector into an array of typeboolean[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.ByteVector.intoBooleanArray,"Scatters this vector into an array of typeboolean[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ByteVector.intoBooleanArray,Stores this vector into an array of typeboolean[]starting at offset and using a mask.
jdk.incubator.vector.ByteVector.intoByteArray,Stores this vector into a byte array starting at an offset  using explicit byte order.
jdk.incubator.vector.ByteVector.intoByteArray,Stores this vector into a byte array starting at an offset  using explicit byte order and a mask.
jdk.incubator.vector.ByteVector.intoByteBuffer,Stores this vector into a byte buffer starting at an offset  using explicit byte order.
jdk.incubator.vector.ByteVector.intoByteBuffer,Stores this vector into a byte buffer starting at an offset  using explicit byte order and a mask.
jdk.incubator.vector.ByteVector.lane,Gets the lane element at lane indexi
jdk.incubator.vector.ByteVector.lanewise,Combines the lane values of this vector  with the value of a broadcast scalar.
jdk.incubator.vector.ByteVector.lanewise,"Combines the lane values of this vector  with the value of a broadcast scalar,  with selection of lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.lanewise,"Combines the corresponding lane values of this vector  with those of a second input vector,  with selection of lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.lanewise,Combines the corresponding lane values of this vector  with those of a second input vector.
jdk.incubator.vector.ByteVector.lanewise,Combines the lane values of this vector  with the values of two broadcast scalars.
jdk.incubator.vector.ByteVector.lanewise,"Combines the lane values of this vector  with the values of two broadcast scalars,  with selection of lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.lanewise,Combines the lane values of this vector  with the values of another vector and a broadcast scalar.
jdk.incubator.vector.ByteVector.lanewise,"Combines the lane values of this vector  with the values of another vector and a broadcast scalar,  with selection of lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.lanewise,Combines the corresponding lane values of this vector  with the lanes of a second and a third input vector.
jdk.incubator.vector.ByteVector.lanewise,"Combines the corresponding lane values of this vector  with the lanes of a second and a third input vector,  with selection of lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.lanewise,Operates on the lane values of this vector.
jdk.incubator.vector.ByteVector.lanewise,"Operates on the lane values of this vector,  with selection of lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.lt,Tests if this vector is less than an input scalar.
jdk.incubator.vector.ByteVector.lt,Tests if this vector is less than another input vector.
jdk.incubator.vector.ByteVector.maskAll,"Returns a mask of same species as this vector,  where each lane is set or unset according to given  single boolean, which is broadcast to all lanes."
jdk.incubator.vector.ByteVector.max,Computes the larger of this vector and the broadcast of an input scalar.
jdk.incubator.vector.ByteVector.max,Computes the larger of this vector and a second input vector.
jdk.incubator.vector.ByteVector.min,Computes the smaller of this vector and the broadcast of an input scalar.
jdk.incubator.vector.ByteVector.min,Computes the smaller of this vector and a second input vector.
jdk.incubator.vector.ByteVector.mul,Multiplies this vector by the broadcast of an input scalar.
jdk.incubator.vector.ByteVector.mul,"Multiplies this vector by the broadcast of an input scalar,  selecting lane elements controlled by a mask."
jdk.incubator.vector.ByteVector.mul,Multiplies this vector by a second input vector.
jdk.incubator.vector.ByteVector.mul,Multiplies this vector by a second input vector  under the control of a mask.
jdk.incubator.vector.ByteVector.neg,Negates this vector.
jdk.incubator.vector.ByteVector.not,Computes the bitwise logical complement (~)  of this vector.
jdk.incubator.vector.ByteVector.or,Computes the bitwise logical disjunction (|)  of this vector and a scalar.
jdk.incubator.vector.ByteVector.or,Computes the bitwise logical disjunction (|)  of this vector and a second input vector.
jdk.incubator.vector.ByteVector.rearrange,"Rearranges the lane elements of this vector, selecting lanes  under the control of a specific shuffle."
jdk.incubator.vector.ByteVector.rearrange,"Rearranges the lane elements of two vectors, selecting lanes  under the control of a specific shuffle, using both normal and  exceptional indexes in the shuffle to steer data."
jdk.incubator.vector.ByteVector.rearrange,"Rearranges the lane elements of this vector, selecting lanes  under the control of a specific shuffle and a mask."
jdk.incubator.vector.ByteVector.reduceLanes,Returns a value accumulated from all the lanes of this vector.
jdk.incubator.vector.ByteVector.reduceLanes,"Returns a value accumulated from selected lanes of this vector,  controlled by a mask."
jdk.incubator.vector.ByteVector.reinterpretAsBytes,"Views this vector as a vector of the same shape  and contents but a lane type ofbyte,  where the bytes are extracted from the lanes  according to little-endian order."
jdk.incubator.vector.ByteVector.reinterpretAsDoubles,"Reinterprets this vector as a vector of the same shape  and contents but a lane type ofdouble,  where the lanes are assembled from successive bytes  according to little-endian order."
jdk.incubator.vector.ByteVector.reinterpretAsFloats,"Reinterprets this vector as a vector of the same shape  and contents but a lane type offloat,  where the lanes are assembled from successive bytes  according to little-endian order."
jdk.incubator.vector.ByteVector.reinterpretAsInts,"Reinterprets this vector as a vector of the same shape  and contents but a lane type ofint,  where the lanes are assembled from successive bytes  according to little-endian order."
jdk.incubator.vector.ByteVector.reinterpretAsLongs,"Reinterprets this vector as a vector of the same shape  and contents but a lane type oflong,  where the lanes are assembled from successive bytes  according to little-endian order."
jdk.incubator.vector.ByteVector.reinterpretAsShorts,"Reinterprets this vector as a vector of the same shape  and contents but a lane type ofshort,  where the lanes are assembled from successive bytes  according to little-endian order."
jdk.incubator.vector.ByteVector.selectFrom,"Using index values stored in the lanes of this vector,  assemble values stored in second vectorv."
jdk.incubator.vector.ByteVector.selectFrom,"Using index values stored in the lanes of this vector,  assemble values stored in second vector, under the control  of a mask."
jdk.incubator.vector.ByteVector.slice,"Slices a segment of adjacent lanes, starting at a givenoriginlane in the current vector."
jdk.incubator.vector.ByteVector.slice,"Slices a segment of adjacent lanes, starting at a givenoriginlane in the current vector, and continuing (as  needed) into an immediately following vector."
jdk.incubator.vector.ByteVector.slice,"Slices a segment of adjacent lanes  under the control of a mask,  starting at a givenoriginlane in the current vector, and continuing (as  needed) into an immediately following vector."
jdk.incubator.vector.ByteVector.species,Returns the species of this vector.
jdk.incubator.vector.ByteVector.sub,Subtracts an input scalar from this vector.
jdk.incubator.vector.ByteVector.sub,Subtracts an input scalar from this vector  under the control of a mask.
jdk.incubator.vector.ByteVector.sub,Subtracts a second input vector from this vector.
jdk.incubator.vector.ByteVector.sub,Subtracts a second input vector from this vector  under the control of a mask.
jdk.incubator.vector.ByteVector.test,Tests the lanes of this vector  according to the given operation.
jdk.incubator.vector.ByteVector.test,"Test selected lanes of this vector,  according to the given operation."
jdk.incubator.vector.ByteVector.toArray,Returns an array of typebyte[]containing all the lane values.
jdk.incubator.vector.ByteVector.toDoubleArray,"Returns adouble[]array containing all  the lane values, converted to the typedouble."
jdk.incubator.vector.ByteVector.toIntArray,"Returns anint[]array containing all  the lane values, converted to the typeint."
jdk.incubator.vector.ByteVector.toLongArray,"Returns along[]array containing all  the lane values, converted to the typelong."
jdk.incubator.vector.ByteVector.toString,"Returns a string representation of this vector, of the form""[0,1,2...]"", reporting the lane values of this vector,  in lane order."
jdk.incubator.vector.ByteVector.unslice,"Reverses aslice(), inserting  the current vector as a slice within a ""background"" input  of zero lane values."
jdk.incubator.vector.ByteVector.unslice,"Reverses aslice(), inserting  the current vector as a slice within another ""background"" input  vector, which is regarded as one or the other input to a  hypothetical subsequentslice()operation."
jdk.incubator.vector.ByteVector.unslice,"Reverses aslice(), inserting  (under the control of a mask)  the current vector as a slice within another ""background"" input  vector, which is regarded as one or the other input to a  hypothetical subsequentslice()operation."
jdk.incubator.vector.ByteVector.viewAsFloatingLanes,"Views this vector as a vector of the same shape, length, and  contents, but a lane type that is a floating-point type."
jdk.incubator.vector.ByteVector.viewAsIntegralLanes,"Views this vector as a vector of the same shape, length, and  contents, but a lane type that is not a floating-point type."
jdk.incubator.vector.ByteVector.withLane,Replaces the lane element of this vector at lane indexiwith  valuee.
jdk.incubator.vector.ByteVector.zero,"Returns a vector of the given species  where all lane elements are set to  zero, the default primitive value."
jdk.incubator.vector.DoubleVector.fma,"Multiplies this vector by a scalar multiplier, and sums  the result with a scalar addend."
jdk.incubator.vector.DoubleVector.fma,"Multiplies this vector by a second input vector, and sums  the result with a third."
jdk.incubator.vector.DoubleVector.fromArray,Loads a vector from an array of typedouble[]starting at an offset.
jdk.incubator.vector.DoubleVector.fromArray,"Gathers a new vector composed of elements from an array of typedouble[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.DoubleVector.fromArray,"Gathers a new vector composed of elements from an array of typedouble[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.DoubleVector.fromArray,Loads a vector from an array of typedouble[]starting at an offset and using a mask.
jdk.incubator.vector.DoubleVector.intoArray,Stores this vector into an array of typedouble[]starting at an offset.
jdk.incubator.vector.DoubleVector.intoArray,Scatters this vector into an array of typedouble[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.DoubleVector.intoArray,"Scatters this vector into an array of typedouble[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.DoubleVector.intoArray,Stores this vector into an array of typedouble[]starting at offset and using a mask.
jdk.incubator.vector.DoubleVector.pow,Raises this vector to a scalar power.
jdk.incubator.vector.DoubleVector.pow,Raises this vector to the power of a second input vector.
jdk.incubator.vector.DoubleVector.sqrt,Computes the square root of this vector.
jdk.incubator.vector.DoubleVector.toArray,Returns an array of typedouble[]containing all the lane values.
jdk.incubator.vector.FloatVector.fromArray,Loads a vector from an array of typefloat[]starting at an offset.
jdk.incubator.vector.FloatVector.fromArray,"Gathers a new vector composed of elements from an array of typefloat[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.FloatVector.fromArray,"Gathers a new vector composed of elements from an array of typefloat[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.FloatVector.fromArray,Loads a vector from an array of typefloat[]starting at an offset and using a mask.
jdk.incubator.vector.FloatVector.intoArray,Stores this vector into an array of typefloat[]starting at an offset.
jdk.incubator.vector.FloatVector.intoArray,Scatters this vector into an array of typefloat[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.FloatVector.intoArray,"Scatters this vector into an array of typefloat[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.FloatVector.intoArray,Stores this vector into an array of typefloat[]starting at offset and using a mask.
jdk.incubator.vector.FloatVector.toArray,Returns an array of typefloat[]containing all the lane values.
jdk.incubator.vector.IntVector.fromArray,Loads a vector from an array of typeint[]starting at an offset.
jdk.incubator.vector.IntVector.fromArray,"Gathers a new vector composed of elements from an array of typeint[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.IntVector.fromArray,"Gathers a new vector composed of elements from an array of typeint[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.IntVector.fromArray,Loads a vector from an array of typeint[]starting at an offset and using a mask.
jdk.incubator.vector.IntVector.intoArray,Stores this vector into an array of typeint[]starting at an offset.
jdk.incubator.vector.IntVector.intoArray,Scatters this vector into an array of typeint[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.IntVector.intoArray,"Scatters this vector into an array of typeint[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.IntVector.intoArray,Stores this vector into an array of typeint[]starting at offset and using a mask.
jdk.incubator.vector.IntVector.toArray,Returns an array of typeint[]containing all the lane values.
jdk.incubator.vector.LongVector.fromArray,Loads a vector from an array of typelong[]starting at an offset.
jdk.incubator.vector.LongVector.fromArray,"Gathers a new vector composed of elements from an array of typelong[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.LongVector.fromArray,"Gathers a new vector composed of elements from an array of typelong[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.LongVector.fromArray,Loads a vector from an array of typelong[]starting at an offset and using a mask.
jdk.incubator.vector.LongVector.intoArray,Stores this vector into an array of typelong[]starting at an offset.
jdk.incubator.vector.LongVector.intoArray,Scatters this vector into an array of typelong[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.LongVector.intoArray,"Scatters this vector into an array of typelong[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.LongVector.intoArray,Stores this vector into an array of typelong[]starting at offset and using a mask.
jdk.incubator.vector.LongVector.toArray,Returns an array of typelong[]containing all the lane values.
jdk.incubator.vector.ShortVector.fromArray,Loads a vector from an array of typeshort[]starting at an offset.
jdk.incubator.vector.ShortVector.fromArray,"Gathers a new vector composed of elements from an array of typeshort[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ShortVector.fromArray,"Gathers a new vector composed of elements from an array of typeshort[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ShortVector.fromArray,Loads a vector from an array of typeshort[]starting at an offset and using a mask.
jdk.incubator.vector.ShortVector.fromCharArray,Loads a vector from an array of typechar[]starting at an offset.
jdk.incubator.vector.ShortVector.fromCharArray,"Gathers a new vector composed of elements from an array of typechar[],  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ShortVector.fromCharArray,"Gathers a new vector composed of elements from an array of typechar[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ShortVector.fromCharArray,Loads a vector from an array of typechar[]starting at an offset and using a mask.
jdk.incubator.vector.ShortVector.intoArray,Stores this vector into an array of typeshort[]starting at an offset.
jdk.incubator.vector.ShortVector.intoArray,Scatters this vector into an array of typeshort[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.ShortVector.intoArray,"Scatters this vector into an array of typeshort[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ShortVector.intoArray,Stores this vector into an array of typeshort[]starting at offset and using a mask.
jdk.incubator.vector.ShortVector.intoCharArray,Stores this vector into an array of typechar[]starting at an offset.
jdk.incubator.vector.ShortVector.intoCharArray,Scatters this vector into an array of typechar[]using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map.
jdk.incubator.vector.ShortVector.intoCharArray,"Scatters this vector into an array of typechar[],  under the control of a mask, and  using indexes obtained by adding a fixedoffsetto a  series of secondary offsets from anindex map."
jdk.incubator.vector.ShortVector.intoCharArray,Stores this vector into an array of typechar[]starting at offset and using a mask.
jdk.incubator.vector.ShortVector.toArray,Returns an array of typeshort[]containing all the lane values.
jdk.incubator.vector.Vector.bitSize,"Returns the total size, in bits, of this vector."
jdk.incubator.vector.Vector.byteSize,"Returns the total size, in bytes, of this vector."
jdk.incubator.vector.Vector.elementSize,"Returns the size of each lane, in bits, of this vector."
jdk.incubator.vector.Vector.elementType,Returns the primitiveelement type(ETYPE) of this vector.
jdk.incubator.vector.Vector.length,"Returns the lane count, orvector length(VLENGTH)."
jdk.incubator.vector.Vector.reinterpretShape,"Transforms this vector to a vector of the given species of  element typeF, reinterpreting the bytes of this  vector without performing any value conversions."
jdk.incubator.vector.Vector.shape,Returns the shape of this vector.
jdk.incubator.vector.Vector.toArray,Returns a packed array containing all the lane values.
jdk.incubator.vector.Vector.toShuffle,"Converts this vector into a shuffle, converting the lane values  tointand regarding them as source indexes."
jdk.incubator.vector.Vector.toString,"Returns a string representation of this vector, of the form""[0,1,2...]"", reporting the lane values of this  vector, in lane order."
jdk.incubator.vector.VectorMask.allTrue,Returnstrueif all of the mask lanes are set.
jdk.incubator.vector.VectorMask.and,Computes the logical intersection (asa&b)  between this mask and a second input mask.
jdk.incubator.vector.VectorMask.andNot,Logically subtracts a second input mask  from this mask (asa&~b).
jdk.incubator.vector.VectorMask.anyTrue,Returnstrueif any of the mask lanes are set.
jdk.incubator.vector.VectorMask.cast,Converts this mask to a mask of the given species of  element typeF.
jdk.incubator.vector.VectorMask.check,"Checks that this mask applies to vectors with the given element type,  and returns this mask unchanged."
jdk.incubator.vector.VectorMask.check,"Checks that this mask has the given species,  and returns this mask unchanged."
jdk.incubator.vector.VectorMask.eq,Determines logical equivalence of this mask  to a second input mask (as booleana==bora^~b).
jdk.incubator.vector.VectorMask.equals,Indicates whether this mask is identical to some other object.
jdk.incubator.vector.VectorMask.firstTrue,Returns the index of the first mask lane that is set.
jdk.incubator.vector.VectorMask.fromArray,Loads a mask from abooleanarray starting at an offset.
jdk.incubator.vector.VectorMask.fromLong,"Returns a mask where each lane is set or unset according to  the bits in the given bitmask, starting with the least  significant bit, and continuing up to the sign bit."
jdk.incubator.vector.VectorMask.fromValues,Returns a mask where each lane is set or unset according to givenbooleanvalues.
jdk.incubator.vector.VectorMask.hashCode,"Returns a hash code value for the mask,  based on the mask bit settings and the vector species."
jdk.incubator.vector.VectorMask.indexInRange,"Removes lanes numberedNfrom this mask where the  adjusted indexN+offset, is not in the range[0..limit-1]."
jdk.incubator.vector.VectorMask.intoArray,Stores this mask into abooleanarray starting at offset.
jdk.incubator.vector.VectorMask.laneIsSet,Tests if the lane at indexiis set
jdk.incubator.vector.VectorMask.lastTrue,Returns the index of the last mask lane that is set.
jdk.incubator.vector.VectorMask.length,Returns the number of mask lanes.
jdk.incubator.vector.VectorMask.not,Logically negates this mask.
jdk.incubator.vector.VectorMask.or,Computes the logical union (asa|b) of this mask  and a second input mask.
jdk.incubator.vector.VectorMask.toArray,Returns anbooleanarray containing the lane elements of this  mask.
jdk.incubator.vector.VectorMask.toLong,Returns the lane elements of this mask packed into alongvalue for at most the first 64 lane elements.
jdk.incubator.vector.VectorMask.toString,"Returns a string representation of this mask, of the form""Mask[T.TT...]"", reporting the mask bit  settings (as 'T' or '.' characters) in lane order."
jdk.incubator.vector.VectorMask.toVector,"Returns a vector representation of this mask, the  lane bits of which are set or unset in correspondence  to the mask bits."
jdk.incubator.vector.VectorMask.trueCount,Returns the number of mask lanes that are set.
jdk.incubator.vector.VectorMask.vectorSpecies,Returns the vector species to which this mask applies.
jdk.incubator.vector.VectorOperators.check,Ensures that this conversion has the  desired domain and range types.
jdk.incubator.vector.VectorOperators.domainType,"The domain of this conversion, a primitive type."
jdk.incubator.vector.VectorOperators.ofCast,The Java language assignment or casting conversion between two types.
jdk.incubator.vector.VectorOperators.ofReinterpret,The bitwise reinterpretation between two types.
jdk.incubator.vector.VectorOperators.rangeType,"The range of this conversion, a primitive type."
jdk.incubator.vector.VectorOperators.arity,"Returns the arity of this operator (1, 2, or 3)."
jdk.incubator.vector.VectorOperators.compatibleWith,Reports whether this operator is compatible with  the proposed element type.
jdk.incubator.vector.VectorOperators.isAssociative,Returns the associativity of this operator.
jdk.incubator.vector.VectorOperators.isBoolean,Reports whether this operator returns a boolean (a mask).
jdk.incubator.vector.VectorOperators.name,"Returns the symbolic name of this operator,  as a constant inVectorOperators."
jdk.incubator.vector.VectorOperators.operatorName,Returns the Java operator symbol or method  name corresponding to this operator.
jdk.incubator.vector.VectorOperators.rangeType,Reports the special return type of this operator.
jdk.incubator.vector.VectorShuffle.cast,Converts this shuffle to a shuffle of the given species of  element typeF.
jdk.incubator.vector.VectorShuffle.check,"Checks that this shuffle has the given species,  and returns this shuffle unchanged."
jdk.incubator.vector.VectorShuffle.checkIndex,Validation function for lane indexes which may be out of the  valid range of[0..VLENGTH-1].
jdk.incubator.vector.VectorShuffle.checkIndexes,"Apply thecheckIndex()validation  function to all lanes, throwingIndexOutOfBoundsExceptionif there are any exceptional  indexes in this shuffle."
jdk.incubator.vector.VectorShuffle.equals,Indicates whether this shuffle is identical to some other object.
jdk.incubator.vector.VectorShuffle.fromArray,Creates a shuffle for a given species from  anintarray starting at an offset.
jdk.incubator.vector.VectorShuffle.fromOp,Creates a shuffle for a given species from  the successive values of an operator applied to  the range[0..VLENGTH-1].
jdk.incubator.vector.VectorShuffle.fromValues,Creates a shuffle for a given species from  a series of source indexes.
jdk.incubator.vector.VectorShuffle.hashCode,"Returns a hash code value for the shuffle,  based on the lane source indexes and the vector species."
jdk.incubator.vector.VectorShuffle.intoArray,Stores this shuffle into anintarray starting at offset.
jdk.incubator.vector.VectorShuffle.iota,Creates a shuffle using source indexes set to sequential  values starting fromstartand stepping  by the givenstep.
jdk.incubator.vector.VectorShuffle.laneIsValid,Find all lanes containing valid indexes (non-negative values)  and return a mask where exactly those lanes are set.
jdk.incubator.vector.VectorShuffle.laneSource,Gets theintlane element at lane indexi
jdk.incubator.vector.VectorShuffle.length,Returns the number of lanes processed by this shuffle.
jdk.incubator.vector.VectorShuffle.makeUnzip,"Creates a shuffle which will unzip the concatenation of two  vectors, alternatively storing input lanes into one or the  other output vector."
jdk.incubator.vector.VectorShuffle.makeZip,"Creates a shuffle which will zip together two vectors,  alternatively selecting lanes from one or the other."
jdk.incubator.vector.VectorShuffle.rearrange,Rearranges the lane elements of this shuffle selecting lane indexes  controlled by another shuffle.
jdk.incubator.vector.VectorShuffle.toArray,Returns anintarray containing the lane  source indexes of this shuffle.
jdk.incubator.vector.VectorShuffle.toString,"Returns a string representation of this shuffle, of the form""Shuffle[0,1,2...]"", reporting the source indexes  in lane order."
jdk.incubator.vector.VectorShuffle.toVector,"Converts this shuffle into a vector, creating a vector  of integral values corresponding to the lane source  indexes of the shuffle."
jdk.incubator.vector.VectorShuffle.vectorSpecies,Returns the species of this shuffle.
jdk.incubator.vector.VectorShuffle.wrapIndexes,"Apply thewrapIndex()validation  function to all lanes, replacing any exceptional indexes  with wrapped normal indexes."
jdk.security.jarsigner.JarSigner.build,Builds aJarSignerobject from the parameters set by the  setter methods.
jdk.security.jarsigner.JarSigner.digestAlgorithm,Sets the digest algorithm.
jdk.security.jarsigner.JarSigner.digestAlgorithm,Sets the digest algorithm from the specified provider.
jdk.security.jarsigner.JarSigner.eventHandler,"Sets en event handler that will be triggered when aJarEntryis to be added, signed, or updated during the signing process."
jdk.security.jarsigner.JarSigner.getDefaultDigestAlgorithm,Gets the default digest algorithm.
jdk.security.jarsigner.JarSigner.getDefaultSignatureAlgorithm,Gets the default signature algorithm for a private key.
jdk.security.jarsigner.JarSigner.setProperty,Sets an additional implementation-specific property indicated by  the specified key.
jdk.security.jarsigner.JarSigner.signatureAlgorithm,Sets the signature algorithm.
jdk.security.jarsigner.JarSigner.signatureAlgorithm,Sets the signature algorithm from the specified provider.
jdk.security.jarsigner.JarSigner.signerName,Sets the signer name.
jdk.security.jarsigner.JarSigner.tsa,Sets the URI of the Time Stamping Authority (TSA).
jdk.security.jarsigner.JarSigner.getDigestAlgorithm,Returns the digest algorithm for thisJarSigner.
jdk.security.jarsigner.JarSigner.getProperty,Returns the value of an additional implementation-specific property  indicated by the specified key.
jdk.security.jarsigner.JarSigner.getSignatureAlgorithm,Returns the signature algorithm for thisJarSigner.
jdk.security.jarsigner.JarSigner.getSignerName,Returns the signer name of thisJarSigner.
jdk.security.jarsigner.JarSigner.getTsa,Returns the URI of the Time Stamping Authority (TSA).
jdk.security.jarsigner.JarSigner.sign,Signs a file into anOutputStream.
jdk.javadoc.doclet.StandardDoclet.getLocale,Returns the locale for this doclet.
jdk.javadoc.doclet.StandardDoclet.getName,Returns a name identifying the doclet.
jdk.javadoc.doclet.StandardDoclet.getReporter,Returns the reporter for this doclet.
jdk.javadoc.doclet.StandardDoclet.getSupportedOptions,Returns all the supported options.
jdk.javadoc.doclet.StandardDoclet.getSupportedSourceVersion,Returns the version of the Java Programming Language supported  by this doclet.
jdk.javadoc.doclet.StandardDoclet.init,Initializes this doclet with the given locale and error reporter.
jdk.javadoc.doclet.StandardDoclet.run,The entry point of the doclet.
com.sun.tools.jconsole.JConsolePlugin.addContextPropertyChangeListener,Adds aPropertyChangeListenerto theJConsoleContextobject for this plugin.
com.sun.tools.jconsole.JConsolePlugin.dispose,Dispose this plugin.
com.sun.tools.jconsole.JConsolePlugin.getContext,Returns theJConsoleContextobject representing  the connection to an application.
com.sun.tools.jconsole.JConsolePlugin.getTabs,Returns the tabs to be added in JConsole window.
com.sun.tools.jconsole.JConsolePlugin.newSwingWorker,Returns aSwingWorkerto perform  the GUI update for this plugin at the same interval  as JConsole updates the GUI.
com.sun.tools.jconsole.JConsolePlugin.removeContextPropertyChangeListener,Removes aPropertyChangeListenerfrom the listener list of theJConsoleContextobject for this plugin.
com.sun.tools.jconsole.JConsolePlugin.setContext,Sets theJConsoleContextobject representing  the connection to an application.
com.sun.jdi.Bootstrap.virtualMachineManager,Returns the virtual machine manager.
com.sun.jdi.connect.IllegalConnectorArgumentsException.argumentNames,Return aListcontaining the names of the  invalid or inconsistent arguments.
com.sun.jdi.connect.spi.Connection.isOpen,Tells whether or not this connection is open.
com.sun.jdi.connect.spi.Connection.readPacket,Reads a packet from the target VM.
com.sun.jdi.connect.spi.Connection.writePacket,Writes a packet to the target VM.
com.sun.jdi.connect.spi.TransportService.supportsAcceptTimeout,Tell whether or not this transport service supports a  timeout while waiting for a target VM to connect.
com.sun.jdi.connect.spi.TransportService.supportsAttachTimeout,Tell whether or not this transport service supports a timeout  when attaching to a target VM.
com.sun.jdi.connect.spi.TransportService.supportsHandshakeTimeout,Tells whether or not this transport service supports a  timeout when handshaking with the target VM.
com.sun.jdi.connect.spi.TransportService.supportsMultipleConnections,Tells whether or not this transport service can support  multiple concurrent connections to a single address that  it is listening on.
com.sun.jdi.connect.spi.TransportService.accept,Accept a connection from a target VM.
com.sun.jdi.connect.spi.TransportService.attach,Attaches to the specified address.
com.sun.jdi.connect.spi.TransportService.capabilities,Returns the capabilities of the transport service.
com.sun.jdi.connect.spi.TransportService.description,Returns a description of the transport service.
com.sun.jdi.connect.spi.TransportService.name,Returns a name to identify the transport service.
com.sun.jdi.connect.spi.TransportService.startListening,Listens on an address chosen by the transport service.
com.sun.jdi.connect.spi.TransportService.startListening,Listens on the specified address for inbound connections.
com.sun.jdi.connect.spi.TransportService.stopListening,Stop listening for inbound connections.
com.sun.jdi.connect.spi.TransportService.address,Returns a string representation of the listen key.
jdk.jfr.AnnotationElement.getAnnotation,"Returns the first annotation for the specified type if anAnnotationElementwith the same name exists, elsenull."
jdk.jfr.AnnotationElement.getAnnotationElements,Returns an immutable list of annotation elements for thisAnnotationElement.
jdk.jfr.AnnotationElement.getTypeId,Returns the type ID for thisAnnotationElement.
jdk.jfr.AnnotationElement.getTypeName,"Returns the fully qualified name of the annotation type that corresponds to  thisAnnotationElement(for example,""jdk.jfr.Label"")."
jdk.jfr.AnnotationElement.getValue,Returns a value for thisAnnotationElement.
jdk.jfr.AnnotationElement.getValueDescriptors,Returns an immutable list of descriptors that describes the annotation values  for thisAnnotationElement.
jdk.jfr.AnnotationElement.getValues,Returns an immutable list of annotation values in an order that matches the  value descriptors for thisAnnotationElement.
jdk.jfr.AnnotationElement.hasValue,Returnstrueif an annotation value with the specified name exists in  thisAnnotationElement.
jdk.jfr.Configuration.create,Reads a configuration from a character stream.
jdk.jfr.Configuration.create,Reads a configuration from a file.
jdk.jfr.Configuration.getConfiguration,Returns a predefined configuration.
jdk.jfr.Configuration.getConfigurations,Returns an immutable list of predefined configurations for this Java Virtual Machine (JVM).
jdk.jfr.Configuration.getContents,"Returns a textual representation of the configuration (for example, the  contents of a JFC file)."
jdk.jfr.Configuration.getDescription,"Returns a short sentence that describes the configuration (for example""Low  overhead configuration safe for continuous use in production  environments"")"
jdk.jfr.Configuration.getLabel,"Returns a human-readable name (for example,""Continuous"" or ""Profiling""}."
jdk.jfr.Configuration.getName,"Returns an identifying name (for example,""default"" or ""profile"")."
jdk.jfr.Configuration.getProvider,"Returns who created the configuration (for example""OpenJDK"")."
jdk.jfr.Configuration.getSettings,Returns the settings that specifies how a recording is configured.
jdk.jfr.Event.begin,Starts the timing of this event.
jdk.jfr.Event.commit,"Writes the field values, time stamp, and event duration to the Flight  Recorder system."
jdk.jfr.Event.end,Ends the timing of this event.
jdk.jfr.Event.isEnabled,"Returnstrueif at least one recording is running, and the  enabled setting for this event is set totrue, otherwisefalseis returned."
jdk.jfr.Event.set,Sets a field value.
jdk.jfr.Event.shouldCommit,"Returnstrueif the enabled setting for this event is set totrueand if the duration is within the threshold for the event,falseotherwise."
jdk.jfr.EventFactory.create,Creates anEventFactoryobject.
jdk.jfr.EventFactory.getEventType,Returns the event type that is associated with this event factory.
jdk.jfr.EventFactory.newEvent,"Instantiates an event, so it can be populated with data and written to the  Flight Recorder system."
jdk.jfr.EventFactory.register,Registers an unregistered event.
jdk.jfr.EventFactory.unregister,Unregisters the event that is associated with this event factory.
jdk.jfr.EventSettings.with,Sets a setting value for the event that is associated with this event setting.
jdk.jfr.EventSettings.withoutStackTrace,Disables stack traces for the event that is associated with this event setting.
jdk.jfr.EventSettings.withoutThreshold,Specifies that a threshold is not used.
jdk.jfr.EventSettings.withPeriod,Sets the interval for the event that is associated with this event setting.
jdk.jfr.EventSettings.withStackTrace,Enables stack traces for the event that is associated with this event setting.
jdk.jfr.EventSettings.withThreshold,Sets the threshold for the event that is associated with this event setting.
jdk.jfr.EventType.getAnnotation,"Returns the first annotation for the specified type if an annotation  element with the same name is directly present, otherwisenull."
jdk.jfr.EventType.getAnnotationElements,Returns an immutable list of annotation elements for this event type.
jdk.jfr.EventType.getCategoryNames,"Returns the list of human-readable names that makes up the categories for  this event type (for example,""Java Application"",""Statistics"")."
jdk.jfr.EventType.getDescription,Returns a short sentence that describes the event class.
jdk.jfr.EventType.getEventType,"Returns the event type for an event class, ornullif it doesn't  exist."
jdk.jfr.EventType.getField,"Returns the field with the specified name, ornullif it doesn't  exist."
jdk.jfr.EventType.getFields,Returns an immutable list of descriptors that describe the event fields of  this event type.
jdk.jfr.EventType.getId,Returns a unique ID for this event type in the Java Virtual Machine (JVM).
jdk.jfr.EventType.getLabel,"Returns a human-readable name (for example,""CPU Load"")."
jdk.jfr.EventType.getName,"Returns an identifier for the event (for example,""jdk.CPULoad"")."
jdk.jfr.EventType.getSettingDescriptors,Returns an immutable list of the setting descriptors that describe the available  event settings for this event type.
jdk.jfr.EventType.isEnabled,"Returnstrueif the event is enabled and at least one recording is  running,falseotherwise."
jdk.jfr.FlightRecorder.addListener,Adds a recorder listener and captures theAccessControlContextto  use when invoking the listener.
jdk.jfr.FlightRecorder.addPeriodicEvent,Adds a hook for a periodic event.
jdk.jfr.FlightRecorder.getEventTypes,Returns an immutable list that contains all currently registered events.
jdk.jfr.FlightRecorder.getFlightRecorder,Returns the Flight Recorder for the platform.
jdk.jfr.FlightRecorder.getRecordings,Returns an immutable list of the available recordings.
jdk.jfr.FlightRecorder.isAvailable,Returnstrueif the Java Virtual Machine (JVM) has Flight Recorder capabilities.
jdk.jfr.FlightRecorder.isInitialized,Returnstrueif Flight Recorder is initialized.
jdk.jfr.FlightRecorder.register,Registers an event class.
jdk.jfr.FlightRecorder.removeListener,Removes a recorder listener.
jdk.jfr.FlightRecorder.removePeriodicEvent,Removes a hook for a periodic event.
jdk.jfr.FlightRecorder.takeSnapshot,Creates a snapshot of all available recorded data.
jdk.jfr.FlightRecorder.unregister,Unregisters an event class.
jdk.jfr.Recording.close,Releases all data that is associated with this recording.
jdk.jfr.Recording.copy,"Returns a clone of this recording, with a new recording ID and name."
jdk.jfr.Recording.disable,Disables event.
jdk.jfr.Recording.disable,Disables event with the specified name.
jdk.jfr.Recording.dump,Writes recording data to a file.
jdk.jfr.Recording.enable,Enables event.
jdk.jfr.Recording.enable,Enables the event with the specified name.
jdk.jfr.Recording.getDestination,"Returns the destination file, where recording data is written when the  recording stops, ornullif no destination is set."
jdk.jfr.Recording.getDumpOnExit,Returns whether this recording is dumped to disk when the JVM exits.
jdk.jfr.Recording.getDuration,"Returns the specified duration for this recording, ornullif no  duration is set."
jdk.jfr.Recording.getId,Returns a unique ID for this recording.
jdk.jfr.Recording.getMaxAge,Returns the length of time that the data is kept in the disk repository  before it is removed.
jdk.jfr.Recording.getMaxSize,"Returns the maximum size, measured in bytes, at which data is no longer kept in the disk repository."
jdk.jfr.Recording.getName,Returns the name of this recording.
jdk.jfr.Recording.getSettings,Returns settings used by this recording.
jdk.jfr.Recording.getSize,"Returns the current size of this recording in the disk repository,  measured in bytes."
jdk.jfr.Recording.getStartTime,Returns the time when this recording was started.
jdk.jfr.Recording.getState,Returns the recording state that this recording is currently in.
jdk.jfr.Recording.getStopTime,Returns the time when this recording was stopped.
jdk.jfr.Recording.getStream,Creates a data stream for a specified interval.
jdk.jfr.Recording.isToDisk,"Returnstrueif this recording uses the disk repository,falseotherwise."
jdk.jfr.Recording.scheduleStart,Starts this recording after a delay.
jdk.jfr.Recording.setDestination,"Sets a location where data is written on recording stop, ornullif data is not to be dumped."
jdk.jfr.Recording.setDumpOnExit,Sets whether this recording is dumped to disk when the JVM exits.
jdk.jfr.Recording.setDuration,Sets a duration for how long a recording runs before it stops.
jdk.jfr.Recording.setMaxAge,Determines how far back data is kept in the disk repository.
jdk.jfr.Recording.setMaxSize,Determines how much data is kept in the disk repository.
jdk.jfr.Recording.setName,"Sets a human-readable name (for example,""My Recording"")."
jdk.jfr.Recording.setSettings,Replaces all settings for this recording.
jdk.jfr.Recording.setToDisk,Determines whether this recording is continuously flushed to the disk  repository or data is constrained to what is available in memory buffers.
jdk.jfr.Recording.start,Starts this recording.
jdk.jfr.Recording.stop,Stops this recording.
jdk.jfr.SettingControl.combine,"Combines the setting values for all running recordings into one value when  multiple recordings are running at the same time,"
jdk.jfr.SettingControl.getValue,"Returns the currently used value for this setting, notnull."
jdk.jfr.SettingControl.setValue,Sets the value for this setting.
jdk.jfr.SettingDescriptor.getAnnotation,"Returns the first annotation for the specified type if an annotation  element with the same name is available,nullotherwise."
jdk.jfr.SettingDescriptor.getAnnotationElements,Returns an immutable list of annotation elements for this value  descriptor.
jdk.jfr.SettingDescriptor.getContentType,Returns a textual identifier that specifies how a value that is represented by  thisSettingDescriptorobject is interpreted or formatted.
jdk.jfr.SettingDescriptor.getDefaultValue,Returns the default value for this setting descriptor.
jdk.jfr.SettingDescriptor.getDescription,"Returns a sentence that describes the setting (for example""Record event with duration  above or equal to threshold"")."
jdk.jfr.SettingDescriptor.getLabel,"Returns a human-readable name that describes the setting (for example,""Threshold"")."
jdk.jfr.SettingDescriptor.getName,"Returns the name of the setting (for example,""threshold"")."
jdk.jfr.SettingDescriptor.getTypeId,Returns a unique ID for the type in the Java Virtual Machine (JVM).
jdk.jfr.SettingDescriptor.getTypeName,Returns the fully qualified class name of the type that is associated with this  setting descriptor.
jdk.jfr.ValueDescriptor.getAnnotation,"Returns the first annotation for the specified type if an annotation  element with the same name is directly present for this value descriptor,nullotherwise."
jdk.jfr.ValueDescriptor.getContentType,Returns a textual identifier that specifies how a value represented by  thisValueDescriptoris interpreted or formatted.
jdk.jfr.ValueDescriptor.getDescription,Returns a sentence describing the value.
jdk.jfr.ValueDescriptor.getFields,"Returns an immutable list of value descriptors if the type is complex,  else an empty list."
jdk.jfr.ValueDescriptor.getLabel,Returns a human-readable name that describes the value.
jdk.jfr.ValueDescriptor.getName,Returns the name of the value.
jdk.jfr.ValueDescriptor.getTypeId,Returns a unique ID for the type in the Java virtual Machine (JVM).
jdk.jfr.ValueDescriptor.getTypeName,Returns the fully qualified class name of the type that is associated with  this value descriptor.
jdk.jfr.ValueDescriptor.isArray,Returns if this value descriptor is an array type.
jdk.jfr.consumer.MetadataEvent.getAddedEventTypes,Returns a list of added event types since the last metadata event.
jdk.jfr.consumer.MetadataEvent.getConfigurations,Returns a list of configurations.
jdk.jfr.consumer.MetadataEvent.getEventTypes,Returns a list of the current event types being used.
jdk.jfr.consumer.MetadataEvent.getRemovedEventTypes,Returns a list of removed event types since the last metadata event.
jdk.jfr.consumer.RecordedClass.getClassLoader,Returns the class loader that defined the class.
jdk.jfr.consumer.RecordedClass.getId,Returns a unique ID for the class.
jdk.jfr.consumer.RecordedClass.getModifiers,Returns the modifiers of the class.
jdk.jfr.consumer.RecordedClass.getName,Returns the fully qualified name of the class.
jdk.jfr.consumer.RecordedClassLoader.getId,Returns a unique ID for the class loader.
jdk.jfr.consumer.RecordedClassLoader.getName,Returns the name of the class loader.
jdk.jfr.consumer.RecordedClassLoader.getType,Returns the class of the class loader.
jdk.jfr.consumer.RecordedEvent.getDuration,"Returns the duration of the event, measured in nanoseconds."
jdk.jfr.consumer.RecordedEvent.getEndTime,Returns the end time of the event.
jdk.jfr.consumer.RecordedEvent.getEventType,Returns the event type that describes the event.
jdk.jfr.consumer.RecordedEvent.getFields,Returns the list of descriptors that describes the fields of the event.
jdk.jfr.consumer.RecordedEvent.getStackTrace,"Returns the stack trace that was created when the event was committed, ornullif the event lacks a stack trace."
jdk.jfr.consumer.RecordedEvent.getStartTime,Returns the start time of the event.
jdk.jfr.consumer.RecordedEvent.getThread,"Returns the thread from which the event was committed, ornullif  the thread was not recorded."
jdk.jfr.consumer.RecordedFrame.getBytecodeIndex,Returns the bytecode index for the execution point that is represented by  this recorded frame.
jdk.jfr.consumer.RecordedFrame.getLineNumber,"Returns the line number for the execution point that is represented by this  recorded frame, or-1if doesn't exist"
jdk.jfr.consumer.RecordedFrame.getMethod,Returns the method for the execution point that is represented by this  recorded frame.
jdk.jfr.consumer.RecordedFrame.getType,"Returns the frame type for the execution point that is represented by this  recorded frame (for example,""Interpreted"",""JIT compiled""or""Inlined"")."
jdk.jfr.consumer.RecordedFrame.isJavaFrame,"Returnstrueif this is a Java frame,falseotherwise."
jdk.jfr.consumer.RecordedMethod.getDescriptor,Returns the method descriptor for this method.
jdk.jfr.consumer.RecordedMethod.getModifiers,Returns the modifiers for this method.
jdk.jfr.consumer.RecordedMethod.getName,"Returns the name of this method, for example""toString""."
jdk.jfr.consumer.RecordedMethod.getType,"Returns the class this method belongs to, if it belong to a Java frame."
jdk.jfr.consumer.RecordedMethod.isHidden,"Returns whether this method is hidden (for example, wrapper code in a lambda  expressions)."
jdk.jfr.consumer.RecordedObject.getBoolean,Returns the value of a field of typeboolean.
jdk.jfr.consumer.RecordedObject.getByte,Returns the value of a field of typebyte.
jdk.jfr.consumer.RecordedObject.getChar,Returns the value of a field of typechar.
jdk.jfr.consumer.RecordedObject.getClass,Returns the value of a field of typeClass.
jdk.jfr.consumer.RecordedObject.getDouble,Returns the value of a field of typedoubleor of another primitive  type that is convertible to typedoubleby a widening conversion.
jdk.jfr.consumer.RecordedObject.getDuration,Returns the value of a timespan field.
jdk.jfr.consumer.RecordedObject.getFields,Returns an immutable list of the fields for this object.
jdk.jfr.consumer.RecordedObject.getFloat,Returns the value of a field of typefloator of another primitive  type convertible to typefloatby a widening conversion.
jdk.jfr.consumer.RecordedObject.getInstant,Returns the value of a timestamp field.
jdk.jfr.consumer.RecordedObject.getInt,Returns the value of a field of typeintor of another primitive type  that is convertible to typeintby a widening conversion.
jdk.jfr.consumer.RecordedObject.getLong,Returns the value of a field of typelongor of another primitive  type that is convertible to typelongby a widening conversion.
jdk.jfr.consumer.RecordedObject.getShort,Returns the value of a field of typeshortor of another primitive  type convertible to typeshortby a widening conversion.
jdk.jfr.consumer.RecordedObject.getString,Returns the value of a field of typeString.
jdk.jfr.consumer.RecordedObject.getThread,Returns the value of a field of typeThread.
jdk.jfr.consumer.RecordedObject.getValue,Returns the value of the field with the given name.
jdk.jfr.consumer.RecordedObject.hasField,"Returnstrueif a field with the given name exists,falseotherwise."
jdk.jfr.consumer.RecordedObject.toString,Returns a textual representation of this object.
jdk.jfr.consumer.RecordedStackTrace.getFrames,Returns the frames in the stack trace.
jdk.jfr.consumer.RecordedStackTrace.isTruncated,"Returnstrueif the stack trace is truncated due to its size,falseotherwise."
jdk.jfr.consumer.RecordedThread.getId,Returns a unique ID for both native threads and Java threads that can't be  reused within the lifespan of the JVM.
jdk.jfr.consumer.RecordedThread.getJavaName,"Returns the Java thread name, ornullif doesn't exist."
jdk.jfr.consumer.RecordedThread.getJavaThreadId,"Returns the Java thread ID, or-1if it's not a Java thread."
jdk.jfr.consumer.RecordedThread.getOSName,Returns the thread name used by the operating system.
jdk.jfr.consumer.RecordedThread.getOSThreadId,Returns the thread ID used by the operating system.
jdk.jfr.consumer.RecordedThread.getThreadGroup,"Returns the Java thread group, if available."
jdk.jfr.consumer.RecordedThreadGroup.getName,"Returns the name of the thread group, ornullif doesn't exist."
jdk.jfr.consumer.RecordedThreadGroup.getParent,"Returns the parent thread group, ornullif it doesn't exist."
jdk.jfr.consumer.RecordingFile.close,Closes this recording file and releases any system resources that are  associated with it.
jdk.jfr.consumer.RecordingFile.hasMoreEvents,"Returnstrueif unread events exist in the recording file,falseotherwise."
jdk.jfr.consumer.RecordingFile.readAllEvents,Returns a list of all events in a file.
jdk.jfr.consumer.RecordingFile.readEvent,Reads the next event in the recording.
jdk.jfr.consumer.RecordingFile.readEventTypes,Returns a list of all event types in this recording.
jdk.jfr.consumer.RecordingStream.awaitTermination,"Blocks until all actions are completed, or the stream is closed, or the  current thread is interrupted, whichever happens first."
jdk.jfr.consumer.RecordingStream.awaitTermination,"Blocks until all actions are completed, or the stream is closed, or the  timeout occurs, or the current thread is interrupted, whichever happens  first."
jdk.jfr.consumer.RecordingStream.close,"Closes this resource, relinquishing any underlying resources."
jdk.jfr.consumer.RecordingStream.onClose,Registers an action to perform when the stream is closed.
jdk.jfr.consumer.RecordingStream.onError,Registers an action to perform if an exception occurs.
jdk.jfr.consumer.RecordingStream.onEvent,Registers an action to perform on all events matching a name.
jdk.jfr.consumer.RecordingStream.onEvent,Registers an action to perform on all events in the stream.
jdk.jfr.consumer.RecordingStream.onFlush,Registers an action to perform after the stream has been flushed.
jdk.jfr.consumer.RecordingStream.remove,Unregisters an action.
jdk.jfr.consumer.RecordingStream.setEndTime,Specifies the end time of the stream.
jdk.jfr.consumer.RecordingStream.setMaxAge,Determines how far back data is kept for the stream.
jdk.jfr.consumer.RecordingStream.setMaxSize,Determines how much data is kept for the stream.
jdk.jfr.consumer.RecordingStream.setOrdered,"Specifies that events arrives in chronological order, sorted by the time  they were committed to the stream."
jdk.jfr.consumer.RecordingStream.setReuse,Specifies that the event object in anEventStream.onEvent(Consumer)action  can be reused.
jdk.jfr.consumer.RecordingStream.setSettings,Replaces all settings for this recording stream.
jdk.jfr.consumer.RecordingStream.setStartTime,Specifies the start time of the stream.
jdk.jfr.consumer.RecordingStream.start,Starts processing of actions.
jdk.jfr.consumer.RecordingStream.startAsync,Starts asynchronous processing of actions.
jdk.jshell.Diag.getCode,Returns a diagnostic code indicating the type of diagnostic.
jdk.jshell.Diag.getEndPosition,Returns the character offset from the beginning of the file  associated with this diagnostic that indicates the end of the  problem.
jdk.jshell.Diag.getMessage,Returns a localized message for the given locale.
jdk.jshell.Diag.getPosition,Returns a character offset from the beginning of the source object  associated with this diagnostic that indicates the location of  the problem.
jdk.jshell.Diag.getStartPosition,Returns the character offset from the beginning of the file  associated with this diagnostic that indicates the start of the  problem.
jdk.jshell.Diag.isError,Indicates whether this diagnostic is an error (as opposed to a warning or  note).
jdk.jshell.ErroneousSnippet.probableKind,Returns what appears to be the intended Kind in this erroneous snippet.
jdk.jshell.EvalException.getCause,Returns the wrapped cause of the throwable in the executing client  represented by thisEvalExceptionornullif the cause is  nonexistent or unknown.
jdk.jshell.EvalException.getExceptionClassName,Returns the name of the Throwable subclass which was thrown in the  executing client.
jdk.jshell.ExpressionSnippet.name,Variable name which is the value of the expression.
jdk.jshell.ExpressionSnippet.typeName,Type of the expression
jdk.jshell.ImportSnippet.fullname,The qualified name of the import.
jdk.jshell.ImportSnippet.isStatic,Indicates whether this snippet represents a static import.
jdk.jshell.ImportSnippet.name,The identifying name of the import.
jdk.jshell.JShell.build,Builds a JShell state engine.
jdk.jshell.JShell.compilerOptions,Adds compiler options.
jdk.jshell.JShell.err,Sets the error output for the running evaluation (it'sSystem.err).
jdk.jshell.JShell.executionEngine,Sets the custom engine for execution.
jdk.jshell.JShell.fileManager,Configure theFileManagerto be used by compilation and  source analysis.
jdk.jshell.JShell.idGenerator,Sets the generator of identifying names for Snippets.
jdk.jshell.JShell.in,Sets the input for the running evaluation (it'sSystem.in).
jdk.jshell.JShell.out,Sets the output for the running evaluation (it'sSystem.out).
jdk.jshell.JShell.remoteVMOptions,Sets additional VM options for launching the VM.
jdk.jshell.JShell.tempVariableNameGenerator,Sets a generator of temp variable names forVarSnippetofSnippet.SubKind.TEMP_VAR_EXPRESSION_SUBKIND.
jdk.jshell.JShell.addToClasspath,The specified path is added to the end of the classpath used in eval().
jdk.jshell.JShell.builder,"Factory method forJShell.Builderwhich, in-turn, is used  for creating instances ofJShell."
jdk.jshell.JShell.close,Close this state engine.
jdk.jshell.JShell.create,Create a new JShell state engine.
jdk.jshell.JShell.diagnostics,Return the diagnostics of the most recent evaluation of the snippet.
jdk.jshell.JShell.drop,Remove a declaration from the state.
jdk.jshell.JShell.eval,"Evaluate the input String, including definition and/or execution, if  applicable."
jdk.jshell.JShell.imports,Returns the active import snippets.
jdk.jshell.JShell.methods,Returns the active method snippets.
jdk.jshell.JShell.onShutdown,Register a callback to be called when this JShell instance terminates.
jdk.jshell.JShell.onSnippetEvent,Register a callback to be called when the Status of a snippet changes.
jdk.jshell.JShell.snippets,Return all snippets.
jdk.jshell.JShell.sourceCodeAnalysis,Access to source code analysis functionality.
jdk.jshell.JShell.status,Return the status of the snippet.
jdk.jshell.JShell.stop,Attempt to stop currently running evaluation.
jdk.jshell.JShell.types,"Returns the active type declaration (class, interface, annotation type, and enum) snippets."
jdk.jshell.JShell.unresolvedDependencies,"ForRECOVERABLE_DEFINEDorRECOVERABLE_NOT_DEFINEDdeclarations, the names of current unresolved dependencies for  the snippet."
jdk.jshell.JShell.unsubscribe,Cancel a callback subscription.
jdk.jshell.JShell.variables,Returns the active variable snippets.
jdk.jshell.JShell.varValue,Get the current value of a variable.
jdk.jshell.MethodSnippet.parameterTypes,A String representation of the parameter types of the method.
jdk.jshell.MethodSnippet.signature,"The full type signature of the method, including return type."
jdk.jshell.PersistentSnippet.name,Name of the Snippet.
jdk.jshell.Snippet.id,The unique identifier for the snippet.
jdk.jshell.Snippet.kind,TheSnippet.Kindfor the snippet.
jdk.jshell.Snippet.source,Return the source code of the snippet.
jdk.jshell.Snippet.subKind,Return theSnippet.SubKindof snippet.
jdk.jshell.Snippet.isPersistent,Indicates whether thisKindof Snippet is persistent.
jdk.jshell.Snippet.isActive,"Indicates whether the Snippet is active, that is,  will apersistentsnippet be re-evaluated when a newJShell.eval(String)orJShell.drop(Snippet)that could change  its status is invoked."
jdk.jshell.Snippet.isDefined,Indicates whether the snippet is currently part of the defined state  of the JShell.
jdk.jshell.Snippet.hasValue,Indicates whether thisSubKindis executable and  is non-void.
jdk.jshell.Snippet.isExecutable,Indicates whether thisSubKindis executable.
jdk.jshell.Snippet.kind,TheSnippet.Kindthat corresponds to thisSubKind.
jdk.jshell.SnippetEvent.causeSnippet,Either the snippet whose change caused this update ornull.
jdk.jshell.SnippetEvent.exception,"An instance ofUnresolvedReferenceException, if an unresolved reference was  encountered, or an instance ofEvalExceptionif an exception was thrown  during execution, otherwisenull."
jdk.jshell.SnippetEvent.isSignatureChange,Indicates whether the signature has changed.
jdk.jshell.SnippetEvent.previousStatus,The status before the transition.
jdk.jshell.SnippetEvent.snippet,The Snippet which has changed
jdk.jshell.SnippetEvent.status,The after status.
jdk.jshell.SnippetEvent.toString,Return a string representation of the event
jdk.jshell.SnippetEvent.value,The result value of successful run.
jdk.jshell.SourceCodeAnalysis.isComplete,Indicates whether the first snippet of source is complete.
jdk.jshell.SourceCodeAnalysis.completeness,The analyzed completeness of the input.
jdk.jshell.SourceCodeAnalysis.remaining,Input remaining after the complete part of the source.
jdk.jshell.SourceCodeAnalysis.source,Source code for the first Snippet of code input.
jdk.jshell.SourceCodeAnalysis.javadoc,The javadoc of the given element.
jdk.jshell.SourceCodeAnalysis.signature,The signature of the given element.
jdk.jshell.SourceCodeAnalysis.analyzeCompletion,"Given an input string, find the first snippet of code (one statement,  definition, import, or expression) and evaluate if it is complete."
jdk.jshell.SourceCodeAnalysis.analyzeType,Infer the type of the given expression.
jdk.jshell.SourceCodeAnalysis.completionSuggestions,Compute possible follow-ups for the given input.
jdk.jshell.SourceCodeAnalysis.dependents,Returns a collection ofSnippets which might need updating if the  givenSnippetis updated.
jdk.jshell.SourceCodeAnalysis.documentation,Compute documentation for the given user's input.
jdk.jshell.SourceCodeAnalysis.listQualifiedNames,List qualified names known for the simple name in the given code immediately  to the left of the given cursor position.
jdk.jshell.SourceCodeAnalysis.sourceToSnippets,"Converts the source code of a snippet into aSnippetobject (or  list ofSnippetobjects in the case of some var declarations,  e.g.: int x, y, z;)."
jdk.jshell.SourceCodeAnalysis.wrapper,Returns the wrapper information for theSnippet.
jdk.jshell.SourceCodeAnalysis.wrappers,Returns the wrapper information for the snippet within the  input source string.
jdk.jshell.SourceCodeAnalysis.getNames,Known qualified names for the given simple name in the original code.
jdk.jshell.SourceCodeAnalysis.getSimpleNameLength,The length of the simple name in the original code for which the  qualified names where gathered.
jdk.jshell.SourceCodeAnalysis.isResolvable,Indicates whether the given simple name in the original code refers  to a resolvable element.
jdk.jshell.SourceCodeAnalysis.isUpToDate,Indicates whether the result is based on up-to-date data.
jdk.jshell.SourceCodeAnalysis.fullClassName,Returns the fully qualified class name of thewrapped()class.
jdk.jshell.SourceCodeAnalysis.kind,Returns theSnippet.Kindof thesource().
jdk.jshell.SourceCodeAnalysis.source,Returns the input that is wrapped.
jdk.jshell.SourceCodeAnalysis.sourceToWrappedPosition,Maps character position within the source to character position  within the wrapped.
jdk.jshell.SourceCodeAnalysis.wrapped,"Returns a Java class definition that wraps thesource()or, if an import, the import source."
jdk.jshell.SourceCodeAnalysis.wrappedToSourcePosition,Maps character position within the wrapped to character position  within the source.
jdk.jshell.SourceCodeAnalysis.continuation,The candidate continuation of the given user's input.
jdk.jshell.SourceCodeAnalysis.matchesType,Indicates whether input continuation matches the target type and is thus  more likely to be the desired continuation.
jdk.jshell.UnresolvedReferenceException.getSnippet,Return the Snippet which has the unresolved reference(s).
jdk.jshell.VarSnippet.typeName,A String representation of the type of the variable.
jdk.jshell.execution.DirectExecutionControl.addToClasspath,Adds the path to the execution class path.
jdk.jshell.execution.DirectExecutionControl.classesRedefined,Notify that classes have been redefined.
jdk.jshell.execution.DirectExecutionControl.clientCodeEnter,Marks entry into user code.
jdk.jshell.execution.DirectExecutionControl.clientCodeLeave,Marks departure from user code.
jdk.jshell.execution.DirectExecutionControl.close,Shuts down this execution engine.
jdk.jshell.execution.DirectExecutionControl.extensionCommand,Run a non-standard command (or a standard command from a newer version).
jdk.jshell.execution.DirectExecutionControl.findClass,Finds the class with the specified binary name.
jdk.jshell.execution.DirectExecutionControl.invoke,"Invoke the specified ""doit-method"", a static method with no parameters."
jdk.jshell.execution.DirectExecutionControl.invoke,Invokes an executable Snippet by calling a method on the specified  wrapper class.
jdk.jshell.execution.DirectExecutionControl.load,Attempts to load new classes.
jdk.jshell.execution.DirectExecutionControl.redefine,Attempts to redefine previously loaded classes.
jdk.jshell.execution.DirectExecutionControl.stop,Interrupts a running invoke.
jdk.jshell.execution.DirectExecutionControl.throwConvertedInvocationException,Converts incoming exceptions in user code into instances of subtypes ofExecutionControl.ExecutionControlExceptionand throws the  converted exception.
jdk.jshell.execution.DirectExecutionControl.throwConvertedOtherException,Converts incoming exceptions in agent code into instances of subtypes ofExecutionControl.ExecutionControlExceptionand throws the  converted exception.
jdk.jshell.execution.DirectExecutionControl.valueString,"Converts theObjectvalue fromExecutionControl.invoke(String, String)orExecutionControl.varValue(String, String)toString."
jdk.jshell.execution.DirectExecutionControl.varValue,Returns the value of a variable.
jdk.jshell.execution.FailOverExecutionControlProvider.defaultParameters,Create and return the default parameter map for thisExecutionControlProvider.
jdk.jshell.execution.FailOverExecutionControlProvider.generate,Create and return a locally executingExecutionControlinstance.
jdk.jshell.execution.FailOverExecutionControlProvider.name,The unique name of thisExecutionControlProvider.
jdk.jshell.execution.JdiDefaultExecutionControl.close,Closes the execution engine.
jdk.jshell.execution.JdiDefaultExecutionControl.stop,Interrupts a running remote invoke by manipulating remote variables  and sending a stop via JDI.
jdk.jshell.execution.JdiDefaultExecutionControl.vm,Returns the JDIVirtualMachineinstance.
jdk.jshell.execution.JdiExecutionControl.redefine,Redefine the specified classes.
jdk.jshell.execution.JdiExecutionControl.referenceType,Returns the JDIReferenceTypecorresponding to the specified  class name.
jdk.jshell.execution.JdiExecutionControlProvider.generate,Create and return theExecutionControlinstance.
jdk.jshell.execution.JdiInitiator.process,Returns the launched process.
jdk.jshell.execution.JdiInitiator.vm,Returns the resultingVirtualMachineinstance.
jdk.jshell.execution.LocalExecutionControlProvider.defaultParameters,Create and return the default parameter map forLocalExecutionControlProvider.
jdk.jshell.execution.RemoteExecutionControl.main,"Launch the agent, connecting to the JShell-core over the socket specified  in the command-line argument."
jdk.jshell.execution.RemoteExecutionControl.redefine,Redefine processing on the remote end is only to register the redefined classes
jdk.jshell.execution.Util.detectJdiExitEvent,Monitor the JDI event stream forVMDeathEventandVMDisconnectEvent.
jdk.jshell.execution.Util.forwardExecutionControl,"Forward commands from the input to the specifiedExecutionControlinstance, then responses back on the output."
jdk.jshell.execution.Util.remoteInputOutput,Creates an ExecutionControl for given packetized input and output.
jdk.jshell.spi.SPIResolutionException.id,Retrieves the internal identifier of the unresolved identifier.
netscape.javascript.JSObject.call,Calls a JavaScript method.
netscape.javascript.JSObject.eval,Evaluates a JavaScript expression.
netscape.javascript.JSObject.getMember,Retrieves a named member of a JavaScript object.
netscape.javascript.JSObject.getSlot,Retrieves an indexed member of a JavaScript object.
netscape.javascript.JSObject.removeMember,Removes a named member of a JavaScript object.
netscape.javascript.JSObject.setMember,Sets a named member of a JavaScript object.
netscape.javascript.JSObject.setSlot,Sets an indexed member of a JavaScript object.
com.sun.management.GarbageCollectionNotificationInfo.from,Returns aGarbageCollectionNotificationInfoobject represented by the  givenCompositeData.
com.sun.management.GarbageCollectionNotificationInfo.getGcAction,Returns the action performed by the garbage collector
com.sun.management.GarbageCollectionNotificationInfo.getGcCause,Returns the cause of the garbage collection
com.sun.management.GarbageCollectionNotificationInfo.getGcInfo,Returns the GC information related to the last garbage collection
com.sun.management.GarbageCollectionNotificationInfo.getGcName,Returns the name of the garbage collector used to perform the collection
com.sun.management.GarbageCollectionNotificationInfo.toCompositeData,Return aCompositeDatacorresponding to the values in  this object.
com.sun.management.GcInfo.containsValue,Returnstrueif and only if thisCompositeDatainstance contains an item  whose value isvalue.
com.sun.management.GcInfo.from,Returns aGcInfoobject represented by the  givenCompositeData.
com.sun.management.GcInfo.getAll,"Returns an array of the values of the items whose names  are specified bykeys, in the same order askeys."
com.sun.management.GcInfo.getDuration,Returns the elapsed time of this GC in milliseconds.
com.sun.management.GcInfo.getEndTime,Returns the end time of this GC in milliseconds  since the Java virtual machine was started.
com.sun.management.GcInfo.getId,Returns the identifier of this garbage collection which is  the number of collections that this collector has done.
com.sun.management.GcInfo.getMemoryUsageAfterGc,Returns the memory usage of all memory pools  at the end of this GC.
com.sun.management.GcInfo.getMemoryUsageBeforeGc,Returns the memory usage of all memory pools  at the beginning of this GC.
com.sun.management.GcInfo.getStartTime,Returns the start time of this GC in milliseconds  since the Java virtual machine was started.
com.sun.management.GcInfo.toCompositeData,"Return theCompositeDatarepresentation of thisGcInfo, including any GC-specific attributes."
com.sun.management.GcInfo.values,Returns an unmodifiable Collection view of the item values  contained in thisCompositeDatainstance.
com.sun.management.VMOption.from,Returns aVMOptionobject represented by the  givenCompositeData.
com.sun.management.VMOption.getName,Returns the name of this VM option.
com.sun.management.VMOption.getOrigin,Returns the origin of the value of this VM option.
com.sun.management.VMOption.getValue,Returns the value of this VM option at the time when  thisVMOptionwas created.
com.sun.management.VMOption.isWriteable,Tests if this VM option is writeable.
jdk.management.jfr.ConfigurationInfo.from,Returns aConfigurationInfoobject represented by the specifiedCompositeData.
jdk.management.jfr.ConfigurationInfo.getContents,"Returns the textual representation of the configuration associated with  thisConfigurationInfo, typically the contents of the  configuration file that was used to create the configuration."
jdk.management.jfr.ConfigurationInfo.getDescription,"Returns a short sentence that describes the configuration associated with  thisConfigurationInfo(for example,""Low  overhead configuration safe for continuous use in production  environments""."
jdk.management.jfr.ConfigurationInfo.getLabel,"Returns the human-readable name (for example,""Continuous""or""Profiling"") for  the configuration associated with thisConfigurationInfo"
jdk.management.jfr.ConfigurationInfo.getName,"Returns the name of the configuration associated with thisConfigurationInfo(for example,""default"")."
jdk.management.jfr.ConfigurationInfo.getProvider,"Returns the provider of the configuration associated with thisConfigurationInfo(for example,""OpenJDK"")."
jdk.management.jfr.ConfigurationInfo.getSettings,Returns the settings for the configuration associated with thisConfigurationInfo.
jdk.management.jfr.ConfigurationInfo.toString,Returns a description of the configuration that is associated with thisConfigurationInfo.
jdk.management.jfr.EventTypeInfo.from,Returns anEventTyperepresented by the specifiedCompositeData
jdk.management.jfr.EventTypeInfo.getCategoryNames,"Returns the list of human-readable names that makes up the category for thisEventTypeInfo(for example,""Java Virtual Machine""or""Garbage Collector"")."
jdk.management.jfr.EventTypeInfo.getDescription,"Returns a short sentence or two describing the event type associated with  thisEventTypeInfo, for example""Garbage collection performed by the JVM""""."
jdk.management.jfr.EventTypeInfo.getId,"Returns the unique ID for the event type associated with thisEventTypeInfo, not guaranteed to be the same for different Java  Virtual Machines (JVMs) instances."
jdk.management.jfr.EventTypeInfo.getLabel,"Returns the label, a human-readable name, associated with the event type  for thisEventTypeInfo(for example,""Garbage Collection"")."
jdk.management.jfr.EventTypeInfo.getName,"Returns the name for the event type associated with thisEventTypeInfo(for example,""jdk.GarbageCollection"")."
jdk.management.jfr.EventTypeInfo.getSettingDescriptors,Returns settings for the event type associated with thisEventTypeInfo.
jdk.management.jfr.EventTypeInfo.toString,Returns a description of thisEventTypeInfo.
jdk.management.jfr.RecordingInfo.from,Returns aRecordingInforepresented by the specifiedCompositeDataobject.
jdk.management.jfr.RecordingInfo.getDestination,"Returns destination path where data, for the recording associated with  thisRecordingInfo, should be written when the recording stops,  ornullif the recording should not be written."
jdk.management.jfr.RecordingInfo.getDumpOnExit,Returns if the recording associated with thisRecordingInfoshould be dumped to file when the JVM exits.
jdk.management.jfr.RecordingInfo.getDuration,"Returns the desired duration, measured in seconds, of the recording  associated with thisRecordingInfo, or {code 0} if no duration  has been set."
jdk.management.jfr.RecordingInfo.getId,Returns the unique ID for the recording associated with thisRecordingInfo.
jdk.management.jfr.RecordingInfo.getMaxAge,"Returns how many seconds data should be kept on disk, or0if  data is to be kept forever."
jdk.management.jfr.RecordingInfo.getMaxSize,"Returns the amount of data, measured in bytes, the recording associated  with thisRecordingInfo, should be kept on disk, before it's  rotated away, or0if data is to be kept indefinitely."
jdk.management.jfr.RecordingInfo.getName,Returns the name of the recording associated with thisRecordingInfo.
jdk.management.jfr.RecordingInfo.getSettings,Returns the settings for the recording associated with thisRecordingInfo.
jdk.management.jfr.RecordingInfo.getSize,Returns the amount data recorded by recording. associated with thisRecordingInfo.
jdk.management.jfr.RecordingInfo.getStartTime,"Returns start time of the recording associated with thisRecordingInfo, measured as ms since epoch, ornullif the  recording hasn't started."
jdk.management.jfr.RecordingInfo.getState,Returns aStringrepresentation of state of the recording  associated with thisRecordingInfo.
jdk.management.jfr.RecordingInfo.getStopTime,"Returns the actual or expected stop time of the recording associated with  thisRecordingInfo, measured as ms since epoch, ornullif the expected or actual stop time is not known, which can only happen  if the recording has not yet been stopped."
jdk.management.jfr.RecordingInfo.isToDisk,"Returnstrueif the recording associated with thisRecordingInfoshould be flushed to disk, when memory buffers are  full,falseotherwise."
jdk.management.jfr.RecordingInfo.toString,Returns a string description of the recording associated with thisRecordingInfo
jdk.management.jfr.RemoteRecordingStream.close,Releases all resources associated with this stream.
jdk.management.jfr.SettingDescriptorInfo.from,Returns anSettingDescriptorInforepresented by the specifiedCompositeData
jdk.management.jfr.SettingDescriptorInfo.getContentType,"Returns the content type of the setting associated thisSettingDescriptorInfo(for example,""jdk.jfr.Timespan"")."
jdk.management.jfr.SettingDescriptorInfo.getDefaultValue,"Returns the default value of the setting associated thisSettingDescriptorInfo(for example,""20 ms"")."
jdk.management.jfr.SettingDescriptorInfo.getDescription,"Returns the description of the setting associated thisSettingDescriptorInfo(for example,""The duration an event must exceed to be be recorded"")."
jdk.management.jfr.SettingDescriptorInfo.getLabel,"Returns the human-readable name of the setting associated with thisSettingDescriptorInfo(for example,""Threshold"")."
jdk.management.jfr.SettingDescriptorInfo.getName,"Returns the name of the setting associated with thisSettingDescriptorInfo(for example,""threshold"")."
jdk.management.jfr.SettingDescriptorInfo.getTypeName,"Returns the type name of the setting associated thisSettingDescriptorInfo(for example,""jdk.settings.Threshold"")."
jdk.management.jfr.SettingDescriptorInfo.toString,Returns aStringdescription of thisSettingDescriptorInfo.
jdk.net.Sockets.getOption,Deprecated.useDatagramSocket.getOption(SocketOption)instead.
jdk.net.Sockets.getOption,Deprecated.useServerSocket.getOption(SocketOption)instead.
jdk.net.Sockets.getOption,Deprecated.useSocket.getOption(SocketOption)instead.
jdk.net.Sockets.setOption,"Deprecated.useDatagramSocket.setOption(SocketOption, Object)instead."
jdk.net.Sockets.setOption,"Deprecated.useServerSocket.setOption(SocketOption, Object)instead."
jdk.net.Sockets.setOption,"Deprecated.useSocket.setOption(SocketOption, Object)instead."
jdk.net.Sockets.supportedOptions,"Deprecated, for removal: This API element is subject to removal in a future version.useSocket.supportedOptions(),ServerSocket.supportedOptions(),              orDatagramSocket.supportedOptions()instead."
jdk.nio.Channels.readWriteSelectableChannel,Creates a selectable channel to a file descriptor that supports anoperation-setofOP_READandOP_WRITE.
jdk.nio.Channels.implCloseChannel,Closes a selectable channel.
jdk.nio.Channels.implReleaseChannel,Release the file descriptor and any resources for a selectable  channel that closed while registered with one or moreSelectors.
com.sun.nio.sctp.AbstractNotificationHandler.handleNotification,Invoked when anAssociationChangeNotificationis received from  the SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler.handleNotification,Invoked when an implementation specific notification is received from the  SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler.handleNotification,Invoked when anPeerAddressChangeNotificationis received from  the SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler.handleNotification,Invoked when anSendFailedNotificationis received from  the SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler.handleNotification,Invoked when anShutdownNotificationis received from  the SCTP stack.
com.sun.nio.sctp.Association.associationID,Returns the associationID.
com.sun.nio.sctp.Association.maxInboundStreams,Returns the maximum number of inbound streams that this association  supports.
com.sun.nio.sctp.Association.maxOutboundStreams,Returns the maximum number of outbound streams that this association  supports.
com.sun.nio.sctp.AssociationChangeNotification.association,Returns the association that this notification is applicable to.
com.sun.nio.sctp.AssociationChangeNotification.event,Returns the type of change event.
com.sun.nio.sctp.MessageInfo.address,"Returns the source socket address if the message has been received,  otherwise the preferred destination of the message to be sent."
com.sun.nio.sctp.MessageInfo.association,"Returns the association that the message was received on, if the message  has been received, otherwise the association that the message is to be  sent on."
com.sun.nio.sctp.MessageInfo.bytes,Returns the number of bytes read for the received message.
com.sun.nio.sctp.MessageInfo.complete,Sets whether or not the message is complete.
com.sun.nio.sctp.MessageInfo.createOutgoing,Creates aMessageInfoinstance suitable for use when  sending a message to a given association.
com.sun.nio.sctp.MessageInfo.createOutgoing,Creates aMessageInfoinstance suitable for use when  sending a message.
com.sun.nio.sctp.MessageInfo.isComplete,Tells whether or not the message is complete.
com.sun.nio.sctp.MessageInfo.isUnordered,Tells whether or not the message is unordered.
com.sun.nio.sctp.MessageInfo.payloadProtocolID,Returns the payload protocol Identifier.
com.sun.nio.sctp.MessageInfo.payloadProtocolID,Sets the payload protocol Identifier.
com.sun.nio.sctp.MessageInfo.streamNumber,"Returns the stream number that the message was received on, if the  message has been received, otherwise the stream number that the message  is to be sent on."
com.sun.nio.sctp.MessageInfo.streamNumber,Sets the stream number that the message is to be sent on.
com.sun.nio.sctp.MessageInfo.timeToLive,"The time period that the sending side may expire the message if it has  not been sent, or0to indicate that no timeout should occur."
com.sun.nio.sctp.MessageInfo.timeToLive,Sets the time period that the sending side may expire the message if it  has not been sent.
com.sun.nio.sctp.MessageInfo.unordered,Sets whether or not the message is unordered.
com.sun.nio.sctp.PeerAddressChangeNotification.address,Returns the peer address.
com.sun.nio.sctp.SctpChannel.association,Returns the association on this channel's socket.
com.sun.nio.sctp.SctpChannel.bindAddress,Adds the given address to the bound addresses for the channel's  socket.
com.sun.nio.sctp.SctpChannel.finishConnect,Finishes the process of connecting an SCTP channel.
com.sun.nio.sctp.SctpChannel.getAllLocalAddresses,Returns all of the socket addresses to which this channel's socket is  bound.
com.sun.nio.sctp.SctpChannel.getRemoteAddresses,Returns all of the remote addresses to which this channel's socket  is connected.
com.sun.nio.sctp.SctpChannel.isConnectionPending,Tells whether or not a connection operation is in progress on this channel.
com.sun.nio.sctp.SctpChannel.open,Opens an SCTP channel.
com.sun.nio.sctp.SctpChannel.open,Opens an SCTP channel and connects it to a remote address.
com.sun.nio.sctp.SctpChannel.receive,Receives a message into the given buffer and/or handles a notification.
com.sun.nio.sctp.SctpChannel.send,Sends a message via this channel.
com.sun.nio.sctp.SctpChannel.shutdown,Shutdown a connection without closing the channel.
com.sun.nio.sctp.SctpChannel.supportedOptions,Returns a set of the socket options supported by this channel.
com.sun.nio.sctp.SctpChannel.unbindAddress,Removes the given address from the bound addresses for the channel's  socket.
com.sun.nio.sctp.SctpChannel.validOps,Returns an operation set identifying this channel's supported operations.
com.sun.nio.sctp.SctpMultiChannel.associations,Returns the open associations on this channel's socket.
com.sun.nio.sctp.SctpMultiChannel.branch,Branches off an association.
com.sun.nio.sctp.SctpMultiChannel.getRemoteAddresses,Returns all of the remote addresses to which the given association on  this channel's socket is connected.
com.sun.nio.sctp.SctpMultiChannel.open,Opens an SCTP multi channel.
com.sun.nio.sctp.SctpMultiChannel.receive,Receives a message and/or handles a notification via this channel.
com.sun.nio.sctp.SctpMultiChannel.shutdown,Shutdown an association without closing the channel.
com.sun.nio.sctp.SctpServerChannel.accept,Accepts an association on this channel's socket.
com.sun.nio.sctp.SctpServerChannel.bind,Binds the channel's socket to a local address and configures the socket  to listen for associations.
com.sun.nio.sctp.SctpServerChannel.open,Opens an SCTP server channel.
com.sun.nio.sctp.SctpStandardSocketOptions.create,Creates an InitMaxStreams instance.
com.sun.nio.sctp.SctpStandardSocketOptions.equals,Returns true if the specified object is anotherInitMaxStreamsinstance with the same number of in and out bound streams.
com.sun.nio.sctp.SctpStandardSocketOptions.hashCode,Returns a hash code value for this init max streams.
com.sun.nio.sctp.SctpStandardSocketOptions.maxInStreams,Returns the maximum number of inbound streams.
com.sun.nio.sctp.SctpStandardSocketOptions.maxOutStreams,Returns the maximum number of outbound streams.
com.sun.nio.sctp.SctpStandardSocketOptions.toString,"Returns a string representation of this init max streams, including  the maximum in and out bound streams."
com.sun.nio.sctp.SendFailedNotification.address,Returns the address.
com.sun.nio.sctp.SendFailedNotification.buffer,Returns the data that was to be sent.
com.sun.nio.sctp.SendFailedNotification.errorCode,Returns the error code.
com.sun.nio.sctp.SendFailedNotification.streamNumber,Returns the stream number that the messge was to be sent on.
com.sun.security.auth.LdapPrincipal.equals,Compares this principal to the specified object.
com.sun.security.auth.LdapPrincipal.getName,Returns the name originally used to create this principal.
com.sun.security.auth.LdapPrincipal.hashCode,Computes the hash code for this principal.
com.sun.security.auth.LdapPrincipal.toString,Creates a string representation of this principal's name in the format  defined byRFC 2253.
com.sun.security.auth.NTDomainPrincipal.equals,Compares the specified Object with thisNTDomainPrincipalfor equality.
com.sun.security.auth.NTDomainPrincipal.getName,Return the Windows NT domain name for thisNTDomainPrincipal.
com.sun.security.auth.NTDomainPrincipal.hashCode,Return a hash code for thisNTDomainPrincipal.
com.sun.security.auth.NTDomainPrincipal.toString,Return a string representation of thisNTDomainPrincipal.
com.sun.security.auth.NTNumericCredential.equals,Compares the specified Object with thisNTNumericCredentialfor equality.
com.sun.security.auth.NTNumericCredential.getToken,Return an integer representation of thisNTNumericCredential.
com.sun.security.auth.NTNumericCredential.hashCode,Return a hash code for thisNTNumericCredential.
com.sun.security.auth.NTNumericCredential.toString,Return a string representation of thisNTNumericCredential.
com.sun.security.auth.NTSid.equals,Compares the specified Object with thisNTSidfor equality.
com.sun.security.auth.NTSid.getName,Return a string version of thisNTSid.
com.sun.security.auth.NTSid.hashCode,Return a hash code for thisNTSid.
com.sun.security.auth.NTSid.toString,Return a string representation of thisNTSid.
com.sun.security.auth.NTSidDomainPrincipal.equals,Compares the specified Object with thisNTSidDomainPrincipalfor equality.
com.sun.security.auth.NTSidDomainPrincipal.toString,Return a string representation of thisNTSidDomainPrincipal.
com.sun.security.auth.NTSidGroupPrincipal.equals,Compares the specified Object with thisNTSidGroupPrincipalfor equality.
com.sun.security.auth.NTSidGroupPrincipal.toString,Return a string representation of thisNTSidGroupPrincipal.
com.sun.security.auth.NTSidPrimaryGroupPrincipal.equals,Compares the specified Object with thisNTSidPrimaryGroupPrincipalfor equality.
com.sun.security.auth.NTSidPrimaryGroupPrincipal.toString,Return a string representation of thisNTSidPrimaryGroupPrincipal.
com.sun.security.auth.NTSidUserPrincipal.equals,Compares the specified Object with thisNTSidUserPrincipalfor equality.
com.sun.security.auth.NTSidUserPrincipal.toString,Return a string representation of thisNTSidUserPrincipal.
com.sun.security.auth.NTUserPrincipal.equals,Compares the specified Object with thisNTUserPrincipalfor equality.
com.sun.security.auth.NTUserPrincipal.getName,Return the Windows NT username for thisNTPrincipal.
com.sun.security.auth.NTUserPrincipal.hashCode,Return a hash code for thisNTUserPrincipal.
com.sun.security.auth.NTUserPrincipal.toString,Return a string representation of thisNTPrincipal.
com.sun.security.auth.UnixNumericGroupPrincipal.equals,Compares the specified Object with thisUnixNumericGroupPrincipalfor equality.
com.sun.security.auth.UnixNumericGroupPrincipal.getName,Return the user's group identification number (GID) for thisUnixNumericGroupPrincipal.
com.sun.security.auth.UnixNumericGroupPrincipal.hashCode,Return a hash code for thisUnixNumericGroupPrincipal.
com.sun.security.auth.UnixNumericGroupPrincipal.isPrimaryGroup,Return whether this group identification number (GID) represents  the primary group to which this user belongs.
com.sun.security.auth.UnixNumericGroupPrincipal.longValue,Return the user's group identification number (GID) for thisUnixNumericGroupPrincipalas a long.
com.sun.security.auth.UnixNumericGroupPrincipal.toString,Return a string representation of thisUnixNumericGroupPrincipal.
com.sun.security.auth.UnixNumericUserPrincipal.equals,Compares the specified Object with thisUnixNumericUserPrincipalfor equality.
com.sun.security.auth.UnixNumericUserPrincipal.getName,Return the user identification number (UID) for thisUnixNumericUserPrincipal.
com.sun.security.auth.UnixNumericUserPrincipal.hashCode,Return a hash code for thisUnixNumericUserPrincipal.
com.sun.security.auth.UnixNumericUserPrincipal.longValue,Return the user identification number (UID) for thisUnixNumericUserPrincipalas a long.
com.sun.security.auth.UnixNumericUserPrincipal.toString,Return a string representation of thisUnixNumericUserPrincipal.
com.sun.security.auth.UnixPrincipal.equals,Compares the specified Object with thisUnixPrincipalfor equality.
com.sun.security.auth.UnixPrincipal.getName,Return the Unix username for thisUnixPrincipal.
com.sun.security.auth.UnixPrincipal.hashCode,Return a hash code for thisUnixPrincipal.
com.sun.security.auth.UnixPrincipal.toString,Return a string representation of thisUnixPrincipal.
com.sun.security.auth.UserPrincipal.hashCode,Returns a hash code for this principal.
com.sun.security.auth.UserPrincipal.toString,Returns a string representation of this principal.
com.sun.security.auth.callback.TextCallbackHandler.handle,Handles the specified set of callbacks.
com.sun.security.auth.login.ConfigFile.getAppConfigurationEntry,Retrieve an entry from theConfigurationusing an application  name as an index.
com.sun.security.auth.login.ConfigFile.refresh,Refresh and reload theConfigurationby re-reading all of the  login configurations.
com.sun.security.auth.module.JndiLoginModule.abort,This method is called if the LoginContext's  overall authentication failed.
com.sun.security.auth.module.JndiLoginModule.commit,Abstract method to commit the authentication process (phase 2).
com.sun.security.auth.module.JndiLoginModule.initialize,Initialize thisLoginModule.
com.sun.security.auth.module.JndiLoginModule.login,Prompt for username and password.
com.sun.security.auth.module.JndiLoginModule.logout,Logout a user.
com.sun.security.auth.module.KeyStoreLoginModule.login,Authenticate the user.
com.sun.security.auth.module.Krb5LoginModule.commit,"This method is called if the LoginContext's  overall authentication succeeded  (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL  LoginModules succeeded)."
com.sun.security.auth.module.Krb5LoginModule.login,Authenticate the user
com.sun.security.auth.module.Krb5LoginModule.logout,Logout the user.
com.sun.security.auth.module.LdapLoginModule.abort,Abort user authentication.
com.sun.security.auth.module.LdapLoginModule.commit,Complete user authentication.
com.sun.security.auth.module.LdapLoginModule.login,Begin user authentication.
com.sun.security.auth.module.NTLoginModule.commit,"This method is called if the LoginContext's  overall authentication succeeded  (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules  succeeded)."
com.sun.security.auth.module.NTLoginModule.login,Import underlying NT system identity information.
com.sun.security.auth.module.NTSystem.getDomain,Get the domain for the current NT user.
com.sun.security.auth.module.NTSystem.getDomainSID,Get a printable SID for the current NT user's domain.
com.sun.security.auth.module.NTSystem.getGroupIDs,Get the printable group SIDs for the current NT user.
com.sun.security.auth.module.NTSystem.getImpersonationToken,Get an impersonation token for the current NT user.
com.sun.security.auth.module.NTSystem.getName,Get the username for the current NT user.
com.sun.security.auth.module.NTSystem.getPrimaryGroupID,Get a printable primary group SID for the current NT user.
com.sun.security.auth.module.NTSystem.getUserSID,Get a printable SID for the current NT user.
com.sun.security.auth.module.UnixLoginModule.abort,Abort the authentication (second phase).
com.sun.security.auth.module.UnixLoginModule.commit,Commit the authentication (second phase).
com.sun.security.auth.module.UnixLoginModule.login,Authenticate the user (first phase).
com.sun.security.auth.module.UnixLoginModule.logout,Logout the user
com.sun.security.auth.module.UnixSystem.getGid,Get the GID for the current Unix user.
com.sun.security.auth.module.UnixSystem.getGroups,Get the supplementary groups for the current Unix user.
com.sun.security.auth.module.UnixSystem.getUid,Get the UID for the current Unix user.
com.sun.security.auth.module.UnixSystem.getUsername,Get the username for the current Unix user.
com.sun.security.jgss.AuthorizationDataEntry.getData,Get a copy of the ad-data field.
com.sun.security.jgss.AuthorizationDataEntry.getType,Get the ad-type field.
com.sun.security.jgss.GSSUtil.createSubject,Use this method to convert a GSSName and GSSCredential into a  Subject.
